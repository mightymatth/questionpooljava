BaseQuestion -> BaseQuestion:
    java.lang.String questionText -> a
    java.lang.String questionExplanation -> b
    9:12:void <init>(java.lang.String) -> <init>
    14:17:void <init>(java.lang.String,java.lang.String) -> <init>
    20:20:java.lang.String getQuestionText() -> getQuestionText
    24:25:void setQuestionText(java.lang.String) -> setQuestionText
    28:28:java.lang.String getQuestionExplanation() -> getQuestionExplanation
    32:33:void setQuestionExplanation(java.lang.String) -> setQuestionExplanation
    36:37:void appendQuestionExplanation(java.lang.String) -> appendQuestionExplanation
MainActivity -> MainActivity:
    javafx.scene.control.Button chooseFileButton -> a
    javafx.scene.control.Button startButton -> b
    javafx.scene.image.Image coverImage -> c
    javafx.scene.text.Text message -> d
    javafx.scene.control.CheckBox shuffleQuestions -> e
    javafx.scene.control.CheckBox shuffleAnswers -> f
    javafx.scene.text.Text copyrightLabel -> g
    java.io.File mainFile -> h
    33:43:void <init>() -> <init>
    46:47:void main(java.lang.String[]) -> main
    52:218:void start(javafx.stage.Stage) -> start
    232:235:java.lang.String guessEncoding(byte[]) -> guessEncoding
    202:215:void lambda$start$1(javafx.scene.input.MouseEvent) -> a
    136:198:void lambda$start$0(javafx.stage.FileChooser,javafx.stage.Stage,javafx.scene.input.MouseEvent) -> a
ModifiedText -> ModifiedText:
    8:12:void <init>() -> <init>
    15:19:void <init>(java.lang.String) -> <init>
    22:25:void <init>(double,double,java.lang.String) -> <init>
MultipleAnswerQuestion -> MultipleAnswerQuestion:
    java.util.LinkedList answerList -> a
    8:14:void <init>(java.lang.String,java.util.LinkedList) -> <init>
    8:19:void <init>(java.lang.String,java.lang.String,java.util.LinkedList) -> <init>
    22:23:void addAnswer(java.lang.String,boolean) -> addAnswer
    26:28:java.util.LinkedList shuffleAnswers() -> shuffleAnswers
    32:32:java.util.LinkedList getAnswerList() -> getAnswerList
    36:37:void setAnswerList(java.util.LinkedList) -> setAnswerList
MultipleAnswerQuestion$answerPair -> MultipleAnswerQuestion$answerPair:
    java.lang.String answer -> a
    boolean isCorrect -> b
    43:46:void <init>(java.lang.String,boolean) -> <init>
    49:49:java.lang.String getAnswer() -> getAnswer
    53:54:void setAnswer(java.lang.String) -> setAnswer
    57:57:boolean getIsCorrect() -> getIsCorrect
    61:62:void setIsCorrect(boolean) -> setIsCorrect
ParsingState -> ParsingState:
    ParsingState QUESTION1 -> QUESTION1
    ParsingState ANSWER1 -> ANSWER1
    ParsingState QUESTION2 -> QUESTION2
    ParsingState ANSWER2 -> ANSWER2
    ParsingState NONE -> NONE
    ParsingState EXPLANATION -> EXPLANATION
    ParsingState[] $VALUES -> a
    4:4:ParsingState[] values() -> values
    4:4:ParsingState valueOf(java.lang.String) -> valueOf
    4:4:void <init>(java.lang.String,int) -> <init>
    4:8:void <clinit>() -> <clinit>
QuestionActivity -> QuestionActivity:
    java.io.File mainFile -> a
    javafx.scene.control.Button leftButton -> b
    javafx.scene.control.Button rightButton -> c
    javafx.scene.control.ProgressIndicator pind -> d
    javafx.stage.Stage stage -> e
    java.util.LinkedList questionList -> f
    javafx.scene.control.CheckBox shuffleQuestions -> g
    javafx.scene.control.CheckBox shuffleAnswers -> h
    java.lang.Integer indexCurrentQuestion -> i
    UserState currentState -> j
    35:49:void <init>(java.io.File,javafx.scene.control.CheckBox,javafx.scene.control.CheckBox) -> <init>
    54:70:void scene1() -> a
    75:163:void scene2() -> b
    166:171:void goBackward(javafx.scene.layout.VBox) -> a
    174:179:void goForward(javafx.scene.layout.VBox) -> b
    184:257:void GuiInteraction(java.lang.Integer,UserState,javafx.scene.layout.VBox) -> a
    262:287:void theEndScene() -> c
    290:290:javafx.concurrent.Task ParsingTask(java.io.File,java.util.LinkedList) -> a
    278:285:void lambda$theEndScene$6(javafx.scene.input.KeyEvent) -> a
    274:274:void lambda$theEndScene$5(javafx.scene.input.MouseEvent) -> a
    273:273:void lambda$theEndScene$4(javafx.scene.input.MouseEvent) -> b
    142:154:void lambda$scene2$3(javafx.scene.layout.VBox,javafx.scene.input.KeyEvent) -> a
    134:135:void lambda$scene2$2(javafx.scene.layout.VBox,javafx.scene.input.MouseEvent) -> a
    130:131:void lambda$scene2$1(javafx.scene.layout.VBox,javafx.scene.input.MouseEvent) -> b
    55:55:void lambda$scene1$0(javafx.concurrent.WorkerStateEvent) -> a
QuestionActivity$1 -> a:
    290:290:void <init>(QuestionActivity,java.io.File,java.util.LinkedList) -> <init>
SingleAnswerQuestion -> SingleAnswerQuestion:
    java.lang.String answer -> a
    8:10:void <init>(java.lang.String,java.lang.String) -> <init>
    13:15:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    18:18:java.lang.String getAnswer() -> getAnswer
    22:23:void setAnswer(java.lang.String) -> setAnswer
UserState -> UserState:
    UserState READING_QUESTION -> READING_QUESTION
    UserState SHOWING_ANSWER -> SHOWING_ANSWER
    UserState[] $VALUES -> a
    4:4:UserState[] values() -> values
    4:4:UserState valueOf(java.lang.String) -> valueOf
    4:4:void <init>(java.lang.String,int) -> <init>
    4:5:void <clinit>() -> <clinit>
com.ibm.icu.impl.Assert -> com.ibm.icu.impl.Assert:
    10:10:void <init>() -> <init>
    12:13:void fail(java.lang.Exception) -> fail
    15:15:void fail(java.lang.String) -> fail
    18:19:void assrt(boolean) -> assrt
    21:22:void assrt(java.lang.String,boolean) -> assrt
com.ibm.icu.impl.BMPSet -> com.ibm.icu.impl.BMPSet:
    int U16_SURROGATE_OFFSET -> U16_SURROGATE_OFFSET
    boolean[] latin1Contains -> a
    int[] table7FF -> b
    int[] bmpBlockBits -> c
    int[] list4kStarts -> d
    int[] list -> e
    int listLength -> f
    boolean $assertionsDisabled -> g
    67:88:void <init>(int[],int) -> <init>
    90:97:void <init>(com.ibm.icu.impl.BMPSet,int[],int) -> <init>
    100:121:boolean contains(int) -> contains
    140:226:int span(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition,com.ibm.icu.util.OutputInt) -> span
    239:320:int spanBack(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition) -> spanBack
    327:374:void set32x64Bits(int[],int,int) -> a
    378:457:void initBits() -> a
    488:506:int findCodePoint(int,int,int) -> a
    510:510:boolean containsSlow(int,int,int) -> b
    23:24:void <clinit>() -> <clinit>
com.ibm.icu.impl.CacheBase -> com.ibm.icu.impl.CacheBase:
    22:22:void <init>() -> <init>
    java.lang.Object getInstance(java.lang.Object,java.lang.Object) -> getInstance
    java.lang.Object createInstance(java.lang.Object,java.lang.Object) -> createInstance
com.ibm.icu.impl.CalendarAstronomer -> com.ibm.icu.impl.CalendarAstronomer:
    double SIDEREAL_DAY -> SIDEREAL_DAY
    double SOLAR_DAY -> SOLAR_DAY
    double SYNODIC_MONTH -> SYNODIC_MONTH
    double SIDEREAL_MONTH -> SIDEREAL_MONTH
    double TROPICAL_YEAR -> TROPICAL_YEAR
    double SIDEREAL_YEAR -> SIDEREAL_YEAR
    int SECOND_MS -> SECOND_MS
    int MINUTE_MS -> MINUTE_MS
    int HOUR_MS -> HOUR_MS
    long DAY_MS -> DAY_MS
    long JULIAN_EPOCH_MS -> JULIAN_EPOCH_MS
    com.ibm.icu.impl.CalendarAstronomer$SolarLongitude VERNAL_EQUINOX -> VERNAL_EQUINOX
    com.ibm.icu.impl.CalendarAstronomer$SolarLongitude SUMMER_SOLSTICE -> SUMMER_SOLSTICE
    com.ibm.icu.impl.CalendarAstronomer$SolarLongitude AUTUMN_EQUINOX -> AUTUMN_EQUINOX
    com.ibm.icu.impl.CalendarAstronomer$SolarLongitude WINTER_SOLSTICE -> WINTER_SOLSTICE
    com.ibm.icu.impl.CalendarAstronomer$MoonAge NEW_MOON -> NEW_MOON
    com.ibm.icu.impl.CalendarAstronomer$MoonAge FIRST_QUARTER -> FIRST_QUARTER
    com.ibm.icu.impl.CalendarAstronomer$MoonAge FULL_MOON -> FULL_MOON
    com.ibm.icu.impl.CalendarAstronomer$MoonAge LAST_QUARTER -> LAST_QUARTER
    long time -> a
    double fLongitude -> b
    double fLatitude -> c
    long fGmtOffset -> d
    double julianDay -> e
    double julianCentury -> f
    double sunLongitude -> g
    double meanAnomalySun -> h
    double moonLongitude -> i
    double moonEclipLong -> j
    double eclipObliquity -> k
    double siderealT0 -> l
    double siderealTime -> m
    com.ibm.icu.impl.CalendarAstronomer$Equatorial moonPosition -> n
    201:202:void <init>() -> <init>
    210:211:void <init>(java.util.Date) -> <init>
    221:1438:void <init>(long) -> <init>
    240:244:void <init>(double,double) -> <init>
    263:265:void setTime(long) -> setTime
    278:279:void setDate(java.util.Date) -> setDate
    296:299:void setJulianDay(double) -> setJulianDay
    311:311:long getTime() -> getTime
    323:323:java.util.Date getDate() -> getDate
    336:339:double getJulianDay() -> getJulianDay
    350:353:double getJulianCentury() -> getJulianCentury
    361:369:double getGreenwichSidereal() -> getGreenwichSidereal
    373:379:double getSiderealOffset() -> a
    387:387:double getLocalSidereal() -> getLocalSidereal
    401:409:long lstToUT(double) -> c
    426:426:com.ibm.icu.impl.CalendarAstronomer$Equatorial eclipticToEquatorial(com.ibm.icu.impl.CalendarAstronomer$Ecliptic) -> eclipticToEquatorial
    443:454:com.ibm.icu.impl.CalendarAstronomer$Equatorial eclipticToEquatorial(double,double) -> eclipticToEquatorial
    468:468:com.ibm.icu.impl.CalendarAstronomer$Equatorial eclipticToEquatorial(double) -> eclipticToEquatorial
    476:490:com.ibm.icu.impl.CalendarAstronomer$Horizon eclipticToHorizon(double) -> eclipticToHorizon
    571:576:double getSunLongitude() -> getSunLongitude
    587:601:double[] getSunLongitude(double) -> d
    613:613:com.ibm.icu.impl.CalendarAstronomer$Equatorial getSunPosition() -> getSunPosition
    660:660:long getSunTime(double,boolean) -> getSunTime
    673:673:long getSunTime(com.ibm.icu.impl.CalendarAstronomer$SolarLongitude,boolean) -> getSunTime
    690:706:long getSunRiseSet(boolean) -> getSunRiseSet
    1008:1078:com.ibm.icu.impl.CalendarAstronomer$Equatorial getMoonPosition() -> getMoonPosition
    1097:1099:double getMoonAge() -> getMoonAge
    1119:1119:double getMoonPhase() -> getMoonPhase
    1166:1166:long getMoonTime(double,boolean) -> getMoonTime
    1184:1184:long getMoonTime(com.ibm.icu.impl.CalendarAstronomer$MoonAge,boolean) -> getMoonTime
    1194:1194:long getMoonRiseSet(boolean) -> getMoonRiseSet
    1215:1276:long timeOfAngle(com.ibm.icu.impl.CalendarAstronomer$AngleFunc,double,double,long,boolean) -> a
    1287:1318:long riseOrSet(com.ibm.icu.impl.CalendarAstronomer$CoordFunc,boolean,double,double,long) -> a
    1330:1330:double normalize(double,double) -> a
    1339:1339:double norm2PI(double) -> e
    1346:1346:double normPI(double) -> f
    1367:1374:double trueAnomaly(double,double) -> b
    1387:1399:double eclipticObliquity() -> b
    1441:1452:void clearCache() -> c
    1470:1470:java.lang.String local(long) -> local
    1652:1656:java.lang.String radToHms(double) -> g
    1660:1664:java.lang.String radToDms(double) -> h
    47:47:java.lang.String access$000(double) -> a
    47:47:java.lang.String access$100(double) -> b
    627:1153:void <clinit>() -> <clinit>
com.ibm.icu.impl.CalendarAstronomer$1 -> com.ibm.icu.impl.a:
    com.ibm.icu.impl.CalendarAstronomer this$0 -> a
    660:660:void <init>(com.ibm.icu.impl.CalendarAstronomer) -> <init>
    660:660:double eval() -> a
com.ibm.icu.impl.CalendarAstronomer$2 -> com.ibm.icu.impl.b:
    com.ibm.icu.impl.CalendarAstronomer this$0 -> a
    697:697:void <init>(com.ibm.icu.impl.CalendarAstronomer) -> <init>
    698:698:com.ibm.icu.impl.CalendarAstronomer$Equatorial eval() -> a
com.ibm.icu.impl.CalendarAstronomer$3 -> com.ibm.icu.impl.c:
    com.ibm.icu.impl.CalendarAstronomer this$0 -> a
    1166:1166:void <init>(com.ibm.icu.impl.CalendarAstronomer) -> <init>
    1167:1167:double eval() -> a
com.ibm.icu.impl.CalendarAstronomer$4 -> com.ibm.icu.impl.d:
    com.ibm.icu.impl.CalendarAstronomer this$0 -> a
    1194:1194:void <init>(com.ibm.icu.impl.CalendarAstronomer) -> <init>
    1195:1195:com.ibm.icu.impl.CalendarAstronomer$Equatorial eval() -> a
com.ibm.icu.impl.CalendarAstronomer$AngleFunc -> com.ibm.icu.impl.e:
    double eval() -> a
com.ibm.icu.impl.CalendarAstronomer$CoordFunc -> com.ibm.icu.impl.f:
    com.ibm.icu.impl.CalendarAstronomer$Equatorial eval() -> a
com.ibm.icu.impl.CalendarAstronomer$Ecliptic -> com.ibm.icu.impl.CalendarAstronomer$Ecliptic:
    double latitude -> latitude
    double longitude -> longitude
    1499:1502:void <init>(double,double) -> <init>
    1509:1509:java.lang.String toString() -> toString
com.ibm.icu.impl.CalendarAstronomer$Equatorial -> com.ibm.icu.impl.CalendarAstronomer$Equatorial:
    double ascension -> ascension
    double declination -> declination
    1558:1561:void <init>(double,double) -> <init>
    1569:1569:java.lang.String toString() -> toString
    1578:1578:java.lang.String toHmsString() -> toHmsString
com.ibm.icu.impl.CalendarAstronomer$Horizon -> com.ibm.icu.impl.CalendarAstronomer$Horizon:
    double altitude -> altitude
    double azimuth -> azimuth
    1624:1627:void <init>(double,double) -> <init>
    1635:1635:java.lang.String toString() -> toString
com.ibm.icu.impl.CalendarAstronomer$MoonAge -> com.ibm.icu.impl.g:
    double value -> a
    1124:1124:void <init>(double) -> <init>
com.ibm.icu.impl.CalendarAstronomer$SolarLongitude -> com.ibm.icu.impl.h:
    double value -> a
    618:618:void <init>(double) -> <init>
com.ibm.icu.impl.CalendarCache -> com.ibm.icu.impl.CalendarCache:
    int[] primes -> a
    int pIndex -> b
    int size -> c
    int arraySize -> d
    int threshold -> e
    long[] keys -> f
    long[] values -> g
    long EMPTY -> EMPTY
    17:120:void <init>() -> <init>
    22:31:void makeArrays(int) -> a
    37:37:long get(long) -> get
    45:53:void put(long,long) -> put
    56:66:int findIndex(long) -> a
    71:88:void rehash() -> a
    98:102:int hash(long) -> b
    106:106:int hash2(long) -> c
    109:125:void <clinit>() -> <clinit>
com.ibm.icu.impl.CalendarData -> com.ibm.icu.impl.CalendarData:
    com.ibm.icu.impl.ICUResourceBundle fBundle -> a
    java.lang.String fMainType -> b
    java.lang.String fFallbackType -> c
    28:29:void <init>(com.ibm.icu.util.ULocale,java.lang.String) -> <init>
    31:40:void <init>(com.ibm.icu.impl.ICUResourceBundle,java.lang.String) -> <init>
    50:55:com.ibm.icu.impl.ICUResourceBundle get(java.lang.String) -> get
    72:77:com.ibm.icu.impl.ICUResourceBundle get(java.lang.String,java.lang.String) -> get
    94:99:com.ibm.icu.impl.ICUResourceBundle get(java.lang.String,java.lang.String,java.lang.String) -> get
    117:122:com.ibm.icu.impl.ICUResourceBundle get(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> get
    128:128:java.lang.String[] getStringArray(java.lang.String) -> getStringArray
    132:132:java.lang.String[] getStringArray(java.lang.String,java.lang.String) -> getStringArray
    136:136:java.lang.String[] getStringArray(java.lang.String,java.lang.String,java.lang.String) -> getStringArray
    139:140:java.lang.String[] getEras(java.lang.String) -> getEras
    143:160:java.lang.String[] getDateTimePatterns() -> getDateTimePatterns
    169:169:java.lang.String getDateTimePattern() -> getDateTimePattern
    183:183:java.lang.String getDateTimePattern(int) -> getDateTimePattern
    187:203:java.lang.String _getDateTimePattern(int) -> a
    207:223:java.lang.String[] getOverrides() -> getOverrides
    227:227:com.ibm.icu.util.ULocale getULocale() -> getULocale
com.ibm.icu.impl.CalendarUtil -> com.ibm.icu.impl.CalendarUtil:
    com.ibm.icu.impl.ICUCache CALTYPE_CACHE -> a
    24:24:void <init>() -> <init>
    40:98:java.lang.String getCalendarType(com.ibm.icu.util.ULocale) -> getCalendarType
    26:26:void <clinit>() -> <clinit>
com.ibm.icu.impl.CharTrie -> com.ibm.icu.impl.CharTrie:
    char m_initialValue_ -> a
    char[] m_data_ -> b
    boolean $assertionsDisabled -> c
    36:42:void <init>(java.nio.ByteBuffer,com.ibm.icu.impl.Trie$DataManipulate) -> <init>
    60:101:void <init>(int,int,com.ibm.icu.impl.Trie$DataManipulate) -> <init>
    117:129:char getCodePointValue(int) -> getCodePointValue
    143:143:char getLeadValue(char) -> getLeadValue
    155:155:char getBMPValue(char) -> getBMPValue
    165:169:char getSurrogateValue(char,char) -> getSurrogateValue
    183:192:char getTrailValue(int,char) -> getTrailValue
    204:204:char getLatin1LinearValue(char) -> getLatin1LinearValue
    216:221:boolean equals(java.lang.Object) -> equals
    225:226:int hashCode() -> hashCode
    239:243:void unserialize(java.nio.ByteBuffer) -> unserialize
    253:268:int getSurrogateOffset(char,char) -> getSurrogateOffset
    280:280:int getValue(int) -> getValue
    289:289:int getInitialValue() -> getInitialValue
    23:23:void <clinit>() -> <clinit>
com.ibm.icu.impl.CharacterIteration -> com.ibm.icu.impl.CharacterIteration:
    int DONE32 -> DONE32
    15:15:void <init>() -> <init>
    32:54:int next32(java.text.CharacterIterator) -> next32
    66:80:int nextTrail32(java.text.CharacterIterator,int) -> nextTrail32
    84:99:int previous32(java.text.CharacterIterator) -> previous32
    103:123:int current32(java.text.CharacterIterator) -> current32
com.ibm.icu.impl.CharacterIteratorWrapper -> com.ibm.icu.impl.CharacterIteratorWrapper:
    java.text.CharacterIterator iterator -> a
    24:29:void <init>(java.text.CharacterIterator) -> <init>
    35:39:int current() -> current
    46:46:int getLength() -> getLength
    53:53:int getIndex() -> getIndex
    60:65:int next() -> next
    72:76:int previous() -> previous
    84:88:void setIndex(int) -> setIndex
    94:95:void setToLimit() -> setToLimit
    101:112:int getText(char[],int) -> getText
    121:125:java.lang.Object clone() -> clone
    131:139:int moveIndex(int) -> moveIndex
    146:146:java.text.CharacterIterator getCharacterIterator() -> getCharacterIterator
com.ibm.icu.impl.ClassLoaderUtil -> com.ibm.icu.impl.ClassLoaderUtil:
    java.lang.ClassLoader BOOTSTRAP_CLASSLOADER -> a
    18:20:void <init>() -> <init>
    49:66:java.lang.ClassLoader getBootstrapClassLoader() -> a
    76:80:java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    88:98:java.lang.ClassLoader getClassLoader() -> getClassLoader
com.ibm.icu.impl.ClassLoaderUtil$1 -> com.ibm.icu.impl.i:
    54:54:void <init>() -> <init>
    56:56:com.ibm.icu.impl.ClassLoaderUtil$BootstrapClassLoader run() -> a
    54:54:java.lang.Object run() -> run
com.ibm.icu.impl.ClassLoaderUtil$BootstrapClassLoader -> com.ibm.icu.impl.j:
    35:36:void <init>() -> <init>
com.ibm.icu.impl.CurrencyData -> com.ibm.icu.impl.CurrencyData:
    com.ibm.icu.impl.CurrencyData$CurrencyDisplayInfoProvider provider -> provider
    15:90:void <init>() -> <init>
    72:88:void <clinit>() -> <clinit>
com.ibm.icu.impl.CurrencyData$1 -> com.ibm.icu.impl.k:
    77:77:void <init>() -> <init>
    79:79:com.ibm.icu.impl.CurrencyData$CurrencyDisplayInfo getInstance(com.ibm.icu.util.ULocale,boolean) -> getInstance
    83:83:boolean hasData() -> hasData
com.ibm.icu.impl.CurrencyData$CurrencyDisplayInfo -> com.ibm.icu.impl.CurrencyData$CurrencyDisplayInfo:
    23:23:void <init>() -> <init>
    java.util.Map getUnitPatterns() -> getUnitPatterns
    com.ibm.icu.impl.CurrencyData$CurrencyFormatInfo getFormatInfo(java.lang.String) -> getFormatInfo
    com.ibm.icu.impl.CurrencyData$CurrencySpacingInfo getSpacingInfo() -> getSpacingInfo
com.ibm.icu.impl.CurrencyData$CurrencyDisplayInfoProvider -> com.ibm.icu.impl.CurrencyData$CurrencyDisplayInfoProvider:
    com.ibm.icu.impl.CurrencyData$CurrencyDisplayInfo getInstance(com.ibm.icu.util.ULocale,boolean) -> getInstance
    boolean hasData() -> hasData
com.ibm.icu.impl.CurrencyData$CurrencyFormatInfo -> com.ibm.icu.impl.CurrencyData$CurrencyFormatInfo:
    java.lang.String currencyPattern -> currencyPattern
    char monetarySeparator -> monetarySeparator
    char monetaryGroupingSeparator -> monetaryGroupingSeparator
    35:39:void <init>(java.lang.String,char,char) -> <init>
com.ibm.icu.impl.CurrencyData$CurrencySpacingInfo -> com.ibm.icu.impl.CurrencyData$CurrencySpacingInfo:
    java.lang.String beforeCurrencyMatch -> beforeCurrencyMatch
    java.lang.String beforeContextMatch -> beforeContextMatch
    java.lang.String beforeInsert -> beforeInsert
    java.lang.String afterCurrencyMatch -> afterCurrencyMatch
    java.lang.String afterContextMatch -> afterContextMatch
    java.lang.String afterInsert -> afterInsert
    com.ibm.icu.impl.CurrencyData$CurrencySpacingInfo DEFAULT -> DEFAULT
    52:59:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    66:66:void <clinit>() -> <clinit>
com.ibm.icu.impl.CurrencyData$DefaultInfo -> com.ibm.icu.impl.CurrencyData$DefaultInfo:
    boolean fallback -> a
    com.ibm.icu.impl.CurrencyData$CurrencyDisplayInfo FALLBACK_INSTANCE -> b
    com.ibm.icu.impl.CurrencyData$CurrencyDisplayInfo NO_FALLBACK_INSTANCE -> c
    93:95:void <init>(boolean) -> <init>
    98:98:com.ibm.icu.impl.CurrencyData$CurrencyDisplayInfo getWithFallback(boolean) -> getWithFallback
    103:103:java.lang.String getName(java.lang.String) -> getName
    108:108:java.lang.String getPluralName(java.lang.String,java.lang.String) -> getPluralName
    113:113:java.lang.String getSymbol(java.lang.String) -> getSymbol
    118:118:java.util.Map symbolMap() -> symbolMap
    123:123:java.util.Map nameMap() -> nameMap
    128:128:com.ibm.icu.util.ULocale getULocale() -> getULocale
    133:136:java.util.Map getUnitPatterns() -> getUnitPatterns
    141:141:com.ibm.icu.impl.CurrencyData$CurrencyFormatInfo getFormatInfo(java.lang.String) -> getFormatInfo
    146:146:com.ibm.icu.impl.CurrencyData$CurrencySpacingInfo getSpacingInfo() -> getSpacingInfo
    149:150:void <clinit>() -> <clinit>
com.ibm.icu.impl.DateNumberFormat -> com.ibm.icu.impl.DateNumberFormat:
    long serialVersionUID -> serialVersionUID
    char[] digits -> a
    char zeroDigit -> b
    char minusSign -> c
    boolean positiveOnly -> d
    char[] decimalBuf -> e
    com.ibm.icu.impl.SimpleCache CACHE -> f
    int maxIntDigits -> g
    int minIntDigits -> h
    35:47:void <init>(com.ibm.icu.util.ULocale,java.lang.String,java.lang.String) -> <init>
    35:55:void <init>(com.ibm.icu.util.ULocale,char,java.lang.String) -> <init>
    58:89:void initialize(com.ibm.icu.util.ULocale,java.lang.String,java.lang.String) -> a
    92:93:void setMaximumIntegerDigits(int) -> setMaximumIntegerDigits
    96:96:int getMaximumIntegerDigits() -> getMaximumIntegerDigits
    100:101:void setMinimumIntegerDigits(int) -> setMinimumIntegerDigits
    104:104:int getMinimumIntegerDigits() -> getMinimumIntegerDigits
    109:110:void setParsePositiveOnly(boolean) -> setParsePositiveOnly
    113:113:char getZeroDigit() -> getZeroDigit
    117:125:void setZeroDigit(char) -> setZeroDigit
    128:128:char[] getDigits() -> getDigits
    133:133:java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition) -> format
    139:172:java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition) -> format
    177:177:java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.FieldPosition) -> format
    182:182:java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition) -> format
    187:187:java.lang.StringBuffer format(com.ibm.icu.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition) -> format
    196:234:java.lang.Number parse(java.lang.String,java.text.ParsePosition) -> parse
    238:242:boolean equals(java.lang.Object) -> equals
    250:250:int hashCode() -> hashCode
    254:260:void readObject(java.io.ObjectInputStream) -> readObject
    264:267:java.lang.Object clone() -> clone
    40:40:void <clinit>() -> <clinit>
com.ibm.icu.impl.Differ -> com.ibm.icu.impl.Differ:
    int STACKSIZE -> a
    int EQUALSIZE -> b
    java.lang.Object[] a -> c
    java.lang.Object[] b -> d
    java.lang.Object last -> e
    java.lang.Object next -> f
    int aCount -> g
    int bCount -> h
    int aLine -> i
    int bLine -> j
    int maxSame -> k
    int aTop -> l
    int bTop -> m
    25:170:void <init>(int,int) -> <init>
    33:35:void add(java.lang.Object,java.lang.Object) -> add
    38:40:void addA(java.lang.Object) -> addA
    43:45:void addB(java.lang.Object) -> addB
    48:48:int getALine(int) -> getALine
    52:54:java.lang.Object getA(int) -> getA
    58:58:int getACount() -> getACount
    62:62:int getBCount() -> getBCount
    66:66:int getBLine(int) -> getBLine
    70:72:java.lang.Object getB(int) -> getB
    77:119:void checkMatch(boolean) -> checkMatch
    127:136:int find(java.lang.Object[],int,int,java.lang.Object[],int,int) -> find
    142:157:void flush() -> a
com.ibm.icu.impl.DontCareFieldPosition -> com.ibm.icu.impl.DontCareFieldPosition:
    com.ibm.icu.impl.DontCareFieldPosition INSTANCE -> INSTANCE
    28:29:void <init>() -> <init>
    34:34:void setBeginIndex(int) -> setBeginIndex
    39:39:void setEndIndex(int) -> setEndIndex
    23:23:void <clinit>() -> <clinit>
com.ibm.icu.impl.Grego -> com.ibm.icu.impl.Grego:
    long MIN_MILLIS -> MIN_MILLIS
    long MAX_MILLIS -> MAX_MILLIS
    int MILLIS_PER_SECOND -> MILLIS_PER_SECOND
    int MILLIS_PER_MINUTE -> MILLIS_PER_MINUTE
    int MILLIS_PER_HOUR -> MILLIS_PER_HOUR
    int MILLIS_PER_DAY -> MILLIS_PER_DAY
    int[] MONTH_LENGTH -> a
    int[] DAYS_BEFORE -> b
    29:29:void <init>() -> <init>
    62:62:boolean isLeapYear(int) -> isLeapYear
    72:72:int monthLength(int,int) -> monthLength
    82:82:int previousMonthLength(int,int) -> previousMonthLength
    94:99:long fieldsToDay(int,int,int) -> fieldsToDay
    108:112:int dayOfWeek(long) -> dayOfWeek
    116:157:int[] dayToFields(long,int[]) -> dayToFields
    171:178:int[] timeToFields(long,int[]) -> timeToFields
    184:184:long floorDivide(long,long) -> floorDivide
    190:196:long floorDivide(long,long,long[]) -> a
    204:212:int getDayOfWeekInMonth(int,int,int) -> getDayOfWeekInMonth
    222:231:java.lang.String timeToString(long) -> timeToString
    46:51:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUBinary -> com.ibm.icu.impl.ICUBinary:
    java.util.List icuDataFiles -> a
    boolean $assertionsDisabled -> b
    27:399:void <init>() -> <init>
    294:315:void addDataFilesFromPath$1b7460f0(java.lang.String) -> a
    319:350:void addDataFilesFromFolder(java.io.File,java.lang.StringBuilder,java.util.List) -> a
    357:370:int compareKeys(java.lang.CharSequence,java.nio.ByteBuffer,int) -> a
    376:389:int compareKeys(java.lang.CharSequence,byte[],int) -> a
    421:421:java.nio.ByteBuffer getData(java.lang.String) -> getData
    435:435:java.nio.ByteBuffer getData(java.lang.ClassLoader,java.lang.String,java.lang.String) -> getData
    447:447:java.nio.ByteBuffer getRequiredData(java.lang.String) -> getRequiredData
    480:501:java.nio.ByteBuffer getData(java.lang.ClassLoader,java.lang.String,java.lang.String,boolean) -> a
    505:511:java.nio.ByteBuffer getDataFromFile(java.lang.String) -> b
    518:532:java.nio.ByteBuffer mapFile(java.io.File) -> b
    542:545:void addBaseNamesInFileFolder(java.lang.String,java.lang.String,java.util.Set) -> addBaseNamesInFileFolder
    554:554:com.ibm.icu.util.VersionInfo readHeaderAndDataVersion(java.nio.ByteBuffer,int,com.ibm.icu.impl.ICUBinary$Authenticate) -> readHeaderAndDataVersion
    571:610:int readHeader(java.nio.ByteBuffer,int,com.ibm.icu.impl.ICUBinary$Authenticate) -> readHeader
    627:643:int writeHeader(int,int,int,java.io.DataOutputStream) -> writeHeader
    647:650:void skipBytes(java.nio.ByteBuffer,int) -> skipBytes
    653:656:java.lang.String getString(java.nio.ByteBuffer,int,int) -> getString
    660:663:char[] getChars(java.nio.ByteBuffer,int,int) -> getChars
    667:670:short[] getShorts(java.nio.ByteBuffer,int,int) -> getShorts
    674:677:int[] getInts(java.nio.ByteBuffer,int,int) -> getInts
    681:684:long[] getLongs(java.nio.ByteBuffer,int,int) -> getLongs
    691:692:java.nio.ByteBuffer sliceWithOrder(java.nio.ByteBuffer) -> sliceWithOrder
    705:743:java.nio.ByteBuffer getByteBufferFromInputStreamAndCloseStream(java.io.InputStream) -> getByteBufferFromInputStreamAndCloseStream
    751:751:com.ibm.icu.util.VersionInfo getVersionInfoFromCompactInt(int) -> getVersionInfoFromCompactInt
    759:759:byte[] getVersionByteArrayFromCompactInt(int) -> getVersionByteArrayFromCompactInt
    27:27:java.nio.ByteBuffer access$100(java.io.File) -> a
    27:286:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUBinary$Authenticate -> com.ibm.icu.impl.ICUBinary$Authenticate:
    boolean isDataVersionAcceptable(byte[]) -> isDataVersionAcceptable
com.ibm.icu.impl.ICUBinary$DatPackageReader -> com.ibm.icu.impl.l:
    com.ibm.icu.impl.ICUBinary$DatPackageReader$IsAcceptable IS_ACCEPTABLE -> a
    boolean $assertionsDisabled -> b
    53:71:boolean validate(java.nio.ByteBuffer) -> a
    76:87:boolean startsWithPackageName(java.nio.ByteBuffer,int) -> a
    91:98:java.nio.ByteBuffer getData(java.nio.ByteBuffer,java.lang.CharSequence) -> a
    104:115:void addBaseNamesInFolder(java.nio.ByteBuffer,java.lang.String,java.lang.String,java.util.Set) -> a
    118:139:int binarySearch(java.nio.ByteBuffer,java.lang.CharSequence) -> b
    143:147:int getNameOffset(java.nio.ByteBuffer,int) -> b
    151:161:int getDataOffset(java.nio.ByteBuffer,int) -> c
    166:194:boolean addBaseName(java.nio.ByteBuffer,int,java.lang.String,java.lang.String,java.lang.StringBuilder,java.util.Set) -> a
    33:45:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUBinary$DatPackageReader$IsAcceptable -> com.ibm.icu.impl.m:
    39:39:void <init>() -> <init>
    42:42:boolean isDataVersionAcceptable(byte[]) -> isDataVersionAcceptable
    39:39:void <init>(byte) -> <init>
com.ibm.icu.impl.ICUBinary$DataFile -> com.ibm.icu.impl.n:
    java.lang.String itemPath -> a
    201:203:void <init>(java.lang.String) -> <init>
    206:206:java.lang.String toString() -> toString
    java.nio.ByteBuffer getData(java.lang.String) -> a
    void addBaseNamesInFolder(java.lang.String,java.lang.String,java.util.Set) -> a
com.ibm.icu.impl.ICUBinary$PackageDataFile -> com.ibm.icu.impl.o:
    java.nio.ByteBuffer pkgBytes -> b
    263:265:void <init>(java.lang.String,java.nio.ByteBuffer) -> <init>
    269:269:java.nio.ByteBuffer getData(java.lang.String) -> a
    274:275:void addBaseNamesInFolder(java.lang.String,java.lang.String,java.util.Set) -> a
com.ibm.icu.impl.ICUBinary$SingleDataFile -> com.ibm.icu.impl.p:
    java.io.File path -> b
    224:226:void <init>(java.lang.String,java.io.File) -> <init>
    229:229:java.lang.String toString() -> toString
    234:237:java.nio.ByteBuffer getData(java.lang.String) -> a
    243:251:void addBaseNamesInFolder(java.lang.String,java.lang.String,java.util.Set) -> a
com.ibm.icu.impl.ICUCache -> com.ibm.icu.impl.ICUCache:
    int SOFT -> SOFT
    int WEAK -> WEAK
    java.lang.Object NULL -> NULL
    void clear() -> clear
    void put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    16:16:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUConfig -> com.ibm.icu.impl.ICUConfig:
    java.lang.String CONFIG_PROPS_FILE -> CONFIG_PROPS_FILE
    java.util.Properties CONFIG_PROPS -> a
    20:20:void <init>() -> <init>
    48:48:java.lang.String get(java.lang.String) -> get
    59:79:java.lang.String get(java.lang.String,java.lang.String) -> get
    25:40:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUConfig$1 -> com.ibm.icu.impl.q:
    java.lang.String val$fname -> a
    63:63:void <init>(java.lang.String) -> <init>
    65:65:java.lang.String run() -> a
    63:63:java.lang.Object run() -> run
com.ibm.icu.impl.ICUCurrencyDisplayInfoProvider -> com.ibm.icu.impl.ICUCurrencyDisplayInfoProvider:
    25:26:void <init>() -> <init>
    29:37:com.ibm.icu.impl.CurrencyData$CurrencyDisplayInfo getInstance(com.ibm.icu.util.ULocale,boolean) -> getInstance
    41:41:boolean hasData() -> hasData
com.ibm.icu.impl.ICUCurrencyDisplayInfoProvider$ICUCurrencyDisplayInfo -> com.ibm.icu.impl.r:
    boolean fallback -> a
    com.ibm.icu.impl.ICUResourceBundle rb -> b
    com.ibm.icu.impl.ICUResourceBundle currencies -> c
    com.ibm.icu.impl.ICUResourceBundle plurals -> d
    java.lang.ref.SoftReference _symbolMapRef -> e
    java.lang.ref.SoftReference _nameMapRef -> f
    52:57:void <init>(com.ibm.icu.impl.ICUResourceBundle,boolean) -> <init>
    61:61:com.ibm.icu.util.ULocale getULocale() -> getULocale
    66:66:java.lang.String getName(java.lang.String) -> getName
    71:71:java.lang.String getSymbol(java.lang.String) -> getSymbol
    75:89:java.lang.String getName(java.lang.String,boolean) -> a
    95:112:java.lang.String getPluralName(java.lang.String,java.lang.String) -> getPluralName
    117:123:java.util.Map symbolMap() -> symbolMap
    128:134:java.util.Map nameMap() -> nameMap
    139:164:java.util.Map getUnitPatterns() -> getUnitPatterns
    169:179:com.ibm.icu.impl.CurrencyData$CurrencyFormatInfo getFormatInfo(java.lang.String) -> getFormatInfo
    184:201:com.ibm.icu.impl.CurrencyData$CurrencySpacingInfo getSpacingInfo() -> getSpacingInfo
    205:227:java.util.Map _createSymbolMap() -> a
    232:276:java.util.Map _createNameMap() -> b
com.ibm.icu.impl.ICUCurrencyMetaInfo -> com.ibm.icu.impl.ICUCurrencyMetaInfo:
    com.ibm.icu.impl.ICUResourceBundle regionInfo -> a
    com.ibm.icu.impl.ICUResourceBundle digitInfo -> b
    25:31:void <init>() -> <init>
    35:35:java.util.List currencyInfo(com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter) -> currencyInfo
    40:40:java.util.List currencies(com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter) -> currencies
    45:45:java.util.List regions(com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter) -> regions
    50:50:com.ibm.icu.text.CurrencyMetaInfo$CurrencyDigits currencyDigits(java.lang.String) -> currencyDigits
    55:65:com.ibm.icu.text.CurrencyMetaInfo$CurrencyDigits currencyDigits(java.lang.String,com.ibm.icu.util.Currency$CurrencyUsage) -> currencyDigits
    74:104:java.util.List collect(com.ibm.icu.impl.ICUCurrencyMetaInfo$Collector,com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter) -> a
    110:162:void collectRegion(com.ibm.icu.impl.ICUCurrencyMetaInfo$Collector,com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter,int,com.ibm.icu.impl.ICUResourceBundle) -> a
    166:170:long getDate$14179cd1(com.ibm.icu.impl.ICUResourceBundle,long) -> a
com.ibm.icu.impl.ICUCurrencyMetaInfo$Collector -> com.ibm.icu.impl.s:
    int collects() -> a
    void collect(java.lang.String,java.lang.String,long,long,int,boolean) -> a
    java.util.List getList() -> b
com.ibm.icu.impl.ICUCurrencyMetaInfo$CurrencyCollector -> com.ibm.icu.impl.t:
    com.ibm.icu.impl.ICUCurrencyMetaInfo$UniqueList result -> a
    230:231:void <init>() -> <init>
    235:236:void collect(java.lang.String,java.lang.String,long,long,int,boolean) -> a
    239:239:int collects() -> a
    243:243:java.util.List getList() -> b
    230:230:void <init>(byte) -> <init>
com.ibm.icu.impl.ICUCurrencyMetaInfo$InfoCollector -> com.ibm.icu.impl.u:
    java.util.List result -> a
    195:198:void <init>() -> <init>
    201:202:void collect(java.lang.String,java.lang.String,long,long,int,boolean) -> a
    205:205:java.util.List getList() -> b
    209:209:int collects() -> a
    195:195:void <init>(byte) -> <init>
com.ibm.icu.impl.ICUCurrencyMetaInfo$RegionCollector -> com.ibm.icu.impl.v:
    com.ibm.icu.impl.ICUCurrencyMetaInfo$UniqueList result -> a
    213:214:void <init>() -> <init>
    218:219:void collect(java.lang.String,java.lang.String,long,long,int,boolean) -> a
    222:222:int collects() -> a
    226:226:java.util.List getList() -> b
    213:213:void <init>(byte) -> <init>
com.ibm.icu.impl.ICUCurrencyMetaInfo$UniqueList -> com.ibm.icu.impl.w:
    java.util.Set seen -> a
    java.util.List list -> b
    175:177:void <init>() -> <init>
    180:180:com.ibm.icu.impl.ICUCurrencyMetaInfo$UniqueList create() -> c
    184:188:void add(java.lang.Object) -> a
    191:191:java.util.List list() -> a
    175:175:com.ibm.icu.impl.ICUCurrencyMetaInfo$UniqueList access$300() -> b
com.ibm.icu.impl.ICUData -> com.ibm.icu.impl.ICUData:
    java.lang.String ICU_BUNDLE -> ICU_BUNDLE
    java.lang.String ICU_BASE_NAME -> ICU_BASE_NAME
    java.lang.String ICU_COLLATION_BASE_NAME -> ICU_COLLATION_BASE_NAME
    java.lang.String ICU_BRKITR_NAME -> ICU_BRKITR_NAME
    java.lang.String ICU_BRKITR_BASE_NAME -> ICU_BRKITR_BASE_NAME
    java.lang.String ICU_RBNF_BASE_NAME -> ICU_RBNF_BASE_NAME
    java.lang.String ICU_TRANSLIT_BASE_NAME -> ICU_TRANSLIT_BASE_NAME
    java.lang.String ICU_LANG_BASE_NAME -> ICU_LANG_BASE_NAME
    java.lang.String ICU_CURR_BASE_NAME -> ICU_CURR_BASE_NAME
    java.lang.String ICU_REGION_BASE_NAME -> ICU_REGION_BASE_NAME
    java.lang.String ICU_ZONE_BASE_NAME -> ICU_ZONE_BASE_NAME
    java.lang.String ICU_UNIT_BASE_NAME -> ICU_UNIT_BASE_NAME
    25:25:void <init>() -> <init>
    91:101:boolean exists(java.lang.String) -> exists
    105:120:java.io.InputStream getStream(java.lang.Class,java.lang.String,boolean) -> a
    127:141:java.io.InputStream getStream(java.lang.ClassLoader,java.lang.String,boolean) -> a
    167:167:java.io.InputStream getStream(java.lang.ClassLoader,java.lang.String) -> getStream
    171:171:java.io.InputStream getRequiredStream(java.lang.ClassLoader,java.lang.String) -> getRequiredStream
    179:179:java.io.InputStream getStream(java.lang.String) -> getStream
    187:187:java.io.InputStream getRequiredStream(java.lang.String) -> getRequiredStream
    195:195:java.io.InputStream getStream(java.lang.Class,java.lang.String) -> getStream
    203:203:java.io.InputStream getRequiredStream(java.lang.Class,java.lang.String) -> getRequiredStream
com.ibm.icu.impl.ICUData$1 -> com.ibm.icu.impl.x:
    java.lang.String val$resourceName -> a
    93:93:void <init>(java.lang.String) -> <init>
    95:95:java.net.URL run() -> a
    93:93:java.lang.Object run() -> run
com.ibm.icu.impl.ICUData$2 -> com.ibm.icu.impl.y:
    java.lang.Class val$root -> a
    java.lang.String val$resourceName -> b
    107:107:void <init>(java.lang.Class,java.lang.String) -> <init>
    109:109:java.io.InputStream run() -> a
    107:107:java.lang.Object run() -> run
com.ibm.icu.impl.ICUData$3 -> com.ibm.icu.impl.z:
    java.lang.ClassLoader val$loader -> a
    java.lang.String val$resourceName -> b
    129:129:void <init>(java.lang.ClassLoader,java.lang.String) -> <init>
    131:131:java.io.InputStream run() -> a
    129:129:java.lang.Object run() -> run
com.ibm.icu.impl.ICUDataVersion -> com.ibm.icu.impl.ICUDataVersion:
    15:15:void <init>() -> <init>
    26:34:com.ibm.icu.util.VersionInfo getDataVersion() -> getDataVersion
com.ibm.icu.impl.ICUDebug -> com.ibm.icu.impl.ICUDebug:
    java.lang.String params -> a
    boolean debug -> b
    boolean help -> c
    java.lang.String javaVersionString -> javaVersionString
    boolean isJDK14OrHigher -> isJDK14OrHigher
    com.ibm.icu.util.VersionInfo javaVersion -> javaVersion
    11:11:void <init>() -> <init>
    36:67:com.ibm.icu.util.VersionInfo getInstanceLenient(java.lang.String) -> getInstanceLenient
    79:79:boolean enabled() -> enabled
    83:88:boolean enabled(java.lang.String) -> enabled
    92:108:java.lang.String value(java.lang.String) -> value
    15:76:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICULangDataTables -> com.ibm.icu.impl.ICULangDataTables:
    11:12:void <init>() -> <init>
    9:9:com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTable get(com.ibm.icu.util.ULocale) -> get
com.ibm.icu.impl.ICULocaleService -> com.ibm.icu.impl.ICULocaleService:
    com.ibm.icu.util.ULocale fallbackLocale -> a
    java.lang.String fallbackLocaleName -> b
    23:24:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
    39:39:java.lang.Object get(com.ibm.icu.util.ULocale) -> get
    47:47:java.lang.Object get(com.ibm.icu.util.ULocale,int) -> get
    55:55:java.lang.Object get(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale[]) -> get
    65:79:java.lang.Object get(com.ibm.icu.util.ULocale,int,com.ibm.icu.util.ULocale[]) -> get
    88:88:com.ibm.icu.impl.ICUService$Factory registerObject(java.lang.Object,com.ibm.icu.util.ULocale) -> registerObject
    97:97:com.ibm.icu.impl.ICUService$Factory registerObject(java.lang.Object,com.ibm.icu.util.ULocale,boolean) -> registerObject
    106:106:com.ibm.icu.impl.ICUService$Factory registerObject(java.lang.Object,com.ibm.icu.util.ULocale,int) -> registerObject
    114:115:com.ibm.icu.impl.ICUService$Factory registerObject(java.lang.Object,com.ibm.icu.util.ULocale,int,boolean) -> registerObject
    124:131:java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    139:145:com.ibm.icu.util.ULocale[] getAvailableULocales() -> getAvailableULocales
    592:602:java.lang.String validateFallbackLocale() -> validateFallbackLocale
    606:606:com.ibm.icu.impl.ICUService$Key createKey(java.lang.String) -> createKey
    610:610:com.ibm.icu.impl.ICUService$Key createKey(java.lang.String,int) -> createKey
    614:614:com.ibm.icu.impl.ICUService$Key createKey(com.ibm.icu.util.ULocale,int) -> createKey
com.ibm.icu.impl.ICULocaleService$ICUResourceBundleFactory -> com.ibm.icu.impl.ICULocaleService$ICUResourceBundleFactory:
    java.lang.String bundleName -> bundleName
    540:541:void <init>() -> <init>
    548:551:void <init>(java.lang.String) -> <init>
    557:557:java.util.Set getSupportedIDs() -> getSupportedIDs
    564:568:void updateVisibleIDs(java.util.Map) -> updateVisibleIDs
    575:575:java.lang.Object handleCreate(com.ibm.icu.util.ULocale,int,com.ibm.icu.impl.ICUService) -> handleCreate
    579:579:java.lang.ClassLoader loader() -> loader
    583:583:java.lang.String toString() -> toString
com.ibm.icu.impl.ICULocaleService$LocaleKey -> com.ibm.icu.impl.ICULocaleService$LocaleKey:
    int kind -> a
    int varstart -> b
    java.lang.String primaryID -> c
    java.lang.String fallbackID -> d
    java.lang.String currentID -> e
    int KIND_ANY -> KIND_ANY
    173:173:com.ibm.icu.impl.ICULocaleService$LocaleKey createWithCanonicalFallback(java.lang.String,java.lang.String) -> createWithCanonicalFallback
    180:184:com.ibm.icu.impl.ICULocaleService$LocaleKey createWithCanonicalFallback(java.lang.String,java.lang.String,int) -> createWithCanonicalFallback
    191:195:com.ibm.icu.impl.ICULocaleService$LocaleKey createWithCanonical(com.ibm.icu.util.ULocale,java.lang.String,int) -> createWithCanonical
    205:230:void <init>(java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    236:236:java.lang.String prefix() -> prefix
    243:243:int kind() -> kind
    250:250:java.lang.String canonicalID() -> canonicalID
    257:257:java.lang.String currentID() -> currentID
    265:278:java.lang.String currentDescriptor() -> currentDescriptor
    285:285:com.ibm.icu.util.ULocale canonicalLocale() -> canonicalLocale
    292:295:com.ibm.icu.util.ULocale currentLocale() -> currentLocale
    309:326:boolean fallback() -> fallback
    334:334:boolean isFallbackOf(java.lang.String) -> isFallbackOf
com.ibm.icu.impl.ICULocaleService$LocaleKeyFactory -> com.ibm.icu.impl.ICULocaleService$LocaleKeyFactory:
    java.lang.String name -> name
    boolean visible -> visible
    boolean VISIBLE -> VISIBLE
    boolean INVISIBLE -> INVISIBLE
    352:355:void <init>(boolean) -> <init>
    360:363:void <init>(boolean,java.lang.String) -> <init>
    371:381:java.lang.Object create(com.ibm.icu.impl.ICUService$Key,com.ibm.icu.impl.ICUService) -> create
    385:390:boolean handlesKey(com.ibm.icu.impl.ICUService$Key) -> handlesKey
    397:405:void updateVisibleIDs(java.util.Map) -> updateVisibleIDs
    413:417:java.lang.String getDisplayName(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayName
    428:428:java.lang.Object handleCreate(com.ibm.icu.util.ULocale,int,com.ibm.icu.impl.ICUService) -> handleCreate
    437:437:boolean isSupportedID(java.lang.String) -> isSupportedID
    446:446:java.util.Set getSupportedIDs() -> getSupportedIDs
    453:460:java.lang.String toString() -> toString
com.ibm.icu.impl.ICULocaleService$SimpleLocaleKeyFactory -> com.ibm.icu.impl.ICULocaleService$SimpleLocaleKeyFactory:
    java.lang.Object obj -> a
    java.lang.String id -> b
    int kind -> c
    474:475:void <init>(java.lang.Object,com.ibm.icu.util.ULocale,int,boolean) -> <init>
    478:483:void <init>(java.lang.Object,com.ibm.icu.util.ULocale,int,boolean,java.lang.String) -> <init>
    489:501:java.lang.Object create(com.ibm.icu.impl.ICUService$Key,com.ibm.icu.impl.ICUService) -> create
    505:505:boolean isSupportedID(java.lang.String) -> isSupportedID
    509:514:void updateVisibleIDs(java.util.Map) -> updateVisibleIDs
    517:522:java.lang.String toString() -> toString
com.ibm.icu.impl.ICUNotifier -> com.ibm.icu.impl.ICUNotifier:
    java.lang.Object notifyLock -> a
    com.ibm.icu.impl.ICUNotifier$NotifyThread notifyThread -> b
    java.util.List listeners -> c
    30:116:void <init>() -> <init>
    43:65:void addListener(java.util.EventListener) -> addListener
    73:91:void removeListener(java.util.EventListener) -> removeListener
    99:111:void notifyChanged() -> notifyChanged
    boolean acceptsListener(java.util.EventListener) -> acceptsListener
    void notifyListener(java.util.EventListener) -> notifyListener
com.ibm.icu.impl.ICUNotifier$NotifyThread -> com.ibm.icu.impl.A:
    com.ibm.icu.impl.ICUNotifier notifier -> a
    java.util.List queue -> b
    118:122:void <init>(com.ibm.icu.impl.ICUNotifier) -> <init>
    128:132:void queue(java.util.EventListener[]) -> a
    142:154:void run() -> run
com.ibm.icu.impl.ICURWLock -> com.ibm.icu.impl.ICURWLock:
    java.util.concurrent.locks.ReentrantReadWriteLock rwl -> a
    com.ibm.icu.impl.ICURWLock$Stats stats -> b
    37:45:void <init>() -> <init>
    102:104:com.ibm.icu.impl.ICURWLock$Stats resetStats() -> resetStats
    111:113:com.ibm.icu.impl.ICURWLock$Stats clearStats() -> clearStats
    120:120:com.ibm.icu.impl.ICURWLock$Stats getStats() -> getStats
    134:146:void acquireRead() -> acquireRead
    157:158:void releaseRead() -> releaseRead
    172:181:void acquireWrite() -> acquireWrite
    193:194:void releaseWrite() -> releaseWrite
com.ibm.icu.impl.ICURWLock$Stats -> com.ibm.icu.impl.ICURWLock$Stats:
    int _rc -> _rc
    int _mrc -> _mrc
    int _wrc -> _wrc
    int _wc -> _wc
    int _wwc -> _wwc
    71:72:void <init>() -> <init>
    74:80:void <init>(int,int,int,int,int) -> <init>
    83:84:void <init>(com.ibm.icu.impl.ICURWLock$Stats) -> <init>
    90:90:java.lang.String toString() -> toString
    45:45:void <init>(byte) -> <init>
    45:45:void <init>(com.ibm.icu.impl.ICURWLock$Stats,byte) -> <init>
com.ibm.icu.impl.ICURegionDataTables -> com.ibm.icu.impl.ICURegionDataTables:
    11:12:void <init>() -> <init>
    9:9:com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTable get(com.ibm.icu.util.ULocale) -> get
com.ibm.icu.impl.ICUResource -> com.ibm.icu.impl.ICUResource:
    17:350:void <init>() -> <init>
com.ibm.icu.impl.ICUResource$ArraySink -> com.ibm.icu.impl.ICUResource$ArraySink:
    305:305:void <init>() -> <init>
    312:312:void put(int,com.ibm.icu.impl.ICUResource$Value) -> put
    325:325:com.ibm.icu.impl.ICUResource$ArraySink getOrCreateArraySink(int,int) -> getOrCreateArraySink
    339:339:com.ibm.icu.impl.ICUResource$TableSink getOrCreateTableSink(int,int) -> getOrCreateTableSink
com.ibm.icu.impl.ICUResource$Key -> com.ibm.icu.impl.ICUResource$Key:
    byte[] bytes -> a
    int offset -> b
    int length -> c
    java.lang.String s -> d
    boolean $assertionsDisabled -> e
    38:38:void <init>() -> <init>
    40:44:void <init>(byte[],int,int) -> <init>
    57:61:void setBytes(byte[],int) -> setBytes
    67:70:void setToEmpty() -> setToEmpty
    79:81:com.ibm.icu.impl.ICUResource$Key clone() -> clone
    87:88:char charAt(int) -> charAt
    93:93:int length() -> length
    98:100:com.ibm.icu.impl.ICUResource$Key subSequence(int,int) -> subSequence
    107:110:java.lang.String toString() -> toString
    114:118:java.lang.String internalSubString(int,int) -> a
    125:126:java.lang.String substring(int) -> substring
    133:135:java.lang.String substring(int,int) -> substring
    139:144:boolean regionMatches(byte[],int,int) -> a
    148:153:boolean regionMatches(int,java.lang.CharSequence,int) -> a
    158:167:boolean equals(java.lang.Object) -> equals
    172:175:boolean contentEquals(java.lang.CharSequence) -> contentEquals
    179:180:boolean startsWith(java.lang.CharSequence) -> startsWith
    184:185:boolean endsWith(java.lang.CharSequence) -> endsWith
    192:200:int hashCode() -> hashCode
    205:205:int compareTo(com.ibm.icu.impl.ICUResource$Key) -> compareTo
    209:217:int compareTo(java.lang.CharSequence) -> compareTo
    24:24:java.lang.Object clone() -> clone
    24:24:java.lang.CharSequence subSequence(int,int) -> subSequence
    24:24:int compareTo(java.lang.Object) -> compareTo
    24:24:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUResource$TableSink -> com.ibm.icu.impl.ICUResource$TableSink:
    350:350:void <init>() -> <init>
    357:357:void put(com.ibm.icu.impl.ICUResource$Key,com.ibm.icu.impl.ICUResource$Value) -> put
    368:368:void putNoFallback(com.ibm.icu.impl.ICUResource$Key) -> putNoFallback
    381:381:com.ibm.icu.impl.ICUResource$ArraySink getOrCreateArraySink(com.ibm.icu.impl.ICUResource$Key,int) -> getOrCreateArraySink
    395:395:com.ibm.icu.impl.ICUResource$TableSink getOrCreateTableSink(com.ibm.icu.impl.ICUResource$Key,int) -> getOrCreateTableSink
com.ibm.icu.impl.ICUResource$Value -> com.ibm.icu.impl.ICUResource$Value:
    227:227:void <init>() -> <init>
    int getType() -> getType
    java.lang.String getString() -> getString
    int getInt() -> getInt
    int getUInt() -> getUInt
    int[] getIntVector() -> getIntVector
    java.nio.ByteBuffer getBinary() -> getBinary
    270:293:java.lang.String toString() -> toString
com.ibm.icu.impl.ICUResourceBundle -> com.ibm.icu.impl.ICUResourceBundle:
    java.lang.String ICU_DATA_PATH -> ICU_DATA_PATH
    java.lang.String ICU_BUNDLE -> ICU_BUNDLE
    java.lang.String ICU_BASE_NAME -> ICU_BASE_NAME
    java.lang.String ICU_COLLATION_BASE_NAME -> ICU_COLLATION_BASE_NAME
    java.lang.String ICU_BRKITR_BASE_NAME -> ICU_BRKITR_BASE_NAME
    java.lang.String ICU_RBNF_BASE_NAME -> ICU_RBNF_BASE_NAME
    java.lang.String ICU_TRANSLIT_BASE_NAME -> ICU_TRANSLIT_BASE_NAME
    java.lang.String ICU_LANG_BASE_NAME -> ICU_LANG_BASE_NAME
    java.lang.String ICU_CURR_BASE_NAME -> ICU_CURR_BASE_NAME
    java.lang.String ICU_REGION_BASE_NAME -> ICU_REGION_BASE_NAME
    java.lang.String ICU_ZONE_BASE_NAME -> ICU_ZONE_BASE_NAME
    java.lang.ClassLoader ICU_DATA_CLASS_LOADER -> ICU_DATA_CLASS_LOADER
    java.lang.String INSTALLED_LOCALES -> INSTALLED_LOCALES
    int FROM_FALLBACK -> FROM_FALLBACK
    int FROM_ROOT -> FROM_ROOT
    int FROM_DEFAULT -> FROM_DEFAULT
    int FROM_LOCALE -> FROM_LOCALE
    int loadingStatus -> b
    com.ibm.icu.impl.ICUResourceBundle$WholeBundle wholeBundle -> a
    com.ibm.icu.impl.ICUResourceBundle container -> c
    boolean DEBUG -> d
    com.ibm.icu.impl.CacheBase GET_AVAILABLE_CACHE -> e
    java.lang.String key -> key
    int RES_BOGUS -> RES_BOGUS
    int ALIAS -> ALIAS
    int TABLE32 -> TABLE32
    int TABLE16 -> TABLE16
    int STRING_V2 -> STRING_V2
    int ARRAY16 -> ARRAY16
    boolean $assertionsDisabled -> f
    123:124:void setLoadingStatus(int) -> setLoadingStatus
    133:133:int getLoadingStatus() -> getLoadingStatus
    137:145:void setLoadingStatus(java.lang.String) -> setLoadingStatus
    196:322:com.ibm.icu.util.ULocale getFunctionalEquivalent(java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.String,com.ibm.icu.util.ULocale,boolean[],boolean) -> getFunctionalEquivalent
    334:357:java.lang.String[] getKeywordValues(java.lang.String,java.lang.String) -> getKeywordValues
    377:393:com.ibm.icu.impl.ICUResourceBundle getWithFallback(java.lang.String) -> getWithFallback
    397:397:com.ibm.icu.impl.ICUResourceBundle at(int) -> at
    402:405:com.ibm.icu.impl.ICUResourceBundle at(java.lang.String) -> at
    410:410:com.ibm.icu.impl.ICUResourceBundle findTopLevel(int) -> findTopLevel
    415:415:com.ibm.icu.impl.ICUResourceBundle findTopLevel(java.lang.String) -> findTopLevel
    425:425:com.ibm.icu.impl.ICUResourceBundle findWithFallback(java.lang.String) -> findWithFallback
    428:428:java.lang.String findStringWithFallback(java.lang.String) -> findStringWithFallback
    434:447:java.lang.String getStringWithFallback(java.lang.String) -> getStringWithFallback
    452:453:void getAllArrayItemsWithFallback(java.lang.String,com.ibm.icu.impl.ICUResource$ArraySink) -> getAllArrayItemsWithFallback
    457:458:void getAllTableItemsWithFallback(java.lang.String,com.ibm.icu.impl.ICUResource$TableSink) -> getAllTableItemsWithFallback
    465:490:void getAllContainerItemsWithFallback(java.lang.String,com.ibm.icu.impl.ICUResource$ArraySink,com.ibm.icu.impl.ICUResource$TableSink) -> a
    505:532:void getAllContainerItemsWithFallback(com.ibm.icu.impl.ICUResource$Key,com.ibm.icu.impl.ICUResourceBundleReader$ReaderValue,com.ibm.icu.impl.ICUResource$ArraySink,com.ibm.icu.impl.ICUResource$TableSink) -> a
    541:541:java.util.Set getAvailableLocaleNameSet(java.lang.String,java.lang.ClassLoader) -> getAvailableLocaleNameSet
    549:549:java.util.Set getFullLocaleNameSet() -> getFullLocaleNameSet
    559:559:java.util.Set getFullLocaleNameSet(java.lang.String,java.lang.ClassLoader) -> getFullLocaleNameSet
    567:567:java.util.Set getAvailableLocaleNameSet() -> getAvailableLocaleNameSet
    575:575:com.ibm.icu.util.ULocale[] getAvailableULocales(java.lang.String,java.lang.ClassLoader) -> getAvailableULocales
    583:583:com.ibm.icu.util.ULocale[] getAvailableULocales() -> getAvailableULocales
    591:591:java.util.Locale[] getAvailableLocales(java.lang.String,java.lang.ClassLoader) -> getAvailableLocales
    599:599:java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    610:619:java.util.Locale[] getLocaleList(com.ibm.icu.util.ULocale[]) -> getLocaleList
    630:630:java.util.Locale getLocale() -> getLocale
    653:670:com.ibm.icu.util.ULocale[] createULocaleList(java.lang.String,java.lang.ClassLoader) -> d
    679:694:void addLocaleIDsFromIndexBundle(java.lang.String,java.lang.ClassLoader,java.util.Set) -> a
    698:731:void addBundleBaseNamesFromClassLoader(java.lang.String,java.lang.ClassLoader,java.util.Set) -> b
    735:749:void addLocaleIDsFromListFile(java.lang.String,java.lang.ClassLoader,java.util.Set) -> c
    752:794:java.util.Set createFullLocaleNameSet(java.lang.String,java.lang.ClassLoader) -> e
    798:800:java.util.Set createLocaleNameSet(java.lang.String,java.lang.ClassLoader) -> f
    890:890:com.ibm.icu.impl.ICUResourceBundle$AvailEntry getAvailEntry(java.lang.String,java.lang.ClassLoader) -> g
    895:906:com.ibm.icu.impl.ICUResourceBundle findResourceWithFallback(java.lang.String,com.ibm.icu.util.UResourceBundle,com.ibm.icu.util.UResourceBundle) -> a
    912:949:com.ibm.icu.impl.ICUResourceBundle findResourceWithFallback(java.lang.String[],int,com.ibm.icu.impl.ICUResourceBundle,com.ibm.icu.util.UResourceBundle) -> a
    958:1054:java.lang.String findStringWithFallback(java.lang.String,com.ibm.icu.util.UResourceBundle,com.ibm.icu.util.UResourceBundle) -> b
    1058:1058:int getResDepth() -> b
    1069:1075:void getResPathKeys(java.lang.String[],int) -> a
    1078:1087:int countPathKeys(java.lang.String) -> a
    1099:1120:void getResPathKeys(java.lang.String,int,java.lang.String[],int) -> a
    1123:1133:boolean equals(java.lang.Object) -> equals
    1137:1138:int hashCode() -> hashCode
    1175:1180:com.ibm.icu.util.UResourceBundle getBundleInstance(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean) -> getBundleInstance
    1185:1185:com.ibm.icu.util.UResourceBundle instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean) -> instantiateBundle
    1191:1194:com.ibm.icu.util.UResourceBundle getBundleInstance(java.lang.String,com.ibm.icu.util.ULocale,com.ibm.icu.impl.ICUResourceBundle$OpenType) -> getBundleInstance
    1200:1208:com.ibm.icu.util.UResourceBundle getBundleInstance(java.lang.String,java.lang.String,java.lang.ClassLoader,com.ibm.icu.impl.ICUResourceBundle$OpenType) -> getBundleInstance
    1214:1300:com.ibm.icu.util.UResourceBundle instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,com.ibm.icu.impl.ICUResourceBundle$OpenType) -> a
    1303:1318:com.ibm.icu.util.UResourceBundle get(java.lang.String,java.util.HashMap,com.ibm.icu.util.UResourceBundle) -> a
    1371:1376:com.ibm.icu.impl.ICUResourceBundle createBundle(java.lang.String,java.lang.String,java.lang.ClassLoader) -> createBundle
    1380:1380:java.lang.String getLocaleID() -> getLocaleID
    1384:1384:java.lang.String getBaseName() -> getBaseName
    1388:1388:com.ibm.icu.util.ULocale getULocale() -> getULocale
    1392:1392:com.ibm.icu.util.UResourceBundle getParent() -> getParent
    1396:1397:void setParent(java.util.ResourceBundle) -> setParent
    1400:1400:java.lang.String getKey() -> getKey
    1408:1408:boolean getNoFallback() -> c
    1415:1426:com.ibm.icu.impl.ICUResourceBundle getBundle(com.ibm.icu.impl.ICUResourceBundleReader,java.lang.String,java.lang.String,java.lang.ClassLoader) -> a
    120:1434:void <init>(com.ibm.icu.impl.ICUResourceBundle$WholeBundle) -> <init>
    120:1441:void <init>(com.ibm.icu.impl.ICUResourceBundle,java.lang.String) -> <init>
    1474:1572:com.ibm.icu.impl.ICUResourceBundle getAliasedResource(com.ibm.icu.impl.ICUResourceBundle,java.lang.String[],int,java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle) -> getAliasedResource
    1580:1580:java.util.Set getTopLevelKeySet() -> getTopLevelKeySet
    1588:1589:void setTopLevelKeySet(java.util.Set) -> setTopLevelKeySet
    1598:1598:java.util.Enumeration handleGetKeys() -> handleGetKeys
    1602:1602:boolean isTopLevelResource() -> isTopLevelResource
    33:33:com.ibm.icu.util.UResourceBundle findTopLevel(int) -> findTopLevel
    33:33:com.ibm.icu.util.UResourceBundle findTopLevel(java.lang.String) -> findTopLevel
    33:33:boolean access$000() -> a
    33:33:com.ibm.icu.util.ULocale[] access$100(java.lang.String,java.lang.ClassLoader) -> a
    33:33:java.util.Set access$200(java.lang.String,java.lang.ClassLoader) -> b
    33:33:java.util.Set access$300(java.lang.String,java.lang.ClassLoader) -> c
    33:877:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUResourceBundle$1 -> com.ibm.icu.impl.B:
    java.lang.ClassLoader val$root -> b
    java.lang.String val$bn -> c
    java.util.Set val$names -> a
    699:699:void <init>(java.lang.ClassLoader,java.lang.String,java.util.Set) -> <init>
    704:728:java.lang.Void run() -> a
    699:699:java.lang.Object run() -> run
com.ibm.icu.impl.ICUResourceBundle$1$1 -> com.ibm.icu.impl.C:
    com.ibm.icu.impl.ICUResourceBundle$1 this$0 -> a
    708:708:void <init>(com.ibm.icu.impl.ICUResourceBundle$1) -> <init>
    710:714:void visit(java.lang.String) -> visit
com.ibm.icu.impl.ICUResourceBundle$2 -> com.ibm.icu.impl.D:
    878:878:void <init>() -> <init>
    880:880:com.ibm.icu.impl.ICUResourceBundle$AvailEntry createInstance(java.lang.String,java.lang.ClassLoader) -> a
    878:878:java.lang.Object createInstance(java.lang.Object,java.lang.Object) -> createInstance
com.ibm.icu.impl.ICUResourceBundle$AvailEntry -> com.ibm.icu.impl.E:
    java.lang.String prefix -> a
    java.lang.ClassLoader loader -> b
    com.ibm.icu.util.ULocale[] ulocales -> c
    java.util.Locale[] locales -> d
    java.util.Set nameSet -> e
    java.util.Set fullNameSet -> f
    815:818:void <init>(java.lang.String,java.lang.ClassLoader) -> <init>
    821:828:com.ibm.icu.util.ULocale[] getULocaleList() -> a
    831:839:java.util.Locale[] getLocaleList() -> b
    842:849:java.util.Set getLocaleNameSet() -> c
    862:869:java.util.Set getFullLocaleNameSet() -> d
com.ibm.icu.impl.ICUResourceBundle$OpenType -> com.ibm.icu.impl.ICUResourceBundle$OpenType:
    com.ibm.icu.impl.ICUResourceBundle$OpenType LOCALE_DEFAULT_ROOT -> LOCALE_DEFAULT_ROOT
    com.ibm.icu.impl.ICUResourceBundle$OpenType LOCALE_ROOT -> LOCALE_ROOT
    com.ibm.icu.impl.ICUResourceBundle$OpenType DIRECT -> DIRECT
    com.ibm.icu.impl.ICUResourceBundle$OpenType[] $VALUES -> a
    1141:1141:com.ibm.icu.impl.ICUResourceBundle$OpenType[] values() -> values
    1141:1141:com.ibm.icu.impl.ICUResourceBundle$OpenType valueOf(java.lang.String) -> valueOf
    1141:1141:void <init>(java.lang.String,int) -> <init>
    1141:1169:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUResourceBundle$WholeBundle -> com.ibm.icu.impl.ICUResourceBundle$WholeBundle:
    java.lang.String baseName -> a
    java.lang.String localeID -> b
    com.ibm.icu.util.ULocale ulocale -> c
    java.lang.ClassLoader loader -> d
    com.ibm.icu.impl.ICUResourceBundleReader reader -> e
    java.util.Set topLevelKeys -> f
    153:159:void <init>(java.lang.String,java.lang.String,java.lang.ClassLoader,com.ibm.icu.impl.ICUResourceBundleReader) -> <init>
com.ibm.icu.impl.ICUResourceBundleImpl -> com.ibm.icu.impl.F:
    20:21:void <init>(com.ibm.icu.impl.ICUResourceBundleImpl,java.lang.String) -> <init>
    23:24:void <init>(com.ibm.icu.impl.ICUResourceBundle$WholeBundle) -> <init>
    29:49:com.ibm.icu.impl.ICUResourceBundle createBundleObject(java.lang.String,int,java.util.HashMap,com.ibm.icu.util.UResourceBundle) -> a
com.ibm.icu.impl.ICUResourceBundleImpl$ResourceArray -> com.ibm.icu.impl.G:
    164:164:int getType() -> getType
    167:177:java.lang.String[] handleGetStringArray() -> handleGetStringArray
    180:180:java.lang.String[] getStringArray() -> getStringArray
    185:186:com.ibm.icu.util.UResourceBundle handleGet(java.lang.String,java.util.HashMap,com.ibm.icu.util.UResourceBundle) -> handleGet
    191:191:com.ibm.icu.util.UResourceBundle handleGet(int,java.util.HashMap,com.ibm.icu.util.UResourceBundle) -> handleGet
    199:202:void getAllItems(com.ibm.icu.impl.ICUResource$Key,com.ibm.icu.impl.ICUResourceBundleReader$ReaderValue,com.ibm.icu.impl.ICUResource$ArraySink) -> a
    204:206:void <init>(com.ibm.icu.impl.ICUResourceBundleImpl,java.lang.String,int) -> <init>
com.ibm.icu.impl.ICUResourceBundleImpl$ResourceBinary -> com.ibm.icu.impl.H:
    int resource -> b
    58:58:int getType() -> getType
    61:61:java.nio.ByteBuffer getBinary() -> getBinary
    64:64:byte[] getBinary(byte[]) -> getBinary
    67:69:void <init>(com.ibm.icu.impl.ICUResourceBundleImpl,java.lang.String,int) -> <init>
com.ibm.icu.impl.ICUResourceBundleImpl$ResourceContainer -> com.ibm.icu.impl.I:
    com.ibm.icu.impl.ICUResourceBundleReader$Container value -> b
    129:129:int getSize() -> getSize
    133:141:java.lang.String getString(int) -> getString
    144:144:int getContainerResource(int) -> a
    148:152:com.ibm.icu.util.UResourceBundle createBundleObject(int,java.lang.String,java.util.HashMap,com.ibm.icu.util.UResourceBundle) -> a
    156:157:void <init>(com.ibm.icu.impl.ICUResourceBundleImpl,java.lang.String) -> <init>
    159:160:void <init>(com.ibm.icu.impl.ICUResourceBundle$WholeBundle) -> <init>
com.ibm.icu.impl.ICUResourceBundleImpl$ResourceInt -> com.ibm.icu.impl.J:
    int resource -> b
    74:74:int getType() -> getType
    77:77:int getInt() -> getInt
    80:80:int getUInt() -> getUInt
    83:85:void <init>(com.ibm.icu.impl.ICUResourceBundleImpl,java.lang.String,int) -> <init>
com.ibm.icu.impl.ICUResourceBundleImpl$ResourceIntVector -> com.ibm.icu.impl.K:
    int resource -> b
    112:112:int getType() -> getType
    115:115:int[] getIntVector() -> getIntVector
    118:120:void <init>(com.ibm.icu.impl.ICUResourceBundleImpl,java.lang.String,int) -> <init>
com.ibm.icu.impl.ICUResourceBundleImpl$ResourceString -> com.ibm.icu.impl.L:
    int resource -> b
    java.lang.String value -> c
    91:91:int getType() -> getType
    94:97:java.lang.String getString() -> getString
    100:107:void <init>(com.ibm.icu.impl.ICUResourceBundleImpl,java.lang.String,int) -> <init>
com.ibm.icu.impl.ICUResourceBundleImpl$ResourceTable -> com.ibm.icu.impl.M:
    210:210:int getType() -> getType
    216:222:java.util.Set handleKeySet() -> handleKeySet
    227:231:com.ibm.icu.util.UResourceBundle handleGet(java.lang.String,java.util.HashMap,com.ibm.icu.util.UResourceBundle) -> handleGet
    236:240:com.ibm.icu.util.UResourceBundle handleGet(int,java.util.HashMap,com.ibm.icu.util.UResourceBundle) -> handleGet
    248:277:java.lang.Object handleGetObject(java.lang.String) -> handleGetObject
    283:288:java.lang.String findString(java.lang.String) -> a
    296:299:void getAllItems(com.ibm.icu.impl.ICUResource$Key,com.ibm.icu.impl.ICUResourceBundleReader$ReaderValue,com.ibm.icu.impl.ICUResource$TableSink) -> a
    301:303:void <init>(com.ibm.icu.impl.ICUResourceBundleImpl,java.lang.String,int) -> <init>
    308:310:void <init>(com.ibm.icu.impl.ICUResourceBundle$WholeBundle,int) -> <init>
com.ibm.icu.impl.ICUResourceBundleReader -> com.ibm.icu.impl.ICUResourceBundleReader:
    com.ibm.icu.impl.ICUResourceBundleReader$IsAcceptable IS_ACCEPTABLE -> a
    java.nio.CharBuffer EMPTY_16_BIT_UNITS -> b
    java.nio.ByteBuffer bytes -> c
    byte[] keyBytes -> d
    java.nio.CharBuffer b16BitUnits -> e
    com.ibm.icu.impl.ICUResourceBundleReader poolBundleReader -> f
    int rootRes -> g
    int localKeyLimit -> h
    int poolStringIndexLimit -> i
    int poolStringIndex16Limit -> j
    boolean noFallback -> k
    boolean isPoolBundle -> l
    boolean usesPoolBundle -> m
    int poolCheckSum -> n
    com.ibm.icu.impl.ICUResourceBundleReader$ResourceCache resourceCache -> o
    com.ibm.icu.impl.ICUResourceBundleReader$ReaderCache CACHE -> p
    com.ibm.icu.impl.ICUResourceBundleReader NULL_READER -> q
    byte[] emptyBytes -> r
    java.nio.ByteBuffer emptyByteBuffer -> s
    char[] emptyChars -> t
    int[] emptyInts -> u
    com.ibm.icu.impl.ICUResourceBundleReader$Array EMPTY_ARRAY -> v
    com.ibm.icu.impl.ICUResourceBundleReader$Table EMPTY_TABLE -> w
    int[] PUBLIC_TYPES -> x
    boolean $assertionsDisabled -> y
    208:209:void <init>() -> <init>
    213:226:void <init>(java.nio.ByteBuffer,java.lang.String,java.lang.ClassLoader) -> <init>
    229:234:com.ibm.icu.impl.ICUResourceBundleReader getReader(java.lang.String,java.lang.String,java.lang.ClassLoader) -> a
    239:328:void init(java.nio.ByteBuffer) -> a
    331:331:int getIndexesInt(int) -> m
    339:339:int getRootResource() -> a
    342:342:boolean getNoFallback() -> b
    349:349:int RES_GET_TYPE(int) -> a
    352:352:int RES_GET_OFFSET(int) -> n
    355:355:int getResourceByteOffset(int) -> o
    359:359:int RES_GET_INT(int) -> b
    362:362:int RES_GET_UINT(int) -> c
    365:365:boolean URES_IS_ARRAY(int) -> d
    368:368:boolean URES_IS_TABLE(int) -> e
    380:390:char[] getChars(int,int) -> a
    393:393:int getInt(int) -> p
    396:406:int[] getInts(int,int) -> b
    409:423:char[] getTable16KeyOffsets(int) -> q
    427:431:char[] getTableKeyOffsets(int) -> r
    435:439:int[] getTable32KeyOffsets(int) -> s
    444:450:java.lang.String makeKeyStringFromBytes(byte[],int) -> a
    453:456:java.lang.String getKey16String(int) -> t
    460:463:java.lang.String getKey32String(int) -> u
    467:472:void setKeyFromKey16(int,com.ibm.icu.impl.ICUResource$Key) -> a
    474:479:void setKeyFromKey32(int,com.ibm.icu.impl.ICUResource$Key) -> b
    481:484:int compareKeys(java.lang.CharSequence,char) -> a
    488:491:int compareKeys32(java.lang.CharSequence,int) -> a
    504:540:java.lang.String getStringV2(int) -> v
    544:553:java.lang.String makeStringFromBytes(int,int) -> c
    558:580:java.lang.String getString(int) -> f
    587:601:boolean isNoInheritanceMarker(int) -> w
    605:616:boolean isStringV2NoInheritanceMarker(int) -> x
    621:637:java.lang.String getAlias(int) -> g
    642:671:byte[] getBinary(int,byte[]) -> a
    676:704:java.nio.ByteBuffer getBinary(int) -> h
    709:722:int[] getIntVector(int) -> i
    727:738:int getArrayLength(int) -> y
    743:757:com.ibm.icu.impl.ICUResourceBundleReader$Array getArray(int) -> j
    761:775:int getTableLength(int) -> z
    780:804:com.ibm.icu.impl.ICUResourceBundleReader$Table getTable(int) -> k
    1359:1376:java.lang.String getFullName(java.lang.String,java.lang.String) -> getFullName
    30:30:com.ibm.icu.impl.ICUResourceBundleReader access$200() -> c
    30:30:void <init>(java.nio.ByteBuffer,java.lang.String,java.lang.String,java.lang.ClassLoader) -> <init>
    30:30:int[] access$400() -> d
    30:30:java.nio.CharBuffer access$500(com.ibm.icu.impl.ICUResourceBundleReader) -> a
    30:30:int access$600(com.ibm.icu.impl.ICUResourceBundleReader) -> b
    30:30:int access$700(com.ibm.icu.impl.ICUResourceBundleReader) -> c
    30:30:int access$800(com.ibm.icu.impl.ICUResourceBundleReader,int) -> a
    30:30:int access$900(com.ibm.icu.impl.ICUResourceBundleReader,int) -> b
    30:30:int access$1000(com.ibm.icu.impl.ICUResourceBundleReader,int) -> c
    30:30:int access$1200(com.ibm.icu.impl.ICUResourceBundleReader,int) -> d
    30:30:java.lang.String access$1300(com.ibm.icu.impl.ICUResourceBundleReader,int) -> e
    30:30:java.lang.String access$1400(com.ibm.icu.impl.ICUResourceBundleReader,int) -> f
    30:30:int access$1500(com.ibm.icu.impl.ICUResourceBundleReader,java.lang.CharSequence,char) -> a
    30:30:int access$1600(com.ibm.icu.impl.ICUResourceBundleReader,java.lang.CharSequence,int) -> a
    30:30:void access$1700(com.ibm.icu.impl.ICUResourceBundleReader,int,com.ibm.icu.impl.ICUResource$Key) -> a
    30:30:void access$1800(com.ibm.icu.impl.ICUResourceBundleReader,int,com.ibm.icu.impl.ICUResource$Key) -> b
    30:30:boolean access$1900(com.ibm.icu.impl.ICUResourceBundleReader,int) -> g
    30:30:char[] access$2000(com.ibm.icu.impl.ICUResourceBundleReader,int) -> h
    30:30:char[] access$2100(com.ibm.icu.impl.ICUResourceBundleReader,int) -> i
    30:30:int[] access$2200(com.ibm.icu.impl.ICUResourceBundleReader,int) -> j
    30:30:int access$2400(int) -> l
    30:812:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUResourceBundleReader$Array -> com.ibm.icu.impl.N:
    boolean $assertionsDisabled -> c
    926:926:void <init>() -> <init>
    929:956:void getAllItems(com.ibm.icu.impl.ICUResourceBundleReader,com.ibm.icu.impl.ICUResource$Key,com.ibm.icu.impl.ICUResourceBundleReader$ReaderValue,com.ibm.icu.impl.ICUResource$ArraySink) -> a
    925:925:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUResourceBundleReader$Array16 -> com.ibm.icu.impl.O:
    972:972:int getContainerResource(com.ibm.icu.impl.ICUResourceBundleReader,int) -> a
    974:977:void <init>(com.ibm.icu.impl.ICUResourceBundleReader,int) -> <init>
com.ibm.icu.impl.ICUResourceBundleReader$Array32 -> com.ibm.icu.impl.P:
    961:961:int getContainerResource(com.ibm.icu.impl.ICUResourceBundleReader,int) -> a
    963:967:void <init>(com.ibm.icu.impl.ICUResourceBundleReader,int) -> <init>
com.ibm.icu.impl.ICUResourceBundleReader$Container -> com.ibm.icu.impl.Q:
    int size -> a
    int itemsOffset -> b
    894:894:int getSize() -> a
    897:897:int getContainerResource(com.ibm.icu.impl.ICUResourceBundleReader,int) -> a
    900:911:int getContainer16Resource(com.ibm.icu.impl.ICUResourceBundleReader,int) -> b
    914:917:int getContainer32Resource(com.ibm.icu.impl.ICUResourceBundleReader,int) -> c
    920:920:int getResource(com.ibm.icu.impl.ICUResourceBundleReader,java.lang.String) -> a
    922:923:void <init>() -> <init>
com.ibm.icu.impl.ICUResourceBundleReader$IsAcceptable -> com.ibm.icu.impl.R:
    36:36:void <init>() -> <init>
    39:39:boolean isDataVersionAcceptable(byte[]) -> isDataVersionAcceptable
    36:36:void <init>(byte) -> <init>
com.ibm.icu.impl.ICUResourceBundleReader$ReaderCache -> com.ibm.icu.impl.S:
    175:175:void <init>() -> <init>
    181:200:com.ibm.icu.impl.ICUResourceBundleReader createInstance(com.ibm.icu.impl.ICUResourceBundleReader$ReaderCacheKey,java.lang.ClassLoader) -> a
    175:175:java.lang.Object createInstance(java.lang.Object,java.lang.Object) -> createInstance
    175:175:void <init>(byte) -> <init>
com.ibm.icu.impl.ICUResourceBundleReader$ReaderCacheKey -> com.ibm.icu.impl.T:
    java.lang.String baseName -> a
    java.lang.String localeID -> b
    153:156:void <init>(java.lang.String,java.lang.String) -> <init>
    159:166:boolean equals(java.lang.Object) -> equals
    171:171:int hashCode() -> hashCode
com.ibm.icu.impl.ICUResourceBundleReader$ReaderValue -> com.ibm.icu.impl.U:
    com.ibm.icu.impl.ICUResourceBundleReader reader -> a
    int res -> b
    834:834:void <init>() -> <init>
    840:840:int getType() -> getType
    845:849:java.lang.String getString() -> getString
    854:857:int getInt() -> getInt
    862:865:int getUInt() -> getUInt
    870:874:int[] getIntVector() -> getIntVector
    879:883:java.nio.ByteBuffer getBinary() -> getBinary
    834:834:int access$1102(com.ibm.icu.impl.ICUResourceBundleReader$ReaderValue,int) -> a
com.ibm.icu.impl.ICUResourceBundleReader$ResourceCache -> com.ibm.icu.impl.V:
    int[] keys -> a
    java.lang.Object[] values -> b
    int length -> c
    int maxOffsetBits -> d
    int levelBitsList -> e
    com.ibm.icu.impl.ICUResourceBundleReader$ResourceCache$Level rootLevel -> f
    boolean $assertionsDisabled -> g
    1145:1156:java.lang.Object putIfCleared(java.lang.Object[],int,java.lang.Object,int) -> b
    1131:1250:void <init>(int) -> <init>
    1264:1269:int makeKey(int) -> b
    1274:1295:int findSimple(int) -> c
    1302:1320:java.lang.Object get(int) -> a
    1324:1349:java.lang.Object putIfAbsent(int,java.lang.Object,int) -> a
    1121:1121:java.lang.Object access$2300(java.lang.Object[],int,java.lang.Object,int) -> a
    1121:1121:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUResourceBundleReader$ResourceCache$Level -> com.ibm.icu.impl.W:
    int levelBitsList -> a
    int shift -> b
    int mask -> c
    int[] keys -> d
    java.lang.Object[] values -> e
    boolean $assertionsDisabled -> f
    1166:1175:void <init>(int,int) -> <init>
    1178:1189:java.lang.Object get(int) -> a
    1193:1215:java.lang.Object putIfAbsent(int,java.lang.Object,int) -> a
    1159:1159:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUResourceBundleReader$Table -> com.ibm.icu.impl.X:
    char[] keyOffsets -> c
    int[] key32Offsets -> d
    boolean $assertionsDisabled -> e
    984:987:java.lang.String getKey(com.ibm.icu.impl.ICUResourceBundleReader,int) -> d
    997:1015:int findTableItem(com.ibm.icu.impl.ICUResourceBundleReader,java.lang.CharSequence) -> a
    1019:1019:int getResource(com.ibm.icu.impl.ICUResourceBundleReader,java.lang.String) -> a
    1023:1057:void getAllItems(com.ibm.icu.impl.ICUResourceBundleReader,com.ibm.icu.impl.ICUResource$Key,com.ibm.icu.impl.ICUResourceBundleReader$ReaderValue,com.ibm.icu.impl.ICUResource$TableSink) -> a
    1058:1059:void <init>() -> <init>
    979:979:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUResourceBundleReader$Table16 -> com.ibm.icu.impl.Y:
    1076:1076:int getContainerResource(com.ibm.icu.impl.ICUResourceBundleReader,int) -> a
    1078:1082:void <init>(com.ibm.icu.impl.ICUResourceBundleReader,int) -> <init>
com.ibm.icu.impl.ICUResourceBundleReader$Table1632 -> com.ibm.icu.impl.Z:
    1064:1064:int getContainerResource(com.ibm.icu.impl.ICUResourceBundleReader,int) -> a
    1066:1071:void <init>(com.ibm.icu.impl.ICUResourceBundleReader,int) -> <init>
com.ibm.icu.impl.ICUResourceBundleReader$Table32 -> com.ibm.icu.impl.aa:
    1087:1087:int getContainerResource(com.ibm.icu.impl.ICUResourceBundleReader,int) -> a
    1089:1094:void <init>(com.ibm.icu.impl.ICUResourceBundleReader,int) -> <init>
com.ibm.icu.impl.ICUResourceTableAccess -> com.ibm.icu.impl.ICUResourceTableAccess:
    16:16:void <init>() -> <init>
    23:25:java.lang.String getTableString(java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,java.lang.String) -> getTableString
    34:92:java.lang.String getTableString(com.ibm.icu.impl.ICUResourceBundle,java.lang.String,java.lang.String,java.lang.String) -> getTableString
com.ibm.icu.impl.ICUService -> com.ibm.icu.impl.ICUService:
    java.lang.String name -> name
    boolean DEBUG -> a
    com.ibm.icu.impl.ICURWLock factoryLock -> b
    java.util.List factories -> c
    int defaultSize -> d
    java.lang.ref.SoftReference cacheref -> e
    java.lang.ref.SoftReference idref -> f
    com.ibm.icu.impl.ICUService$LocaleRef dnref -> g
    101:129:void <init>() -> <init>
    109:129:void <init>(java.lang.String) -> <init>
    344:344:java.lang.Object get(java.lang.String) -> get
    352:355:java.lang.Object get(java.lang.String,java.lang.String[]) -> get
    362:362:java.lang.Object getKey(com.ibm.icu.impl.ICUService$Key) -> getKey
    381:381:java.lang.Object getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[]) -> getKey
    388:522:java.lang.Object getKey(com.ibm.icu.impl.ICUService$Key,java.lang.String[],com.ibm.icu.impl.ICUService$Factory) -> getKey
    543:543:java.lang.Object handleDefault(com.ibm.icu.impl.ICUService$Key,java.lang.String[]) -> handleDefault
    551:551:java.util.Set getVisibleIDs() -> getVisibleIDs
    566:579:java.util.Set getVisibleIDs(java.lang.String) -> getVisibleIDs
    586:620:java.util.Map getVisibleIDMap() -> a
    629:629:java.lang.String getDisplayName(java.lang.String) -> getDisplayName
    638:652:java.lang.String getDisplayName(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayName
    661:662:java.util.SortedMap getDisplayNames() -> getDisplayNames
    670:670:java.util.SortedMap getDisplayNames(com.ibm.icu.util.ULocale) -> getDisplayNames
    678:678:java.util.SortedMap getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator) -> getDisplayNames
    686:686:java.util.SortedMap getDisplayNames(com.ibm.icu.util.ULocale,java.lang.String) -> getDisplayNames
    700:743:java.util.SortedMap getDisplayNames(com.ibm.icu.util.ULocale,java.util.Comparator,java.lang.String) -> getDisplayNames
    780:784:java.util.List factories() -> factories
    793:793:com.ibm.icu.impl.ICUService$Factory registerObject(java.lang.Object,java.lang.String) -> registerObject
    802:803:com.ibm.icu.impl.ICUService$Factory registerObject(java.lang.Object,java.lang.String,boolean) -> registerObject
    812:824:com.ibm.icu.impl.ICUService$Factory registerFactory(com.ibm.icu.impl.ICUService$Factory) -> registerFactory
    833:852:boolean unregisterFactory(com.ibm.icu.impl.ICUService$Factory) -> unregisterFactory
    861:869:void reset() -> reset
    879:880:void reInitializeFactories() -> reInitializeFactories
    887:887:boolean isDefault() -> isDefault
    895:896:void markDefault() -> markDefault
    904:904:com.ibm.icu.impl.ICUService$Key createKey(java.lang.String) -> createKey
    918:921:void clearCaches() -> clearCaches
    930:931:void clearServiceCache() -> clearServiceCache
    950:950:boolean acceptsListener(java.util.EventListener) -> acceptsListener
    958:959:void notifyListener(java.util.EventListener) -> notifyListener
    968:972:java.lang.String stats() -> stats
    979:979:java.lang.String getName() -> getName
    986:986:java.lang.String toString() -> toString
    105:105:void <clinit>() -> <clinit>
com.ibm.icu.impl.ICUService$CacheEntry -> com.ibm.icu.impl.ab:
    java.lang.String actualDescriptor -> a
    java.lang.Object service -> b
    531:534:void <init>(java.lang.String,java.lang.Object) -> <init>
com.ibm.icu.impl.ICUService$Factory -> com.ibm.icu.impl.ICUService$Factory:
    java.lang.Object create(com.ibm.icu.impl.ICUService$Key,com.ibm.icu.impl.ICUService) -> create
    void updateVisibleIDs(java.util.Map) -> updateVisibleIDs
    java.lang.String getDisplayName(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayName
com.ibm.icu.impl.ICUService$Key -> com.ibm.icu.impl.ICUService$Key:
    java.lang.String id -> a
    156:158:void <init>(java.lang.String) -> <init>
    164:164:java.lang.String id() -> id
    172:172:java.lang.String canonicalID() -> canonicalID
    180:180:java.lang.String currentID() -> currentID
    193:193:java.lang.String currentDescriptor() -> currentDescriptor
    204:204:boolean fallback() -> fallback
    212:212:boolean isFallbackOf(java.lang.String) -> isFallbackOf
com.ibm.icu.impl.ICUService$LocaleRef -> com.ibm.icu.impl.ac:
    com.ibm.icu.util.ULocale locale -> a
    java.lang.ref.SoftReference ref -> b
    java.util.Comparator com -> c
    753:757:void <init>(java.util.SortedMap,com.ibm.icu.util.ULocale,java.util.Comparator) -> <init>
    761:768:java.util.SortedMap get(com.ibm.icu.util.ULocale,java.util.Comparator) -> a
com.ibm.icu.impl.ICUService$ServiceListener -> com.ibm.icu.impl.ICUService$ServiceListener:
    void serviceChanged(com.ibm.icu.impl.ICUService) -> serviceChanged
com.ibm.icu.impl.ICUService$SimpleFactory -> com.ibm.icu.impl.ICUService$SimpleFactory:
    java.lang.Object instance -> instance
    java.lang.String id -> id
    boolean visible -> visible
    277:278:void <init>(java.lang.Object,java.lang.String) -> <init>
    285:292:void <init>(java.lang.Object,java.lang.String,boolean) -> <init>
    299:302:java.lang.Object create(com.ibm.icu.impl.ICUService$Key,com.ibm.icu.impl.ICUService) -> create
    310:315:void updateVisibleIDs(java.util.Map) -> updateVisibleIDs
    323:323:java.lang.String getDisplayName(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayName
    330:335:java.lang.String toString() -> toString
com.ibm.icu.impl.IDNA2003 -> com.ibm.icu.impl.IDNA2003:
    char[] ACE_PREFIX -> a
    com.ibm.icu.text.StringPrep namePrep -> b
    19:19:void <init>() -> <init>
    36:46:boolean startsWithPrefix(java.lang.StringBuffer) -> a
    50:53:char toASCIILower(char) -> a
    57:61:java.lang.StringBuffer toASCIILower(java.lang.CharSequence) -> a
    67:80:int compareCaseInsensitiveASCII(java.lang.StringBuffer,java.lang.StringBuffer) -> a
    87:93:int getSeparatorIndex(char[],int,int) -> a
    118:129:boolean isLDHChar(int) -> a
    141:148:boolean isLabelSeparator(int) -> b
    155:258:java.lang.StringBuffer convertToASCII(com.ibm.icu.text.UCharacterIterator,int) -> convertToASCII
    264:288:java.lang.StringBuffer convertIDNToASCII(java.lang.String,int) -> convertIDNToASCII
    294:398:java.lang.StringBuffer convertToUnicode(com.ibm.icu.text.UCharacterIterator,int) -> convertToUnicode
    404:428:java.lang.StringBuffer convertIDNToUnicode(java.lang.String,int) -> convertIDNToUnicode
    432:434:int compare(java.lang.String,java.lang.String,int) -> compare
    21:33:void <clinit>() -> <clinit>
com.ibm.icu.impl.IllegalIcuArgumentException -> com.ibm.icu.impl.IllegalIcuArgumentException:
    long serialVersionUID -> serialVersionUID
    17:18:void <init>(java.lang.String) -> <init>
    21:22:void <init>(java.lang.Throwable) -> <init>
    25:26:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    29:29:com.ibm.icu.impl.IllegalIcuArgumentException initCause(java.lang.Throwable) -> initCause
    13:13:java.lang.Throwable initCause(java.lang.Throwable) -> initCause
com.ibm.icu.impl.IntTrie -> com.ibm.icu.impl.IntTrie:
    int m_initialValue_ -> a
    int[] m_data_ -> b
    boolean $assertionsDisabled -> c
    41:46:void <init>(java.nio.ByteBuffer,com.ibm.icu.impl.Trie$DataManipulate) -> <init>
    64:105:void <init>(int,int,com.ibm.icu.impl.Trie$DataManipulate) -> <init>
    121:130:int getCodePointValue(int) -> getCodePointValue
    144:144:int getLeadValue(char) -> getLeadValue
    156:156:int getBMPValue(char) -> getBMPValue
    166:179:int getSurrogateValue(char,char) -> getSurrogateValue
    192:201:int getTrailValue(int,char) -> getTrailValue
    213:213:int getLatin1LinearValue(char) -> getLatin1LinearValue
    225:234:boolean equals(java.lang.Object) -> equals
    238:239:int hashCode() -> hashCode
    252:256:void unserialize(java.nio.ByteBuffer) -> unserialize
    266:280:int getSurrogateOffset(char,char) -> getSurrogateOffset
    292:292:int getValue(int) -> getValue
    301:301:int getInitialValue() -> getInitialValue
    317:321:void <init>(char[],int[],int,int,com.ibm.icu.impl.Trie$DataManipulate) -> <init>
    25:25:void <clinit>() -> <clinit>
com.ibm.icu.impl.IntTrieBuilder -> com.ibm.icu.impl.IntTrieBuilder:
    int[] m_data_ -> m_data_
    int m_initialValue_ -> m_initialValue_
    int m_leadUnitValue_ -> a
    44:49:void <init>(com.ibm.icu.impl.IntTrieBuilder) -> <init>
    62:101:void <init>(int[],int,int,int,boolean) -> <init>
    171:176:int getValue(int) -> getValue
    189:200:int getValue(int,boolean[]) -> getValue
    214:224:boolean setValue(int,int) -> setValue
    236:270:com.ibm.icu.impl.IntTrie serialize(com.ibm.icu.impl.TrieBuilder$DataManipulate,com.ibm.icu.impl.Trie$DataManipulate) -> serialize
    295:380:int serialize(java.io.OutputStream,boolean,com.ibm.icu.impl.TrieBuilder$DataManipulate) -> serialize
    405:488:boolean setRange(int,int,int,boolean) -> setRange
    504:511:int allocDataBlock() -> a
    521:538:int getDataBlock(int) -> a
    555:634:void compact(boolean) -> a
    647:654:int findSameDataBlock(int[],int,int,int) -> a
    670:767:void fold(com.ibm.icu.impl.TrieBuilder$DataManipulate) -> a
    775:790:void fillBlock(int,int,int,int,boolean) -> a
com.ibm.icu.impl.InvalidFormatException -> com.ibm.icu.impl.InvalidFormatException:
    long serialVersionUID -> serialVersionUID
    16:16:void <init>() -> <init>
    19:20:void <init>(java.lang.Throwable) -> <init>
    23:24:void <init>(java.lang.String) -> <init>
com.ibm.icu.impl.IterableComparator -> com.ibm.icu.impl.IterableComparator:
    java.util.Comparator comparator -> a
    int shorterFirst -> b
    com.ibm.icu.impl.IterableComparator NOCOMPARATOR -> c
    21:22:void <init>() -> <init>
    25:26:void <init>(java.util.Comparator) -> <init>
    28:31:void <init>(java.util.Comparator,boolean) -> <init>
    34:55:int compare(java.lang.Iterable,java.lang.Iterable) -> compare
    60:60:int compareIterables(java.lang.Iterable,java.lang.Iterable) -> compareIterables
    16:16:int compare(java.lang.Object,java.lang.Object) -> compare
    64:64:void <clinit>() -> <clinit>
com.ibm.icu.impl.JavaTimeZone -> com.ibm.icu.impl.JavaTimeZone:
    long serialVersionUID -> serialVersionUID
    java.util.TreeSet AVAILABLESET -> a
    java.util.TimeZone javatz -> b
    java.util.Calendar javacal -> c
    java.lang.reflect.Method mObservesDaylightTime -> d
    boolean isFrozen -> e
    58:59:void <init>() -> <init>
    67:238:void <init>(java.util.TimeZone,java.lang.String) -> <init>
    83:102:com.ibm.icu.impl.JavaTimeZone createTimeZone(java.lang.String) -> createTimeZone
    109:109:int getOffset(int,int,int,int,int,int) -> getOffset
    116:155:void getOffset(long,boolean,int[]) -> getOffset
    161:161:int getRawOffset() -> getRawOffset
    168:168:boolean inDaylightTime(java.util.Date) -> inDaylightTime
    175:179:void setRawOffset(int) -> setRawOffset
    185:185:boolean useDaylightTime() -> useDaylightTime
    192:201:boolean observesDaylightTime() -> observesDaylightTime
    208:208:int getDSTSavings() -> getDSTSavings
    212:212:java.util.TimeZone unwrap() -> unwrap
    219:222:java.lang.Object clone() -> clone
    229:229:int hashCode() -> hashCode
    233:235:void readObject(java.io.ObjectInputStream) -> readObject
    244:244:boolean isFrozen() -> isFrozen
    251:252:com.ibm.icu.util.TimeZone freeze() -> freeze
    259:263:com.ibm.icu.util.TimeZone cloneAsThawed() -> cloneAsThawed
    28:28:java.lang.Object cloneAsThawed() -> cloneAsThawed
    28:28:java.lang.Object freeze() -> freeze
    39:52:void <clinit>() -> <clinit>
com.ibm.icu.impl.LocaleDisplayNamesImpl -> com.ibm.icu.impl.LocaleDisplayNamesImpl:
    com.ibm.icu.util.ULocale locale -> a
    com.ibm.icu.text.LocaleDisplayNames$DialectHandling dialectHandling -> b
    com.ibm.icu.text.DisplayContext capitalization -> c
    com.ibm.icu.text.DisplayContext nameLength -> d
    com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTable langData -> e
    com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTable regionData -> f
    com.ibm.icu.text.MessageFormat separatorFormat -> g
    com.ibm.icu.text.MessageFormat format -> h
    com.ibm.icu.text.MessageFormat keyTypeFormat -> i
    char formatOpenParen -> j
    char formatReplaceOpenParen -> k
    char formatCloseParen -> l
    char formatReplaceCloseParen -> m
    com.ibm.icu.impl.CurrencyData$CurrencyDisplayInfo currencyDisplayInfo -> n
    com.ibm.icu.impl.LocaleDisplayNamesImpl$Cache cache -> o
    boolean[] capitalizationUsage -> p
    java.util.Map contextUsageTypeMap -> q
    com.ibm.icu.text.BreakIterator capitalizationBrkIter -> r
    89:91:com.ibm.icu.text.LocaleDisplayNames getInstance(com.ibm.icu.util.ULocale,com.ibm.icu.text.LocaleDisplayNames$DialectHandling) -> getInstance
    95:97:com.ibm.icu.text.LocaleDisplayNames getInstance(com.ibm.icu.util.ULocale,com.ibm.icu.text.DisplayContext[]) -> getInstance
    101:103:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.LocaleDisplayNames$DialectHandling) -> <init>
    68:207:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.DisplayContext[]) -> <init>
    211:211:com.ibm.icu.util.ULocale getLocale() -> getLocale
    216:216:com.ibm.icu.text.LocaleDisplayNames$DialectHandling getDialectHandling() -> getDialectHandling
    222:236:com.ibm.icu.text.DisplayContext getContext(com.ibm.icu.text.DisplayContext$Type) -> getContext
    240:254:java.lang.String adjustForUsageAndContext(com.ibm.icu.impl.LocaleDisplayNamesImpl$CapitalizationContextUsage,java.lang.String) -> a
    259:259:java.lang.String localeDisplayName(com.ibm.icu.util.ULocale) -> localeDisplayName
    264:264:java.lang.String localeDisplayName(java.util.Locale) -> localeDisplayName
    269:269:java.lang.String localeDisplayName(java.lang.String) -> localeDisplayName
    278:388:java.lang.String localeDisplayNameInternal(com.ibm.icu.util.ULocale) -> a
    392:398:java.lang.String localeIdName(java.lang.String) -> a
    404:413:java.lang.String languageDisplayName(java.lang.String) -> languageDisplayName
    418:428:java.lang.String scriptDisplayName(java.lang.String) -> scriptDisplayName
    433:439:java.lang.String scriptDisplayNameInContext(java.lang.String) -> scriptDisplayNameInContext
    444:444:java.lang.String scriptDisplayName(int) -> scriptDisplayName
    449:455:java.lang.String regionDisplayName(java.lang.String) -> regionDisplayName
    461:461:java.lang.String variantDisplayName(java.lang.String) -> variantDisplayName
    467:467:java.lang.String keyDisplayName(java.lang.String) -> keyDisplayName
    472:491:java.lang.String keyValueDisplayName(java.lang.String,java.lang.String) -> keyValueDisplayName
    496:543:java.util.List getUiListCompareWholeItems(java.util.Set,java.util.Comparator) -> getUiListCompareWholeItems
    547:553:com.ibm.icu.text.LocaleDisplayNames$UiListItem newRow(com.ibm.icu.util.ULocale,com.ibm.icu.text.DisplayContext) -> a
    630:634:boolean haveData(com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTableType) -> haveData
    639:645:java.lang.StringBuilder appendWithSep(java.lang.String,java.lang.StringBuilder) -> a
    51:81:void <clinit>() -> <clinit>
com.ibm.icu.impl.LocaleDisplayNamesImpl$1 -> com.ibm.icu.impl.ad:
    int[] $SwitchMap$com$ibm$icu$text$DisplayContext$Type -> a
    int[] $SwitchMap$com$ibm$icu$impl$LocaleDisplayNamesImpl$DataTableType -> b
    110:630:void <clinit>() -> <clinit>
com.ibm.icu.impl.LocaleDisplayNamesImpl$Cache -> com.ibm.icu.impl.ae:
    com.ibm.icu.util.ULocale locale -> a
    com.ibm.icu.text.LocaleDisplayNames$DialectHandling dialectHandling -> b
    com.ibm.icu.text.DisplayContext capitalization -> c
    com.ibm.icu.text.DisplayContext nameLength -> d
    com.ibm.icu.text.LocaleDisplayNames cache -> e
    648:648:void <init>() -> <init>
    655:663:com.ibm.icu.text.LocaleDisplayNames get(com.ibm.icu.util.ULocale,com.ibm.icu.text.LocaleDisplayNames$DialectHandling) -> a
    666:693:com.ibm.icu.text.LocaleDisplayNames get(com.ibm.icu.util.ULocale,com.ibm.icu.text.DisplayContext[]) -> a
    648:648:void <init>(byte) -> <init>
com.ibm.icu.impl.LocaleDisplayNamesImpl$CapitalizationContextUsage -> com.ibm.icu.impl.af:
    com.ibm.icu.impl.LocaleDisplayNamesImpl$CapitalizationContextUsage LANGUAGE -> a
    com.ibm.icu.impl.LocaleDisplayNamesImpl$CapitalizationContextUsage SCRIPT -> b
    com.ibm.icu.impl.LocaleDisplayNamesImpl$CapitalizationContextUsage TERRITORY -> c
    com.ibm.icu.impl.LocaleDisplayNamesImpl$CapitalizationContextUsage VARIANT -> d
    com.ibm.icu.impl.LocaleDisplayNamesImpl$CapitalizationContextUsage KEY -> e
    com.ibm.icu.impl.LocaleDisplayNamesImpl$CapitalizationContextUsage KEYVALUE -> f
    com.ibm.icu.impl.LocaleDisplayNamesImpl$CapitalizationContextUsage[] $VALUES -> g
    56:56:com.ibm.icu.impl.LocaleDisplayNamesImpl$CapitalizationContextUsage[] values() -> values
    56:56:com.ibm.icu.impl.LocaleDisplayNamesImpl$CapitalizationContextUsage valueOf(java.lang.String) -> valueOf
    56:56:void <init>(java.lang.String,int) -> <init>
    56:62:void <clinit>() -> <clinit>
com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTable -> com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTable:
    556:556:void <init>() -> <init>
    558:558:com.ibm.icu.util.ULocale getLocale() -> a
    562:562:java.lang.String get(java.lang.String,java.lang.String) -> a
    566:566:java.lang.String get(java.lang.String,java.lang.String,java.lang.String) -> a
com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTableType -> com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTableType:
    com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTableType LANG -> LANG
    com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTableType REGION -> REGION
    com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTableType[] $VALUES -> a
    625:625:com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTableType[] values() -> values
    625:625:com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTableType valueOf(java.lang.String) -> valueOf
    625:625:void <init>(java.lang.String,int) -> <init>
    625:626:void <clinit>() -> <clinit>
com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTables -> com.ibm.icu.impl.ag:
    588:588:void <init>() -> <init>
    com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTable get(com.ibm.icu.util.ULocale) -> get
    592:595:com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTables load(java.lang.String) -> load
com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTables$1 -> com.ibm.icu.impl.ah:
    com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTable val$NO_OP -> a
    595:595:void <init>(com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTable) -> <init>
    597:597:com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTable get(com.ibm.icu.util.ULocale) -> get
com.ibm.icu.impl.LocaleDisplayNamesImpl$ICUDataTable -> com.ibm.icu.impl.ai:
    com.ibm.icu.impl.ICUResourceBundle bundle -> a
    573:576:void <init>(java.lang.String,com.ibm.icu.util.ULocale) -> <init>
    579:579:com.ibm.icu.util.ULocale getLocale() -> a
    583:583:java.lang.String get(java.lang.String,java.lang.String,java.lang.String) -> a
com.ibm.icu.impl.LocaleDisplayNamesImpl$ICUDataTables -> com.ibm.icu.impl.aj:
    java.lang.String path -> a
    607:609:void <init>(java.lang.String) -> <init>
    613:613:com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTable get(com.ibm.icu.util.ULocale) -> get
com.ibm.icu.impl.LocaleDisplayNamesImpl$LangDataTables -> com.ibm.icu.impl.ak:
    com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTables impl -> a
    618:618:void <clinit>() -> <clinit>
com.ibm.icu.impl.LocaleDisplayNamesImpl$RegionDataTables -> com.ibm.icu.impl.al:
    com.ibm.icu.impl.LocaleDisplayNamesImpl$DataTables impl -> a
    622:622:void <clinit>() -> <clinit>
com.ibm.icu.impl.LocaleIDParser -> com.ibm.icu.impl.LocaleIDParser:
    char[] id -> a
    int index -> b
    java.lang.StringBuilder buffer -> c
    boolean canonicalize -> d
    boolean hadCountry -> e
    java.util.Map keywords -> f
    java.lang.String baseName -> g
    58:59:void <init>(java.lang.String) -> <init>
    61:66:void <init>(java.lang.String,boolean) -> <init>
    69:71:void reset() -> a
    79:80:void append(char) -> a
    83:84:void addSeparator() -> b
    90:90:java.lang.String getString(int) -> a
    97:99:void set(int,java.lang.String) -> a
    105:106:void append(java.lang.String) -> a
    121:126:char next() -> c
    133:135:void skipUntilTerminatorOrIDSeparator() -> d
    141:141:boolean atTerminator() -> e
    150:150:boolean isTerminator(char) -> b
    157:157:boolean isTerminatorOrIDSeparator(char) -> c
    165:172:boolean haveExperimentalLanguagePrefix() -> f
    180:185:boolean haveKeywordAssign() -> g
    194:215:int parseLanguage() -> h
    223:227:void skipLanguage() -> i
    239:267:int parseScript() -> j
    278:290:void skipScript() -> k
    298:339:int parseCountry() -> l
    348:364:void skipCountry() -> m
    391:437:int parseVariant() -> n
    447:448:java.lang.String getLanguage() -> getLanguage
    455:457:java.lang.String getScript() -> getScript
    464:467:java.lang.String getCountry() -> getCountry
    474:478:java.lang.String getVariant() -> getVariant
    485:486:java.lang.String[] getLanguageScriptCountryVariant() -> getLanguageScriptCountryVariant
    495:496:void setBaseName(java.lang.String) -> setBaseName
    499:514:void parseBaseName() -> parseBaseName
    521:525:java.lang.String getBaseName() -> getBaseName
    533:535:java.lang.String getName() -> getName
    545:563:boolean setToKeywordStart() -> o
    567:567:boolean isDoneOrKeywordAssign(char) -> d
    571:571:boolean isDoneOrItemSeparator(char) -> e
    575:579:java.lang.String getKeyword() -> p
    583:587:java.lang.String getValue() -> q
    591:596:java.util.Comparator getKeyComparator() -> r
    603:638:java.util.Map getKeywordMap() -> getKeywordMap
    646:661:int parseKeywords() -> s
    668:669:java.util.Iterator getKeywords() -> getKeywords
    677:678:java.lang.String getKeywordValue(java.lang.String) -> getKeywordValue
    685:686:void defaultKeywordValue(java.lang.String,java.lang.String) -> defaultKeywordValue
    694:695:void setKeywordValue(java.lang.String,java.lang.String) -> setKeywordValue
    705:742:void setKeywordValue(java.lang.String,java.lang.String,boolean) -> a
com.ibm.icu.impl.LocaleIDParser$1 -> com.ibm.icu.impl.am:
    591:591:void <init>(com.ibm.icu.impl.LocaleIDParser) -> <init>
    593:593:int compare(java.lang.String,java.lang.String) -> a
    591:591:int compare(java.lang.Object,java.lang.Object) -> compare
com.ibm.icu.impl.LocaleIDs -> com.ibm.icu.impl.LocaleIDs:
    java.lang.String[] _languages -> a
    java.lang.String[] _replacementLanguages -> b
    java.lang.String[] _obsoleteLanguages -> c
    java.lang.String[] _languages3 -> d
    java.lang.String[] _obsoleteLanguages3 -> e
    java.lang.String[] _countries -> f
    java.lang.String[] _deprecatedCountries -> g
    java.lang.String[] _replacementCountries -> h
    java.lang.String[] _obsoleteCountries -> i
    java.lang.String[] _countries3 -> j
    java.lang.String[] _obsoleteCountries3 -> k
    16:16:void <init>() -> <init>
    24:24:java.lang.String[] getISOCountries() -> getISOCountries
    38:38:java.lang.String[] getISOLanguages() -> getISOLanguages
    51:60:java.lang.String getISO3Country(java.lang.String) -> getISO3Country
    74:83:java.lang.String getISO3Language(java.lang.String) -> getISO3Language
    89:99:java.lang.String threeToTwoLetterLanguage(java.lang.String) -> threeToTwoLetterLanguage
    105:115:java.lang.String threeToTwoLetterRegion(java.lang.String) -> threeToTwoLetterRegion
    123:128:int findIndex(java.lang.String[],java.lang.String) -> a
    453:457:java.lang.String getCurrentCountryID(java.lang.String) -> getCurrentCountryID
    461:465:java.lang.String getCurrentLanguageID(java.lang.String) -> getCurrentLanguageID
    147:446:void <clinit>() -> <clinit>
com.ibm.icu.impl.LocaleUtility -> com.ibm.icu.impl.LocaleUtility:
    17:17:void <init>() -> <init>
    24:43:java.util.Locale getLocaleFromName(java.lang.String) -> getLocaleFromName
    52:56:boolean isFallbackOf(java.lang.String,java.lang.String) -> isFallbackOf
    66:66:boolean isFallbackOf(java.util.Locale,java.util.Locale) -> isFallbackOf
    118:130:java.util.Locale fallback(java.util.Locale) -> fallback
com.ibm.icu.impl.MultiComparator -> com.ibm.icu.impl.MultiComparator:
    java.util.Comparator[] comparators -> a
    19:21:void <init>(java.util.Comparator[]) -> <init>
    29:39:int compare(java.lang.Object,java.lang.Object) -> compare
com.ibm.icu.impl.Norm2AllModes -> com.ibm.icu.impl.Norm2AllModes:
    com.ibm.icu.impl.Normalizer2Impl impl -> impl
    com.ibm.icu.impl.Norm2AllModes$ComposeNormalizer2 comp -> comp
    com.ibm.icu.impl.Norm2AllModes$DecomposeNormalizer2 decomp -> decomp
    com.ibm.icu.impl.Norm2AllModes$FCDNormalizer2 fcd -> fcd
    com.ibm.icu.impl.Norm2AllModes$ComposeNormalizer2 fcc -> fcc
    com.ibm.icu.impl.CacheBase cache -> a
    com.ibm.icu.impl.Norm2AllModes$NoopNormalizer2 NOOP_NORMALIZER2 -> NOOP_NORMALIZER2
    283:289:void <init>(com.ibm.icu.impl.Normalizer2Impl) -> <init>
    298:301:com.ibm.icu.impl.Norm2AllModes getInstanceFromSingleton(com.ibm.icu.impl.Norm2AllModes$Norm2AllModesSingleton) -> a
    304:304:com.ibm.icu.impl.Norm2AllModes getNFCInstance() -> getNFCInstance
    307:307:com.ibm.icu.impl.Norm2AllModes getNFKCInstance() -> getNFKCInstance
    310:310:com.ibm.icu.impl.Norm2AllModes getNFKC_CFInstance() -> getNFKC_CFInstance
    314:319:com.ibm.icu.impl.Norm2AllModes$Normalizer2WithImpl getN2WithImpl(int) -> getN2WithImpl
    323:341:com.ibm.icu.impl.Norm2AllModes getInstance(java.nio.ByteBuffer,java.lang.String) -> getInstance
    362:362:com.ibm.icu.text.Normalizer2 getFCDNormalizer2() -> getFCDNormalizer2
    17:17:void <init>(com.ibm.icu.impl.Normalizer2Impl,byte) -> <init>
    343:356:void <clinit>() -> <clinit>
com.ibm.icu.impl.Norm2AllModes$1 -> com.ibm.icu.impl.an:
    344:344:void <init>() -> <init>
    347:352:com.ibm.icu.impl.Norm2AllModes createInstance(java.lang.String,java.nio.ByteBuffer) -> a
    344:344:java.lang.Object createInstance(java.lang.Object,java.lang.Object) -> createInstance
com.ibm.icu.impl.Norm2AllModes$ComposeNormalizer2 -> com.ibm.icu.impl.Norm2AllModes$ComposeNormalizer2:
    boolean onlyContiguous -> a
    197:199:void <init>(com.ibm.icu.impl.Normalizer2Impl,boolean) -> <init>
    203:204:void normalize(java.lang.CharSequence,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> normalize
    208:209:void normalizeAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> normalizeAndAppend
    214:214:boolean isNormalized(java.lang.CharSequence) -> isNormalized
    220:226:com.ibm.icu.text.Normalizer$QuickCheckResult quickCheck(java.lang.CharSequence) -> quickCheck
    231:231:int spanQuickCheckYes(java.lang.CharSequence) -> spanQuickCheckYes
    235:235:int getQuickCheck(int) -> getQuickCheck
    238:238:boolean hasBoundaryBefore(int) -> hasBoundaryBefore
    241:241:boolean hasBoundaryAfter(int) -> hasBoundaryAfter
    245:245:boolean isInert(int) -> isInert
com.ibm.icu.impl.Norm2AllModes$DecomposeNormalizer2 -> com.ibm.icu.impl.Norm2AllModes$DecomposeNormalizer2:
    167:168:void <init>(com.ibm.icu.impl.Normalizer2Impl) -> <init>
    172:173:void normalize(java.lang.CharSequence,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> normalize
    177:178:void normalizeAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> normalizeAndAppend
    181:181:int spanQuickCheckYes(java.lang.CharSequence) -> spanQuickCheckYes
    185:185:int getQuickCheck(int) -> getQuickCheck
    188:188:boolean hasBoundaryBefore(int) -> hasBoundaryBefore
    190:190:boolean hasBoundaryAfter(int) -> hasBoundaryAfter
    192:192:boolean isInert(int) -> isInert
com.ibm.icu.impl.Norm2AllModes$FCDNormalizer2 -> com.ibm.icu.impl.Norm2AllModes$FCDNormalizer2:
    253:254:void <init>(com.ibm.icu.impl.Normalizer2Impl) -> <init>
    258:259:void normalize(java.lang.CharSequence,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> normalize
    263:264:void normalizeAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> normalizeAndAppend
    267:267:int spanQuickCheckYes(java.lang.CharSequence) -> spanQuickCheckYes
    271:271:int getQuickCheck(int) -> getQuickCheck
    274:274:boolean hasBoundaryBefore(int) -> hasBoundaryBefore
    276:276:boolean hasBoundaryAfter(int) -> hasBoundaryAfter
    278:278:boolean isInert(int) -> isInert
com.ibm.icu.impl.Norm2AllModes$NFCSingleton -> com.ibm.icu.impl.ao:
    com.ibm.icu.impl.Norm2AllModes$Norm2AllModesSingleton INSTANCE -> a
    378:378:com.ibm.icu.impl.Norm2AllModes$Norm2AllModesSingleton access$200() -> a
    379:379:void <clinit>() -> <clinit>
com.ibm.icu.impl.Norm2AllModes$NFKCSingleton -> com.ibm.icu.impl.ap:
    com.ibm.icu.impl.Norm2AllModes$Norm2AllModesSingleton INSTANCE -> a
    381:381:com.ibm.icu.impl.Norm2AllModes$Norm2AllModesSingleton access$300() -> a
    382:382:void <clinit>() -> <clinit>
com.ibm.icu.impl.Norm2AllModes$NFKC_CFSingleton -> com.ibm.icu.impl.aq:
    com.ibm.icu.impl.Norm2AllModes$Norm2AllModesSingleton INSTANCE -> a
    384:384:com.ibm.icu.impl.Norm2AllModes$Norm2AllModesSingleton access$400() -> a
    385:385:void <clinit>() -> <clinit>
com.ibm.icu.impl.Norm2AllModes$NoopNormalizer2 -> com.ibm.icu.impl.Norm2AllModes$NoopNormalizer2:
    21:21:void <init>() -> <init>
    24:28:java.lang.StringBuilder normalize(java.lang.CharSequence,java.lang.StringBuilder) -> normalize
    33:40:java.lang.Appendable normalize(java.lang.CharSequence,java.lang.Appendable) -> normalize
    45:48:java.lang.StringBuilder normalizeSecondAndAppend(java.lang.StringBuilder,java.lang.CharSequence) -> normalizeSecondAndAppend
    53:56:java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.CharSequence) -> append
    61:61:java.lang.String getDecomposition(int) -> getDecomposition
    65:65:boolean isNormalized(java.lang.CharSequence) -> isNormalized
    67:67:com.ibm.icu.text.Normalizer$QuickCheckResult quickCheck(java.lang.CharSequence) -> quickCheck
    69:69:int spanQuickCheckYes(java.lang.CharSequence) -> spanQuickCheckYes
    71:71:boolean hasBoundaryBefore(int) -> hasBoundaryBefore
    73:73:boolean hasBoundaryAfter(int) -> hasBoundaryAfter
    75:75:boolean isInert(int) -> isInert
com.ibm.icu.impl.Norm2AllModes$Norm2AllModesSingleton -> com.ibm.icu.impl.ar:
    com.ibm.icu.impl.Norm2AllModes allModes -> a
    java.lang.RuntimeException exception -> b
    366:373:void <init>(java.lang.String) -> <init>
    365:365:java.lang.RuntimeException access$000(com.ibm.icu.impl.Norm2AllModes$Norm2AllModesSingleton) -> a
    365:365:com.ibm.icu.impl.Norm2AllModes access$100(com.ibm.icu.impl.Norm2AllModes$Norm2AllModesSingleton) -> b
    365:365:void <init>(java.lang.String,byte) -> <init>
com.ibm.icu.impl.Norm2AllModes$Normalizer2WithImpl -> com.ibm.icu.impl.Norm2AllModes$Normalizer2WithImpl:
    com.ibm.icu.impl.Normalizer2Impl impl -> impl
    81:83:void <init>(com.ibm.icu.impl.Normalizer2Impl) -> <init>
    88:93:java.lang.StringBuilder normalize(java.lang.CharSequence,java.lang.StringBuilder) -> normalize
    97:104:java.lang.Appendable normalize(java.lang.CharSequence,java.lang.Appendable) -> normalize
    void normalize(java.lang.CharSequence,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> normalize
    111:111:java.lang.StringBuilder normalizeSecondAndAppend(java.lang.StringBuilder,java.lang.CharSequence) -> normalizeSecondAndAppend
    115:115:java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.CharSequence) -> append
    119:125:java.lang.StringBuilder normalizeSecondAndAppend(java.lang.StringBuilder,java.lang.CharSequence,boolean) -> normalizeSecondAndAppend
    void normalizeAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> normalizeAndAppend
    132:132:java.lang.String getDecomposition(int) -> getDecomposition
    136:136:java.lang.String getRawDecomposition(int) -> getRawDecomposition
    140:140:int composePair(int,int) -> composePair
    145:145:int getCombiningClass(int) -> getCombiningClass
    151:151:boolean isNormalized(java.lang.CharSequence) -> isNormalized
    155:155:com.ibm.icu.text.Normalizer$QuickCheckResult quickCheck(java.lang.CharSequence) -> quickCheck
    159:159:int getQuickCheck(int) -> getQuickCheck
com.ibm.icu.impl.Normalizer2Impl -> com.ibm.icu.impl.Normalizer2Impl:
    com.ibm.icu.impl.Normalizer2Impl$IsAcceptable IS_ACCEPTABLE -> a
    com.ibm.icu.impl.Trie2$ValueMapper segmentStarterMapper -> b
    int MIN_CCC_LCCC_CP -> MIN_CCC_LCCC_CP
    int MIN_YES_YES_WITH_CC -> MIN_YES_YES_WITH_CC
    int JAMO_VT -> JAMO_VT
    int MIN_NORMAL_MAYBE_YES -> MIN_NORMAL_MAYBE_YES
    int JAMO_L -> JAMO_L
    int MAX_DELTA -> MAX_DELTA
    int IX_NORM_TRIE_OFFSET -> IX_NORM_TRIE_OFFSET
    int IX_EXTRA_DATA_OFFSET -> IX_EXTRA_DATA_OFFSET
    int IX_SMALL_FCD_OFFSET -> IX_SMALL_FCD_OFFSET
    int IX_RESERVED3_OFFSET -> IX_RESERVED3_OFFSET
    int IX_TOTAL_SIZE -> IX_TOTAL_SIZE
    int IX_MIN_DECOMP_NO_CP -> IX_MIN_DECOMP_NO_CP
    int IX_MIN_COMP_NO_MAYBE_CP -> IX_MIN_COMP_NO_MAYBE_CP
    int IX_MIN_YES_NO -> IX_MIN_YES_NO
    int IX_MIN_NO_NO -> IX_MIN_NO_NO
    int IX_LIMIT_NO_NO -> IX_LIMIT_NO_NO
    int IX_MIN_MAYBE_YES -> IX_MIN_MAYBE_YES
    int IX_MIN_YES_NO_MAPPINGS_ONLY -> IX_MIN_YES_NO_MAPPINGS_ONLY
    int IX_COUNT -> IX_COUNT
    int MAPPING_HAS_CCC_LCCC_WORD -> MAPPING_HAS_CCC_LCCC_WORD
    int MAPPING_HAS_RAW_MAPPING -> MAPPING_HAS_RAW_MAPPING
    int MAPPING_NO_COMP_BOUNDARY_AFTER -> MAPPING_NO_COMP_BOUNDARY_AFTER
    int MAPPING_LENGTH_MASK -> MAPPING_LENGTH_MASK
    int COMP_1_LAST_TUPLE -> COMP_1_LAST_TUPLE
    int COMP_1_TRIPLE -> COMP_1_TRIPLE
    int COMP_1_TRAIL_LIMIT -> COMP_1_TRAIL_LIMIT
    int COMP_1_TRAIL_MASK -> COMP_1_TRAIL_MASK
    int COMP_1_TRAIL_SHIFT -> COMP_1_TRAIL_SHIFT
    int COMP_2_TRAIL_SHIFT -> COMP_2_TRAIL_SHIFT
    int COMP_2_TRAIL_MASK -> COMP_2_TRAIL_MASK
    int minDecompNoCP -> c
    int minCompNoMaybeCP -> d
    int minYesNo -> e
    int minYesNoMappingsOnly -> f
    int minNoNo -> g
    int limitNoNo -> h
    int minMaybeYes -> i
    com.ibm.icu.impl.Trie2_16 normTrie -> j
    java.lang.String maybeYesCompositions -> k
    java.lang.String extraData -> l
    byte[] smallFCD -> m
    int[] tccc180 -> n
    com.ibm.icu.impl.Trie2_32 canonIterData -> o
    java.util.ArrayList canonStartSets -> p
    410:410:void <init>() -> <init>
    423:486:com.ibm.icu.impl.Normalizer2Impl load(java.nio.ByteBuffer) -> load
    490:490:com.ibm.icu.impl.Normalizer2Impl load(java.lang.String) -> load
    494:505:void enumLcccRange(int,int,int,com.ibm.icu.text.UnicodeSet) -> a
    509:522:void enumNorm16PropertyStartsRange(int,int,int,com.ibm.icu.text.UnicodeSet) -> b
    526:531:void addLcccChars(com.ibm.icu.text.UnicodeSet) -> addLcccChars
    535:547:void addPropertyStarts(com.ibm.icu.text.UnicodeSet) -> addPropertyStarts
    551:559:void addCanonIterPropertyStarts(com.ibm.icu.text.UnicodeSet) -> addCanonIterPropertyStarts
    568:568:com.ibm.icu.impl.Trie2_16 getNormTrie() -> getNormTrie
    586:662:com.ibm.icu.impl.Normalizer2Impl ensureCanonIterData() -> ensureCanonIterData
    665:665:int getNorm16(int) -> getNorm16
    668:673:int getCompQuickCheck(int) -> getCompQuickCheck
    676:676:boolean isAlgorithmicNoNo(int) -> isAlgorithmicNoNo
    677:677:boolean isCompNo(int) -> isCompNo
    678:678:boolean isDecompYes(int) -> isDecompYes
    681:687:int getCC(int) -> getCC
    690:690:int getCCFromYesOrMaybe(int) -> getCCFromYesOrMaybe
    699:706:int getFCD16(int) -> getFCD16
    709:709:int getFCD16FromBelow180(int) -> getFCD16FromBelow180
    713:715:boolean singleLeadMightHaveNonZeroFCD16(int) -> singleLeadMightHaveNonZeroFCD16
    722:750:int getFCD16FromNormData(int) -> getFCD16FromNormData
    759:780:java.lang.String getDecomposition(int) -> getDecomposition
    794:823:java.lang.String getRawDecomposition(int) -> getRawDecomposition
    836:836:boolean isCanonSegmentStarter(int) -> isCanonSegmentStarter
    849:869:boolean getCanonStartSet(int,com.ibm.icu.text.UnicodeSet) -> getCanonStartSet
    920:921:java.lang.Appendable decompose(java.lang.CharSequence,java.lang.StringBuilder) -> decompose
    930:936:void decompose(java.lang.CharSequence,int,int,java.lang.StringBuilder,int) -> decompose
    943:1012:int decompose(java.lang.CharSequence,int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> decompose
    1015:1039:void decomposeAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> decomposeAndAppend
    1047:1280:boolean compose(java.lang.CharSequence,int,int,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> compose
    1292:1383:int composeQuickCheck(java.lang.CharSequence,int,int,boolean,boolean) -> composeQuickCheck
    1390:1410:void composeAndAppend(java.lang.CharSequence,boolean,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> composeAndAppend
    1423:1540:int makeFCD(java.lang.CharSequence,int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> makeFCD
    1543:1563:void makeFCDAndAppend(java.lang.CharSequence,boolean,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> makeFCDAndAppend
    1570:1600:boolean hasDecompBoundary(int,boolean) -> hasDecompBoundary
    1602:1602:boolean isDecompInert(int) -> isDecompInert
    1605:1605:boolean hasCompBoundaryBefore(int) -> hasCompBoundaryBefore
    1609:1636:boolean hasCompBoundaryAfter(int,boolean,boolean) -> hasCompBoundaryAfter
    1639:1639:boolean hasFCDBoundaryBefore(int) -> hasFCDBoundaryBefore
    1641:1642:boolean hasFCDBoundaryAfter(int) -> hasFCDBoundaryAfter
    1644:1644:boolean isFCDInert(int) -> isFCDInert
    1646:1646:boolean isMaybe(int) -> a
    1647:1647:boolean isMaybeOrNonZeroCC(int) -> b
    1648:1648:boolean isInert(int) -> c
    1649:1649:boolean isJamoL(int) -> d
    1650:1650:boolean isJamoVT(int) -> e
    1651:1651:boolean isHangul(int) -> f
    1652:1652:boolean isCompYesAndZeroCC(int) -> g
    1663:1663:boolean isDecompYesAndZeroCC(int) -> h
    1673:1673:boolean isMostDecompYesAndZeroCC(int) -> i
    1675:1675:boolean isDecompNoAlgorithmic(int) -> j
    1683:1686:int getCCFromNoNo(int) -> k
    1692:1701:int getTrailCCFromCompYesAndZeroCC(java.lang.CharSequence,int,int) -> a
    1707:1707:int mapAlgorithmic(int,int) -> a
    1717:1726:int getCompositionsListForDecompYes(int) -> l
    1734:1735:int getCompositionsListForComposite(int) -> m
    1744:1744:int getCompositionsList(int) -> n
    1756:1761:void decomposeShort(java.lang.CharSequence,int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> decomposeShort
    1767:1791:void decompose(int,int,com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer) -> a
    1821:1861:int combine(java.lang.String,int,int) -> a
    1870:1885:void addComposites(int,com.ibm.icu.text.UnicodeSet) -> a
    1898:2040:void recompose(com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer,int,boolean) -> a
    2043:2084:int composePair(int,int) -> composePair
    2096:2112:boolean hasCompBoundaryBefore(int,int) -> b
    2117:2126:int findPreviousCompBoundary(java.lang.CharSequence,int) -> a
    2129:2137:int findNextCompBoundary(java.lang.CharSequence,int,int) -> b
    2141:2148:int findPreviousFCDBoundary(java.lang.CharSequence,int) -> b
    2151:2158:int findNextFCDBoundary(java.lang.CharSequence,int,int) -> c
    2162:2183:void addToStartSet(com.ibm.icu.impl.Trie2Writable,int,int) -> a
    418:560:void <clinit>() -> <clinit>
com.ibm.icu.impl.Normalizer2Impl$1 -> com.ibm.icu.impl.as:
    560:560:void <init>() -> <init>
    562:562:int map(int) -> map
com.ibm.icu.impl.Normalizer2Impl$Hangul -> com.ibm.icu.impl.Normalizer2Impl$Hangul:
    int JAMO_L_BASE -> JAMO_L_BASE
    int JAMO_L_END -> JAMO_L_END
    int JAMO_V_BASE -> JAMO_V_BASE
    int JAMO_V_END -> JAMO_V_END
    int JAMO_T_BASE -> JAMO_T_BASE
    int JAMO_T_END -> JAMO_T_END
    int HANGUL_BASE -> HANGUL_BASE
    int HANGUL_END -> HANGUL_END
    int JAMO_L_COUNT -> JAMO_L_COUNT
    int JAMO_V_COUNT -> JAMO_V_COUNT
    int JAMO_T_COUNT -> JAMO_T_COUNT
    int JAMO_L_LIMIT -> JAMO_L_LIMIT
    int JAMO_V_LIMIT -> JAMO_V_LIMIT
    int JAMO_VT_COUNT -> JAMO_VT_COUNT
    int HANGUL_COUNT -> HANGUL_COUNT
    int HANGUL_LIMIT -> HANGUL_LIMIT
    21:21:void <init>() -> <init>
    46:46:boolean isHangul(int) -> isHangul
    49:50:boolean isHangulWithoutJamoT(char) -> isHangulWithoutJamoT
    53:53:boolean isJamoL(int) -> isJamoL
    56:56:boolean isJamoV(int) -> isJamoV
    65:78:int decompose(int,java.lang.Appendable) -> decompose
    88:103:void getRawDecomposition(int,java.lang.Appendable) -> getRawDecomposition
com.ibm.icu.impl.Normalizer2Impl$IsAcceptable -> com.ibm.icu.impl.at:
    412:412:void <init>() -> <init>
    415:415:boolean isDataVersionAcceptable(byte[]) -> isDataVersionAcceptable
    412:412:void <init>(byte) -> <init>
com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer -> com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer:
    com.ibm.icu.impl.Normalizer2Impl impl -> a
    java.lang.Appendable app -> b
    java.lang.StringBuilder str -> c
    boolean appIsStringBuilder -> d
    int reorderStart -> e
    int lastCC -> f
    int codePointStart -> g
    int codePointLimit -> h
    118:144:void <init>(com.ibm.icu.impl.Normalizer2Impl,java.lang.Appendable,int) -> <init>
    146:146:boolean isEmpty() -> isEmpty
    147:147:int length() -> length
    148:148:int getLastCC() -> getLastCC
    150:150:java.lang.StringBuilder getStringBuilder() -> getStringBuilder
    153:153:boolean equals(java.lang.CharSequence,int,int) -> equals
    158:159:void setLastChar(char) -> setLastChar
    162:171:void append(int,int) -> append
    175:202:void append(java.lang.CharSequence,int,int,int,int) -> append
    208:211:com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer append(char) -> append
    214:217:void appendZeroCC(int) -> appendZeroCC
    220:225:com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer append(java.lang.CharSequence) -> append
    229:234:com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer append(java.lang.CharSequence,int,int) -> append
    243:255:void flush() -> flush
    263:276:com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer flushAndAppendZeroCC(java.lang.CharSequence,int,int) -> flushAndAppendZeroCC
    279:282:void remove() -> remove
    284:288:void removeSuffix(int) -> removeSuffix
    306:319:void insert(int,int) -> a
    329:329:void setIterator() -> a
    331:333:void skipPrevious() -> b
    335:344:int previousCC() -> c
    117:117:java.lang.Appendable append(char) -> append
    117:117:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    117:117:java.lang.Appendable append(java.lang.CharSequence) -> append
com.ibm.icu.impl.Normalizer2Impl$UTF16Plus -> com.ibm.icu.impl.Normalizer2Impl$UTF16Plus:
    353:353:void <init>() -> <init>
    360:360:boolean isSurrogateLead(int) -> isSurrogateLead
    368:380:boolean equal(java.lang.CharSequence,java.lang.CharSequence) -> equal
    395:406:boolean equal(java.lang.CharSequence,int,int,java.lang.CharSequence,int,int) -> equal
com.ibm.icu.impl.OlsonTimeZone -> com.ibm.icu.impl.OlsonTimeZone:
    long serialVersionUID -> serialVersionUID
    int transitionCount -> a
    int typeCount -> b
    long[] transitionTimes64 -> c
    int[] typeOffsets -> d
    byte[] typeMapData -> e
    int finalStartYear -> f
    double finalStartMillis -> g
    com.ibm.icu.util.SimpleTimeZone finalZone -> h
    java.lang.String canonicalID -> i
    boolean DEBUG -> j
    com.ibm.icu.util.InitialTimeZoneRule initialRule -> k
    com.ibm.icu.util.TimeZoneTransition firstTZTransition -> l
    int firstTZTransitionIdx -> m
    com.ibm.icu.util.TimeZoneTransition firstFinalTZTransition -> n
    com.ibm.icu.util.TimeArrayTimeZoneRule[] historicRules -> o
    com.ibm.icu.util.SimpleTimeZone finalZoneWithStartYear -> p
    boolean transitionRulesInitialized -> q
    int serialVersionOnStream -> r
    boolean isFrozen -> s
    boolean $assertionsDisabled -> t
    125:128:int getOffset(int,int,int,int,int,int) -> getOffset
    137:164:int getOffset(int,int,int,int,int,int,int) -> getOffset
    172:253:void setRawOffset(int) -> setRawOffset
    257:260:java.lang.Object clone() -> clone
    268:274:void getOffset(long,boolean,int[]) -> getOffset
    282:287:void getOffsetFromLocal(long,int,int,int[]) -> getOffsetFromLocal
    294:296:int getRawOffset() -> getRawOffset
    309:332:boolean useDaylightTime() -> useDaylightTime
    340:365:boolean observesDaylightTime() -> observesDaylightTime
    374:377:int getDSTSavings() -> getDSTSavings
    385:387:boolean inDaylightTime(java.util.Date) -> inDaylightTime
    395:432:boolean hasSameRules(com.ibm.icu.util.TimeZone) -> hasSameRules
    439:452:java.lang.String getCanonicalID() -> getCanonicalID
    460:471:void constructEmpty() -> a
    481:1264:void <init>(com.ibm.icu.util.UResourceBundle,com.ibm.icu.util.UResourceBundle,java.lang.String) -> <init>
    487:631:void construct(com.ibm.icu.util.UResourceBundle,com.ibm.icu.util.UResourceBundle) -> a
    635:1264:void <init>(java.lang.String) -> <init>
    650:669:void setID(java.lang.String) -> setID
    678:745:void getHistoricalOffset(long,boolean,int,int,int[]) -> a
    748:748:int getInt(byte) -> a
    756:757:int zoneOffsetAt(int) -> a
    761:762:int rawOffsetAt(int) -> b
    766:767:int dstOffsetAt(int) -> c
    771:771:int initialRawOffset() -> b
    775:775:int initialDstOffset() -> c
    781:829:java.lang.String toString() -> toString
    888:890:com.ibm.icu.util.UResourceBundle loadRule(com.ibm.icu.util.UResourceBundle,java.lang.String) -> a
    895:899:boolean equals(java.lang.Object) -> equals
    918:937:int hashCode() -> hashCode
    949:992:com.ibm.icu.util.TimeZoneTransition getNextTransition(long,boolean) -> getNextTransition
    1000:1044:com.ibm.icu.util.TimeZoneTransition getPreviousTransition(long,boolean) -> getPreviousTransition
    1052:1095:com.ibm.icu.util.TimeZoneRule[] getTimeZoneRules() -> getTimeZoneRules
    1108:1216:void initTransitionRules() -> d
    1232:1261:void readObject(java.io.ObjectInputStream) -> readObject
    1270:1270:boolean isFrozen() -> isFrozen
    1277:1278:com.ibm.icu.util.TimeZone freeze() -> freeze
    1285:1300:com.ibm.icu.util.TimeZone cloneAsThawed() -> cloneAsThawed
    115:115:java.lang.Object cloneAsThawed() -> cloneAsThawed
    115:115:java.lang.Object freeze() -> freeze
    115:884:void <clinit>() -> <clinit>
com.ibm.icu.impl.PVecToTrieCompactHandler -> com.ibm.icu.impl.PVecToTrieCompactHandler:
    com.ibm.icu.impl.IntTrieBuilder builder -> builder
    int initialValue -> initialValue
    16:16:void <init>() -> <init>
    21:21:void setRowIndexForErrorValue(int) -> setRowIndexForErrorValue
    24:25:void setRowIndexForInitialValue(int) -> setRowIndexForInitialValue
    28:29:void setRowIndexForRange(int,int,int) -> setRowIndexForRange
    32:39:void startRealValues(int) -> startRealValues
com.ibm.icu.impl.Pair -> com.ibm.icu.impl.Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    19:22:void <init>(java.lang.Object,java.lang.Object) -> <init>
    31:34:com.ibm.icu.impl.Pair of(java.lang.Object,java.lang.Object) -> of
    39:46:boolean equals(java.lang.Object) -> equals
    51:51:int hashCode() -> hashCode
com.ibm.icu.impl.PatternProps -> com.ibm.icu.impl.PatternProps:
    byte[] latin1 -> a
    byte[] index2000 -> b
    int[] syntax2000 -> c
    int[] syntaxOrWhiteSpace2000 -> d
    31:31:void <init>() -> <init>
    36:48:boolean isSyntax(int) -> isSyntax
    56:68:boolean isSyntaxOrWhiteSpace(int) -> isSyntaxOrWhiteSpace
    76:83:boolean isWhiteSpace(int) -> isWhiteSpace
    92:95:int skipWhiteSpace(java.lang.CharSequence,int) -> skipWhiteSpace
    102:117:java.lang.String trimWhiteSpace(java.lang.String) -> trimWhiteSpace
    126:136:boolean isIdentifier(java.lang.CharSequence) -> isIdentifier
    146:154:boolean isIdentifier(java.lang.CharSequence,int,int) -> isIdentifier
    163:166:int skipIdentifier(java.lang.CharSequence,int) -> skipIdentifier
    176:252:void <clinit>() -> <clinit>
com.ibm.icu.impl.PatternTokenizer -> com.ibm.icu.impl.PatternTokenizer:
    com.ibm.icu.text.UnicodeSet ignorableCharacters -> a
    com.ibm.icu.text.UnicodeSet syntaxCharacters -> b
    com.ibm.icu.text.UnicodeSet extraQuotingCharacters -> c
    com.ibm.icu.text.UnicodeSet escapeCharacters -> d
    boolean usingSlash -> e
    boolean usingQuote -> f
    com.ibm.icu.text.UnicodeSet needingQuoteCharacters -> g
    int start -> h
    int limit -> i
    java.lang.String pattern -> j
    char SINGLE_QUOTE -> SINGLE_QUOTE
    char BACK_SLASH -> BACK_SLASH
    int NO_QUOTE -> k
    int IN_QUOTE -> l
    int DONE -> DONE
    int SYNTAX -> SYNTAX
    int LITERAL -> LITERAL
    int BROKEN_QUOTE -> BROKEN_QUOTE
    int BROKEN_ESCAPE -> BROKEN_ESCAPE
    int UNKNOWN -> UNKNOWN
    22:32:void <init>() -> <init>
    40:40:com.ibm.icu.text.UnicodeSet getIgnorableCharacters() -> getIgnorableCharacters
    48:50:com.ibm.icu.impl.PatternTokenizer setIgnorableCharacters(com.ibm.icu.text.UnicodeSet) -> setIgnorableCharacters
    53:53:com.ibm.icu.text.UnicodeSet getSyntaxCharacters() -> getSyntaxCharacters
    56:56:com.ibm.icu.text.UnicodeSet getExtraQuotingCharacters() -> getExtraQuotingCharacters
    64:66:com.ibm.icu.impl.PatternTokenizer setSyntaxCharacters(com.ibm.icu.text.UnicodeSet) -> setSyntaxCharacters
    74:76:com.ibm.icu.impl.PatternTokenizer setExtraQuotingCharacters(com.ibm.icu.text.UnicodeSet) -> setExtraQuotingCharacters
    80:80:com.ibm.icu.text.UnicodeSet getEscapeCharacters() -> getEscapeCharacters
    88:89:com.ibm.icu.impl.PatternTokenizer setEscapeCharacters(com.ibm.icu.text.UnicodeSet) -> setEscapeCharacters
    92:92:boolean isUsingQuote() -> isUsingQuote
    95:97:com.ibm.icu.impl.PatternTokenizer setUsingQuote(boolean) -> setUsingQuote
    100:100:boolean isUsingSlash() -> isUsingSlash
    103:105:com.ibm.icu.impl.PatternTokenizer setUsingSlash(boolean) -> setUsingSlash
    116:116:int getLimit() -> getLimit
    119:120:com.ibm.icu.impl.PatternTokenizer setLimit(int) -> setLimit
    123:123:int getStart() -> getStart
    126:127:com.ibm.icu.impl.PatternTokenizer setStart(int) -> setStart
    131:131:com.ibm.icu.impl.PatternTokenizer setPattern(java.lang.CharSequence) -> setPattern
    135:141:com.ibm.icu.impl.PatternTokenizer setPattern(java.lang.String) -> setPattern
    149:149:java.lang.String quoteLiteral(java.lang.CharSequence) -> quoteLiteral
    158:221:java.lang.String quoteLiteral(java.lang.String) -> quoteLiteral
    225:230:void appendEscaped(java.lang.StringBuffer,int) -> a
    233:248:java.lang.String normalize() -> normalize
    256:385:int next(java.lang.StringBuffer) -> next
    146:146:void <clinit>() -> <clinit>
com.ibm.icu.impl.PluralRulesLoader -> com.ibm.icu.impl.PluralRulesLoader:
    java.util.Map rulesIdToRules -> a
    java.util.Map localeIdToCardinalRulesId -> b
    java.util.Map localeIdToOrdinalRulesId -> c
    java.util.Map rulesIdToEquivalentULocale -> d
    java.util.Map localeIdToPluralRanges -> e
    com.ibm.icu.impl.PluralRulesLoader loader -> loader
    com.ibm.icu.text.PluralRanges UNKNOWN_RANGE -> f
    40:42:void <init>() -> <init>
    48:54:com.ibm.icu.util.ULocale[] getAvailableULocales() -> getAvailableULocales
    61:78:com.ibm.icu.util.ULocale getFunctionalEquivalent(com.ibm.icu.util.ULocale,boolean[]) -> getFunctionalEquivalent
    85:86:java.util.Map getLocaleIdToRulesIdMap(com.ibm.icu.text.PluralRules$PluralType) -> a
    93:94:java.util.Map getRulesIdToEquivalentULocaleMap() -> a
    104:156:void checkBuildRulesIdMaps() -> b
    164:174:java.lang.String getRulesIdForLocale(com.ibm.icu.util.ULocale,com.ibm.icu.text.PluralRules$PluralType) -> getRulesIdForLocale
    183:219:com.ibm.icu.text.PluralRules getRulesForRulesId(java.lang.String) -> getRulesForRulesId
    227:227:com.ibm.icu.util.UResourceBundle getPluralBundle() -> getPluralBundle
    237:245:com.ibm.icu.text.PluralRules forLocale(com.ibm.icu.util.ULocale,com.ibm.icu.text.PluralRules$PluralType) -> forLocale
    258:258:boolean hasOverride(com.ibm.icu.util.ULocale) -> hasOverride
    265:275:com.ibm.icu.text.PluralRanges getPluralRanges(com.ibm.icu.util.ULocale) -> getPluralRanges
    279:279:boolean isPluralRangesAvailable(com.ibm.icu.util.ULocale) -> isPluralRangesAvailable
    251:500:void <clinit>() -> <clinit>
com.ibm.icu.impl.PropsVectors -> com.ibm.icu.impl.PropsVectors:
    int[] v -> a
    int columns -> b
    int maxRows -> c
    int rows -> d
    int prevRow -> e
    boolean isCompacted -> f
    int FIRST_SPECIAL_CP -> FIRST_SPECIAL_CP
    int INITIAL_VALUE_CP -> INITIAL_VALUE_CP
    int ERROR_VALUE_CP -> ERROR_VALUE_CP
    int MAX_CP -> MAX_CP
    int INITIAL_ROWS -> INITIAL_ROWS
    int MEDIUM_ROWS -> MEDIUM_ROWS
    int MAX_ROWS -> MAX_ROWS
    51:56:boolean areElementsSame(int,int[],int,int) -> a
    64:122:int findRow(int) -> a
    142:161:void <init>(int) -> <init>
    174:275:void setValue(int,int,int,int,int) -> setValue
    281:286:int getValue(int,int) -> getValue
    297:307:int[] getRow(int) -> getRow
    319:326:int getRowStart(int) -> getRowStart
    338:345:int getRowEnd(int) -> getRowEnd
    367:467:void compact(com.ibm.icu.impl.PropsVectors$CompactHandler) -> compact
    475:479:int[] getCompactedArray() -> getCompactedArray
    488:492:int getCompactedRows() -> getCompactedRows
    501:505:int getCompactedColumns() -> getCompactedColumns
    513:515:com.ibm.icu.impl.IntTrie compactToTrieWithRowIndexes() -> compactToTrieWithRowIndexes
    36:36:int access$000(com.ibm.icu.impl.PropsVectors) -> a
    36:36:int[] access$100(com.ibm.icu.impl.PropsVectors) -> b
com.ibm.icu.impl.PropsVectors$1 -> com.ibm.icu.impl.au:
    com.ibm.icu.impl.PropsVectors this$0 -> a
    382:382:void <init>(com.ibm.icu.impl.PropsVectors) -> <init>
    384:401:int compare(java.lang.Integer,java.lang.Integer) -> a
    382:382:int compare(java.lang.Object,java.lang.Object) -> compare
com.ibm.icu.impl.PropsVectors$CompactHandler -> com.ibm.icu.impl.PropsVectors$CompactHandler:
    void setRowIndexForRange(int,int,int) -> setRowIndexForRange
    void setRowIndexForInitialValue(int) -> setRowIndexForInitialValue
    void setRowIndexForErrorValue(int) -> setRowIndexForErrorValue
    void startRealValues(int) -> startRealValues
com.ibm.icu.impl.PropsVectors$DefaultGetFoldedValue -> com.ibm.icu.impl.av:
    com.ibm.icu.impl.IntTrieBuilder builder -> a
    531:533:void <init>(com.ibm.icu.impl.IntTrieBuilder) -> <init>
    536:549:int getFoldedValue(int,int) -> getFoldedValue
com.ibm.icu.impl.PropsVectors$DefaultGetFoldingOffset -> com.ibm.icu.impl.aw:
    520:520:void <init>() -> <init>
    522:522:int getFoldingOffset(int) -> getFoldingOffset
    520:520:void <init>(byte) -> <init>
com.ibm.icu.impl.Punycode -> com.ibm.icu.impl.Punycode:
    int[] basicToDigit -> a
    17:17:void <init>() -> <init>
    42:54:int adaptBias(int,int,boolean) -> a
    90:99:char asciiCaseMap(char,boolean) -> a
    111:118:char digitToBasic(int,boolean) -> a
    133:248:java.lang.StringBuilder encode(java.lang.CharSequence,boolean[]) -> encode
    252:252:boolean isBasic(int) -> a
    256:256:boolean isBasicUpperCase(int) -> b
    260:260:boolean isSurrogate(int) -> c
    272:433:java.lang.StringBuilder decode(java.lang.CharSequence,boolean[]) -> decode
    62:62:void <clinit>() -> <clinit>
com.ibm.icu.impl.Relation -> com.ibm.icu.impl.Relation:
    java.util.Map data -> a
    java.lang.reflect.Constructor setCreator -> b
    java.lang.Object[] setComparatorParam -> c
    boolean frozen -> d
    38:38:com.ibm.icu.impl.Relation of(java.util.Map,java.lang.Class) -> of
    42:42:com.ibm.icu.impl.Relation of(java.util.Map,java.lang.Class,java.util.Comparator) -> of
    46:47:void <init>(java.util.Map,java.lang.Class) -> <init>
    50:273:void <init>(java.util.Map,java.lang.Class,java.util.Comparator) -> <init>
    67:68:void clear() -> clear
    71:71:boolean containsKey(java.lang.Object) -> containsKey
    75:80:boolean containsValue(java.lang.Object) -> containsValue
    84:84:java.util.Set entrySet() -> entrySet
    88:88:java.util.Set keyValuesSet() -> keyValuesSet
    92:98:java.util.Set keyValueSet() -> keyValueSet
    102:106:boolean equals(java.lang.Object) -> equals
    117:117:java.util.Set getAll(java.lang.Object) -> getAll
    121:121:java.util.Set get(java.lang.Object) -> get
    125:125:int hashCode() -> hashCode
    129:129:boolean isEmpty() -> isEmpty
    133:133:java.util.Set keySet() -> keySet
    137:142:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    146:151:java.lang.Object putAll(java.lang.Object,java.util.Collection) -> putAll
    155:159:java.lang.Object putAll(java.util.Collection,java.lang.Object) -> putAll
    164:166:java.util.Set newSet() -> a
    171:174:void putAll(java.util.Map) -> putAll
    177:182:void putAll(com.ibm.icu.impl.Relation) -> putAll
    186:188:java.util.Set removeAll(java.lang.Object) -> removeAll
    194:204:boolean remove(java.lang.Object,java.lang.Object) -> remove
    209:209:int size() -> size
    213:213:java.util.Set values() -> values
    217:220:java.util.Collection values(java.util.Collection) -> values
    224:224:java.lang.String toString() -> toString
    258:263:com.ibm.icu.impl.Relation addAllInverted(com.ibm.icu.impl.Relation) -> addAllInverted
    267:270:com.ibm.icu.impl.Relation addAllInverted(java.util.Map) -> addAllInverted
    276:276:boolean isFrozen() -> isFrozen
    280:289:com.ibm.icu.impl.Relation freeze() -> freeze
    294:294:com.ibm.icu.impl.Relation cloneAsThawed() -> cloneAsThawed
    298:309:boolean removeAll(com.ibm.icu.impl.Relation) -> removeAll
    313:313:java.util.Set removeAll(java.lang.Object[]) -> removeAll
    317:321:boolean removeAll(java.lang.Object,java.lang.Iterable) -> removeAll
    325:336:java.util.Set removeAll(java.util.Collection) -> removeAll
    31:31:java.lang.Object cloneAsThawed() -> cloneAsThawed
    31:31:java.lang.Object freeze() -> freeze
com.ibm.icu.impl.Relation$SimpleEntry -> com.ibm.icu.impl.ax:
    java.lang.Object key -> a
    java.lang.Object value -> b
    232:235:void <init>(java.lang.Object,java.lang.Object) -> <init>
    243:243:java.lang.Object getKey() -> getKey
    247:247:java.lang.Object getValue() -> getValue
    251:253:java.lang.Object setValue(java.lang.Object) -> setValue
com.ibm.icu.impl.RelativeDateFormat -> com.ibm.icu.impl.RelativeDateFormat:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.text.MessageFormat fCombinedFormat -> a
    com.ibm.icu.text.SimpleDateFormat fDateTimeFormat -> b
    java.lang.String fDatePattern -> c
    java.lang.String fTimePattern -> d
    int fDateStyle -> e
    int fTimeStyle -> f
    com.ibm.icu.util.ULocale fLocale -> g
    com.ibm.icu.impl.RelativeDateFormat$URelativeString[] fDates -> h
    boolean combinedFormatHasDateAtStart -> i
    boolean capitalizationInfoIsSet -> j
    boolean capitalizationOfRelativeUnitsForListOrMenu -> k
    boolean capitalizationOfRelativeUnitsForStandAlone -> l
    com.ibm.icu.text.BreakIterator capitalizationBrkIter -> m
    59:225:void <init>(int,int,com.ibm.icu.util.ULocale,com.ibm.icu.util.Calendar) -> <init>
    110:178:java.lang.StringBuffer format(com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition) -> format
    185:185:void parse(java.lang.String,com.ibm.icu.util.Calendar,java.text.ParsePosition) -> parse
    194:205:void setContext(com.ibm.icu.text.DisplayContext) -> setContext
    234:242:java.lang.String getStringForDay(int) -> a
    249:274:void loadDates() -> a
    280:291:void initCapitalizationContextInfo(com.ibm.icu.util.ULocale) -> a
    297:302:int dayDifference(com.ibm.icu.util.Calendar) -> a
    313:320:com.ibm.icu.util.Calendar initializeCalendar(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> a
    324:361:com.ibm.icu.text.MessageFormat initializeCombinedFormat(com.ibm.icu.util.Calendar,com.ibm.icu.util.ULocale) -> a
com.ibm.icu.impl.RelativeDateFormat$1 -> com.ibm.icu.impl.ay:
    252:252:void <init>(com.ibm.icu.impl.RelativeDateFormat) -> <init>
    255:260:int compare(com.ibm.icu.impl.RelativeDateFormat$URelativeString,com.ibm.icu.impl.RelativeDateFormat$URelativeString) -> a
    252:252:int compare(java.lang.Object,java.lang.Object) -> compare
com.ibm.icu.impl.RelativeDateFormat$URelativeString -> com.ibm.icu.impl.RelativeDateFormat$URelativeString:
    int offset -> offset
    java.lang.String string -> string
    43:46:void <init>(java.lang.String,java.lang.String) -> <init>
com.ibm.icu.impl.ReplaceableUCharacterIterator -> com.ibm.icu.impl.ReplaceableUCharacterIterator:
    com.ibm.icu.text.Replaceable replaceable -> a
    int currentIndex -> b
    32:38:void <init>(com.ibm.icu.text.Replaceable) -> <init>
    44:50:void <init>(java.lang.String) -> <init>
    56:62:void <init>(java.lang.StringBuffer) -> <init>
    73:75:java.lang.Object clone() -> clone
    84:87:int current() -> current
    99:114:int currentCodePoint() -> currentCodePoint
    122:122:int getLength() -> getLength
    130:130:int getIndex() -> getIndex
    142:145:int next() -> next
    158:161:int previous() -> previous
    175:179:void setIndex(int) -> setIndex
    182:187:int getText(char[],int) -> getText
com.ibm.icu.impl.ResourceBundleWrapper -> com.ibm.icu.impl.ResourceBundleWrapper:
    java.util.ResourceBundle bundle -> a
    java.lang.String localeID -> b
    java.lang.String baseName -> c
    java.util.List keys -> d
    boolean DEBUG -> e
    28:36:void <init>(java.util.ResourceBundle) -> <init>
    40:40:void setLoadingStatus(int) -> setLoadingStatus
    43:60:java.lang.Object handleGetObject(java.lang.String) -> handleGetObject
    64:64:java.util.Enumeration getKeys() -> getKeys
    68:80:void initKeysVector() -> a
    82:82:java.lang.String getLocaleID() -> getLocaleID
    86:86:java.lang.String getBaseName() -> getBaseName
    90:90:com.ibm.icu.util.ULocale getULocale() -> getULocale
    94:94:com.ibm.icu.util.UResourceBundle getParent() -> getParent
    103:111:com.ibm.icu.util.UResourceBundle getBundleInstance(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean) -> getBundleInstance
    116:231:com.ibm.icu.util.UResourceBundle instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean) -> instantiateBundle
    98:98:void <clinit>() -> <clinit>
com.ibm.icu.impl.ResourceBundleWrapper$1 -> com.ibm.icu.impl.az:
    java.lang.ClassLoader val$cl -> a
    java.lang.String val$resName -> b
    169:169:void <init>(java.lang.ClassLoader,java.lang.String) -> <init>
    171:174:java.io.InputStream run() -> a
    169:169:java.lang.Object run() -> run
com.ibm.icu.impl.Row -> com.ibm.icu.impl.Row:
    java.lang.Object[] items -> items
    boolean frozen -> frozen
    15:51:void <init>() -> <init>
    24:24:com.ibm.icu.impl.Row$R2 of(java.lang.Object,java.lang.Object) -> of
    27:27:com.ibm.icu.impl.Row$R3 of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    30:30:com.ibm.icu.impl.Row$R4 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    33:33:com.ibm.icu.impl.Row$R5 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    58:58:com.ibm.icu.impl.Row set0(java.lang.Object) -> set0
    61:61:java.lang.Object get0() -> get0
    64:64:com.ibm.icu.impl.Row set1(java.lang.Object) -> set1
    67:67:java.lang.Object get1() -> get1
    70:70:com.ibm.icu.impl.Row set2(java.lang.Object) -> set2
    73:73:java.lang.Object get2() -> get2
    76:76:com.ibm.icu.impl.Row set3(java.lang.Object) -> set3
    79:79:java.lang.Object get3() -> get3
    82:82:com.ibm.icu.impl.Row set4(java.lang.Object) -> set4
    85:85:java.lang.Object get4() -> get4
    89:93:com.ibm.icu.impl.Row set(int,java.lang.Object) -> set
    97:101:int hashCode() -> hashCode
    105:124:boolean equals(java.lang.Object) -> equals
    130:142:int compareTo(java.lang.Object) -> compareTo
    146:156:java.lang.String toString() -> toString
    160:160:boolean isFrozen() -> isFrozen
    164:165:com.ibm.icu.impl.Row freeze() -> freeze
    169:175:java.lang.Object clone() -> clone
    181:186:com.ibm.icu.impl.Row cloneAsThawed() -> cloneAsThawed
    14:14:java.lang.Object cloneAsThawed() -> cloneAsThawed
    14:14:java.lang.Object freeze() -> freeze
com.ibm.icu.impl.Row$R2 -> com.ibm.icu.impl.Row$R2:
    37:39:void <init>(java.lang.Object,java.lang.Object) -> <init>
    36:36:java.lang.Object cloneAsThawed() -> cloneAsThawed
    36:36:java.lang.Object freeze() -> freeze
com.ibm.icu.impl.Row$R3 -> com.ibm.icu.impl.Row$R3:
    42:44:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    41:41:java.lang.Object cloneAsThawed() -> cloneAsThawed
    41:41:java.lang.Object freeze() -> freeze
com.ibm.icu.impl.Row$R4 -> com.ibm.icu.impl.Row$R4:
    47:49:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    46:46:java.lang.Object cloneAsThawed() -> cloneAsThawed
    46:46:java.lang.Object freeze() -> freeze
com.ibm.icu.impl.Row$R5 -> com.ibm.icu.impl.Row$R5:
    52:54:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    51:51:java.lang.Object cloneAsThawed() -> cloneAsThawed
    51:51:java.lang.Object freeze() -> freeze
com.ibm.icu.impl.RuleCharacterIterator -> com.ibm.icu.impl.RuleCharacterIterator:
    java.lang.String text -> a
    java.text.ParsePosition pos -> b
    com.ibm.icu.text.SymbolTable sym -> c
    char[] buf -> d
    int bufPos -> e
    boolean isEscaped -> f
    int DONE -> DONE
    int PARSE_VARIABLES -> PARSE_VARIABLES
    int PARSE_ESCAPES -> PARSE_ESCAPES
    int SKIP_WHITESPACE -> SKIP_WHITESPACE
    103:111:void <init>(java.lang.String,com.ibm.icu.text.SymbolTable,java.text.ParsePosition) -> <init>
    117:117:boolean atEnd() -> atEnd
    129:175:int next(int) -> next
    185:185:boolean isEscaped() -> isEscaped
    192:192:boolean inVariable() -> inVariable
    215:223:java.lang.Object getPos(java.lang.Object) -> getPos
    232:237:void setPos(java.lang.Object) -> setPos
    248:255:void skipIgnored(int) -> skipIgnored
    270:273:java.lang.String lookahead() -> lookahead
    283:301:void jumpahead(int) -> jumpahead
    310:311:java.lang.String toString() -> toString
    320:324:int _current() -> a
    333:344:void _advance(int) -> a
com.ibm.icu.impl.SimpleCache -> com.ibm.icu.impl.SimpleCache:
    java.lang.ref.Reference cacheRef -> a
    int type -> b
    int capacity -> c
    20:25:void <init>() -> <init>
    28:29:void <init>(int) -> <init>
    20:38:void <init>(int,int) -> <init>
    41:48:java.lang.Object get(java.lang.Object) -> get
    52:67:void put(java.lang.Object,java.lang.Object) -> put
    70:71:void clear() -> clear
com.ibm.icu.impl.SimpleFilteredSentenceBreakIterator -> com.ibm.icu.impl.SimpleFilteredSentenceBreakIterator:
    com.ibm.icu.text.BreakIterator delegate -> a
    com.ibm.icu.text.UCharacterIterator text -> b
    com.ibm.icu.util.CharsTrie backwardsTrie -> c
    com.ibm.icu.util.CharsTrie forwardsPartialTrie -> d
    41:45:void <init>(com.ibm.icu.text.BreakIterator,com.ibm.icu.util.CharsTrie,com.ibm.icu.util.CharsTrie) -> <init>
    49:122:int next() -> next
    127:134:boolean equals(java.lang.Object) -> equals
    140:140:int hashCode() -> hashCode
    145:146:java.lang.Object clone() -> clone
    151:151:int first() -> first
    156:156:int last() -> last
    162:162:int next(int) -> next
    168:168:int previous() -> previous
    174:174:int following(int) -> following
    179:179:int current() -> current
    185:185:int preceding(int) -> preceding
    190:190:java.text.CharacterIterator getText() -> getText
    195:196:void setText(java.text.CharacterIterator) -> setText
com.ibm.icu.impl.SimpleFilteredSentenceBreakIterator$Builder -> com.ibm.icu.impl.SimpleFilteredSentenceBreakIterator$Builder:
    java.util.HashSet filterSet -> a
    213:227:void <init>(com.ibm.icu.util.ULocale) -> <init>
    232:234:void <init>() -> <init>
    238:241:boolean suppressBreakAfter(java.lang.String) -> suppressBreakAfter
    246:249:boolean unsuppressBreakAfter(java.lang.String) -> unsuppressBreakAfter
    255:327:com.ibm.icu.text.BreakIterator build(com.ibm.icu.text.BreakIterator) -> build
com.ibm.icu.impl.SimplePatternFormatter -> com.ibm.icu.impl.SimplePatternFormatter:
    java.lang.String patternWithoutPlaceholders -> a
    int placeholderCount -> b
    int[] placeholderIdsOrderedByOffset -> c
    boolean firstPlaceholderReused -> d
    44:50:void <init>(java.lang.String,com.ibm.icu.impl.SimplePatternFormatter$PlaceholdersBuilder) -> <init>
    58:116:com.ibm.icu.impl.SimplePatternFormatter compile(java.lang.String) -> compile
    124:124:int getPlaceholderCount() -> getPlaceholderCount
    131:131:java.lang.String format(java.lang.CharSequence[]) -> format
    150:158:java.lang.StringBuilder formatAndAppend(java.lang.StringBuilder,int[],java.lang.CharSequence[]) -> formatAndAppend
    177:210:java.lang.StringBuilder formatAndReplace(java.lang.StringBuilder,int[],java.lang.CharSequence[]) -> formatAndReplace
    219:223:java.lang.String toString() -> toString
    230:230:java.lang.String getPatternWithNoPlaceholders() -> getPatternWithNoPlaceholders
    243:283:int formatReturningOffsetLength(java.lang.StringBuilder,int[],com.ibm.icu.impl.SimplePatternFormatter$PlaceholderValues) -> a
    293:297:int getUniquePlaceholderAtStart() -> a
    302:305:void setPlaceholderOffset(int,int,int[],int) -> a
com.ibm.icu.impl.SimplePatternFormatter$1 -> com.ibm.icu.impl.aA:
    int[] $SwitchMap$com$ibm$icu$impl$SimplePatternFormatter$State -> a
    64:64:void <clinit>() -> <clinit>
com.ibm.icu.impl.SimplePatternFormatter$PlaceholderIdBuilder -> com.ibm.icu.impl.aB:
    int id -> a
    int idLen -> b
    313:315:void <init>() -> <init>
    318:320:void reset() -> a
    323:323:int getId() -> b
    327:330:void appendTo(java.lang.StringBuilder) -> a
    333:333:boolean isValid() -> c
    337:339:void add(char) -> a
    313:313:void <init>(byte) -> <init>
com.ibm.icu.impl.SimplePatternFormatter$PlaceholderValues -> com.ibm.icu.impl.aC:
    java.lang.CharSequence[] values -> a
    java.lang.CharSequence appendTo -> b
    java.lang.String appendToCopy -> c
    386:390:void <init>(java.lang.CharSequence[]) -> <init>
    396:401:boolean isAppendToInAnyIndexExcept(java.lang.CharSequence,int) -> a
    408:410:void snapshotAppendTo(java.lang.CharSequence) -> a
    416:419:java.lang.CharSequence get(int) -> a
com.ibm.icu.impl.SimplePatternFormatter$PlaceholdersBuilder -> com.ibm.icu.impl.aD:
    java.util.List placeholderIdsOrderedByOffset -> a
    int placeholderCount -> b
    boolean firstPlaceholderReused -> c
    342:345:void <init>() -> <init>
    348:359:void add(int,int) -> a
    362:362:int getPlaceholderCount() -> a
    366:370:int[] getPlaceholderIdsOrderedByOffset() -> b
    374:374:boolean getFirstPlaceholderReused() -> c
    342:342:void <init>(byte) -> <init>
com.ibm.icu.impl.SimplePatternFormatter$State -> com.ibm.icu.impl.aE:
    int INIT$582692a4 -> a
    int APOSTROPHE$582692a4 -> b
    int PLACEHOLDER$582692a4 -> c
    int[] $VALUES$32e0f7a1 -> d
    307:307:int[] values$1d93695e() -> a
    307:310:void <clinit>() -> <clinit>
com.ibm.icu.impl.SoftCache -> com.ibm.icu.impl.SoftCache:
    java.util.concurrent.ConcurrentHashMap map -> a
    29:103:void <init>() -> <init>
    39:70:java.lang.Object getInstance(java.lang.Object,java.lang.Object) -> getInstance
com.ibm.icu.impl.SoftCache$SettableSoftReference -> com.ibm.icu.impl.aF:
    java.lang.ref.SoftReference ref -> a
    82:84:void <init>(java.lang.Object) -> <init>
    93:98:java.lang.Object setIfAbsent(java.lang.Object) -> a
    81:81:java.lang.ref.SoftReference access$000(com.ibm.icu.impl.SoftCache$SettableSoftReference) -> a
    81:81:java.lang.ref.SoftReference access$002(com.ibm.icu.impl.SoftCache$SettableSoftReference,java.lang.ref.SoftReference) -> a
    81:81:void <init>(java.lang.Object,byte) -> <init>
    81:81:java.lang.Object access$200(com.ibm.icu.impl.SoftCache$SettableSoftReference,java.lang.Object) -> a
com.ibm.icu.impl.SortedSetRelation -> com.ibm.icu.impl.SortedSetRelation:
    int A_NOT_B -> A_NOT_B
    int A_AND_B -> A_AND_B
    int B_NOT_A -> B_NOT_A
    int ANY -> ANY
    int CONTAINS -> CONTAINS
    int DISJOINT -> DISJOINT
    int ISCONTAINED -> ISCONTAINED
    int NO_B -> NO_B
    int EQUALS -> EQUALS
    int NO_A -> NO_A
    int NONE -> NONE
    int ADDALL -> ADDALL
    int A -> A
    int COMPLEMENTALL -> COMPLEMENTALL
    int B -> B
    int REMOVEALL -> REMOVEALL
    int RETAINALL -> RETAINALL
    int B_REMOVEALL -> B_REMOVEALL
    21:21:void <init>() -> <init>
    71:129:boolean hasRelation(java.util.SortedSet,int,java.util.SortedSet) -> hasRelation
    143:177:java.util.SortedSet doOperation(java.util.SortedSet,int,java.util.SortedSet) -> doOperation
com.ibm.icu.impl.StringPrepDataReader -> com.ibm.icu.impl.StringPrepDataReader:
    boolean debug -> a
    java.nio.ByteBuffer byteBuffer -> b
    int unicodeVersion -> c
    byte[] DATA_FORMAT_VERSION -> d
    34:41:void <init>(java.nio.ByteBuffer) -> <init>
    45:45:char[] read(int) -> read
    49:49:byte[] getDataFormatVersion() -> getDataFormatVersion
    53:53:boolean isDataVersionAcceptable(byte[]) -> isDataVersionAcceptable
    58:63:int[] readIndexes(int) -> readIndexes
    67:67:byte[] getUnicodeVersion() -> getUnicodeVersion
    26:84:void <clinit>() -> <clinit>
com.ibm.icu.impl.StringRange -> com.ibm.icu.impl.StringRange:
    java.util.Comparator COMPARE_INT_ARRAYS -> COMPARE_INT_ARRAYS
    22:159:void <init>() -> <init>
    54:100:void compact(java.util.Set,com.ibm.icu.impl.StringRange$Adder,boolean,boolean) -> compact
    109:110:void compact(java.util.Set,com.ibm.icu.impl.StringRange$Adder,boolean) -> compact
    113:127:java.util.LinkedList compact(int,java.util.Set) -> a
    238:258:java.util.Collection expand(java.lang.String,java.lang.String,boolean,java.util.Collection) -> expand
    262:278:void add(int,int,int[],int[],java.lang.StringBuilder,java.util.Collection) -> a
    33:33:void <clinit>() -> <clinit>
com.ibm.icu.impl.StringRange$1 -> com.ibm.icu.impl.aG:
    33:33:void <init>() -> <init>
    35:42:int compare(int[],int[]) -> a
    33:33:int compare(java.lang.Object,java.lang.Object) -> compare
com.ibm.icu.impl.StringRange$Adder -> com.ibm.icu.impl.StringRange$Adder:
    void add(java.lang.String,java.lang.String) -> add
com.ibm.icu.impl.StringRange$Range -> com.ibm.icu.impl.aH:
    int min -> a
    int max -> b
    133:136:void <init>(int,int) -> <init>
    139:139:boolean equals(java.lang.Object) -> equals
    142:146:int compareTo(com.ibm.icu.impl.StringRange$Range) -> a
    150:150:int hashCode() -> hashCode
    154:155:java.lang.String toString() -> toString
    130:130:int compareTo(java.lang.Object) -> compareTo
com.ibm.icu.impl.StringRange$Ranges -> com.ibm.icu.impl.aI:
    com.ibm.icu.impl.StringRange$Range[] ranges -> a
    161:167:void <init>(java.lang.String) -> <init>
    170:184:boolean merge(int,com.ibm.icu.impl.StringRange$Ranges) -> a
    188:192:java.lang.String start() -> a
    195:203:java.lang.String end(boolean) -> a
    206:211:int firstDifference() -> c
    214:214:java.lang.Integer size() -> b
    217:227:int compareTo(com.ibm.icu.impl.StringRange$Ranges) -> a
    231:233:java.lang.String toString() -> toString
    159:159:int compareTo(java.lang.Object) -> compareTo
com.ibm.icu.impl.StringUCharacterIterator -> com.ibm.icu.impl.StringUCharacterIterator:
    java.lang.String m_text_ -> a
    int m_currentIndex_ -> b
    28:34:void <init>(java.lang.String) -> <init>
    40:43:void <init>() -> <init>
    56:58:java.lang.Object clone() -> clone
    68:71:int current() -> current
    81:81:int getLength() -> getLength
    90:90:int getIndex() -> getIndex
    104:108:int next() -> next
    122:125:int previous() -> previous
    138:142:void setIndex(int) -> setIndex
    181:186:int getText(char[],int) -> getText
    196:196:java.lang.String getText() -> getText
    208:213:void setText(java.lang.String) -> setText
com.ibm.icu.impl.TZDBTimeZoneNames -> com.ibm.icu.impl.TZDBTimeZoneNames:
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.ConcurrentHashMap TZDB_NAMES_MAP -> a
    com.ibm.icu.impl.TextTrieMap TZDB_NAMES_TRIE -> b
    com.ibm.icu.impl.ICUResourceBundle ZONESTRINGS -> c
    com.ibm.icu.util.ULocale _locale -> d
    java.lang.String _region -> e
    56:58:void <init>(com.ibm.icu.util.ULocale) -> <init>
    65:65:java.util.Set getAvailableMetaZoneIDs() -> getAvailableMetaZoneIDs
    73:73:java.util.Set getAvailableMetaZoneIDs(java.lang.String) -> getAvailableMetaZoneIDs
    81:81:java.lang.String getMetaZoneID(java.lang.String,long) -> getMetaZoneID
    89:89:java.lang.String getReferenceZoneID(java.lang.String,java.lang.String) -> getReferenceZoneID
    98:102:java.lang.String getMetaZoneDisplayName(java.lang.String,com.ibm.icu.text.TimeZoneNames$NameType) -> getMetaZoneDisplayName
    112:112:java.lang.String getTimeZoneDisplayName(java.lang.String,com.ibm.icu.text.TimeZoneNames$NameType) -> getTimeZoneDisplayName
    127:134:java.util.Collection find(java.lang.CharSequence,int,java.util.EnumSet) -> find
    326:333:com.ibm.icu.impl.TZDBTimeZoneNames$TZDBNames getMetaZoneNames(java.lang.String) -> a
    337:381:void prepareFind() -> a
    384:395:java.lang.String getTargetRegion() -> b
    41:51:void <clinit>() -> <clinit>
com.ibm.icu.impl.TZDBTimeZoneNames$1 -> com.ibm.icu.impl.aJ:
    int[] $SwitchMap$com$ibm$icu$text$TimeZoneNames$NameType -> a
    197:197:void <clinit>() -> <clinit>
com.ibm.icu.impl.TZDBTimeZoneNames$TZDBNameInfo -> com.ibm.icu.impl.aK:
    java.lang.String mzID -> a
    com.ibm.icu.text.TimeZoneNames$NameType type -> b
    boolean ambiguousType -> c
    java.lang.String[] parseRegions -> d
    214:214:void <init>() -> <init>
    214:214:void <init>(byte) -> <init>
com.ibm.icu.impl.TZDBTimeZoneNames$TZDBNameSearchHandler -> com.ibm.icu.impl.aL:
    java.util.EnumSet _nameTypes -> a
    java.util.Collection _matches -> b
    java.lang.String _region -> c
    boolean $assertionsDisabled -> d
    226:230:void <init>(java.util.EnumSet,java.lang.String) -> <init>
    237:310:boolean handlePrefixMatch(int,java.util.Iterator) -> handlePrefixMatch
    318:321:java.util.Collection getMatches() -> a
    221:221:void <clinit>() -> <clinit>
com.ibm.icu.impl.TZDBTimeZoneNames$TZDBNames -> com.ibm.icu.impl.aM:
    com.ibm.icu.impl.TZDBTimeZoneNames$TZDBNames EMPTY_TZDBNAMES -> a
    java.lang.String[] _names -> b
    java.lang.String[] _parseRegions -> c
    java.lang.String[] KEYS -> d
    144:147:void <init>(java.lang.String[],java.lang.String[]) -> <init>
    150:189:com.ibm.icu.impl.TZDBTimeZoneNames$TZDBNames getInstance(com.ibm.icu.impl.ICUResourceBundle,java.lang.String) -> a
    193:206:java.lang.String getName(com.ibm.icu.text.TimeZoneNames$NameType) -> a
    210:210:java.lang.String[] getParseRegions() -> a
    138:142:void <clinit>() -> <clinit>
com.ibm.icu.impl.TextTrieMap -> com.ibm.icu.impl.TextTrieMap:
    com.ibm.icu.impl.TextTrieMap$Node _root -> a
    boolean _ignoreCase -> b
    22:32:void <init>(boolean) -> <init>
    41:43:com.ibm.icu.impl.TextTrieMap put(java.lang.CharSequence,java.lang.Object) -> put
    56:56:java.util.Iterator get(java.lang.String) -> get
    71:71:java.util.Iterator get(java.lang.CharSequence,int) -> get
    75:80:java.util.Iterator get(java.lang.CharSequence,int,int[]) -> get
    84:85:void find(java.lang.CharSequence,com.ibm.icu.impl.TextTrieMap$ResultHandler) -> find
    88:90:void find(java.lang.CharSequence,int,com.ibm.icu.impl.TextTrieMap$ResultHandler) -> find
    93:104:void find(com.ibm.icu.impl.TextTrieMap$Node,com.ibm.icu.impl.TextTrieMap$CharIterator,com.ibm.icu.impl.TextTrieMap$ResultHandler) -> a
    361:365:char[] toCharArray(java.lang.CharSequence) -> b
    369:374:char[] subArray(char[],int) -> b
    378:383:char[] subArray(char[],int,int) -> b
    20:20:char[] access$200(java.lang.CharSequence) -> a
    20:20:char[] access$300(char[],int) -> a
    20:20:char[] access$400(char[],int,int) -> a
com.ibm.icu.impl.TextTrieMap$CharIterator -> com.ibm.icu.impl.TextTrieMap$CharIterator:
    boolean _ignoreCase -> a
    java.lang.CharSequence _text -> b
    int _nextIdx -> c
    int _startIdx -> d
    java.lang.Character _remainingChar -> e
    114:118:void <init>(java.lang.CharSequence,int,boolean) -> <init>
    124:127:boolean hasNext() -> hasNext
    134:156:java.lang.Character next() -> next
    163:163:void remove() -> remove
    167:167:int nextIndex() -> nextIndex
    171:174:int processedLength() -> processedLength
    106:106:java.lang.Object next() -> next
com.ibm.icu.impl.TextTrieMap$LongestMatchHandler -> com.ibm.icu.impl.aN:
    java.util.Iterator matches -> a
    int length -> b
    193:195:void <init>() -> <init>
    198:202:boolean handlePrefixMatch(int,java.util.Iterator) -> handlePrefixMatch
    206:206:java.util.Iterator getMatches() -> a
    210:210:int getMatchLength() -> b
    193:193:void <init>(byte) -> <init>
com.ibm.icu.impl.TextTrieMap$Node -> com.ibm.icu.impl.aO:
    char[] _text -> a
    java.util.List _values -> b
    java.util.List _children -> c
    com.ibm.icu.impl.TextTrieMap this$0 -> d
    222:223:void <init>(com.ibm.icu.impl.TextTrieMap) -> <init>
    225:229:void <init>(com.ibm.icu.impl.TextTrieMap,char[],java.util.List,java.util.List) -> <init>
    232:235:java.util.Iterator values() -> a
    239:244:void add(com.ibm.icu.impl.TextTrieMap$CharIterator,java.lang.Object) -> a
    247:266:com.ibm.icu.impl.TextTrieMap$Node findMatch(com.ibm.icu.impl.TextTrieMap$CharIterator) -> a
    270:305:void add(char[],int,java.lang.Object) -> a
    308:322:boolean matchFollowing(com.ibm.icu.impl.TextTrieMap$CharIterator) -> b
    326:335:int lenMatches(char[],int) -> a
    340:349:void split(int) -> a
    352:356:java.util.List addValue(java.util.List,java.lang.Object) -> a
    217:217:void <init>(com.ibm.icu.impl.TextTrieMap,byte) -> <init>
com.ibm.icu.impl.TextTrieMap$ResultHandler -> com.ibm.icu.impl.TextTrieMap$ResultHandler:
    boolean handlePrefixMatch(int,java.util.Iterator) -> handlePrefixMatch
com.ibm.icu.impl.TimeZoneAdapter -> com.ibm.icu.impl.TimeZoneAdapter:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.util.TimeZone zone -> a
    46:46:java.util.TimeZone wrap(com.ibm.icu.util.TimeZone) -> wrap
    53:53:com.ibm.icu.util.TimeZone unwrap() -> unwrap
    59:62:void <init>(com.ibm.icu.util.TimeZone) -> <init>
    68:70:void setID(java.lang.String) -> setID
    76:76:boolean hasSameRules(java.util.TimeZone) -> hasSameRules
    85:85:int getOffset(int,int,int,int,int,int) -> getOffset
    92:92:int getRawOffset() -> getRawOffset
    99:100:void setRawOffset(int) -> setRawOffset
    106:106:boolean useDaylightTime() -> useDaylightTime
    113:113:boolean inDaylightTime(java.util.Date) -> inDaylightTime
    120:120:java.lang.Object clone() -> clone
    127:127:int hashCode() -> hashCode
    134:137:boolean equals(java.lang.Object) -> equals
    145:145:java.lang.String toString() -> toString
com.ibm.icu.impl.TimeZoneGenericNames -> com.ibm.icu.impl.TimeZoneGenericNames:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.util.ULocale _locale -> a
    com.ibm.icu.text.TimeZoneNames _tznames -> b
    boolean _frozen -> c
    java.lang.String _region -> d
    java.lang.ref.WeakReference _localeDisplayNamesRef -> e
    java.text.MessageFormat[] _patternFormatters -> f
    java.util.concurrent.ConcurrentHashMap _genericLocationNamesMap -> g
    java.util.concurrent.ConcurrentHashMap _genericPartialLocationNamesMap -> h
    com.ibm.icu.impl.TextTrieMap _gnamesTrie -> i
    boolean _gnamesTrieFullyLoaded -> j
    com.ibm.icu.impl.TimeZoneGenericNames$Cache GENERIC_NAMES_CACHE -> k
    com.ibm.icu.text.TimeZoneNames$NameType[] GENERIC_NON_LOCATION_TYPES -> l
    boolean $assertionsDisabled -> m
    135:139:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.TimeZoneNames) -> <init>
    146:161:void init() -> a
    169:170:void <init>(com.ibm.icu.util.ULocale) -> <init>
    179:180:com.ibm.icu.impl.TimeZoneGenericNames getInstance(com.ibm.icu.util.ULocale) -> getInstance
    194:214:java.lang.String getDisplayName(com.ibm.icu.util.TimeZone,com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType,long) -> getDisplayName
    224:271:java.lang.String getGenericLocationName(java.lang.String) -> getGenericLocationName
    282:300:com.ibm.icu.impl.TimeZoneGenericNames setFormatPattern(com.ibm.icu.impl.TimeZoneGenericNames$Pattern,java.lang.String) -> setFormatPattern
    325:429:java.lang.String formatGenericNonLocationName(com.ibm.icu.util.TimeZone,com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType,long) -> a
    442:459:java.lang.String formatPattern(com.ibm.icu.impl.TimeZoneGenericNames$Pattern,java.lang.String[]) -> a
    471:479:com.ibm.icu.text.LocaleDisplayNames getLocaleDisplayNames() -> b
    483:506:void loadStrings(java.lang.String) -> a
    517:527:java.lang.String getTargetRegion() -> c
    542:581:java.lang.String getPartialLocationName(java.lang.String,java.lang.String,boolean,java.lang.String) -> a
    691:745:com.ibm.icu.impl.TimeZoneGenericNames$GenericMatchInfo findBestMatch(java.lang.String,int,java.util.EnumSet) -> findBestMatch
    757:774:java.util.Collection find(java.lang.String,int,java.util.EnumSet) -> find
    783:818:com.ibm.icu.impl.TimeZoneGenericNames$GenericMatchInfo createGenericMatchInfo(com.ibm.icu.text.TimeZoneNames$MatchInfo) -> a
    831:848:java.util.Collection findTimeZoneNames(java.lang.String,int,java.util.EnumSet) -> a
    862:881:java.util.Collection findLocal(java.lang.String,int,java.util.EnumSet) -> b
    904:906:void readObject(java.io.ObjectInputStream) -> readObject
    912:912:boolean isFrozen() -> isFrozen
    919:920:com.ibm.icu.impl.TimeZoneGenericNames freeze() -> freeze
    927:934:com.ibm.icu.impl.TimeZoneGenericNames cloneAsThawed() -> cloneAsThawed
    42:42:java.lang.Object cloneAsThawed() -> cloneAsThawed
    42:42:java.lang.Object freeze() -> freeze
    42:42:void <init>(com.ibm.icu.util.ULocale,byte) -> <init>
    42:125:void <clinit>() -> <clinit>
com.ibm.icu.impl.TimeZoneGenericNames$1 -> com.ibm.icu.impl.aP:
    int[] $SwitchMap$com$ibm$icu$impl$TimeZoneGenericNames$GenericNameType -> a
    int[] $SwitchMap$com$ibm$icu$text$TimeZoneNames$NameType -> b
    196:785:void <clinit>() -> <clinit>
com.ibm.icu.impl.TimeZoneGenericNames$Cache -> com.ibm.icu.impl.aQ:
    887:887:void <init>() -> <init>
    894:894:com.ibm.icu.impl.TimeZoneGenericNames createInstance$553e4f7c(com.ibm.icu.util.ULocale) -> a
    887:887:java.lang.Object createInstance(java.lang.Object,java.lang.Object) -> createInstance
    887:887:void <init>(byte) -> <init>
com.ibm.icu.impl.TimeZoneGenericNames$GenericMatchInfo -> com.ibm.icu.impl.TimeZoneGenericNames$GenericMatchInfo:
    com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType nameType -> a
    java.lang.String tzID -> b
    int matchLength -> c
    com.ibm.icu.text.TimeZoneFormat$TimeType timeType -> d
    596:600:void <init>() -> <init>
    603:603:com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType nameType() -> nameType
    607:607:java.lang.String tzID() -> tzID
    611:611:com.ibm.icu.text.TimeZoneFormat$TimeType timeType() -> timeType
    615:615:int matchLength() -> matchLength
com.ibm.icu.impl.TimeZoneGenericNames$GenericNameSearchHandler -> com.ibm.icu.impl.aR:
    java.util.EnumSet _types -> a
    java.util.Collection _matches -> b
    int _maxMatchLen -> c
    628:630:void <init>(java.util.EnumSet) -> <init>
    636:654:boolean handlePrefixMatch(int,java.util.Iterator) -> handlePrefixMatch
    662:662:java.util.Collection getMatches() -> a
    670:670:int getMaxMatchLen() -> b
    677:679:void resetResults() -> c
com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType -> com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType:
    com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType LOCATION -> LOCATION
    com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType LONG -> LONG
    com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType SHORT -> SHORT
    java.lang.String[] _fallbackTypeOf -> a
    com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType[] $VALUES -> b
    55:55:com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType[] values() -> values
    55:55:com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType valueOf(java.lang.String) -> valueOf
    61:63:void <init>(java.lang.String,int,java.lang.String[]) -> <init>
    66:72:boolean isFallbackTypeOf(com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType) -> isFallbackTypeOf
    55:58:void <clinit>() -> <clinit>
com.ibm.icu.impl.TimeZoneGenericNames$NameInfo -> com.ibm.icu.impl.aS:
    java.lang.String tzID -> a
    com.ibm.icu.impl.TimeZoneGenericNames$GenericNameType type -> b
    587:587:void <init>() -> <init>
    587:587:void <init>(byte) -> <init>
com.ibm.icu.impl.TimeZoneGenericNames$Pattern -> com.ibm.icu.impl.TimeZoneGenericNames$Pattern:
    com.ibm.icu.impl.TimeZoneGenericNames$Pattern REGION_FORMAT -> REGION_FORMAT
    com.ibm.icu.impl.TimeZoneGenericNames$Pattern FALLBACK_FORMAT -> FALLBACK_FORMAT
    java.lang.String _key -> a
    java.lang.String _defaultVal -> b
    com.ibm.icu.impl.TimeZoneGenericNames$Pattern[] $VALUES -> c
    79:79:com.ibm.icu.impl.TimeZoneGenericNames$Pattern[] values() -> values
    79:79:com.ibm.icu.impl.TimeZoneGenericNames$Pattern valueOf(java.lang.String) -> valueOf
    93:96:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    99:99:java.lang.String key() -> a
    103:103:java.lang.String defaultValue() -> b
    79:88:void <clinit>() -> <clinit>
com.ibm.icu.impl.TimeZoneNamesFactoryImpl -> com.ibm.icu.impl.TimeZoneNamesFactoryImpl:
    16:16:void <init>() -> <init>
    23:23:com.ibm.icu.text.TimeZoneNames getTimeZoneNames(com.ibm.icu.util.ULocale) -> getTimeZoneNames
com.ibm.icu.impl.TimeZoneNamesImpl -> com.ibm.icu.impl.TimeZoneNamesImpl:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.text.TimeZoneNames$NameType[] NAME_TYPE_VALUES -> a
    java.util.Set METAZONE_IDS -> b
    com.ibm.icu.impl.TimeZoneNamesImpl$TZ2MZsCache TZ_TO_MZS_CACHE -> c
    com.ibm.icu.impl.TimeZoneNamesImpl$MZ2TZsCache MZ_TO_TZS_CACHE -> d
    com.ibm.icu.impl.ICUResourceBundle _zoneStrings -> e
    java.util.concurrent.ConcurrentHashMap _mzNamesMap -> f
    java.util.concurrent.ConcurrentHashMap _tzNamesMap -> g
    boolean _namesFullyLoaded -> h
    com.ibm.icu.impl.TextTrieMap _namesTrie -> i
    boolean _namesTrieFullyLoaded -> j
    java.util.regex.Pattern LOC_EXCLUSION_PATTERN -> k
    63:65:void <init>(com.ibm.icu.util.ULocale) -> <init>
    72:72:java.util.Set getAvailableMetaZoneIDs() -> getAvailableMetaZoneIDs
    76:86:java.util.Set _getAvailableMetaZoneIDs() -> a
    94:94:java.util.Set getAvailableMetaZoneIDs(java.lang.String) -> getAvailableMetaZoneIDs
    98:110:java.util.Set _getAvailableMetaZoneIDs(java.lang.String) -> a
    118:118:java.lang.String getMetaZoneID(java.lang.String,long) -> getMetaZoneID
    122:133:java.lang.String _getMetaZoneID(java.lang.String,long) -> a
    141:141:java.lang.String getReferenceZoneID(java.lang.String,java.lang.String) -> getReferenceZoneID
    145:156:java.lang.String _getReferenceZoneID(java.lang.String,java.lang.String) -> a
    165:168:java.lang.String getMetaZoneDisplayName(java.lang.String,com.ibm.icu.text.TimeZoneNames$NameType) -> getMetaZoneDisplayName
    177:180:java.lang.String getTimeZoneDisplayName(java.lang.String,com.ibm.icu.text.TimeZoneNames$NameType) -> getTimeZoneDisplayName
    188:192:java.lang.String getExemplarLocationName(java.lang.String) -> getExemplarLocationName
    200:242:java.util.Collection find(java.lang.CharSequence,int,java.util.EnumSet) -> find
    247:248:void loadAllDisplayNames() -> loadAllDisplayNames
    253:274:void getDisplayNames(java.lang.String,com.ibm.icu.text.TimeZoneNames$NameType[],long,java.lang.String[],int) -> getDisplayNames
    278:282:void internalLoadAllDisplayNames() -> d
    286:292:void addAllNamesIntoTrie() -> e
    397:415:void initialize(com.ibm.icu.util.ULocale) -> a
    424:435:void loadStrings(java.lang.String) -> b
    442:444:void writeObject(java.io.ObjectOutputStream) -> writeObject
    451:453:void readObject(java.io.ObjectInputStream) -> readObject
    462:474:com.ibm.icu.impl.TimeZoneNamesImpl$ZNames loadMetaZoneNames(com.ibm.icu.impl.TimeZoneNamesImpl$ZNamesLoader,java.lang.String) -> a
    484:496:com.ibm.icu.impl.TimeZoneNamesImpl$ZNames loadTimeZoneNames(com.ibm.icu.impl.TimeZoneNamesImpl$ZNamesLoader,java.lang.String) -> b
    933:943:java.lang.String getDefaultExemplarLocationName(java.lang.String) -> getDefaultExemplarLocationName
    38:38:com.ibm.icu.impl.ICUResourceBundle access$400(com.ibm.icu.impl.TimeZoneNamesImpl) -> a
    38:38:java.util.concurrent.ConcurrentHashMap access$700(com.ibm.icu.impl.TimeZoneNamesImpl) -> b
    38:38:java.util.concurrent.ConcurrentHashMap access$800(com.ibm.icu.impl.TimeZoneNamesImpl) -> c
    38:38:com.ibm.icu.text.TimeZoneNames$NameType[] access$1000() -> b
    44:925:void <clinit>() -> <clinit>
com.ibm.icu.impl.TimeZoneNamesImpl$MZ2TZsCache -> com.ibm.icu.impl.aT:
    896:896:void <init>() -> <init>
    903:921:java.util.Map createInstance$6891487e(java.lang.String) -> a
    896:896:java.lang.Object createInstance(java.lang.Object,java.lang.Object) -> createInstance
    896:896:void <init>(byte) -> <init>
com.ibm.icu.impl.TimeZoneNamesImpl$MZMapEntry -> com.ibm.icu.impl.aU:
    java.lang.String _mzID -> a
    long _from -> b
    long _to -> c
    771:775:void <init>(java.lang.String,long,long) -> <init>
    778:778:java.lang.String mzID() -> a
    782:782:long from() -> b
    786:786:long to() -> c
com.ibm.icu.impl.TimeZoneNamesImpl$NameInfo -> com.ibm.icu.impl.aV:
    java.lang.String tzID -> a
    java.lang.String mzID -> b
    com.ibm.icu.text.TimeZoneNames$NameType type -> c
    502:502:void <init>() -> <init>
    502:502:void <init>(byte) -> <init>
com.ibm.icu.impl.TimeZoneNamesImpl$NameSearchHandler -> com.ibm.icu.impl.aW:
    java.util.EnumSet _nameTypes -> a
    java.util.Collection _matches -> b
    int _maxMatchLen -> c
    boolean $assertionsDisabled -> d
    516:518:void <init>(java.util.EnumSet) -> <init>
    524:544:boolean handlePrefixMatch(int,java.util.Iterator) -> handlePrefixMatch
    552:555:java.util.Collection getMatches() -> a
    563:563:int getMaxMatchLen() -> b
    570:572:void resetResults() -> c
    511:511:void <clinit>() -> <clinit>
com.ibm.icu.impl.TimeZoneNamesImpl$TZ2MZsCache -> com.ibm.icu.impl.aX:
    790:790:void <init>() -> <init>
    796:824:java.util.List createInstance$56729ae2(java.lang.String) -> a
    836:888:long parseDate(java.lang.String) -> b
    790:790:java.lang.Object createInstance(java.lang.Object,java.lang.Object) -> createInstance
    790:790:void <init>(byte) -> <init>
com.ibm.icu.impl.TimeZoneNamesImpl$ZNames -> com.ibm.icu.impl.aY:
    com.ibm.icu.impl.TimeZoneNamesImpl$ZNames EMPTY_ZNAMES -> a
    int EX_LOC_INDEX -> b
    java.lang.String[] _names -> c
    boolean didAddIntoTrie -> d
    709:712:void <init>(java.lang.String[]) -> <init>
    715:728:com.ibm.icu.impl.TimeZoneNamesImpl$ZNames getInstance(java.lang.String[],java.lang.String) -> a
    733:733:com.ibm.icu.impl.TimeZoneNamesImpl$ZNames getInstance(com.ibm.icu.impl.TimeZoneNamesImpl$ZNamesLoader,com.ibm.icu.impl.ICUResourceBundle,java.lang.String,java.lang.String) -> a
    737:740:java.lang.String getName(com.ibm.icu.text.TimeZoneNames$NameType) -> a
    745:759:void addNamesIntoTrie(java.lang.String,java.lang.String,com.ibm.icu.impl.TextTrieMap) -> a
    701:701:com.ibm.icu.impl.TimeZoneNamesImpl$ZNames access$200() -> a
    702:704:void <clinit>() -> <clinit>
com.ibm.icu.impl.TimeZoneNamesImpl$ZNamesLoader -> com.ibm.icu.impl.aZ:
    int NUM_META_ZONE_NAMES -> a
    int NUM_TIME_ZONE_NAMES -> b
    java.lang.String NO_NAME -> c
    com.ibm.icu.impl.TimeZoneNamesImpl$ZNamesLoader DUMMY_LOADER -> d
    java.lang.String[] names -> e
    int numNames -> f
    589:591:void <init>(int) -> <init>
    594:594:com.ibm.icu.impl.TimeZoneNamesImpl$ZNamesLoader forMetaZoneNames() -> a
    598:598:com.ibm.icu.impl.TimeZoneNamesImpl$ZNamesLoader forTimeZoneNames() -> b
    602:612:java.lang.String[] load(com.ibm.icu.impl.ICUResourceBundle,java.lang.String) -> a
    617:633:com.ibm.icu.text.TimeZoneNames$NameType nameTypeFromKey(com.ibm.icu.impl.ICUResource$Key) -> a
    638:647:void put(com.ibm.icu.impl.ICUResource$Key,com.ibm.icu.impl.ICUResource$Value) -> put
    651:658:void putNoFallback(com.ibm.icu.impl.ICUResource$Key) -> putNoFallback
    661:694:java.lang.String[] getNames() -> d
    575:575:com.ibm.icu.impl.TimeZoneNamesImpl$ZNamesLoader access$500() -> c
    575:575:java.lang.String[] access$600(com.ibm.icu.impl.TimeZoneNamesImpl$ZNamesLoader) -> a
    576:584:void <clinit>() -> <clinit>
com.ibm.icu.impl.TimeZoneNamesImpl$ZoneStringsLoader -> com.ibm.icu.impl.ba:
    java.util.HashMap keyToLoader -> a
    java.lang.StringBuilder sb -> b
    com.ibm.icu.impl.TimeZoneNamesImpl this$0 -> c
    297:305:void <init>(com.ibm.icu.impl.TimeZoneNamesImpl) -> <init>
    309:325:void load() -> a
    329:355:com.ibm.icu.impl.ICUResource$TableSink getOrCreateTableSink(com.ibm.icu.impl.ICUResource$Key,int) -> getOrCreateTableSink
    360:363:void putNoFallback(com.ibm.icu.impl.ICUResource$Key) -> putNoFallback
    370:374:java.lang.String mzIDFromKey(com.ibm.icu.impl.ICUResource$Key) -> a
    378:386:java.lang.String tzIDFromKey(com.ibm.icu.impl.ICUResource$Key) -> b
    297:297:void <init>(com.ibm.icu.impl.TimeZoneNamesImpl,byte) -> <init>
com.ibm.icu.impl.Trie -> com.ibm.icu.impl.Trie:
    int LEAD_INDEX_OFFSET_ -> LEAD_INDEX_OFFSET_
    int INDEX_STAGE_1_SHIFT_ -> INDEX_STAGE_1_SHIFT_
    int INDEX_STAGE_2_SHIFT_ -> INDEX_STAGE_2_SHIFT_
    int DATA_BLOCK_LENGTH -> DATA_BLOCK_LENGTH
    int INDEX_STAGE_3_MASK_ -> INDEX_STAGE_3_MASK_
    int SURROGATE_BLOCK_BITS -> SURROGATE_BLOCK_BITS
    int SURROGATE_BLOCK_COUNT -> SURROGATE_BLOCK_COUNT
    int BMP_INDEX_LENGTH -> BMP_INDEX_LENGTH
    int SURROGATE_MASK_ -> SURROGATE_MASK_
    char[] m_index_ -> m_index_
    com.ibm.icu.impl.Trie$DataManipulate m_dataManipulate_ -> m_dataManipulate_
    int m_dataOffset_ -> m_dataOffset_
    int m_dataLength_ -> m_dataLength_
    int HEADER_LENGTH_ -> HEADER_LENGTH_
    int HEADER_OPTIONS_LATIN1_IS_LINEAR_MASK_ -> HEADER_OPTIONS_LATIN1_IS_LINEAR_MASK_
    int HEADER_SIGNATURE_ -> HEADER_SIGNATURE_
    int HEADER_OPTIONS_INDEX_SHIFT_ -> HEADER_OPTIONS_INDEX_SHIFT_
    int HEADER_OPTIONS_DATA_IS_32_BIT_ -> HEADER_OPTIONS_DATA_IS_32_BIT_
    boolean m_isLatin1Linear_ -> a
    int m_options_ -> b
    boolean $assertionsDisabled -> c
    84:84:boolean isLatin1Linear() -> isLatin1Linear
    97:104:boolean equals(java.lang.Object) -> equals
    111:112:int hashCode() -> hashCode
    125:133:int getSerializedDataSize() -> getSerializedDataSize
    145:164:void <init>(java.nio.ByteBuffer,com.ibm.icu.impl.Trie$DataManipulate) -> <init>
    174:185:void <init>(char[],int,com.ibm.icu.impl.Trie$DataManipulate) -> <init>
    int getSurrogateOffset(char,char) -> getSurrogateOffset
    int getValue(int) -> getValue
    int getInitialValue() -> getInitialValue
    293:293:int getRawOffset(int,char) -> getRawOffset
    306:306:int getBMPOffset(char) -> getBMPOffset
    323:323:int getLeadOffset(char) -> getLeadOffset
    337:352:int getCodePointOffset(int) -> getCodePointOffset
    364:365:void unserialize(java.nio.ByteBuffer) -> unserialize
    373:373:boolean isIntTrie() -> isIntTrie
    382:382:boolean isCharTrie() -> isCharTrie
    440:451:boolean checkHeader(int) -> a
    45:45:void <clinit>() -> <clinit>
com.ibm.icu.impl.Trie$DataManipulate -> com.ibm.icu.impl.Trie$DataManipulate:
    int getFoldingOffset(int) -> getFoldingOffset
com.ibm.icu.impl.Trie$DefaultGetFoldingOffset -> com.ibm.icu.impl.bb:
    70:70:void <init>() -> <init>
    72:72:int getFoldingOffset(int) -> getFoldingOffset
    70:70:void <init>(byte) -> <init>
com.ibm.icu.impl.Trie2 -> com.ibm.icu.impl.Trie2:
    com.ibm.icu.impl.Trie2$ValueMapper defaultValueMapper -> n
    com.ibm.icu.impl.Trie2$UTrie2Header header -> a
    char[] index -> b
    int data16 -> c
    int[] data32 -> d
    int indexLength -> e
    int dataLength -> f
    int index2NullOffset -> g
    int initialValue -> h
    int errorValue -> i
    int highStart -> j
    int highValueIndex -> k
    int dataNullOffset -> l
    int fHash -> m
    29:842:void <init>() -> <init>
    93:184:com.ibm.icu.impl.Trie2 createFromSerialized(java.nio.ByteBuffer) -> createFromSerialized
    202:228:int getVersion(java.io.InputStream,boolean) -> getVersion
    int get(int) -> get
    int getFromU16SingleLead(char) -> getFromU16SingleLead
    285:310:boolean equals(java.lang.Object) -> equals
    315:325:int hashCode() -> hashCode
    373:373:java.util.Iterator iterator() -> iterator
    393:393:java.util.Iterator iterator(com.ibm.icu.impl.Trie2$ValueMapper) -> iterator
    411:411:java.util.Iterator iteratorForLeadSurrogate(char,com.ibm.icu.impl.Trie2$ValueMapper) -> iteratorForLeadSurrogate
    428:428:java.util.Iterator iteratorForLeadSurrogate(char) -> iteratorForLeadSurrogate
    463:480:int serializeHeader(java.io.DataOutputStream) -> serializeHeader
    508:508:com.ibm.icu.impl.Trie2$CharSequenceIterator charSequenceIterator(java.lang.CharSequence,int) -> charSequenceIterator
    997:1007:int rangeEnd(int,int,int) -> a
    1019:1021:int hashByte(int,int) -> d
    1025:1028:int hashUChar32(int,int) -> e
    1032:1036:int hashInt(int,int) -> f
    29:29:int access$000() -> a
    29:29:int access$100(int,int) -> a
    29:29:int access$200(int,int) -> b
    29:29:int access$300(int,int) -> c
    376:376:void <clinit>() -> <clinit>
com.ibm.icu.impl.Trie2$1 -> com.ibm.icu.impl.bc:
    376:376:void <init>() -> <init>
    378:378:int map(int) -> map
com.ibm.icu.impl.Trie2$2 -> com.ibm.icu.impl.bd:
    int[] $SwitchMap$com$ibm$icu$impl$Trie2$ValueWidth -> a
    167:167:void <clinit>() -> <clinit>
com.ibm.icu.impl.Trie2$CharSequenceIterator -> com.ibm.icu.impl.Trie2$CharSequenceIterator:
    java.lang.CharSequence text -> a
    int textLength -> b
    int index -> c
    com.ibm.icu.impl.Trie2$CharSequenceValues fResults -> d
    com.ibm.icu.impl.Trie2 this$0 -> e
    529:538:void <init>(com.ibm.icu.impl.Trie2,java.lang.CharSequence,int) -> <init>
    542:546:void set(int) -> set
    550:550:boolean hasNext() -> hasNext
    555:555:boolean hasPrevious() -> hasPrevious
    560:570:com.ibm.icu.impl.Trie2$CharSequenceValues next() -> next
    575:584:com.ibm.icu.impl.Trie2$CharSequenceValues previous() -> previous
    593:593:void remove() -> remove
    525:525:java.lang.Object next() -> next
com.ibm.icu.impl.Trie2$CharSequenceValues -> com.ibm.icu.impl.Trie2$CharSequenceValues:
    int index -> index
    int codePoint -> codePoint
    int value -> value
    489:489:void <init>() -> <init>
com.ibm.icu.impl.Trie2$Range -> com.ibm.icu.impl.Trie2$Range:
    int startCodePoint -> startCodePoint
    int endCodePoint -> endCodePoint
    int value -> value
    boolean leadSurrogate -> leadSurrogate
    336:336:void <init>() -> <init>
    343:347:boolean equals(java.lang.Object) -> equals
    355:360:int hashCode() -> hashCode
com.ibm.icu.impl.Trie2$Trie2Iterator -> com.ibm.icu.impl.be:
    com.ibm.icu.impl.Trie2$ValueMapper mapper -> a
    com.ibm.icu.impl.Trie2$Range returnValue -> b
    int nextStart -> c
    int limitCP -> d
    boolean doingCodePoints -> e
    boolean doLeadSurrogates -> f
    com.ibm.icu.impl.Trie2 this$0 -> g
    845:985:void <init>(com.ibm.icu.impl.Trie2,com.ibm.icu.impl.Trie2$ValueMapper) -> <init>
    854:985:void <init>(com.ibm.icu.impl.Trie2,char,com.ibm.icu.impl.Trie2$ValueMapper) -> <init>
    870:923:com.ibm.icu.impl.Trie2$Range next() -> a
    930:930:boolean hasNext() -> hasNext
    934:934:void remove() -> remove
    954:965:int rangeEndLS(char) -> a
    842:842:java.lang.Object next() -> next
com.ibm.icu.impl.Trie2$UTrie2Header -> com.ibm.icu.impl.bf:
    int signature -> a
    int options -> b
    int indexLength -> c
    int shiftedDataLength -> d
    int index2NullOffset -> e
    int dataNullOffset -> f
    int shiftedHighStart -> g
    625:625:void <init>() -> <init>
com.ibm.icu.impl.Trie2$ValueMapper -> com.ibm.icu.impl.Trie2$ValueMapper:
    int map(int) -> map
com.ibm.icu.impl.Trie2$ValueWidth -> com.ibm.icu.impl.bg:
    int BITS_16$40b85bac -> a
    int BITS_32$40b85bac -> b
    int[] $VALUES$11c0ae19 -> c
    608:608:int[] values$6c8a069a() -> a
    608:610:void <clinit>() -> <clinit>
com.ibm.icu.impl.Trie2Writable -> com.ibm.icu.impl.Trie2Writable:
    int[] index1 -> n
    int[] index2 -> o
    int[] data -> p
    int index2Length -> q
    int dataCapacity -> r
    int firstFreeBlock -> s
    int index2NullOffset -> t
    boolean isCompacted -> u
    int[] map -> v
    boolean UTRIE2_DEBUG -> w
    boolean $assertionsDisabled -> x
    25:1215:void <init>(int,int) -> <init>
    32:135:void init(int,int) -> d
    143:1215:void <init>(com.ibm.icu.impl.Trie2) -> <init>
    155:163:boolean isInNullBlock(int,boolean) -> a
    169:181:int allocIndex2Block() -> b
    187:197:int getIndex2Block(int,boolean) -> b
    203:237:int allocDataBlock(int) -> a
    244:246:void releaseDataBlock(int) -> b
    250:250:boolean isWritableBlock(int) -> c
    255:261:void setIndex2Entry(int,int) -> e
    272:283:int getDataBlock(int,boolean) -> c
    292:297:com.ibm.icu.impl.Trie2Writable set(int,int) -> set
    302:307:com.ibm.icu.impl.Trie2Writable set(int,boolean,int) -> a
    323:346:void uncompact() -> c
    350:354:void writeBlock(int,int) -> f
    363:375:void fillBlock(int,int,int,int,int,boolean) -> a
    397:506:com.ibm.icu.impl.Trie2Writable setRange(int,int,int,boolean) -> setRange
    525:535:com.ibm.icu.impl.Trie2Writable setRange(com.ibm.icu.impl.Trie2$Range,boolean) -> setRange
    555:557:com.ibm.icu.impl.Trie2Writable setForLeadSurrogateCodeUnit(char,int) -> setForLeadSurrogateCodeUnit
    569:572:int get(int) -> get
    580:592:int get(int,boolean) -> d
    610:610:int getFromU16SingleLead(char) -> getFromU16SingleLead
    616:621:boolean equal_int(int[],int,int,int) -> a
    629:636:int findSameIndex2Block(int,int) -> g
    644:651:int findSameDataBlock(int,int,int) -> b
    666:722:int findHighStart(int) -> d
    743:840:void compactData() -> d
    846:921:void compactIndex2() -> e
    929:974:void compactTrie() -> f
    983:985:com.ibm.icu.impl.Trie2_16 toTrie2_16() -> toTrie2_16
    994:996:com.ibm.icu.impl.Trie2_32 toTrie2_32() -> toTrie2_32
    1023:1150:void freeze$2b8ed950(com.ibm.icu.impl.Trie2,int) -> a
    16:16:void <clinit>() -> <clinit>
com.ibm.icu.impl.Trie2Writable$1 -> com.ibm.icu.impl.bh:
    int[] $SwitchMap$com$ibm$icu$impl$Trie2$ValueWidth -> a
    1133:1133:void <clinit>() -> <clinit>
com.ibm.icu.impl.Trie2_16 -> com.ibm.icu.impl.Trie2_16:
    36:37:void <init>() -> <init>
    56:56:com.ibm.icu.impl.Trie2_16 createFromSerialized(java.nio.ByteBuffer) -> createFromSerialized
    70:109:int get(int) -> get
    133:136:int getFromU16SingleLead(char) -> getFromU16SingleLead
    152:160:int serialize(java.io.OutputStream) -> serialize
    167:167:int getSerializedLength() -> getSerializedLength
    181:254:int rangeEnd(int,int,int) -> a
com.ibm.icu.impl.Trie2_32 -> com.ibm.icu.impl.Trie2_32:
    35:36:void <init>() -> <init>
    55:55:com.ibm.icu.impl.Trie2_32 createFromSerialized(java.nio.ByteBuffer) -> createFromSerialized
    69:108:int get(int) -> get
    130:133:int getFromU16SingleLead(char) -> getFromU16SingleLead
    149:157:int serialize(java.io.OutputStream) -> serialize
    164:164:int getSerializedLength() -> getSerializedLength
    178:251:int rangeEnd(int,int,int) -> a
com.ibm.icu.impl.TrieBuilder -> com.ibm.icu.impl.TrieBuilder:
    int DATA_BLOCK_LENGTH -> DATA_BLOCK_LENGTH
    int[] m_index_ -> m_index_
    int m_indexLength_ -> m_indexLength_
    int m_dataCapacity_ -> m_dataCapacity_
    int m_dataLength_ -> m_dataLength_
    boolean m_isLatin1Linear_ -> m_isLatin1Linear_
    boolean m_isCompacted_ -> m_isCompacted_
    int[] m_map_ -> m_map_
    int SHIFT_ -> SHIFT_
    int MAX_INDEX_LENGTH_ -> MAX_INDEX_LENGTH_
    int BMP_INDEX_LENGTH_ -> BMP_INDEX_LENGTH_
    int SURROGATE_BLOCK_COUNT_ -> SURROGATE_BLOCK_COUNT_
    int MASK_ -> MASK_
    int INDEX_SHIFT_ -> INDEX_SHIFT_
    int MAX_DATA_LENGTH_ -> MAX_DATA_LENGTH_
    int OPTIONS_INDEX_SHIFT_ -> OPTIONS_INDEX_SHIFT_
    int OPTIONS_DATA_IS_32_BIT_ -> OPTIONS_DATA_IS_32_BIT_
    int OPTIONS_LATIN1_IS_LINEAR_ -> OPTIONS_LATIN1_IS_LINEAR_
    int DATA_GRANULARITY_ -> DATA_GRANULARITY_
    84:89:boolean isInZeroBlock(int) -> isInZeroBlock
    175:181:void <init>() -> <init>
    184:194:void <init>(com.ibm.icu.impl.TrieBuilder) -> <init>
    202:207:boolean equal_int(int[],int,int,int) -> equal_int
    221:230:void findUnusedBlocks() -> findUnusedBlocks
    242:248:int findSameIndexBlock(int[],int,int) -> findSameIndexBlock
com.ibm.icu.impl.TrieBuilder$DataManipulate -> com.ibm.icu.impl.TrieBuilder$DataManipulate:
    int getFoldedValue(int,int) -> getFoldedValue
com.ibm.icu.impl.TrieIterator -> com.ibm.icu.impl.TrieIterator:
    com.ibm.icu.impl.Trie m_trie_ -> a
    int m_initialValue_ -> b
    int m_currentCodepoint_ -> c
    int m_nextCodepoint_ -> d
    int m_nextValue_ -> e
    int m_nextIndex_ -> f
    int m_nextBlock_ -> g
    int m_nextBlockIndex_ -> h
    int m_nextTrailIndexOffset_ -> i
    98:107:void <init>(com.ibm.icu.impl.Trie) -> <init>
    123:131:boolean next(com.ibm.icu.util.RangeValueIterator$Element) -> next
    139:151:void reset() -> reset
    166:166:int extract(int) -> extract
    181:184:void setResult(com.ibm.icu.util.RangeValueIterator$Element,int,int,int) -> a
    199:235:boolean calculateNextBMPElement(com.ibm.icu.util.RangeValueIterator$Element) -> a
    257:344:void calculateNextSupplementaryElement(com.ibm.icu.util.RangeValueIterator$Element) -> b
    360:369:boolean checkBlockDetail(int) -> a
    386:409:boolean checkBlock(int) -> b
    426:437:boolean checkTrailBlock(int) -> c
    451:468:boolean checkNullNextTrailIndex() -> a
com.ibm.icu.impl.UBiDiProps -> com.ibm.icu.impl.UBiDiProps:
    int[] indexes -> a
    int[] mirrors -> b
    byte[] jgArray -> c
    byte[] jgArray2 -> d
    com.ibm.icu.impl.Trie2_16 trie -> e
    com.ibm.icu.impl.UBiDiProps INSTANCE -> INSTANCE
    35:38:void <init>() -> <init>
    42:82:void readData(java.nio.ByteBuffer) -> a
    100:145:void addPropertyStarts(com.ibm.icu.text.UnicodeSet) -> addPropertyStarts
    152:163:int getMaxValue(int) -> getMaxValue
    168:168:int getClass(int) -> getClass
    172:172:boolean isMirrored(int) -> isMirrored
    176:200:int getMirror(int,int) -> a
    205:206:int getMirror(int) -> getMirror
    210:210:boolean isBidiControl(int) -> isBidiControl
    214:214:boolean isJoinControl(int) -> isJoinControl
    218:218:int getJoiningType(int) -> getJoiningType
    224:234:int getJoiningGroup(int) -> getJoiningGroup
    238:238:int getPairedBracketType(int) -> getPairedBracketType
    242:246:int getPairedBracket(int) -> getPairedBracket
    302:302:int getClassFromProps(int) -> a
    305:305:boolean getFlagFromProps(int,int) -> b
    308:308:int getMirrorDeltaFromProps(int) -> b
    322:322:int getMirrorCodePoint(int) -> c
    325:325:int getMirrorIndex(int) -> d
    338:342:void <clinit>() -> <clinit>
com.ibm.icu.impl.UBiDiProps$IsAcceptable -> com.ibm.icu.impl.bi:
    85:85:void <init>() -> <init>
    87:87:boolean isDataVersionAcceptable(byte[]) -> isDataVersionAcceptable
    85:85:void <init>(byte) -> <init>
com.ibm.icu.impl.UCaseProps -> com.ibm.icu.impl.UCaseProps:
    byte[] flagsOffset -> a
    int MAX_STRING_LENGTH -> MAX_STRING_LENGTH
    int[] rootLocCache -> b
    java.lang.StringBuilder dummyStringBuilder -> dummyStringBuilder
    int[] indexes -> c
    char[] exceptions -> d
    char[] unfold -> e
    com.ibm.icu.impl.Trie2_16 trie -> f
    int TYPE_MASK -> TYPE_MASK
    int NONE -> NONE
    int LOWER -> LOWER
    int UPPER -> UPPER
    int TITLE -> TITLE
    com.ibm.icu.impl.UCaseProps INSTANCE -> INSTANCE
    38:41:void <init>() -> <init>
    45:80:void readData(java.nio.ByteBuffer) -> a
    94:108:void addPropertyStarts(com.ibm.icu.text.UnicodeSet) -> addPropertyStarts
    112:112:int getExceptionsOffset(int) -> a
    116:116:boolean propsHasException(int) -> b
    140:140:boolean hasSlot(int,int) -> a
    143:143:byte slotOffset(int,int) -> b
    157:165:long getSlotValueAndOffset(int,int,int) -> a
    171:179:int getSlotValue(int,int,int) -> b
    185:197:int tolower(int) -> tolower
    201:213:int toupper(int) -> toupper
    217:235:int totitle(int) -> totitle
    256:354:void addCaseClosure(int,com.ibm.icu.text.UnicodeSet) -> addCaseClosure
    363:382:int strcmpMax(java.lang.String,int,int) -> a
    400:450:boolean addStringCaseClosure(java.lang.String,com.ibm.icu.text.UnicodeSet) -> addStringCaseClosure
    455:455:int getType(int) -> getType
    460:460:int getTypeOrIgnorable(int) -> getTypeOrIgnorable
    465:469:int getDotType(int) -> getDotType
    474:474:boolean isSoftDotted(int) -> isSoftDotted
    478:478:boolean isCaseSensitive(int) -> isCaseSensitive
    618:634:int getCaseLocale(com.ibm.icu.util.ULocale,int[]) -> a
    641:656:boolean isFollowedByCasedLetter(com.ibm.icu.impl.UCaseProps$ContextIterator,int) -> a
    664:677:boolean isPrecededBySoftDotted(com.ibm.icu.impl.UCaseProps$ContextIterator) -> a
    719:733:boolean isPrecededBy_I(com.ibm.icu.impl.UCaseProps$ContextIterator) -> b
    741:754:boolean isFollowedByMoreAbove(com.ibm.icu.impl.UCaseProps$ContextIterator) -> c
    762:776:boolean isFollowedByDotAbove(com.ibm.icu.impl.UCaseProps$ContextIterator) -> d
    810:947:int toFullLower(int,com.ibm.icu.impl.UCaseProps$ContextIterator,java.lang.StringBuilder,com.ibm.icu.util.ULocale,int[]) -> toFullLower
    958:1043:int toUpperOrTitle(int,com.ibm.icu.impl.UCaseProps$ContextIterator,java.lang.StringBuilder,com.ibm.icu.util.ULocale,int[],boolean) -> a
    1049:1049:int toFullUpper(int,com.ibm.icu.impl.UCaseProps$ContextIterator,java.lang.StringBuilder,com.ibm.icu.util.ULocale,int[]) -> toFullUpper
    1055:1055:int toFullTitle(int,com.ibm.icu.impl.UCaseProps$ContextIterator,java.lang.StringBuilder,com.ibm.icu.util.ULocale,int[]) -> toFullTitle
    1108:1148:int fold(int,int) -> fold
    1170:1235:int toFullFolding(int,java.lang.StringBuilder,int) -> toFullFolding
    1253:1295:boolean hasBinaryProperty(int,int) -> hasBinaryProperty
    1334:1334:int getTypeFromProps(int) -> c
    1338:1338:int getTypeAndIgnorableFromProps(int) -> d
    1358:1358:int getDelta(int) -> e
    120:1426:void <clinit>() -> <clinit>
com.ibm.icu.impl.UCaseProps$ContextIterator -> com.ibm.icu.impl.UCaseProps$ContextIterator:
    void reset(int) -> reset
    int next() -> next
com.ibm.icu.impl.UCaseProps$IsAcceptable -> com.ibm.icu.impl.bj:
    83:83:void <init>() -> <init>
    86:86:boolean isDataVersionAcceptable(byte[]) -> isDataVersionAcceptable
    83:83:void <init>(byte) -> <init>
com.ibm.icu.impl.UCharArrayIterator -> com.ibm.icu.impl.UCharArrayIterator:
    char[] text -> a
    int start -> b
    int limit -> c
    int pos -> d
    24:35:void <init>(char[],int,int) -> <init>
    38:38:int current() -> current
    42:42:int getLength() -> getLength
    46:46:int getIndex() -> getIndex
    50:50:int next() -> next
    54:54:int previous() -> previous
    58:64:void setIndex(int) -> setIndex
    67:69:int getText(char[],int) -> getText
    79:81:java.lang.Object clone() -> clone
com.ibm.icu.impl.UCharacterIteratorWrapper -> com.ibm.icu.impl.UCharacterIteratorWrapper:
    com.ibm.icu.text.UCharacterIterator iterator -> a
    21:23:void <init>(com.ibm.icu.text.UCharacterIterator) -> <init>
    36:37:char first() -> first
    47:48:char last() -> last
    58:58:char current() -> current
    71:72:char next() -> next
    84:84:char previous() -> previous
    96:97:char setIndex(int) -> setIndex
    106:106:int getBeginIndex() -> getBeginIndex
    115:115:int getEndIndex() -> getEndIndex
    123:123:int getIndex() -> getIndex
    132:136:java.lang.Object clone() -> clone
com.ibm.icu.impl.UCharacterName -> com.ibm.icu.impl.UCharacterName:
    com.ibm.icu.impl.UCharacterName INSTANCE -> INSTANCE
    int LINES_PER_GROUP_ -> LINES_PER_GROUP_
    int m_groupcount_ -> m_groupcount_
    int m_groupsize_ -> a
    char[] m_tokentable_ -> b
    byte[] m_tokenstring_ -> c
    char[] m_groupinfo_ -> d
    byte[] m_groupstring_ -> e
    com.ibm.icu.impl.UCharacterName$AlgorithmName[] m_algorithm_ -> f
    char[] m_groupoffsets_ -> g
    char[] m_grouplengths_ -> h
    int[] m_nameSet_ -> i
    int[] m_ISOCommentSet_ -> j
    java.lang.StringBuffer m_utilStringBuffer_ -> k
    int[] m_utilIntBuffer_ -> l
    int m_maxISOCommentLength_ -> m
    int m_maxNameLength_ -> n
    java.lang.String[] TYPE_NAMES_ -> o
    81:99:java.lang.String getName(int,int) -> getName
    112:153:int getCharFromName(int,java.lang.String) -> getCharFromName
    176:218:int getGroupLengths(int,char[],char[]) -> getGroupLengths
    237:308:java.lang.String getGroupName(int,int,int) -> getGroupName
    316:321:java.lang.String getExtendedName(int) -> getExtendedName
    331:346:int getGroup(int) -> getGroup
    357:385:java.lang.String getExtendedOr10Name(int) -> getExtendedOr10Name
    395:398:int getGroupMSB(int) -> getGroupMSB
    408:408:int getCodepointMSB(int) -> getCodepointMSB
    418:418:int getGroupLimit(int) -> getGroupLimit
    428:428:int getGroupMin(int) -> getGroupMin
    438:438:int getGroupOffset(int) -> getGroupOffset
    449:449:int getGroupMinFromCodepoint(int) -> getGroupMinFromCodepoint
    459:459:int getAlgorithmLength() -> getAlgorithmLength
    469:469:int getAlgorithmStart(int) -> getAlgorithmStart
    479:479:int getAlgorithmEnd(int) -> getAlgorithmEnd
    490:496:java.lang.String getAlgorithmName(int,int) -> getAlgorithmName
    507:519:java.lang.String getGroupName(int,int) -> getGroupName
    531:535:int getMaxCharNameLength() -> getMaxCharNameLength
    547:551:int getMaxISOCommentLength() -> getMaxISOCommentLength
    563:564:void getCharNameCharacters(com.ibm.icu.text.UnicodeSet) -> getCharNameCharacters
    574:575:void getISOCommentCharacters(com.ibm.icu.text.UnicodeSet) -> getISOCommentCharacters
    965:971:boolean setToken(char[],byte[]) -> a
    981:985:boolean setAlgorithm(com.ibm.icu.impl.UCharacterName$AlgorithmName[]) -> a
    996:1001:boolean setGroupCountSize(int,int) -> a
    1012:1018:boolean setGroup(char[],byte[]) -> b
    63:1173:void <init>() -> <init>
    1186:1202:java.lang.String getAlgName(int,int) -> b
    1213:1227:int getGroupChar(java.lang.String,int) -> a
    1243:1310:int getGroupChar(int,char[],java.lang.String,int) -> a
    1320:1333:int getType(int) -> a
    1345:1378:int getExtendedChar(java.lang.String,int) -> b
    1391:1392:void add(int[],char) -> a
    1403:1403:boolean contains(int[],char) -> b
    1414:1419:int add(int[],java.lang.String) -> b
    1430:1435:int add(int[],java.lang.StringBuffer) -> b
    1447:1454:int addAlgorithmName(int) -> b
    1465:1476:int addExtendedName(int) -> c
    1492:1539:int[] addGroupName(int,int,byte[],int[]) -> a
    1551:1609:void addGroupName(int) -> d
    1617:1634:boolean initNameSetsLengths() -> a
    1645:1656:void convert(int[],com.ibm.icu.text.UnicodeSet) -> a
    36:36:int access$200(int[],java.lang.String) -> a
    36:36:int access$300(int[],java.lang.StringBuffer) -> a
    47:1104:void <clinit>() -> <clinit>
com.ibm.icu.impl.UCharacterName$AlgorithmName -> com.ibm.icu.impl.bk:
    int m_rangestart_ -> a
    int m_rangeend_ -> b
    byte m_type_ -> c
    byte m_variant_ -> d
    char[] m_factor_ -> e
    java.lang.String m_prefix_ -> f
    byte[] m_factorstring_ -> g
    java.lang.StringBuffer m_utilStringBuffer_ -> h
    int[] m_utilIntBuffer_ -> i
    599:865:void <init>() -> <init>
    616:625:boolean setInfo(int,int,byte,byte) -> a
    635:639:boolean setFactor(char[]) -> a
    649:653:boolean setPrefix(java.lang.String) -> a
    665:666:boolean setFactorString(byte[]) -> a
    675:675:boolean contains(int) -> a
    687:721:void appendName(int,java.lang.StringBuffer) -> a
    729:786:int getChar(java.lang.String) -> b
    800:843:int add(int[],int) -> a
    878:902:java.lang.String getFactorString(int[],int) -> b
    917:944:boolean compareFactorString(int[],int,java.lang.String,int) -> a
    583:583:int access$000(com.ibm.icu.impl.UCharacterName$AlgorithmName) -> a
    583:583:int access$100(com.ibm.icu.impl.UCharacterName$AlgorithmName) -> b
com.ibm.icu.impl.UCharacterNameChoice -> com.ibm.icu.impl.UCharacterNameChoice:
    int UNICODE_CHAR_NAME -> UNICODE_CHAR_NAME
    int OBSOLETE_UNUSED_UNICODE_10_CHAR_NAME -> OBSOLETE_UNUSED_UNICODE_10_CHAR_NAME
    int EXTENDED_CHAR_NAME -> EXTENDED_CHAR_NAME
    int CHAR_NAME_ALIAS -> CHAR_NAME_ALIAS
    int CHAR_NAME_CHOICE_COUNT -> CHAR_NAME_CHOICE_COUNT
    int ISO_COMMENT_ -> ISO_COMMENT_
com.ibm.icu.impl.UCharacterNameReader -> com.ibm.icu.impl.bl:
    java.nio.ByteBuffer m_byteBuffer_ -> a
    int m_tokenstringindex_ -> b
    int m_groupindex_ -> c
    int m_groupstringindex_ -> d
    int m_algnamesindex_ -> e
    33:33:boolean isDataVersionAcceptable(byte[]) -> isDataVersionAcceptable
    44:47:void <init>(java.nio.ByteBuffer) -> <init>
    61:99:void read(com.ibm.icu.impl.UCharacterName) -> a
    158:195:com.ibm.icu.impl.UCharacterName$AlgorithmName readAlg() -> a
com.ibm.icu.impl.UCharacterProperty -> com.ibm.icu.impl.UCharacterProperty:
    com.ibm.icu.impl.UCharacterProperty INSTANCE -> INSTANCE
    com.ibm.icu.impl.Trie2_16 m_trie_ -> m_trie_
    com.ibm.icu.util.VersionInfo m_unicodeVersion_ -> m_unicodeVersion_
    char LATIN_CAPITAL_LETTER_I_WITH_DOT_ABOVE_ -> LATIN_CAPITAL_LETTER_I_WITH_DOT_ABOVE_
    char LATIN_SMALL_LETTER_DOTLESS_I_ -> LATIN_SMALL_LETTER_DOTLESS_I_
    char LATIN_SMALL_LETTER_I_ -> LATIN_SMALL_LETTER_I_
    int TYPE_MASK -> TYPE_MASK
    int SRC_NONE -> SRC_NONE
    int SRC_CHAR -> SRC_CHAR
    int SRC_PROPSVEC -> SRC_PROPSVEC
    int SRC_NAMES -> SRC_NAMES
    int SRC_CASE -> SRC_CASE
    int SRC_BIDI -> SRC_BIDI
    int SRC_CHAR_AND_PROPSVEC -> SRC_CHAR_AND_PROPSVEC
    int SRC_CASE_AND_NORM -> SRC_CASE_AND_NORM
    int SRC_NFC -> SRC_NFC
    int SRC_NFKC -> SRC_NFKC
    int SRC_NFKC_CF -> SRC_NFKC_CF
    int SRC_NFC_CANON_ITER -> SRC_NFC_CANON_ITER
    int SRC_COUNT -> SRC_COUNT
    int GC_CN_MASK -> a
    int GC_CC_MASK -> b
    int GC_CS_MASK -> c
    int GC_ZS_MASK -> d
    int GC_ZL_MASK -> e
    int GC_ZP_MASK -> f
    int GC_Z_MASK -> g
    com.ibm.icu.impl.UCharacterProperty$BinaryProperty[] binProps -> h
    int[] gcbToHst -> i
    com.ibm.icu.impl.UCharacterProperty$IntProperty[] intProps -> j
    com.ibm.icu.impl.Trie2_16 m_additionalTrie_ -> k
    int[] m_additionalVectors_ -> l
    int m_additionalColumnsCount_ -> m
    int m_maxBlockScriptValue_ -> n
    int m_maxJTGValue_ -> o
    char[] m_scriptExtensions_ -> m_scriptExtensions_
    int SCRIPT_X_MASK -> SCRIPT_X_MASK
    int SCRIPT_MASK_ -> SCRIPT_MASK_
    int SCRIPT_X_WITH_COMMON -> SCRIPT_X_WITH_COMMON
    int SCRIPT_X_WITH_INHERITED -> SCRIPT_X_WITH_INHERITED
    int SCRIPT_X_WITH_OTHER -> SCRIPT_X_WITH_OTHER
    boolean $assertionsDisabled -> p
    114:114:int getProperty(int) -> getProperty
    126:130:int getAdditional(int,int) -> getAdditional
    155:156:com.ibm.icu.util.VersionInfo getAge(int) -> getAge
    180:180:boolean isgraphPOSIX(int) -> d
    390:394:boolean hasBinaryProperty(int,int) -> hasBinaryProperty
    401:401:int getType(int) -> getType
    571:580:int getIntPropertyValue(int,int) -> getIntPropertyValue
    584:591:int getIntPropertyMaxValue(int) -> getIntPropertyMaxValue
    595:643:int getSource(int) -> getSource
    729:735:int getMaxValues(int) -> getMaxValues
    746:746:int getMask(int) -> getMask
    759:773:int getEuropeanDigit(int) -> getEuropeanDigit
    777:781:int digit(int) -> digit
    787:842:int getNumericValue(int) -> getNumericValue
    848:920:double getUnicodeNumericValue(int) -> getUnicodeNumericValue
    969:969:int getNumericTypeValue(int) -> e
    997:997:int ntvGetType(int) -> f
    229:1211:void <init>() -> <init>
    1269:1356:com.ibm.icu.text.UnicodeSet addPropertyStarts(com.ibm.icu.text.UnicodeSet) -> addPropertyStarts
    1361:1369:void upropsvec_addPropertyStarts(com.ibm.icu.text.UnicodeSet) -> upropsvec_addPropertyStarts
    42:42:boolean access$000(int) -> a
    42:42:int access$100(int) -> b
    42:42:int access$200(int) -> c
    42:42:int[] access$300() -> a
    42:1380:void <clinit>() -> <clinit>
com.ibm.icu.impl.UCharacterProperty$1 -> com.ibm.icu.impl.bm:
    236:236:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    238:238:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$10 -> com.ibm.icu.impl.bn:
    333:333:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    336:342:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$11 -> com.ibm.icu.impl.bo:
    350:350:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    352:371:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$12 -> com.ibm.icu.impl.bp:
    376:376:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    378:384:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$13 -> com.ibm.icu.impl.bq:
    485:485:void <init>(com.ibm.icu.impl.UCharacterProperty) -> <init>
    487:487:int getValue(int) -> a
com.ibm.icu.impl.UCharacterProperty$14 -> com.ibm.icu.impl.br:
    491:491:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    493:493:int getValue(int) -> a
com.ibm.icu.impl.UCharacterProperty$15 -> com.ibm.icu.impl.bs:
    com.ibm.icu.impl.UCharacterProperty this$0 -> a
    498:498:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    500:500:int getValue(int) -> a
    503:503:int getMaxValue(int) -> b
com.ibm.icu.impl.UCharacterProperty$16 -> com.ibm.icu.impl.bt:
    506:506:void <init>(com.ibm.icu.impl.UCharacterProperty) -> <init>
    508:508:int getValue(int) -> a
com.ibm.icu.impl.UCharacterProperty$17 -> com.ibm.icu.impl.bu:
    511:511:void <init>(com.ibm.icu.impl.UCharacterProperty) -> <init>
    513:513:int getValue(int) -> a
com.ibm.icu.impl.UCharacterProperty$18 -> com.ibm.icu.impl.bv:
    com.ibm.icu.impl.UCharacterProperty this$0 -> a
    517:517:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    519:519:int getValue(int) -> a
    522:522:int getMaxValue(int) -> b
com.ibm.icu.impl.UCharacterProperty$19 -> com.ibm.icu.impl.bw:
    525:525:void <init>(com.ibm.icu.impl.UCharacterProperty,int,int,int) -> <init>
    527:527:int getValue(int) -> a
com.ibm.icu.impl.UCharacterProperty$2 -> com.ibm.icu.impl.bx:
    241:241:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    243:243:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$20 -> com.ibm.icu.impl.by:
    com.ibm.icu.impl.UCharacterProperty this$0 -> a
    530:530:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    533:537:int getValue(int) -> a
    541:541:int getMaxValue(int) -> b
com.ibm.icu.impl.UCharacterProperty$21 -> com.ibm.icu.impl.bz:
    550:550:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    552:552:int getValue(int) -> a
com.ibm.icu.impl.UCharacterProperty$22 -> com.ibm.icu.impl.bA:
    555:555:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    557:557:int getValue(int) -> a
com.ibm.icu.impl.UCharacterProperty$23 -> com.ibm.icu.impl.bB:
    563:563:void <init>(com.ibm.icu.impl.UCharacterProperty) -> <init>
    565:565:int getValue(int) -> a
com.ibm.icu.impl.UCharacterProperty$3 -> com.ibm.icu.impl.bC:
    251:251:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    254:255:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$4 -> com.ibm.icu.impl.bD:
    268:268:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    270:270:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$5 -> com.ibm.icu.impl.bE:
    293:293:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    295:295:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$6 -> com.ibm.icu.impl.bF:
    301:301:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    303:303:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$7 -> com.ibm.icu.impl.bG:
    306:306:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    309:313:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$8 -> com.ibm.icu.impl.bH:
    317:317:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    319:319:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$9 -> com.ibm.icu.impl.bI:
    322:322:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    330:330:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$BiDiIntProperty -> com.ibm.icu.impl.bJ:
    451:453:void <init>(com.ibm.icu.impl.UCharacterProperty) -> <init>
    455:455:int getMaxValue(int) -> b
com.ibm.icu.impl.UCharacterProperty$BinaryProperty -> com.ibm.icu.impl.bK:
    int column -> a
    int mask -> b
    com.ibm.icu.impl.UCharacterProperty this$0 -> c
    190:193:void <init>(com.ibm.icu.impl.UCharacterProperty,int,int) -> <init>
    194:197:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    199:199:int getSource() -> a
    203:203:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$CaseBinaryProperty -> com.ibm.icu.impl.bL:
    int which -> a
    209:212:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    214:214:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$CombiningClassIntProperty -> com.ibm.icu.impl.bM:
    460:462:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    464:464:int getMaxValue(int) -> b
com.ibm.icu.impl.UCharacterProperty$IntProperty -> com.ibm.icu.impl.bN:
    int column -> a
    int mask -> b
    int shift -> c
    com.ibm.icu.impl.UCharacterProperty this$0 -> d
    429:433:void <init>(com.ibm.icu.impl.UCharacterProperty,int,int,int) -> <init>
    434:437:void <init>(com.ibm.icu.impl.UCharacterProperty,int) -> <init>
    439:439:int getSource() -> a
    443:443:int getValue(int) -> a
    446:446:int getMaxValue(int) -> b
com.ibm.icu.impl.UCharacterProperty$IsAcceptable -> com.ibm.icu.impl.bO:
    1213:1213:void <init>() -> <init>
    1216:1216:boolean isDataVersionAcceptable(byte[]) -> isDataVersionAcceptable
    1213:1213:void <init>(byte) -> <init>
com.ibm.icu.impl.UCharacterProperty$NormInertBinaryProperty -> com.ibm.icu.impl.bP:
    int which -> a
    220:223:void <init>(com.ibm.icu.impl.UCharacterProperty,int,int) -> <init>
    225:225:boolean contains(int) -> a
com.ibm.icu.impl.UCharacterProperty$NormQuickCheckIntProperty -> com.ibm.icu.impl.bQ:
    int which -> a
    int max -> b
    471:475:void <init>(com.ibm.icu.impl.UCharacterProperty,int,int,int) -> <init>
    477:477:int getValue(int) -> a
    480:480:int getMaxValue(int) -> b
com.ibm.icu.impl.UCharacterUtility -> com.ibm.icu.impl.UCharacterUtility:
    27:32:boolean isNonCharacter(int) -> isNonCharacter
    45:45:int toInt(char,char) -> a
    62:72:int getNullTermByteSubString(java.lang.StringBuffer,byte[],int) -> a
    90:108:int compareNullTermByteSubString(java.lang.String,byte[],int,int) -> a
    125:134:int skipNullTermByteSubString(byte[],int,int) -> a
    154:164:int skipByteSubString(byte[],int,int,byte) -> a
    190:191:void <init>() -> <init>
com.ibm.icu.impl.UPropertyAliases -> com.ibm.icu.impl.UPropertyAliases:
    int[] valueMaps -> a
    byte[] bytesTries -> b
    java.lang.String nameGroups -> c
    com.ibm.icu.impl.UPropertyAliases$IsAcceptable IS_ACCEPTABLE -> d
    com.ibm.icu.impl.UPropertyAliases INSTANCE -> INSTANCE
    79:112:void load(java.nio.ByteBuffer) -> a
    114:117:void <init>() -> <init>
    120:134:int findProperty(int) -> a
    138:172:int findPropertyValueNameGroup(int,int) -> a
    176:192:java.lang.String getName(int,int) -> b
    196:196:int asciiToLowercase(int) -> b
    200:213:boolean containsName(com.ibm.icu.util.BytesTrie,java.lang.CharSequence) -> a
    240:245:java.lang.String getPropertyName(int,int) -> getPropertyName
    254:265:java.lang.String getPropertyValueName(int,int,int) -> getPropertyValueName
    269:273:int getPropertyOrValueEnum(int,java.lang.CharSequence) -> a
    283:283:int getPropertyEnum(java.lang.CharSequence) -> getPropertyEnum
    290:303:int getPropertyValueEnum(int,java.lang.CharSequence) -> getPropertyValueEnum
    311:321:int getPropertyValueEnumNoThrow(int,java.lang.CharSequence) -> getPropertyValueEnumNoThrow
    332:375:int compare(java.lang.String,java.lang.String) -> compare
    74:232:void <clinit>() -> <clinit>
com.ibm.icu.impl.UPropertyAliases$IsAcceptable -> com.ibm.icu.impl.bR:
    68:68:void <init>() -> <init>
    71:71:boolean isDataVersionAcceptable(byte[]) -> isDataVersionAcceptable
    68:68:void <init>(byte) -> <init>
com.ibm.icu.impl.URLHandler -> com.ibm.icu.impl.URLHandler:
    java.lang.String PROPNAME -> PROPNAME
    java.util.Map handlers -> a
    boolean DEBUG -> b
    26:257:void <init>() -> <init>
    100:129:com.ibm.icu.impl.URLHandler get(java.net.URL) -> get
    133:145:com.ibm.icu.impl.URLHandler getDefault(java.net.URL) -> getDefault
    252:253:void guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean) -> guide
    void guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean) -> guide
    26:26:boolean access$000() -> a
    31:97:void <clinit>() -> <clinit>
com.ibm.icu.impl.URLHandler$FileURLHandler -> com.ibm.icu.impl.bS:
    java.io.File file -> a
    151:161:void <init>(java.net.URL) -> <init>
    164:169:void guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean) -> guide
    172:183:void process(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean,java.lang.String,java.io.File[]) -> a
com.ibm.icu.impl.URLHandler$JarURLHandler -> com.ibm.icu.impl.bT:
    java.util.jar.JarFile jarFile -> a
    java.lang.String prefix -> b
    190:218:void <init>(java.net.URL) -> <init>
    222:247:void guide(com.ibm.icu.impl.URLHandler$URLVisitor,boolean,boolean) -> guide
com.ibm.icu.impl.URLHandler$URLVisitor -> com.ibm.icu.impl.URLHandler$URLVisitor:
    void visit(java.lang.String) -> visit
com.ibm.icu.impl.USerializedSet -> com.ibm.icu.impl.USerializedSet:
    char[] array -> a
    int arrayOffset -> b
    int bmpLength -> c
    int length -> d
    21:183:void <init>() -> <init>
    30:55:boolean getSet(char[],int) -> getSet
    63:91:void setToOne(int) -> setToOne
    102:137:boolean getRange(int,int[]) -> getRange
    150:168:boolean contains(int) -> contains
    180:180:int countRanges() -> countRanges
com.ibm.icu.impl.UTS46 -> com.ibm.icu.impl.UTS46:
    com.ibm.icu.text.Normalizer2 uts46Norm2 -> a
    int options -> b
    java.util.EnumSet severeErrors -> c
    byte[] asciiData -> d
    int L_MASK -> e
    int R_AL_MASK -> f
    int L_R_AL_MASK -> g
    int R_AL_AN_MASK -> h
    int EN_AN_MASK -> i
    int R_AL_EN_AN_MASK -> j
    int L_EN_MASK -> k
    int ES_CS_ET_ON_BN_NSM_MASK -> l
    int L_EN_ES_CS_ET_ON_BN_NSM_MASK -> m
    int R_AL_AN_EN_ES_CS_ET_ON_BN_NSM_MASK -> n
    int U_GC_M_MASK -> o
    34:36:void <init>(int) -> <init>
    40:40:java.lang.StringBuilder labelToASCII(java.lang.CharSequence,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info) -> labelToASCII
    45:45:java.lang.StringBuilder labelToUnicode(java.lang.CharSequence,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info) -> labelToUnicode
    50:57:java.lang.StringBuilder nameToASCII(java.lang.CharSequence,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info) -> nameToASCII
    62:62:java.lang.StringBuilder nameToUnicode(java.lang.CharSequence,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info) -> nameToUnicode
    79:85:boolean isASCIIString(java.lang.CharSequence) -> a
    118:196:java.lang.StringBuilder process(java.lang.CharSequence,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info) -> a
    205:245:java.lang.StringBuilder processUnicode(java.lang.CharSequence,int,int,boolean,boolean,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info) -> a
    251:286:int mapDevChars(java.lang.StringBuilder,int,int) -> a
    293:293:boolean isNonASCIIDisallowedSTD3Valid(int) -> a
    305:310:int replaceLabel(java.lang.StringBuilder,int,int,java.lang.CharSequence,int) -> a
    321:475:int processLabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info) -> a
    481:512:int markBadACELabel(java.lang.StringBuilder,int,int,boolean,com.ibm.icu.text.IDNA$Info) -> b
    549:621:void checkLabelBiDi(java.lang.CharSequence,int,int,com.ibm.icu.text.IDNA$Info) -> a
    638:662:boolean isASCIIOkBiDi(java.lang.CharSequence,int) -> a
    669:733:boolean isLabelOkContextJ(java.lang.CharSequence,int,int) -> a
    738:824:void checkLabelContextO(java.lang.CharSequence,int,int,com.ibm.icu.text.IDNA$Info) -> b
    828:828:int U_MASK(int) -> b
    831:831:int U_GET_GC_MASK(int) -> c
    65:833:void <clinit>() -> <clinit>
com.ibm.icu.impl.UnicodeRegex -> com.ibm.icu.impl.UnicodeRegex:
    com.ibm.icu.text.SymbolTable symbolTable -> a
    com.ibm.icu.impl.UnicodeRegex STANDARD -> b
    java.lang.String bnfCommentString -> c
    java.lang.String bnfVariableInfix -> d
    java.lang.String bnfLineSeparator -> e
    java.lang.Appendable log -> f
    java.util.Comparator LongestFirst -> g
    40:353:void <init>() -> <init>
    51:51:com.ibm.icu.text.SymbolTable getSymbolTable() -> getSymbolTable
    59:60:com.ibm.icu.impl.UnicodeRegex setSymbolTable(com.ibm.icu.text.SymbolTable) -> setSymbolTable
    84:137:java.lang.String transform(java.lang.String) -> transform
    146:146:java.lang.String fix(java.lang.String) -> fix
    156:156:java.util.regex.Pattern compile(java.lang.String) -> compile
    166:166:java.util.regex.Pattern compile(java.lang.String,int) -> compile
    176:176:java.lang.String compileBnf(java.lang.String) -> compileBnf
    206:239:java.lang.String compileBnf(java.util.List) -> compileBnf
    243:243:java.lang.String getBnfCommentString() -> getBnfCommentString
    247:248:void setBnfCommentString(java.lang.String) -> setBnfCommentString
    251:251:java.lang.String getBnfVariableInfix() -> getBnfVariableInfix
    255:256:void setBnfVariableInfix(java.lang.String) -> setBnfVariableInfix
    259:259:java.lang.String getBnfLineSeparator() -> getBnfLineSeparator
    263:264:void setBnfLineSeparator(java.lang.String) -> setBnfLineSeparator
    275:279:java.util.List appendLines(java.util.List,java.lang.String,java.lang.String) -> appendLines
    293:299:java.util.List appendLines(java.util.List,java.io.InputStream,java.lang.String) -> appendLines
    310:312:com.ibm.icu.impl.UnicodeRegex cloneAsThawed() -> cloneAsThawed
    321:321:com.ibm.icu.impl.UnicodeRegex freeze() -> freeze
    329:329:boolean isFrozen() -> isFrozen
    336:343:int processSet(java.lang.String,int,java.lang.StringBuilder,com.ibm.icu.text.UnicodeSet,java.text.ParsePosition) -> a
    365:415:java.util.Map getVariables(java.util.List) -> a
    40:40:java.lang.Object cloneAsThawed() -> cloneAsThawed
    40:40:java.lang.Object freeze() -> freeze
    40:40:java.lang.Object transform(java.lang.Object) -> transform
    347:347:void <clinit>() -> <clinit>
com.ibm.icu.impl.UnicodeRegex$1 -> com.ibm.icu.impl.bU:
    353:353:void <init>(com.ibm.icu.impl.UnicodeRegex) -> <init>
    355:360:int compare(java.lang.Object,java.lang.Object) -> compare
com.ibm.icu.impl.UnicodeSetStringSpan -> com.ibm.icu.impl.UnicodeSetStringSpan:
    int WITH_COUNT -> WITH_COUNT
    int FWD -> FWD
    int BACK -> BACK
    int CONTAINED -> CONTAINED
    int NOT_CONTAINED -> NOT_CONTAINED
    int ALL -> ALL
    int FWD_UTF16_CONTAINED -> FWD_UTF16_CONTAINED
    int FWD_UTF16_NOT_CONTAINED -> FWD_UTF16_NOT_CONTAINED
    int BACK_UTF16_CONTAINED -> BACK_UTF16_CONTAINED
    int BACK_UTF16_NOT_CONTAINED -> BACK_UTF16_NOT_CONTAINED
    com.ibm.icu.text.UnicodeSet spanSet -> a
    com.ibm.icu.text.UnicodeSet spanNotSet -> b
    java.util.ArrayList strings -> c
    short[] spanLengths -> d
    int maxLength16 -> e
    boolean someRelevant -> f
    boolean all -> g
    com.ibm.icu.impl.UnicodeSetStringSpan$OffsetList offsets -> h
    82:200:void <init>(com.ibm.icu.text.UnicodeSet,java.util.ArrayList,int) -> <init>
    207:221:void <init>(com.ibm.icu.impl.UnicodeSetStringSpan,java.util.ArrayList) -> <init>
    230:230:boolean needsStringSpanUTF16() -> needsStringSpanUTF16
    235:235:boolean contains(int) -> contains
    243:250:void addToSpanNotSet(int) -> a
    364:371:int span(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition) -> span
    383:534:int spanWithStrings(java.lang.CharSequence,int,int,com.ibm.icu.text.UnicodeSet$SpanCondition) -> a
    553:591:int spanAndCount(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition,com.ibm.icu.util.OutputInt) -> spanAndCount
    596:631:int spanContainedAndCount(java.lang.CharSequence,int,com.ibm.icu.util.OutputInt) -> a
    642:799:int spanBack(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition) -> spanBack
    835:885:int spanNot(java.lang.CharSequence,int,com.ibm.icu.util.OutputInt) -> b
    889:927:int spanNotBack(java.lang.CharSequence,int) -> a
    932:932:short makeSpanLengthByte(int) -> b
    937:943:boolean matches16(java.lang.CharSequence,int,java.lang.String,int) -> a
    957:957:boolean matches16CPB(java.lang.CharSequence,int,int,java.lang.String,int) -> a
    969:977:int spanOne(com.ibm.icu.text.UnicodeSet,java.lang.CharSequence,int,int) -> a
    981:989:int spanOneBack(com.ibm.icu.text.UnicodeSet,java.lang.CharSequence,int) -> a
com.ibm.icu.impl.UnicodeSetStringSpan$OffsetList -> com.ibm.icu.impl.bV:
    int[] list -> a
    int length -> b
    int start -> c
    boolean $assertionsDisabled -> d
    1029:1031:void <init>() -> <init>
    1034:1038:void setMaxLength(int) -> a
    1041:1045:void clear() -> b
    1048:1048:boolean isEmpty() -> a
    1059:1068:void shift(int) -> b
    1075:1082:void addOffset(int) -> c
    1090:1101:void addOffsetAndCount(int,int) -> a
    1107:1111:boolean containsOffset(int) -> d
    1118:1123:boolean hasCountAtOffset(int,int) -> b
    1133:1159:int popMinimum(com.ibm.icu.util.OutputInt) -> a
    1024:1024:void <clinit>() -> <clinit>
com.ibm.icu.impl.Utility -> com.ibm.icu.impl.Utility:
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    char[] HEX_DIGIT -> a
    char[] UNESCAPE_MAP -> b
    char[] DIGITS -> c
    19:19:void <init>() -> <init>
    30:33:boolean arrayEquals(java.lang.Object[],java.lang.Object) -> arrayEquals
    42:45:boolean arrayEquals(int[],java.lang.Object) -> arrayEquals
    54:57:boolean arrayEquals(double[],java.lang.Object) -> arrayEquals
    61:64:boolean arrayEquals(byte[],java.lang.Object) -> arrayEquals
    73:84:boolean arrayEquals(java.lang.Object,java.lang.Object) -> arrayEquals
    97:103:boolean arrayRegionMatches(java.lang.Object[],int,java.lang.Object[],int,int) -> arrayRegionMatches
    116:122:boolean arrayRegionMatches(char[],int,char[],int,int) -> arrayRegionMatches
    135:141:boolean arrayRegionMatches(int[],int,int[],int,int) -> arrayRegionMatches
    154:160:boolean arrayRegionMatches(double[],int,double[],int,int) -> arrayRegionMatches
    164:170:boolean arrayRegionMatches(byte[],int,byte[],int,int) -> arrayRegionMatches
    177:177:boolean objectEquals(java.lang.Object,java.lang.Object) -> objectEquals
    186:186:int checkCompare(java.lang.Comparable,java.lang.Comparable) -> checkCompare
    195:195:int checkHash(java.lang.Object) -> checkHash
    224:240:java.lang.String arrayToRLEString(int[]) -> arrayToRLEString
    257:273:java.lang.String arrayToRLEString(short[]) -> arrayToRLEString
    290:305:java.lang.String arrayToRLEString(char[]) -> arrayToRLEString
    323:344:java.lang.String arrayToRLEString(byte[]) -> arrayToRLEString
    352:372:void encodeRun(java.lang.Appendable,int,int) -> a
    376:381:void appendInt(java.lang.Appendable,int) -> a
    389:409:void encodeRun(java.lang.Appendable,short,int) -> a
    417:433:void encodeRun(java.lang.Appendable,byte,int,byte[]) -> a
    446:458:void appendEncodedByte(java.lang.Appendable,byte,byte[]) -> a
    464:493:int[] RLEStringToIntArray(java.lang.String) -> RLEStringToIntArray
    496:496:int getInt(java.lang.String,int) -> a
    503:526:short[] RLEStringToShortArray(java.lang.String) -> RLEStringToShortArray
    533:556:char[] RLEStringToCharArray(java.lang.String) -> RLEStringToCharArray
    563:629:byte[] RLEStringToByteArray(java.lang.String) -> RLEStringToByteArray
    640:684:java.lang.String formatForSource(java.lang.String) -> formatForSource
    695:729:java.lang.String format1ForSource(java.lang.String) -> format1ForSource
    737:753:java.lang.String escape(java.lang.String) -> escape
    782:896:int unescapeAt(java.lang.String,int[]) -> unescapeAt
    905:922:java.lang.String unescape(java.lang.String) -> unescape
    930:947:java.lang.String unescapeLeniently(java.lang.String) -> unescapeLeniently
    955:955:java.lang.String hex(long) -> hex
    962:974:java.lang.String hex(long,int) -> hex
    982:982:java.lang.String hex(java.lang.CharSequence) -> hex
    992:1011:java.lang.Appendable hex(java.lang.CharSequence,int,java.lang.CharSequence,boolean,java.lang.Appendable) -> hex
    1016:1022:java.lang.String hex(byte[],int,int,java.lang.String) -> hex
    1030:1030:java.lang.String hex(java.lang.CharSequence,int,java.lang.CharSequence) -> hex
    1045:1058:void split(java.lang.String,char,java.lang.String[]) -> split
    1070:1080:java.lang.String[] split(java.lang.String,char) -> split
    1094:1097:int lookup(java.lang.String,java.lang.String[]) -> lookup
    1113:1121:boolean parseChar(java.lang.String,int[],char) -> parseChar
    1147:1185:int parsePattern(java.lang.String,int,int,java.lang.String,int[]) -> parsePattern
    1208:1252:int parsePattern(java.lang.String,com.ibm.icu.text.Replaceable,int,int) -> parsePattern
    1264:1298:int parseInteger(java.lang.String,int[],int) -> parseInteger
    1316:1336:java.lang.String parseUnicodeIdentifier(java.lang.String,int[]) -> parseUnicodeIdentifier
    1361:1370:void recursiveAppendNumber(java.lang.Appendable,int,int,int) -> a
    1389:1405:java.lang.Appendable appendNumber(java.lang.Appendable,int,int,int) -> appendNumber
    1430:1450:int parseNumber(java.lang.String,int[],int) -> parseNumber
    1459:1459:boolean isUnprintable(int) -> isUnprintable
    1471:1490:boolean escapeUnprintable(java.lang.Appendable,int) -> escapeUnprintable
    1512:1523:int quotedIndexOf(java.lang.String,int,int,java.lang.String) -> quotedIndexOf
    1552:1630:void appendToRule(java.lang.StringBuffer,int,boolean,boolean,java.lang.StringBuffer) -> appendToRule
    1641:1645:void appendToRule(java.lang.StringBuffer,java.lang.String,boolean,boolean,java.lang.StringBuffer) -> appendToRule
    1655:1659:void appendToRule(java.lang.StringBuffer,com.ibm.icu.text.UnicodeMatcher,boolean,java.lang.StringBuffer) -> appendToRule
    1670:1678:int compareUnsigned(int,int) -> compareUnsigned
    1692:1723:byte highBit(int) -> highBit
    1731:1735:java.lang.String valueOf(int[]) -> valueOf
    1745:1751:java.lang.String repeat(java.lang.String,int) -> repeat
    1755:1755:java.lang.String[] splitString(java.lang.String,java.lang.String) -> splitString
    1762:1762:java.lang.String[] splitWhitespace(java.lang.String) -> splitWhitespace
    1773:1773:java.lang.String fromHex(java.lang.String,int,java.lang.String) -> fromHex
    1784:1793:java.lang.String fromHex(java.lang.String,int,java.util.regex.Pattern) -> fromHex
    632:1339:void <clinit>() -> <clinit>
com.ibm.icu.impl.UtilityExtensions -> com.ibm.icu.impl.UtilityExtensions:
    18:18:void <init>() -> <init>
    28:32:void appendToRule(java.lang.StringBuffer,java.lang.String,boolean,boolean,java.lang.StringBuffer) -> appendToRule
    43:47:void appendToRule(java.lang.StringBuffer,com.ibm.icu.text.UnicodeMatcher,boolean,java.lang.StringBuffer) -> appendToRule
    55:57:java.lang.String formatInput(com.ibm.icu.text.ReplaceableString,com.ibm.icu.text.Transliterator$Position) -> formatInput
    68:92:java.lang.StringBuffer formatInput(java.lang.StringBuffer,com.ibm.icu.text.ReplaceableString,com.ibm.icu.text.Transliterator$Position) -> formatInput
    100:100:java.lang.String formatInput(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position) -> formatInput
    109:109:java.lang.StringBuffer formatInput(java.lang.StringBuffer,com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position) -> formatInput
com.ibm.icu.impl.ZoneMeta -> com.ibm.icu.impl.ZoneMeta:
    java.lang.ref.SoftReference REF_SYSTEM_ZONES -> a
    java.lang.ref.SoftReference REF_CANONICAL_SYSTEM_ZONES -> b
    java.lang.ref.SoftReference REF_CANONICAL_SYSTEM_LOCATION_ZONES -> c
    java.lang.String[] ZONEIDS -> d
    com.ibm.icu.impl.ICUCache CANONICAL_ID_CACHE -> e
    com.ibm.icu.impl.ICUCache REGION_CACHE -> f
    com.ibm.icu.impl.ICUCache SINGLE_COUNTRY_CACHE -> g
    com.ibm.icu.impl.ZoneMeta$SystemTimeZoneCache SYSTEM_ZONE_CACHE -> h
    com.ibm.icu.impl.ZoneMeta$CustomTimeZoneCache CUSTOM_ZONE_CACHE -> i
    boolean $assertionsDisabled -> j
    42:586:void <init>() -> <init>
    65:82:java.util.Set getSystemZIDs() -> a
    92:112:java.util.Set getCanonicalSystemZIDs() -> b
    124:147:java.util.Set getCanonicalSystemLocationZIDs() -> c
    158:204:java.util.Set getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer) -> getAvailableIDs
    221:232:int countEquivalentIDs(java.lang.String) -> countEquivalentIDs
    254:276:java.lang.String getEquivalentID(java.lang.String,int) -> getEquivalentID
    285:297:java.lang.String[] getZoneIDs() -> d
    301:307:java.lang.String getZoneID(int) -> a
    311:337:int getZoneIndex(java.lang.String) -> a
    345:348:java.lang.String getCanonicalCLDRID(com.ibm.icu.util.TimeZone) -> getCanonicalCLDRID
    359:388:java.lang.String getCanonicalCLDRID(java.lang.String) -> getCanonicalCLDRID
    392:417:java.lang.String findCLDRCanonicalID(java.lang.String) -> b
    425:444:java.lang.String getRegion(java.lang.String) -> getRegion
    452:456:java.lang.String getCanonicalCountry(java.lang.String) -> getCanonicalCountry
    465:506:java.lang.String getCanonicalCountry(java.lang.String,com.ibm.icu.util.Output) -> getCanonicalCountry
    519:538:com.ibm.icu.util.UResourceBundle openOlsonResource(com.ibm.icu.util.UResourceBundle,java.lang.String) -> openOlsonResource
    575:575:com.ibm.icu.util.TimeZone getSystemTimeZone(java.lang.String) -> getSystemTimeZone
    616:626:com.ibm.icu.util.TimeZone getCustomTimeZone(java.lang.String) -> getCustomTimeZone
    637:641:java.lang.String getCustomID(java.lang.String) -> getCustomID
    655:764:boolean parseCustomID(java.lang.String,int[]) -> a
    773:794:com.ibm.icu.util.TimeZone getCustomTimeZone(int) -> getCustomTimeZone
    802:829:java.lang.String formatCustomID(int,int,int,boolean) -> a
    839:848:java.lang.String getShortID(com.ibm.icu.util.TimeZone) -> getShortID
    858:862:java.lang.String getShortID(java.lang.String) -> getShortID
    866:880:java.lang.String getShortIDFromCanonical(java.lang.String) -> c
    42:606:void <clinit>() -> <clinit>
com.ibm.icu.impl.ZoneMeta$1 -> com.ibm.icu.impl.bW:
    int[] $SwitchMap$com$ibm$icu$util$TimeZone$SystemTimeZoneType -> a
    159:159:void <clinit>() -> <clinit>
com.ibm.icu.impl.ZoneMeta$CustomTimeZoneCache -> com.ibm.icu.impl.bX:
    boolean $assertionsDisabled -> a
    586:586:void <init>() -> <init>
    593:602:com.ibm.icu.util.SimpleTimeZone createInstance$487fc31a(int[]) -> a
    586:586:java.lang.Object createInstance(java.lang.Object,java.lang.Object) -> createInstance
    586:586:void <init>(byte) -> <init>
    586:586:void <clinit>() -> <clinit>
com.ibm.icu.impl.ZoneMeta$SystemTimeZoneCache -> com.ibm.icu.impl.bY:
    545:545:void <init>() -> <init>
    552:564:com.ibm.icu.impl.OlsonTimeZone createInstance$3f6532a0(java.lang.String) -> a
    545:545:java.lang.Object createInstance(java.lang.Object,java.lang.Object) -> createInstance
    545:545:void <init>(byte) -> <init>
com.ibm.icu.impl.coll.BOCSU -> com.ibm.icu.impl.coll.BOCSU:
    101:131:int writeIdenticalLevelRun(int,java.lang.CharSequence,int,int,com.ibm.icu.util.ByteArrayWrapper) -> writeIdenticalLevelRun
    135:139:void ensureAppendCapacity(com.ibm.icu.util.ByteArrayWrapper,int,int) -> a
    223:224:void <init>() -> <init>
    239:245:long getNegDivMod(int,int) -> a
    258:323:int writeDiff(int,byte[],int) -> a
com.ibm.icu.impl.coll.Collation -> com.ibm.icu.impl.coll.Collation:
    int SENTINEL_CP -> SENTINEL_CP
    int LESS -> LESS
    int EQUAL -> EQUAL
    int GREATER -> GREATER
    int TERMINATOR_BYTE -> TERMINATOR_BYTE
    int LEVEL_SEPARATOR_BYTE -> LEVEL_SEPARATOR_BYTE
    int MERGE_SEPARATOR_BYTE -> MERGE_SEPARATOR_BYTE
    long MERGE_SEPARATOR_PRIMARY -> MERGE_SEPARATOR_PRIMARY
    int PRIMARY_COMPRESSION_LOW_BYTE -> PRIMARY_COMPRESSION_LOW_BYTE
    int PRIMARY_COMPRESSION_HIGH_BYTE -> PRIMARY_COMPRESSION_HIGH_BYTE
    int COMMON_WEIGHT16 -> COMMON_WEIGHT16
    int COMMON_SEC_AND_TER_CE -> COMMON_SEC_AND_TER_CE
    int CASE_MASK -> CASE_MASK
    int ONLY_TERTIARY_MASK -> ONLY_TERTIARY_MASK
    int QUATERNARY_MASK -> QUATERNARY_MASK
    int CASE_AND_QUATERNARY_MASK -> CASE_AND_QUATERNARY_MASK
    long MAX_PRIMARY -> MAX_PRIMARY
    long FFFD_PRIMARY -> FFFD_PRIMARY
    long NO_CE -> NO_CE
    int NO_LEVEL -> NO_LEVEL
    int PRIMARY_LEVEL -> PRIMARY_LEVEL
    int SECONDARY_LEVEL -> SECONDARY_LEVEL
    int CASE_LEVEL -> CASE_LEVEL
    int TERTIARY_LEVEL -> TERTIARY_LEVEL
    int QUATERNARY_LEVEL -> QUATERNARY_LEVEL
    int IDENTICAL_LEVEL -> IDENTICAL_LEVEL
    int ZERO_LEVEL -> ZERO_LEVEL
    boolean $assertionsDisabled -> a
    20:20:void <init>() -> <init>
    277:277:boolean isAssignedCE32(int) -> a
    309:309:int makeLongPrimaryCE32(long) -> a
    313:313:long primaryFromLongPrimaryCE32(int) -> b
    316:316:long ceFromLongPrimaryCE32(int) -> c
    320:320:int makeLongSecondaryCE32(int) -> d
    323:323:long ceFromLongSecondaryCE32(int) -> e
    328:328:int makeCE32FromTagIndexAndLength(int,int,int) -> a
    332:332:int makeCE32FromTagAndIndex(int,int) -> a
    336:336:boolean isSpecialCE32(int) -> f
    340:340:int tagFromCE32(int) -> g
    344:344:boolean hasCE32Tag(int,int) -> b
    348:348:boolean isLongPrimaryCE32(int) -> h
    352:352:boolean isSimpleOrLongCE32(int) -> i
    361:361:boolean isSelfContainedCE32(int) -> j
    368:368:boolean isPrefixCE32(int) -> k
    372:372:boolean isContractionCE32(int) -> l
    376:376:boolean ce32HasContext(int) -> m
    386:386:long latinCE0FromCE32(int) -> n
    394:394:long latinCE1FromCE32(int) -> o
    401:401:int indexFromCE32(int) -> p
    408:408:int lengthFromCE32(int) -> q
    415:415:char digitFromCE32(int) -> r
    421:422:long ceFromSimpleCE32(int) -> s
    427:439:long ceFromCE32(int) -> t
    446:446:long makeCE(long) -> makeCE
    453:453:long makeCE(long,int,int,int) -> a
    465:475:long incTwoBytePrimaryByOffset(long,boolean,int) -> incTwoBytePrimaryByOffset
    485:500:long incThreeBytePrimaryByOffset(long,boolean,int) -> incThreeBytePrimaryByOffset
    511:524:long decTwoBytePrimaryByOneStep(long,boolean,int) -> a
    533:554:long decThreeBytePrimaryByOneStep(long,boolean,int) -> b
    561:565:long getThreeBytePrimaryForOffsetData(int,long) -> a
    573:583:long unassignedPrimaryFromCodePoint(int) -> v
    587:587:long unassignedCEFromCodePoint(int) -> u
    20:20:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationBuilder -> com.ibm.icu.impl.coll.CollationBuilder:
    com.ibm.icu.text.UnicodeSet COMPOSITES -> a
    com.ibm.icu.text.Normalizer2 nfd -> b
    com.ibm.icu.text.Normalizer2 fcd -> c
    com.ibm.icu.impl.Normalizer2Impl nfcImpl -> d
    com.ibm.icu.impl.coll.CollationTailoring base -> e
    com.ibm.icu.impl.coll.CollationData baseData -> f
    com.ibm.icu.impl.coll.CollationRootElements rootElements -> g
    long variableTop -> h
    com.ibm.icu.impl.coll.CollationDataBuilder dataBuilder -> i
    boolean fastLatinEnabled -> j
    com.ibm.icu.text.UnicodeSet optimizeSet -> k
    long[] ces -> l
    int cesLength -> m
    com.ibm.icu.impl.coll.UVector32 rootPrimaryIndexes -> n
    com.ibm.icu.impl.coll.UVector64 nodes -> o
    boolean $assertionsDisabled -> p
    36:1498:void <init>(com.ibm.icu.impl.coll.CollationTailoring) -> <init>
    54:100:com.ibm.icu.impl.coll.CollationTailoring parseAndBuild(java.lang.String) -> parseAndBuild
    106:228:void addReset(int,java.lang.CharSequence) -> a
    235:273:int getWeight16Before$48694760(long,int) -> a
    277:430:long getSpecialResetPosition(java.lang.CharSequence) -> a
    437:519:void addRelation(int,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence) -> a
    526:553:int findOrInsertNodeForCEs(int) -> c
    557:572:int findOrInsertNodeForRootCE(long,int) -> b
    584:604:int binarySearchForRootPrimaryNode(int[],int,long[],long) -> a
    609:618:int findOrInsertNodeForPrimary(long) -> c
    624:685:int findOrInsertWeakNode(int,int,int) -> a
    695:713:int insertTailoredNodeAfter(int,int) -> a
    722:737:int insertNodeBetween(int,int,long) -> a
    748:770:int findCommonNode(int,int) -> b
    774:834:void setCaseBits(java.lang.CharSequence) -> b
    839:840:void suppressContractions(com.ibm.icu.text.UnicodeSet) -> a
    845:846:void optimize(com.ibm.icu.text.UnicodeSet) -> b
    856:859:int addWithClosure(java.lang.CharSequence,java.lang.CharSequence,long[],int,int) -> a
    866:892:int addOnlyClosure(java.lang.CharSequence,java.lang.CharSequence,long[],int,int) -> b
    898:952:void addTailComposites(java.lang.CharSequence,java.lang.CharSequence) -> a
    957:1038:boolean mergeCompositeIntoString(java.lang.CharSequence,int,int,java.lang.CharSequence,java.lang.StringBuilder,java.lang.StringBuilder) -> a
    1043:1050:boolean equalSubSequences(java.lang.CharSequence,int,java.lang.CharSequence,int) -> a
    1054:1054:boolean ignorePrefix(java.lang.CharSequence) -> c
    1059:1059:boolean ignoreString(java.lang.CharSequence) -> d
    1062:1062:boolean isFCD(java.lang.CharSequence) -> e
    1072:1087:void closeOverComposites() -> a
    1091:1099:int addIfDifferent(java.lang.CharSequence,java.lang.CharSequence,long[],int,int) -> c
    1104:1111:boolean sameCEs(long[],int,long[],int) -> a
    1127:1295:void makeTailoredCEs() -> b
    1302:1316:int countTailoredNodes(long[],int,int) -> a
    1346:1351:void finalizeCEs() -> c
    1367:1367:long tempCEFromIndexAndStrength(int,int) -> c
    1380:1381:int indexFromTempCE(long) -> d
    1387:1387:int strengthFromTempCE(long) -> e
    1390:1391:boolean isTempCE(long) -> f
    1395:1396:int indexFromTempCE32(int) -> d
    1402:1402:boolean isTempCE32(int) -> e
    1408:1408:int ceStrength(long) -> g
    1435:1435:long nodeFromWeight32(long) -> h
    1438:1438:long nodeFromWeight16(int) -> f
    1441:1441:long nodeFromPreviousIndex(int) -> g
    1444:1444:long nodeFromNextIndex(int) -> h
    1447:1447:long nodeFromStrength(int) -> i
    1451:1451:long weight32FromNode(long) -> i
    1454:1454:int weight16FromNode(long) -> j
    1457:1457:int previousIndexFromNode(long) -> k
    1460:1460:int nextIndexFromNode(long) -> l
    1463:1463:int strengthFromNode(long) -> m
    1467:1467:boolean nodeHasBefore2(long) -> n
    1470:1470:boolean nodeHasBefore3(long) -> o
    1473:1473:boolean nodeHasAnyBefore(long) -> p
    1476:1476:boolean isTailoredNode(long) -> q
    1480:1480:long changeNodePreviousIndex(long,int) -> c
    1483:1483:long changeNodeNextIndex(long,int) -> d
    27:27:boolean access$000(int) -> a
    27:27:int access$100(int) -> b
    27:27:boolean access$200(long) -> a
    27:27:int access$300(long) -> b
    27:1069:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationBuilder$1 -> com.ibm.icu.impl.coll.a:
    int[] $SwitchMap$com$ibm$icu$impl$coll$CollationRuleParser$Position -> a
    283:283:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationBuilder$CEFinalizer -> com.ibm.icu.impl.coll.b:
    long[] finalCEs -> a
    boolean $assertionsDisabled -> b
    1320:1322:void <init>(long[]) -> <init>
    1324:1329:long modifyCE32(int) -> a
    1333:1337:long modifyCE(long) -> a
    1319:1319:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationCompare -> com.ibm.icu.impl.coll.CollationCompare:
    boolean $assertionsDisabled -> a
    16:16:void <init>() -> <init>
    19:347:int compareUpToQuaternary(com.ibm.icu.impl.coll.CollationIterator,com.ibm.icu.impl.coll.CollationIterator,com.ibm.icu.impl.coll.CollationSettings) -> compareUpToQuaternary
    16:16:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationData -> com.ibm.icu.impl.coll.CollationData:
    int[] EMPTY_INT_ARRAY -> l
    com.ibm.icu.impl.Trie2_32 trie -> a
    int[] ce32s -> b
    long[] ces -> c
    java.lang.String contexts -> d
    com.ibm.icu.impl.coll.CollationData base -> base
    int[] jamoCE32s -> e
    com.ibm.icu.impl.Normalizer2Impl nfcImpl -> nfcImpl
    long numericPrimary -> f
    boolean[] compressibleBytes -> compressibleBytes
    com.ibm.icu.text.UnicodeSet unsafeBackwardSet -> g
    char[] fastLatinTable -> fastLatinTable
    char[] fastLatinTableHeader -> h
    int numScripts -> i
    char[] scriptsIndex -> j
    char[] scriptStarts -> k
    long[] rootElements -> rootElements
    boolean $assertionsDisabled -> m
    37:504:void <init>(com.ibm.icu.impl.Normalizer2Impl) -> <init>
    42:42:int getCE32(int) -> getCE32
    46:46:int getCE32FromSupplementary(int) -> a
    50:50:boolean isDigit(int) -> h
    55:55:boolean isUnsafeBackward(int,boolean) -> isUnsafeBackward
    59:59:boolean isCompressibleLeadByte(int) -> isCompressibleLeadByte
    63:63:boolean isCompressiblePrimary(long) -> isCompressiblePrimary
    71:71:int getCE32FromContexts(int) -> b
    79:90:int getIndirectCE32(int) -> c
    98:101:int getFinalCE32(int) -> d
    108:109:long getCEFromOffsetCE32(int,int) -> a
    118:177:long getSingleCE(int) -> e
    184:184:int getFCD16(int) -> f
    194:195:long getFirstPrimaryForGroup(int) -> g
    205:210:long getLastPrimaryForGroup(int) -> getLastPrimaryForGroup
    218:234:int getGroupForPrimary(long) -> getGroupForPrimary
    238:249:int getScriptIndex(int) -> i
    255:279:int[] getEquivalentScripts(int) -> getEquivalentScripts
    293:294:void makeReorderRanges(int[],com.ibm.icu.impl.coll.UVector32) -> a
    297:447:void makeReorderRanges(int[],boolean,com.ibm.icu.impl.coll.UVector32) -> a
    450:457:int addLowScriptRange(short[],int,int) -> a
    461:468:int addHighScriptRange(short[],int,int) -> b
    473:473:java.lang.String scriptCodeString(int) -> j
    28:477:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationDataBuilder -> com.ibm.icu.impl.coll.c:
    com.ibm.icu.impl.Normalizer2Impl nfcImpl -> h
    com.ibm.icu.impl.coll.CollationData base -> a
    com.ibm.icu.impl.Trie2Writable trie -> b
    com.ibm.icu.impl.coll.UVector32 ce32s -> c
    com.ibm.icu.impl.coll.UVector64 ce64s -> d
    java.util.ArrayList conditionalCE32s -> i
    com.ibm.icu.text.UnicodeSet contextChars -> e
    java.lang.StringBuilder contexts -> f
    com.ibm.icu.text.UnicodeSet unsafeBackwardSet -> g
    boolean modified -> j
    boolean fastLatinEnabled -> k
    com.ibm.icu.impl.coll.CollationFastLatinBuilder fastLatinBuilder -> l
    com.ibm.icu.impl.coll.CollationDataBuilder$DataBuilderCollationIterator collIter -> m
    boolean $assertionsDisabled -> n
    48:1346:void <init>() -> <init>
    65:95:void initForTailoring(com.ibm.icu.impl.coll.CollationData) -> a
    108:108:boolean hasMappings() -> a
    129:168:int encodeCEs(long[],int) -> a
    172:246:void addCE32(java.lang.CharSequence,java.lang.CharSequence,int) -> a
    253:266:void copyFrom(com.ibm.icu.impl.coll.CollationDataBuilder,com.ibm.icu.impl.coll.CollationDataBuilder$CEModifier) -> a
    269:281:void optimize(com.ibm.icu.text.UnicodeSet) -> a
    284:305:void suppressContractions(com.ibm.icu.text.UnicodeSet) -> b
    307:307:void enableFastLatin() -> b
    309:318:void build(com.ibm.icu.impl.coll.CollationData) -> b
    330:330:int getCEs(java.lang.CharSequence,long[],int) -> a
    334:338:int getCEs(java.lang.CharSequence,java.lang.CharSequence,long[],int) -> a
    396:399:int getCE32FromOffsetCE32(boolean,int,int) -> a
    403:408:int addCE(long) -> b
    412:417:int addCE32(int) -> f
    421:430:int addConditionalCE32(java.lang.String,int) -> a
    434:434:com.ibm.icu.impl.coll.CollationDataBuilder$ConditionalCE32 getConditionalCE32(int) -> a
    437:437:com.ibm.icu.impl.coll.CollationDataBuilder$ConditionalCE32 getConditionalCE32ForCE32(int) -> b
    441:441:int makeBuilderContextCE32(int) -> c
    444:444:boolean isBuilderContextCE32(int) -> d
    448:462:int encodeOneCEAsCE32(long) -> c
    467:475:int encodeOneCE(long) -> a
    480:508:int encodeExpansion(long[],int,int) -> a
    513:541:int encodeExpansion32(int[],int,int) -> a
    545:625:int copyFromBaseCE32(int,int,boolean) -> a
    635:664:int copyContractionsFromBaseCE32(java.lang.StringBuilder,int,int,com.ibm.icu.impl.coll.CollationDataBuilder$ConditionalCE32) -> a
    786:789:void enumRangeForCopy(int,int,int,com.ibm.icu.impl.coll.CollationDataBuilder$CopyHelper) -> a
    792:852:boolean getJamoCE32s(int[]) -> a
    856:874:void setDigitTags() -> d
    877:903:void setLeadSurrogates() -> e
    906:986:void buildMappings(com.ibm.icu.impl.coll.CollationData) -> c
    989:997:void clearContexts() -> c
    1002:1015:void buildContexts() -> f
    1019:1126:int buildContext(com.ibm.icu.impl.coll.CollationDataBuilder$ConditionalCE32) -> a
    1130:1138:int addContextTrie(int,com.ibm.icu.util.CharsTrieBuilder) -> a
    1142:1161:void buildFastLatinTable(com.ibm.icu.impl.coll.CollationData) -> d
    1164:1168:int getCEs(java.lang.CharSequence,int,long[],int) -> a
    1173:1178:int jamoCpFromIndex(int) -> e
    1329:1329:boolean isMutable() -> g
    35:35:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationDataBuilder$CEModifier -> com.ibm.icu.impl.coll.d:
    long modifyCE32(int) -> a
    long modifyCE(long) -> a
com.ibm.icu.impl.coll.CollationDataBuilder$ConditionalCE32 -> com.ibm.icu.impl.coll.e:
    java.lang.String context -> a
    int ce32 -> b
    int defaultCE32 -> c
    int builtCE32 -> d
    int next -> e
    352:358:void <init>(java.lang.String,int) -> <init>
    360:360:boolean hasContext() -> a
    361:361:int prefixLength() -> b
    1062:1075:java.lang.String com.ibm.icu.impl.coll.CollationLoader$ASCII.toLowerCase(java.lang.String):62:75 -> a
com.ibm.icu.impl.coll.CollationDataBuilder$CopyHelper -> com.ibm.icu.impl.coll.f:
    com.ibm.icu.impl.coll.CollationDataBuilder src -> a
    com.ibm.icu.impl.coll.CollationDataBuilder dest -> b
    com.ibm.icu.impl.coll.CollationDataBuilder$CEModifier modifier -> c
    long[] modifiedCEs -> d
    boolean $assertionsDisabled -> e
    669:781:void <init>(com.ibm.icu.impl.coll.CollationDataBuilder,com.ibm.icu.impl.coll.CollationDataBuilder,com.ibm.icu.impl.coll.CollationDataBuilder$CEModifier) -> <init>
    676:681:void copyRangeCE32(int,int,int) -> a
    684:775:int copyCE32(int) -> a
    667:667:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationDataBuilder$DataBuilderCollationIterator -> com.ibm.icu.impl.coll.g:
    com.ibm.icu.impl.coll.CollationDataBuilder builder -> a
    com.ibm.icu.impl.coll.CollationData builderData -> b
    int[] jamoCE32s -> c
    java.lang.CharSequence s -> d
    int pos -> e
    boolean $assertionsDisabled -> f
    1202:1321:void <init>(com.ibm.icu.impl.coll.CollationDataBuilder,com.ibm.icu.impl.coll.CollationData) -> <init>
    1217:1248:int fetchCEs(java.lang.CharSequence,int,long[],int) -> a
    1253:1255:void resetToOffset(int) -> resetToOffset
    1259:1259:int getOffset() -> getOffset
    1264:1269:int nextCodePoint() -> nextCodePoint
    1274:1279:int previousCodePoint() -> previousCodePoint
    1284:1285:void forwardNumCodePoints(int) -> forwardNumCodePoints
    1289:1290:void backwardNumCodePoints(int) -> backwardNumCodePoints
    1294:1294:int getDataCE32(int) -> getDataCE32
    1299:1315:int getCE32FromBuilderData(int) -> getCE32FromBuilderData
    1200:1200:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationDataReader -> com.ibm.icu.impl.coll.h:
    com.ibm.icu.impl.coll.CollationDataReader$IsAcceptable IS_ACCEPTABLE -> a
    boolean $assertionsDisabled -> b
    99:489:void read(com.ibm.icu.impl.coll.CollationTailoring,java.nio.ByteBuffer,com.ibm.icu.impl.coll.CollationTailoring) -> a
    500:500:void <init>() -> <init>
    29:497:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationDataReader$IsAcceptable -> com.ibm.icu.impl.coll.i:
    491:491:void <init>() -> <init>
    494:494:boolean isDataVersionAcceptable(byte[]) -> isDataVersionAcceptable
    491:491:void <init>(byte) -> <init>
com.ibm.icu.impl.coll.CollationFCD -> com.ibm.icu.impl.coll.CollationFCD:
    byte[] lcccIndex -> a
    byte[] tcccIndex -> b
    int[] lcccBits -> c
    int[] tcccBits -> d
    boolean $assertionsDisabled -> e
    48:48:void <init>() -> <init>
    50:54:boolean hasLccc(int) -> hasLccc
    62:66:boolean hasTccc(int) -> hasTccc
    77:80:boolean mayHaveLccc(int) -> a
    97:97:boolean maybeTibetanCompositeVowel(int) -> b
    112:112:boolean isFCD16OfTibetanCompositeVowel(int) -> c
    48:388:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationFastLatin -> com.ibm.icu.impl.coll.CollationFastLatin:
    int VERSION -> VERSION
    int LATIN_MAX -> LATIN_MAX
    int LATIN_LIMIT -> LATIN_LIMIT
    int BAIL_OUT_RESULT -> BAIL_OUT_RESULT
    boolean $assertionsDisabled -> a
    182:190:int getCharIndex(char) -> a
    202:279:int getOptions(com.ibm.icu.impl.coll.CollationData,com.ibm.icu.impl.coll.CollationSettings,char[]) -> getOptions
    288:661:int compareUTF16(char[],char[],int,java.lang.CharSequence,java.lang.CharSequence,int) -> compareUTF16
    665:673:int lookup(char[],int) -> a
    682:733:long nextPair$16d01596(char[],int,java.lang.CharSequence,int) -> a
    738:742:int getPrimaries(int,int) -> a
    746:750:int getSecondariesFromOneShortCE(int) -> a
    755:776:int getSecondaries(int,int) -> b
    784:816:int getCases(int,boolean,int) -> a
    820:866:int getTertiaries(int,boolean,int) -> b
    872:898:int getQuaternaries(int,int) -> c
    901:901:void <init>() -> <init>
    17:17:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationFastLatinBuilder -> com.ibm.icu.impl.coll.j:
    long ce0 -> a
    long ce1 -> b
    long[][] charCEs -> c
    com.ibm.icu.impl.coll.UVector64 contractionCEs -> d
    com.ibm.icu.impl.coll.UVector64 uniqueCEs -> e
    char[] miniCEs -> f
    long[] lastSpecialPrimaries -> g
    long firstDigitPrimary -> h
    long firstLatinPrimary -> i
    long lastLatinPrimary -> j
    long firstShortPrimary -> k
    boolean shortPrimaryOverflow -> l
    java.lang.StringBuilder result -> m
    int headerLength -> n
    boolean $assertionsDisabled -> o
    25:32:int compareInt64AsUnsigned(long,long) -> a
    43:61:int binarySearch(long[],int,long) -> a
    64:702:void <init>() -> <init>
    79:111:boolean forData(com.ibm.icu.impl.coll.CollationData) -> a
    118:120:char[] getHeader() -> a
    124:126:char[] getTable() -> b
    130:151:boolean loadGroups(com.ibm.icu.impl.coll.CollationData) -> b
    157:179:boolean inSameGroup(long,long) -> b
    185:189:void resetCEs() -> c
    192:228:void getCEs(com.ibm.icu.impl.coll.CollationData) -> c
    231:320:boolean getCEsFromCE32(com.ibm.icu.impl.coll.CollationData,int,int) -> a
    324:376:boolean getCEsFromContractionCE32(com.ibm.icu.impl.coll.CollationData,int) -> a
    380:385:void addContractionEntry(int,long,long) -> a
    388:394:void addUniqueCE(long) -> a
    397:400:int getMiniCE(long) -> b
    404:528:void encodeUniqueCEs() -> d
    531:554:void encodeCharCEs() -> e
    559:623:void encodeContractions() -> f
    626:667:int encodeTwoCEs(long,long) -> c
    671:671:boolean isContractionCharCE(long) -> c
    18:18:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationIterator -> com.ibm.icu.impl.coll.CollationIterator:
    long NO_CP_AND_CE32 -> NO_CP_AND_CE32
    com.ibm.icu.impl.Trie2_32 trie -> trie
    com.ibm.icu.impl.coll.CollationData data -> data
    com.ibm.icu.impl.coll.CollationIterator$CEBuffer ceBuffer -> a
    int cesIndex -> b
    com.ibm.icu.impl.coll.CollationIterator$SkippedState skipped -> c
    int numCpFwd -> d
    boolean isNumeric -> e
    boolean $assertionsDisabled -> f
    182:188:void <init>(com.ibm.icu.impl.coll.CollationData) -> <init>
    190:196:void <init>(com.ibm.icu.impl.coll.CollationData,boolean) -> <init>
    205:217:boolean equals(java.lang.Object) -> equals
    void resetToOffset(int) -> resetToOffset
    int getOffset() -> getOffset
    233:272:long nextCE() -> nextCE
    280:284:int fetchCEs() -> fetchCEs
    291:293:void setCurrentCE(long) -> a
    299:332:long previousCE(com.ibm.icu.impl.coll.UVector32) -> previousCE
    336:336:int getCEsLength() -> getCEsLength
    340:340:long getCE(int) -> getCE
    344:344:long[] getCEs() -> getCEs
    348:349:void clearCEs() -> a
    352:353:void clearCEsIfNoneRemaining() -> clearCEsIfNoneRemaining
    int nextCodePoint() -> nextCodePoint
    int previousCodePoint() -> previousCodePoint
    368:370:void reset() -> reset
    379:384:void reset(boolean) -> reset
    397:399:long handleNextCE32() -> handleNextCE32
    402:402:long makeCodePointAndCE32Pair(int,int) -> makeCodePointAndCE32Pair
    413:413:char handleGetTrailSurrogate() -> handleGetTrailSurrogate
    430:430:boolean forbidSurrogateCodePoints() -> forbidSurrogateCodePoints
    void forwardNumCodePoints(int) -> forwardNumCodePoints
    void backwardNumCodePoints(int) -> backwardNumCodePoints
    443:443:int getDataCE32(int) -> getDataCE32
    447:447:int getCE32FromBuilderData(int) -> getCE32FromBuilderData
    452:633:void appendCEsFromCE32(com.ibm.icu.impl.coll.CollationData,int,int,boolean) -> appendCEsFromCE32
    637:637:boolean isSurrogate(int) -> a
    642:642:boolean isLeadSurrogate(int) -> isLeadSurrogate
    647:647:boolean isTrailSurrogate(int) -> isTrailSurrogate
    655:657:long nextCEFromCE32(com.ibm.icu.impl.coll.CollationData,int,int) -> a
    661:678:int getCE32FromPrefix(com.ibm.icu.impl.coll.CollationData,int) -> a
    682:687:int nextSkippedCodePoint() -> b
    691:696:void backwardNumSkipped(int) -> b
    705:761:int nextCE32FromContraction(com.ibm.icu.impl.coll.CollationData,int,java.lang.CharSequence,int,int,int) -> a
    784:883:int nextCE32FromDiscontiguousContraction(com.ibm.icu.impl.coll.CollationData,com.ibm.icu.util.CharsTrie,int,int,int) -> a
    905:951:long previousCEUnsafe$63bdce61(com.ibm.icu.impl.coll.UVector32) -> a
    964:1010:void appendNumericCEs(int,boolean) -> a
    1017:1111:void appendNumericSegmentCEs(java.lang.CharSequence) -> a
    26:26:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationIterator$CEBuffer -> com.ibm.icu.impl.coll.k:
    int length -> a
    long[] buffer -> b
    31:77:void <init>() -> <init>
    34:38:void append(long) -> a
    41:42:void appendUnsafe(long) -> b
    45:57:void ensureAppendCapacity(int) -> a
    62:66:void incLength() -> a
    69:69:long set(int,long) -> a
    71:71:long get(int) -> b
    73:73:long[] getCEs() -> b
com.ibm.icu.impl.coll.CollationIterator$SkippedState -> com.ibm.icu.impl.coll.l:
    java.lang.StringBuilder oldBuffer -> a
    java.lang.StringBuilder newBuffer -> b
    int pos -> c
    int skipLengthAtMatch -> d
    com.ibm.icu.util.CharsTrie$State state -> e
    boolean $assertionsDisabled -> f
    84:169:void <init>() -> <init>
    86:89:void clear() -> a
    91:91:boolean isEmpty() -> b
    93:93:boolean hasNext() -> c
    97:99:int next() -> d
    104:106:void incBeyond() -> e
    112:127:int backwardNumCodePoints(int) -> a
    132:135:void setFirstSkipped(int) -> b
    138:139:void skip(int) -> c
    141:141:void recordMatch() -> f
    146:150:void replaceMatch() -> g
    152:152:void saveTrieState(com.ibm.icu.util.CharsTrie) -> a
    153:153:void resetToTrieState(com.ibm.icu.util.CharsTrie) -> b
    82:82:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationKeys -> com.ibm.icu.impl.coll.CollationKeys:
    com.ibm.icu.impl.coll.CollationKeys$LevelCallback SIMPLE_LEVEL_FALLBACK -> SIMPLE_LEVEL_FALLBACK
    int[] levelMasks -> a
    boolean $assertionsDisabled -> b
    256:256:com.ibm.icu.impl.coll.CollationKeys$SortKeyLevel getSortKeyLevel(int,int) -> a
    259:260:void <init>() -> <init>
    332:788:void writeSortKeyUpToQuaternary(com.ibm.icu.impl.coll.CollationIterator,boolean[],com.ibm.icu.impl.coll.CollationSettings,com.ibm.icu.impl.coll.CollationKeys$SortKeyByteSink,int,com.ibm.icu.impl.coll.CollationKeys$LevelCallback,boolean) -> writeSortKeyUpToQuaternary
    16:312:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationKeys$LevelCallback -> com.ibm.icu.impl.coll.CollationKeys$LevelCallback:
    130:130:void <init>() -> <init>
com.ibm.icu.impl.coll.CollationKeys$SortKeyByteSink -> com.ibm.icu.impl.coll.CollationKeys$SortKeyByteSink:
    byte[] buffer_ -> buffer_
    int appended_ -> a
    24:29:void <init>(byte[]) -> <init>
    38:40:void setBufferAndAppended(byte[],int) -> setBufferAndAppended
    53:78:void Append(byte[],int) -> Append
    84:89:void Append(int) -> Append
    99:99:int NumberOfBytesAppended() -> NumberOfBytesAppended
    103:103:int GetRemainingCapacity() -> GetRemainingCapacity
    107:107:boolean Overflowed() -> Overflowed
    void AppendBeyondCapacity(byte[],int,int,int) -> AppendBeyondCapacity
    boolean Resize(int,int) -> Resize
com.ibm.icu.impl.coll.CollationKeys$SortKeyLevel -> com.ibm.icu.impl.coll.m:
    byte[] buffer -> a
    int len -> b
    boolean $assertionsDisabled -> c
    146:151:void <init>() -> <init>
    158:158:boolean isEmpty() -> a
    162:162:int length() -> b
    168:168:byte getAt(int) -> a
    172:172:byte[] data() -> c
    176:179:void appendByte(int) -> b
    182:192:void appendWeight16(int) -> c
    195:211:void appendWeight32(long) -> a
    214:227:void appendReverseWeight16(int) -> d
    231:233:void appendTo(com.ibm.icu.impl.coll.CollationKeys$SortKeyByteSink) -> a
    239:251:boolean ensureCapacity(int) -> e
    143:143:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationLoader -> com.ibm.icu.impl.coll.CollationLoader:
    java.lang.String rootRules -> a
    32:33:void <init>() -> <init>
    38:48:void loadRootRules() -> a
    52:53:java.lang.String getRootRules() -> getRootRules
    80:85:java.lang.String loadRules(com.ibm.icu.util.ULocale,java.lang.String) -> a
    89:89:com.ibm.icu.util.UResourceBundle findWithFallback(com.ibm.icu.util.UResourceBundle,java.lang.String) -> a
    98:244:com.ibm.icu.impl.coll.CollationTailoring loadTailoring(com.ibm.icu.util.ULocale,com.ibm.icu.util.Output) -> loadTailoring
    35:35:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationRoot -> com.ibm.icu.impl.coll.CollationRoot:
    com.ibm.icu.impl.coll.CollationTailoring rootSingleton -> a
    java.lang.RuntimeException exception -> b
    24:24:void <init>() -> <init>
    29:32:com.ibm.icu.impl.coll.CollationTailoring getRoot() -> getRoot
    35:36:com.ibm.icu.impl.coll.CollationData getData() -> getData
    44:62:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationRootElements -> com.ibm.icu.impl.coll.CollationRootElements:
    long PRIMARY_SENTINEL -> PRIMARY_SENTINEL
    int SEC_TER_DELTA_FLAG -> SEC_TER_DELTA_FLAG
    int PRIMARY_STEP_MASK -> PRIMARY_STEP_MASK
    int IX_FIRST_TERTIARY_INDEX -> IX_FIRST_TERTIARY_INDEX
    long[] elements -> a
    boolean $assertionsDisabled -> b
    22:24:void <init>(long[]) -> <init>
    79:79:int getTertiaryBoundary() -> getTertiaryBoundary
    86:86:long getFirstTertiaryCE() -> a
    93:93:long getLastTertiaryCE() -> b
    101:101:int getLastCommonSecondary() -> getLastCommonSecondary
    111:111:int getSecondaryBoundary() -> getSecondaryBoundary
    118:118:long getFirstSecondaryCE() -> c
    125:125:long getLastSecondaryCE() -> d
    132:132:long getFirstPrimary() -> e
    139:139:long getFirstPrimaryCE() -> f
    147:188:long lastCEWithPrimaryBefore(long) -> a
    196:209:long firstCEWithPrimaryAtLeast(long) -> b
    217:241:long getPrimaryBefore(long,boolean) -> a
    249:266:int getSecondaryBefore(long,int) -> a
    271:297:int getTertiaryBefore(long,int,int) -> a
    306:312:int findPrimary(long) -> c
    320:336:long getPrimaryAfter(long,int,boolean) -> a
    352:371:int getSecondaryAfter(int,int) -> a
    386:414:int getTertiaryAfter(int,int,int) -> a
    422:433:long getFirstSecTerForPrimary(int) -> a
    444:492:int findP(long) -> d
    496:496:boolean isEndOfPrimaryRange(long) -> e
    21:21:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationRuleParser -> com.ibm.icu.impl.coll.CollationRuleParser:
    int[] POSITION_VALUES$7fcff250 -> a
    java.lang.StringBuilder rawBuilder -> b
    java.lang.String[] positions -> c
    java.lang.String[] gSpecialReorderCodes -> d
    com.ibm.icu.text.Normalizer2 nfd -> e
    com.ibm.icu.text.Normalizer2 nfc -> f
    java.lang.String rules -> g
    com.ibm.icu.impl.coll.CollationData baseData -> h
    com.ibm.icu.impl.coll.CollationSettings settings -> i
    com.ibm.icu.impl.coll.CollationRuleParser$Sink sink -> j
    com.ibm.icu.impl.coll.CollationRuleParser$Importer importer -> k
    int ruleIndex -> l
    boolean $assertionsDisabled -> m
    88:904:void <init>(com.ibm.icu.impl.coll.CollationData) -> <init>
    97:98:void setSink(com.ibm.icu.impl.coll.CollationRuleParser$Sink) -> a
    105:106:void setImporter(com.ibm.icu.impl.coll.CollationRuleParser$Importer) -> a
    109:111:void parse(java.lang.String,com.ibm.icu.impl.coll.CollationSettings) -> a
    129:162:void parse(java.lang.String) -> a
    165:202:void parseRuleChain() -> a
    206:238:int parseResetAndPosition() -> b
    242:286:int parseRelationOperator() -> c
    293:323:void parseRelationStrings(int,int) -> a
    326:392:void parseStarredCharacters(int,int) -> b
    395:399:int parseTailoringString(int,java.lang.StringBuilder) -> a
    403:465:int parseString(int,java.lang.StringBuilder) -> b
    470:470:boolean isSurrogate(int) -> a
    496:517:int parseSpecialPosition(int,java.lang.StringBuilder) -> c
    521:697:void parseSetting() -> d
    700:729:void parseReordering(java.lang.CharSequence) -> a
    741:757:int getReorderCode(java.lang.String) -> getReorderCode
    761:766:int getOnOffValue(java.lang.String) -> b
    772:796:int parseUnicodeSet(int,com.ibm.icu.text.UnicodeSet) -> a
    800:820:int readWords(int,java.lang.StringBuilder) -> d
    825:835:int skipComment(int) -> b
    839:839:void setParseError(java.lang.String) -> c
    843:845:void setParseError(java.lang.String,java.lang.Exception) -> a
    849:849:java.text.ParseException makeParseException(java.lang.String) -> d
    859:883:java.lang.String appendErrorContext(java.lang.String) -> e
    891:891:boolean isSyntaxChar(int) -> c
    897:900:int skipWhiteSpace(int) -> d
    27:731:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationRuleParser$Importer -> com.ibm.icu.impl.coll.n:
    1032:1032:java.lang.String com.ibm.icu.impl.coll.CollationBuilder$BundleImporter.getRules(java.lang.String,java.lang.String):32:32 -> a
    2030:2030:void com.ibm.icu.impl.coll.CollationBuilder$BundleImporter.<init>():30:30 -> <init>
com.ibm.icu.impl.coll.CollationRuleParser$Position -> com.ibm.icu.impl.coll.o:
    int FIRST_TERTIARY_IGNORABLE$4bf2d975 -> a
    int LAST_TERTIARY_IGNORABLE$4bf2d975 -> b
    int FIRST_SECONDARY_IGNORABLE$4bf2d975 -> c
    int LAST_SECONDARY_IGNORABLE$4bf2d975 -> d
    int FIRST_PRIMARY_IGNORABLE$4bf2d975 -> e
    int LAST_PRIMARY_IGNORABLE$4bf2d975 -> f
    int FIRST_VARIABLE$4bf2d975 -> g
    int LAST_VARIABLE$4bf2d975 -> h
    int FIRST_REGULAR$4bf2d975 -> i
    int LAST_REGULAR$4bf2d975 -> j
    int FIRST_IMPLICIT$4bf2d975 -> k
    int LAST_IMPLICIT$4bf2d975 -> l
    int FIRST_TRAILING$4bf2d975 -> m
    int LAST_TRAILING$4bf2d975 -> n
    int[] $VALUES$7fcff250 -> o
    29:29:int[] values$23648bef() -> a
    29:43:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationRuleParser$Sink -> com.ibm.icu.impl.coll.p:
    61:61:void <init>() -> <init>
    void addReset(int,java.lang.CharSequence) -> a
    void addRelation(int,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence) -> a
    74:74:void suppressContractions(com.ibm.icu.text.UnicodeSet) -> a
    76:76:void optimize(com.ibm.icu.text.UnicodeSet) -> b
com.ibm.icu.impl.coll.CollationSettings -> com.ibm.icu.impl.coll.CollationSettings:
    int CHECK_FCD -> CHECK_FCD
    int NUMERIC -> NUMERIC
    int CASE_FIRST -> CASE_FIRST
    int CASE_FIRST_AND_UPPER_MASK -> CASE_FIRST_AND_UPPER_MASK
    int CASE_LEVEL -> CASE_LEVEL
    int BACKWARD_SECONDARY -> BACKWARD_SECONDARY
    int options -> options
    long variableTop -> variableTop
    byte[] reorderTable -> reorderTable
    long minHighNoReorder -> a
    long[] reorderRanges -> b
    int[] reorderCodes -> reorderCodes
    int[] EMPTY_INT_ARRAY -> c
    int fastLatinOptions -> fastLatinOptions
    char[] fastLatinPrimaries -> fastLatinPrimaries
    boolean $assertionsDisabled -> d
    91:486:void <init>() -> <init>
    95:99:com.ibm.icu.impl.coll.CollationSettings clone() -> clone
    104:110:boolean equals(java.lang.Object) -> equals
    115:121:int hashCode() -> hashCode
    127:131:void resetReordering() -> resetReordering
    135:176:void aliasReordering(com.ibm.icu.impl.coll.CollationData,int[],int,byte[]) -> a
    179:234:void setReordering(com.ibm.icu.impl.coll.CollationData,int[]) -> setReordering
    239:246:void setReorderArrays(int[],int[],int,int,byte[]) -> a
    249:258:void setReorderRanges(int[],int,int) -> a
    261:269:void copyReorderingFrom(com.ibm.icu.impl.coll.CollationSettings) -> copyReorderingFrom
    271:271:boolean hasReordering() -> hasReordering
    274:280:boolean reorderTableHasSplitBytes(byte[]) -> a
    284:288:long reorder(long) -> reorder
    293:301:long reorderEx(long) -> a
    310:322:void setStrength(int) -> setStrength
    325:327:void setStrengthDefault(int) -> setStrengthDefault
    330:330:int getStrength(int) -> a
    334:334:int getStrength() -> getStrength
    339:344:void setFlag(int,boolean) -> setFlag
    347:348:void setFlagDefault(int,int) -> setFlagDefault
    351:351:boolean getFlag(int) -> getFlag
    355:358:void setCaseFirst(int) -> setCaseFirst
    361:363:void setCaseFirstDefault(int) -> setCaseFirstDefault
    366:366:int getCaseFirst() -> getCaseFirst
    370:376:void setAlternateHandlingShifted(boolean) -> setAlternateHandlingShifted
    379:381:void setAlternateHandlingDefault(int) -> setAlternateHandlingDefault
    384:384:boolean getAlternateHandling() -> getAlternateHandling
    388:402:void setMaxVariable(int,int) -> setMaxVariable
    405:405:int getMaxVariable() -> getMaxVariable
    412:412:boolean isTertiaryWithCaseBits(int) -> b
    416:416:int getTertiaryMask(int) -> c
    423:423:boolean sortsTertiaryUpperCaseFirst(int) -> d
    427:427:boolean dontCheckFCD() -> dontCheckFCD
    435:435:boolean isNumeric() -> isNumeric
    22:22:com.ibm.icu.impl.coll.SharedObject clone() -> clone
    22:22:java.lang.Object clone() -> clone
    22:480:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationTailoring -> com.ibm.icu.impl.coll.CollationTailoring:
    com.ibm.icu.impl.coll.CollationData data -> data
    com.ibm.icu.impl.coll.SharedObject$Reference settings -> settings
    java.lang.String rules -> d
    com.ibm.icu.util.UResourceBundle rulesResource -> e
    com.ibm.icu.util.ULocale actualLocale -> actualLocale
    int version -> version
    com.ibm.icu.impl.coll.CollationData ownedData -> a
    com.ibm.icu.impl.Trie2_32 trie -> b
    com.ibm.icu.text.UnicodeSet unsafeBackwardSet -> c
    java.util.Map maxExpansions -> maxExpansions
    boolean $assertionsDisabled -> f
    33:111:void <init>(com.ibm.icu.impl.coll.SharedObject$Reference) -> <init>
    45:50:void ensureOwnedData() -> a
    54:56:void setRules(java.lang.String) -> a
    59:61:void setRulesResource(com.ibm.icu.util.UResourceBundle) -> a
    63:69:java.lang.String getRules() -> getRules
    81:89:void setVersion(int,int) -> a
    93:93:int getUCAVersion() -> b
    32:32:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationWeights -> com.ibm.icu.impl.coll.CollationWeights:
    int middleLength -> a
    int[] minBytes -> b
    int[] maxBytes -> c
    com.ibm.icu.impl.coll.CollationWeights$WeightRange[] ranges -> d
    int rangeIndex -> e
    int rangeCount -> f
    boolean $assertionsDisabled -> g
    23:554:void <init>() -> <init>
    26:40:void initForPrimary(boolean) -> initForPrimary
    44:53:void initForSecondary() -> initForSecondary
    57:68:void initForTertiary() -> initForTertiary
    89:126:boolean allocWeights(long,long,int) -> allocWeights
    137:152:long nextWeight() -> nextWeight
    178:185:int lengthOfWeight(long) -> lengthOfWeight
    190:190:int getWeightTrail(long,int) -> a
    194:195:long setWeightTrail(long,int,int) -> a
    199:199:int getWeightByte(long,int) -> b
    205:222:long setWeightByte(long,int,int) -> b
    226:226:long truncateWeight(long,int) -> c
    230:230:long incWeightTrail(long,int) -> d
    234:234:long decWeightTrail(long,int) -> e
    239:239:int countBytes(int) -> a
    244:253:long incWeight(long,int) -> f
    258:267:long incWeightByOffset(long,int,int) -> c
    273:278:void lengthenRange(com.ibm.icu.impl.coll.CollationWeights$WeightRange) -> a
    286:454:boolean getWeightRanges(long,long) -> a
    459:479:boolean allocWeightsInShortRanges(int,int) -> a
    485:548:boolean allocWeightsInMinLengthRanges(int,int) -> b
    22:22:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.CollationWeights$WeightRange -> com.ibm.icu.impl.coll.q:
    long start -> a
    long end -> b
    int length -> c
    int count -> d
    157:157:void <init>() -> <init>
    163:170:int compareTo(com.ibm.icu.impl.coll.CollationWeights$WeightRange) -> a
    157:157:int compareTo(java.lang.Object) -> compareTo
    157:157:void <init>(byte) -> <init>
com.ibm.icu.impl.coll.ContractionsAndExpansions -> com.ibm.icu.impl.coll.ContractionsAndExpansions:
    com.ibm.icu.impl.coll.CollationData data -> a
    com.ibm.icu.text.UnicodeSet contractions -> b
    com.ibm.icu.text.UnicodeSet expansions -> c
    com.ibm.icu.impl.coll.ContractionsAndExpansions$CESink sink -> d
    boolean addPrefixes -> e
    int checkTailored -> f
    com.ibm.icu.text.UnicodeSet tailored -> g
    com.ibm.icu.text.UnicodeSet ranges -> h
    java.lang.StringBuilder unreversedPrefix -> i
    java.lang.String suffix -> j
    long[] ces -> k
    boolean $assertionsDisabled -> l
    28:45:void <init>(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.impl.coll.ContractionsAndExpansions$CESink,boolean) -> <init>
    49:69:void forData(com.ibm.icu.impl.coll.CollationData) -> forData
    72:98:void enumCnERange(int,int,int,com.ibm.icu.impl.coll.ContractionsAndExpansions) -> a
    101:108:void forCodePoint(com.ibm.icu.impl.coll.CollationData,int) -> forCodePoint
    112:220:void handleCE32(int,int,int) -> a
    226:243:void handlePrefixes(int,int,int) -> b
    246:268:void handleContractions(int,int,int) -> c
    271:278:void addExpansions(int,int) -> a
    281:293:void addStrings(int,int,com.ibm.icu.text.UnicodeSet) -> a
    297:299:void setPrefix(java.lang.CharSequence) -> a
    302:303:void resetPrefix() -> a
    21:21:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.ContractionsAndExpansions$CESink -> com.ibm.icu.impl.coll.ContractionsAndExpansions$CESink:
    void handleCE(long) -> handleCE
    void handleExpansion(long[],int,int) -> handleExpansion
com.ibm.icu.impl.coll.FCDIterCollationIterator -> com.ibm.icu.impl.coll.FCDIterCollationIterator:
    com.ibm.icu.impl.coll.FCDIterCollationIterator$State state -> a
    int start -> b
    int pos -> c
    int limit -> d
    com.ibm.icu.impl.Normalizer2Impl nfcImpl -> e
    java.lang.StringBuilder s -> f
    java.lang.StringBuilder normalized -> g
    boolean $assertionsDisabled -> h
    23:27:void <init>(com.ibm.icu.impl.coll.CollationData,boolean,com.ibm.icu.text.UCharacterIterator,int) -> <init>
    31:34:void resetToOffset(int) -> resetToOffset
    38:45:int getOffset() -> getOffset
    53:88:int nextCodePoint() -> nextCodePoint
    97:141:int previousCodePoint() -> previousCodePoint
    150:180:long handleNextCE32() -> handleNextCE32
    185:197:char handleGetTrailSurrogate() -> handleGetTrailSurrogate
    205:208:void forwardNumCodePoints(int) -> forwardNumCodePoints
    214:217:void backwardNumCodePoints(int) -> backwardNumCodePoints
    223:248:void switchToForward() -> b
    255:305:boolean nextSegment() -> c
    312:337:void switchToBackward() -> d
    344:397:boolean previousSegment() -> e
    401:406:void normalize(java.lang.CharSequence) -> a
    20:20:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.FCDIterCollationIterator$State -> com.ibm.icu.impl.coll.r:
    com.ibm.icu.impl.coll.FCDIterCollationIterator$State ITER_CHECK_FWD -> a
    com.ibm.icu.impl.coll.FCDIterCollationIterator$State ITER_CHECK_BWD -> b
    com.ibm.icu.impl.coll.FCDIterCollationIterator$State ITER_IN_FCD_SEGMENT -> c
    com.ibm.icu.impl.coll.FCDIterCollationIterator$State IN_NORM_ITER_AT_LIMIT -> d
    com.ibm.icu.impl.coll.FCDIterCollationIterator$State IN_NORM_ITER_AT_START -> e
    com.ibm.icu.impl.coll.FCDIterCollationIterator$State[] $VALUES -> f
    408:408:com.ibm.icu.impl.coll.FCDIterCollationIterator$State[] values() -> values
    408:408:com.ibm.icu.impl.coll.FCDIterCollationIterator$State valueOf(java.lang.String) -> valueOf
    408:408:void <init>(java.lang.String,int) -> <init>
    408:437:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.FCDUTF16CollationIterator -> com.ibm.icu.impl.coll.FCDUTF16CollationIterator:
    java.lang.CharSequence rawSeq -> a
    int segmentStart -> b
    int segmentLimit -> c
    int rawLimit -> d
    com.ibm.icu.impl.Normalizer2Impl nfcImpl -> e
    java.lang.StringBuilder normalized -> f
    int checkDir -> g
    boolean $assertionsDisabled -> h
    24:26:void <init>(com.ibm.icu.impl.coll.CollationData) -> <init>
    29:35:void <init>(com.ibm.icu.impl.coll.CollationData,boolean,java.lang.CharSequence,int) -> <init>
    40:48:boolean equals(java.lang.Object) -> equals
    55:56:int hashCode() -> hashCode
    61:66:void resetToOffset(int) -> resetToOffset
    70:75:int getOffset() -> getOffset
    81:86:void setText(boolean,java.lang.CharSequence,int) -> setText
    92:119:int nextCodePoint() -> nextCodePoint
    127:154:int previousCodePoint() -> previousCodePoint
    162:183:long handleNextCE32() -> handleNextCE32
    192:195:void forwardNumCodePoints(int) -> forwardNumCodePoints
    201:204:void backwardNumCodePoints(int) -> backwardNumCodePoints
    212:239:void switchToForward() -> b
    247:284:void nextSegment() -> c
    292:315:void switchToBackward() -> d
    323:361:void previousSegment() -> e
    364:376:void normalize(int,int) -> a
    19:19:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.IterCollationIterator -> com.ibm.icu.impl.coll.IterCollationIterator:
    com.ibm.icu.text.UCharacterIterator iter -> iter
    23:25:void <init>(com.ibm.icu.impl.coll.CollationData,boolean,com.ibm.icu.text.UCharacterIterator) -> <init>
    29:31:void resetToOffset(int) -> resetToOffset
    35:35:int getOffset() -> getOffset
    40:40:int nextCodePoint() -> nextCodePoint
    45:45:int previousCodePoint() -> previousCodePoint
    50:54:long handleNextCE32() -> handleNextCE32
    59:61:char handleGetTrailSurrogate() -> handleGetTrailSurrogate
    66:67:void forwardNumCodePoints(int) -> forwardNumCodePoints
    71:72:void backwardNumCodePoints(int) -> backwardNumCodePoints
com.ibm.icu.impl.coll.SharedObject -> com.ibm.icu.impl.coll.SharedObject:
    java.util.concurrent.atomic.AtomicInteger refCount -> a
    157:195:void <init>() -> <init>
    164:170:com.ibm.icu.impl.coll.SharedObject clone() -> clone
    176:176:void addRef() -> addRef
    183:184:void removeRef() -> removeRef
    189:189:int getRefCount() -> getRefCount
    193:193:void deleteIfZeroRefCount() -> deleteIfZeroRefCount
    93:93:java.lang.Object clone() -> clone
com.ibm.icu.impl.coll.SharedObject$Reference -> com.ibm.icu.impl.coll.SharedObject$Reference:
    com.ibm.icu.impl.coll.SharedObject ref -> a
    100:105:void <init>(com.ibm.icu.impl.coll.SharedObject) -> <init>
    112:120:com.ibm.icu.impl.coll.SharedObject$Reference clone() -> clone
    123:123:com.ibm.icu.impl.coll.SharedObject readOnly() -> readOnly
    132:139:com.ibm.icu.impl.coll.SharedObject copyOnWrite() -> copyOnWrite
    143:147:void clear() -> clear
    151:153:void finalize() -> finalize
    97:97:java.lang.Object clone() -> clone
com.ibm.icu.impl.coll.TailoredSet -> com.ibm.icu.impl.coll.TailoredSet:
    com.ibm.icu.impl.coll.CollationData data -> a
    com.ibm.icu.impl.coll.CollationData baseData -> b
    com.ibm.icu.text.UnicodeSet tailored -> c
    java.lang.StringBuilder unreversedPrefix -> d
    java.lang.String suffix -> e
    boolean $assertionsDisabled -> f
    42:47:void <init>(com.ibm.icu.text.UnicodeSet) -> <init>
    50:59:void forData(com.ibm.icu.impl.coll.CollationData) -> forData
    62:66:void enumTailoredRange(int,int,int,com.ibm.icu.impl.coll.TailoredSet) -> a
    72:93:void handleCE32(int,int,int) -> a
    96:228:void compare(int,int,int) -> b
    232:284:void comparePrefixes(int,java.lang.CharSequence,int,java.lang.CharSequence,int) -> a
    288:338:void compareContractions(int,java.lang.CharSequence,int,java.lang.CharSequence,int) -> b
    341:346:void addPrefixes(com.ibm.icu.impl.coll.CollationData,int,java.lang.CharSequence,int) -> a
    349:357:void addPrefix(com.ibm.icu.impl.coll.CollationData,java.lang.CharSequence,int,int) -> a
    360:365:void addContractions(int,java.lang.CharSequence,int) -> a
    368:369:void addSuffix(int,java.lang.CharSequence) -> a
    372:382:void add(int) -> a
    386:388:void setPrefix(java.lang.CharSequence) -> a
    391:392:void resetPrefix() -> a
    37:37:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.UTF16CollationIterator -> com.ibm.icu.impl.coll.UTF16CollationIterator:
    java.lang.CharSequence seq -> seq
    int start -> start
    int pos -> pos
    int limit -> limit
    boolean $assertionsDisabled -> a
    24:25:void <init>(com.ibm.icu.impl.coll.CollationData) -> <init>
    28:33:void <init>(com.ibm.icu.impl.coll.CollationData,boolean,java.lang.CharSequence,int) -> <init>
    37:40:boolean equals(java.lang.Object) -> equals
    45:46:int hashCode() -> hashCode
    51:53:void resetToOffset(int) -> resetToOffset
    57:57:int getOffset() -> getOffset
    61:66:void setText(boolean,java.lang.CharSequence,int) -> setText
    70:80:int nextCodePoint() -> nextCodePoint
    86:96:int previousCodePoint() -> previousCodePoint
    102:106:long handleNextCE32() -> handleNextCE32
    111:114:char handleGetTrailSurrogate() -> handleGetTrailSurrogate
    121:129:void forwardNumCodePoints(int) -> forwardNumCodePoints
    133:141:void backwardNumCodePoints(int) -> backwardNumCodePoints
    19:19:void <clinit>() -> <clinit>
com.ibm.icu.impl.coll.UVector32 -> com.ibm.icu.impl.coll.UVector32:
    int[] buffer -> a
    int length -> b
    16:45:void <init>() -> <init>
    17:17:boolean isEmpty() -> isEmpty
    18:18:int size() -> size
    19:19:int elementAti(int) -> elementAti
    20:20:int[] getBuffer() -> getBuffer
    22:24:void addElement(int) -> addElement
    25:25:void setElementAt(int,int) -> setElementAt
    27:31:void insertElementAt(int,int) -> insertElementAt
    33:34:void removeAllElements() -> removeAllElements
    37:43:void ensureAppendCapacity() -> a
com.ibm.icu.impl.coll.UVector64 -> com.ibm.icu.impl.coll.UVector64:
    long[] buffer -> a
    int length -> b
    16:45:void <init>() -> <init>
    17:17:boolean isEmpty() -> isEmpty
    18:18:int size() -> size
    19:19:long elementAti(int) -> elementAti
    20:20:long[] getBuffer() -> getBuffer
    22:24:void addElement(long) -> addElement
    25:25:void setElementAt(long,int) -> setElementAt
    27:31:void insertElementAt(long,int) -> insertElementAt
    33:34:void removeAllElements() -> removeAllElements
    37:43:void ensureAppendCapacity() -> a
com.ibm.icu.impl.data.HolidayBundle -> com.ibm.icu.impl.data.HolidayBundle:
    java.lang.Object[][] fContents -> a
    12:12:void <init>() -> <init>
    26:26:java.lang.Object[][] getContents() -> getContents
    22:22:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_da -> com.ibm.icu.impl.data.HolidayBundle_da:
    java.lang.Object[][] fContents -> a
    12:12:void <init>() -> <init>
    29:29:java.lang.Object[][] getContents() -> getContents
    14:14:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_da_DK -> com.ibm.icu.impl.data.HolidayBundle_da_DK:
    com.ibm.icu.util.Holiday[] fHolidays -> a
    java.lang.Object[][] fContents -> b
    17:17:void <init>() -> <init>
    40:40:java.lang.Object[][] getContents() -> getContents
    19:37:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_de -> com.ibm.icu.impl.data.HolidayBundle_de:
    java.lang.Object[][] fContents -> a
    12:12:void <init>() -> <init>
    66:66:java.lang.Object[][] getContents() -> getContents
    13:13:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_de_AT -> com.ibm.icu.impl.data.HolidayBundle_de_AT:
    com.ibm.icu.util.Holiday[] fHolidays -> a
    java.lang.Object[][] fContents -> b
    17:17:void <init>() -> <init>
    45:45:java.lang.Object[][] getContents() -> getContents
    18:38:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_de_DE -> com.ibm.icu.impl.data.HolidayBundle_de_DE:
    com.ibm.icu.util.Holiday[] fHolidays -> a
    java.lang.Object[][] fContents -> b
    17:17:void <init>() -> <init>
    40:40:java.lang.Object[][] getContents() -> getContents
    18:37:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_el -> com.ibm.icu.impl.data.HolidayBundle_el:
    java.lang.Object[][] fContents -> a
    12:12:void <init>() -> <init>
    28:28:java.lang.Object[][] getContents() -> getContents
    13:13:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_el_GR -> com.ibm.icu.impl.data.HolidayBundle_el_GR:
    com.ibm.icu.util.Holiday[] fHolidays -> a
    java.lang.Object[][] fContents -> b
    17:17:void <init>() -> <init>
    41:41:java.lang.Object[][] getContents() -> getContents
    18:38:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_en -> com.ibm.icu.impl.data.HolidayBundle_en:
    java.lang.Object[][] fContents -> a
    12:12:void <init>() -> <init>
    26:26:java.lang.Object[][] getContents() -> getContents
    22:22:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_en_CA -> com.ibm.icu.impl.data.HolidayBundle_en_CA:
    com.ibm.icu.util.Holiday[] fHolidays -> a
    java.lang.Object[][] fContents -> b
    16:16:void <init>() -> <init>
    41:41:java.lang.Object[][] getContents() -> getContents
    17:36:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_en_GB -> com.ibm.icu.impl.data.HolidayBundle_en_GB:
    com.ibm.icu.util.Holiday[] fHolidays -> a
    java.lang.Object[][] fContents -> b
    17:17:void <init>() -> <init>
    38:38:java.lang.Object[][] getContents() -> getContents
    19:33:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_en_US -> com.ibm.icu.impl.data.HolidayBundle_en_US:
    com.ibm.icu.util.Holiday[] fHolidays -> a
    java.lang.Object[][] fContents -> b
    17:17:void <init>() -> <init>
    48:48:java.lang.Object[][] getContents() -> getContents
    19:45:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_es -> com.ibm.icu.impl.data.HolidayBundle_es:
    java.lang.Object[][] fContents -> a
    12:12:void <init>() -> <init>
    49:49:java.lang.Object[][] getContents() -> getContents
    13:13:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_es_MX -> com.ibm.icu.impl.data.HolidayBundle_es_MX:
    com.ibm.icu.util.Holiday[] fHolidays -> a
    java.lang.Object[][] fContents -> b
    16:16:void <init>() -> <init>
    35:35:java.lang.Object[][] getContents() -> getContents
    17:32:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_fr -> com.ibm.icu.impl.data.HolidayBundle_fr:
    java.lang.Object[][] fContents -> a
    12:12:void <init>() -> <init>
    42:42:java.lang.Object[][] getContents() -> getContents
    13:13:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_fr_CA -> com.ibm.icu.impl.data.HolidayBundle_fr_CA:
    com.ibm.icu.util.Holiday[] fHolidays -> a
    java.lang.Object[][] fContents -> b
    17:17:void <init>() -> <init>
    39:39:java.lang.Object[][] getContents() -> getContents
    18:36:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_fr_FR -> com.ibm.icu.impl.data.HolidayBundle_fr_FR:
    com.ibm.icu.util.Holiday[] fHolidays -> a
    java.lang.Object[][] fContents -> b
    17:17:void <init>() -> <init>
    38:38:java.lang.Object[][] getContents() -> getContents
    18:35:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_it -> com.ibm.icu.impl.data.HolidayBundle_it:
    java.lang.Object[][] fContents -> a
    12:12:void <init>() -> <init>
    34:34:java.lang.Object[][] getContents() -> getContents
    13:13:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_it_IT -> com.ibm.icu.impl.data.HolidayBundle_it_IT:
    com.ibm.icu.util.Holiday[] fHolidays -> a
    java.lang.Object[][] fContents -> b
    17:17:void <init>() -> <init>
    37:37:java.lang.Object[][] getContents() -> getContents
    18:34:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_iw -> com.ibm.icu.impl.data.HolidayBundle_iw:
    java.lang.Object[][] fContents -> a
    12:12:void <init>() -> <init>
    18:18:java.lang.Object[][] getContents() -> getContents
    14:14:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_iw_IL -> com.ibm.icu.impl.data.HolidayBundle_iw_IL:
    com.ibm.icu.util.Holiday[] fHolidays -> a
    java.lang.Object[][] fContents -> b
    15:15:void <init>() -> <init>
    29:29:java.lang.Object[][] getContents() -> getContents
    16:26:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.HolidayBundle_ja_JP -> com.ibm.icu.impl.data.HolidayBundle_ja_JP:
    com.ibm.icu.util.Holiday[] fHolidays -> a
    java.lang.Object[][] fContents -> b
    16:16:void <init>() -> <init>
    23:23:java.lang.Object[][] getContents() -> getContents
    17:20:void <clinit>() -> <clinit>
com.ibm.icu.impl.data.ResourceReader -> com.ibm.icu.impl.data.ResourceReader:
    java.io.BufferedReader reader -> a
    java.lang.String resourceName -> b
    java.lang.String encoding -> c
    java.lang.Class root -> d
    int lineNo -> e
    59:60:void <init>(java.lang.String,java.lang.String) -> <init>
    69:70:void <init>(java.lang.String) -> <init>
    35:89:void <init>(java.lang.Class,java.lang.String,java.lang.String) -> <init>
    35:113:void <init>(java.io.InputStream,java.lang.String,java.lang.String) -> <init>
    122:123:void <init>(java.io.InputStream,java.lang.String) -> <init>
    35:139:void <init>(java.lang.Class,java.lang.String) -> <init>
    146:157:java.lang.String readLine() -> readLine
    167:179:java.lang.String readLineSkippingComments(boolean) -> readLineSkippingComments
    189:189:java.lang.String readLineSkippingComments() -> readLineSkippingComments
    199:199:int getLineNumber() -> getLineNumber
    207:207:java.lang.String describePosition() -> describePosition
    220:225:void reset() -> reset
    236:251:void _reset() -> a
    259:263:void close() -> close
com.ibm.icu.impl.data.TokenIterator -> com.ibm.icu.impl.data.TokenIterator:
    com.ibm.icu.impl.data.ResourceReader reader -> a
    java.lang.String line -> b
    java.lang.StringBuffer buf -> c
    boolean done -> d
    int pos -> e
    int lastpos -> f
    43:49:void <init>(com.ibm.icu.impl.data.ResourceReader) -> <init>
    56:75:java.lang.String next() -> next
    86:86:int getLineNumber() -> getLineNumber
    94:94:java.lang.String describePosition() -> describePosition
    110:159:int nextToken(int) -> a
com.ibm.icu.impl.duration.BasicDurationFormat -> com.ibm.icu.impl.duration.BasicDurationFormat:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.impl.duration.DurationFormatter formatter -> a
    com.ibm.icu.impl.duration.PeriodFormatter pformatter -> b
    com.ibm.icu.impl.duration.PeriodFormatterService pfs -> c
    30:30:com.ibm.icu.impl.duration.BasicDurationFormat getInstance(com.ibm.icu.util.ULocale) -> getInstance
    34:44:java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    27:52:void <init>() -> <init>
    27:61:void <init>(com.ibm.icu.util.ULocale) -> <init>
    67:67:java.lang.String formatDurationFrom(long,long) -> formatDurationFrom
    74:74:java.lang.String formatDurationFromNow(long) -> formatDurationFromNow
    81:81:java.lang.String formatDurationFromNowTo(java.util.Date) -> formatDurationFromNowTo
    91:167:java.lang.String formatDuration(java.lang.Object) -> formatDuration
com.ibm.icu.impl.duration.BasicDurationFormatter -> com.ibm.icu.impl.duration.a:
    com.ibm.icu.impl.duration.PeriodFormatter formatter -> a
    com.ibm.icu.impl.duration.PeriodBuilder builder -> b
    com.ibm.icu.impl.duration.DateFormatter fallback -> c
    long fallbackLimit -> d
    java.lang.String localeName -> e
    java.util.TimeZone timeZone -> f
    44:51:void <init>(com.ibm.icu.impl.duration.PeriodFormatter,com.ibm.icu.impl.duration.PeriodBuilder,com.ibm.icu.impl.duration.DateFormatter,long,java.lang.String,java.util.TimeZone) -> <init>
    54:56:java.lang.String formatDurationFromNowTo(java.util.Date) -> formatDurationFromNowTo
    60:60:java.lang.String formatDurationFromNow(long) -> formatDurationFromNow
    64:69:java.lang.String formatDurationFrom(long,long) -> formatDurationFrom
    73:83:com.ibm.icu.impl.duration.DurationFormatter withLocale(java.lang.String) -> withLocale
    87:96:com.ibm.icu.impl.duration.DurationFormatter withTimeZone(java.util.TimeZone) -> withTimeZone
    100:105:java.lang.String doFallback(long,long) -> a
    109:109:com.ibm.icu.impl.duration.Period doBuild(long,long) -> b
    113:116:java.lang.String doFormat(com.ibm.icu.impl.duration.Period) -> a
com.ibm.icu.impl.duration.BasicDurationFormatterFactory -> com.ibm.icu.impl.duration.b:
    com.ibm.icu.impl.duration.BasicPeriodFormatterService ps -> a
    com.ibm.icu.impl.duration.PeriodFormatter formatter -> b
    com.ibm.icu.impl.duration.PeriodBuilder builder -> c
    com.ibm.icu.impl.duration.DateFormatter fallback -> d
    long fallbackLimit -> e
    java.lang.String localeName -> f
    java.util.TimeZone timeZone -> g
    com.ibm.icu.impl.duration.BasicDurationFormatter f -> h
    36:40:void <init>(com.ibm.icu.impl.duration.BasicPeriodFormatterService) -> <init>
    50:54:com.ibm.icu.impl.duration.DurationFormatterFactory setPeriodFormatter(com.ibm.icu.impl.duration.PeriodFormatter) -> setPeriodFormatter
    65:69:com.ibm.icu.impl.duration.DurationFormatterFactory setPeriodBuilder(com.ibm.icu.impl.duration.PeriodBuilder) -> setPeriodBuilder
    79:86:com.ibm.icu.impl.duration.DurationFormatterFactory setFallback(com.ibm.icu.impl.duration.DateFormatter) -> setFallback
    96:103:com.ibm.icu.impl.duration.DurationFormatterFactory setFallbackLimit(long) -> setFallbackLimit
    114:124:com.ibm.icu.impl.duration.DurationFormatterFactory setLocale(java.lang.String) -> setLocale
    135:142:com.ibm.icu.impl.duration.DurationFormatterFactory setTimeZone(java.util.TimeZone) -> setTimeZone
    151:160:com.ibm.icu.impl.duration.DurationFormatter getFormatter() -> getFormatter
    169:174:com.ibm.icu.impl.duration.PeriodFormatter getPeriodFormatter() -> a
    183:189:com.ibm.icu.impl.duration.PeriodBuilder getPeriodBuilder() -> b
    233:233:com.ibm.icu.impl.duration.BasicDurationFormatter createFormatter() -> c
    244:245:void reset() -> d
com.ibm.icu.impl.duration.BasicPeriodBuilderFactory -> com.ibm.icu.impl.duration.c:
    com.ibm.icu.impl.duration.impl.PeriodFormatterDataService ds -> a
    com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings settings -> b
    26:29:void <init>(com.ibm.icu.impl.duration.impl.PeriodFormatterDataService) -> <init>
    32:32:long approximateDurationOf(com.ibm.icu.impl.duration.TimeUnit) -> a
    196:204:com.ibm.icu.impl.duration.PeriodBuilderFactory setAvailableUnitRange(com.ibm.icu.impl.duration.TimeUnit,com.ibm.icu.impl.duration.TimeUnit) -> setAvailableUnitRange
    209:216:com.ibm.icu.impl.duration.PeriodBuilderFactory setUnitIsAvailable(com.ibm.icu.impl.duration.TimeUnit,boolean) -> setUnitIsAvailable
    220:221:com.ibm.icu.impl.duration.PeriodBuilderFactory setMaxLimit(float) -> setMaxLimit
    225:226:com.ibm.icu.impl.duration.PeriodBuilderFactory setMinLimit(float) -> setMinLimit
    230:231:com.ibm.icu.impl.duration.PeriodBuilderFactory setAllowZero(boolean) -> setAllowZero
    235:236:com.ibm.icu.impl.duration.PeriodBuilderFactory setWeeksAloneOnly(boolean) -> setWeeksAloneOnly
    240:241:com.ibm.icu.impl.duration.PeriodBuilderFactory setAllowMilliseconds(boolean) -> setAllowMilliseconds
    245:246:com.ibm.icu.impl.duration.PeriodBuilderFactory setLocale(java.lang.String) -> setLocale
    251:251:com.ibm.icu.impl.duration.PeriodBuilderFactory setTimeZone(java.util.TimeZone) -> setTimeZone
    255:258:com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings getSettings() -> a
    269:269:com.ibm.icu.impl.duration.PeriodBuilder getFixedUnitBuilder(com.ibm.icu.impl.duration.TimeUnit) -> getFixedUnitBuilder
    279:279:com.ibm.icu.impl.duration.PeriodBuilder getSingleUnitBuilder() -> getSingleUnitBuilder
    291:291:com.ibm.icu.impl.duration.PeriodBuilder getOneOrTwoUnitBuilder() -> getOneOrTwoUnitBuilder
    302:302:com.ibm.icu.impl.duration.PeriodBuilder getMultiUnitBuilder(int) -> getMultiUnitBuilder
    20:20:com.ibm.icu.impl.duration.impl.PeriodFormatterDataService access$000(com.ibm.icu.impl.duration.BasicPeriodBuilderFactory) -> a
com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings -> com.ibm.icu.impl.duration.d:
    boolean inUse -> b
    short uset -> a
    com.ibm.icu.impl.duration.TimeUnit maxUnit -> c
    com.ibm.icu.impl.duration.TimeUnit minUnit -> d
    int maxLimit -> e
    int minLimit -> f
    boolean allowZero -> g
    boolean weeksAloneOnly -> h
    boolean allowMillis -> i
    com.ibm.icu.impl.duration.BasicPeriodBuilderFactory this$0 -> j
    35:44:void <init>(com.ibm.icu.impl.duration.BasicPeriodBuilderFactory) -> <init>
    47:76:com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings setUnits(int) -> a
    80:83:short effectiveSet() -> a
    87:96:com.ibm.icu.impl.duration.TimeUnit effectiveMinUnit() -> b
    100:106:com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings setMaxLimit(float) -> a
    110:116:com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings setMinLimit(float) -> b
    120:125:com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings setAllowZero(boolean) -> a
    129:134:com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings setWeeksAloneOnly(boolean) -> b
    138:143:com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings setAllowMilliseconds(boolean) -> c
    147:148:com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings setLocale(java.lang.String) -> a
    155:156:com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings setInUse() -> c
    160:176:com.ibm.icu.impl.duration.Period createLimited(long,boolean) -> a
    180:190:com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings copy() -> d
com.ibm.icu.impl.duration.BasicPeriodFormatter -> com.ibm.icu.impl.duration.e:
    com.ibm.icu.impl.duration.BasicPeriodFormatterFactory factory -> a
    java.lang.String localeName -> b
    com.ibm.icu.impl.duration.impl.PeriodFormatterData data -> c
    com.ibm.icu.impl.duration.BasicPeriodFormatterFactory$Customizations customs -> d
    30:35:void <init>(com.ibm.icu.impl.duration.BasicPeriodFormatterFactory,java.lang.String,com.ibm.icu.impl.duration.impl.PeriodFormatterData,com.ibm.icu.impl.duration.BasicPeriodFormatterFactory$Customizations) -> <init>
    38:41:java.lang.String format(com.ibm.icu.impl.duration.Period) -> format
    45:50:com.ibm.icu.impl.duration.PeriodFormatter withLocale(java.lang.String) -> withLocale
    54:193:java.lang.String format(int,boolean,int[]) -> a
com.ibm.icu.impl.duration.BasicPeriodFormatterFactory -> com.ibm.icu.impl.duration.BasicPeriodFormatterFactory:
    com.ibm.icu.impl.duration.impl.PeriodFormatterDataService ds -> a
    com.ibm.icu.impl.duration.impl.PeriodFormatterData data -> b
    com.ibm.icu.impl.duration.BasicPeriodFormatterFactory$Customizations customizations -> c
    boolean customizationsInUse -> d
    java.lang.String localeName -> e
    63:67:void <init>(com.ibm.icu.impl.duration.impl.PeriodFormatterDataService) -> <init>
    75:75:com.ibm.icu.impl.duration.BasicPeriodFormatterFactory getDefault() -> getDefault
    83:85:com.ibm.icu.impl.duration.PeriodFormatterFactory setLocale(java.lang.String) -> setLocale
    95:96:com.ibm.icu.impl.duration.PeriodFormatterFactory setDisplayLimit(boolean) -> setDisplayLimit
    105:105:boolean getDisplayLimit() -> getDisplayLimit
    115:116:com.ibm.icu.impl.duration.PeriodFormatterFactory setDisplayPastFuture(boolean) -> setDisplayPastFuture
    125:125:boolean getDisplayPastFuture() -> getDisplayPastFuture
    135:136:com.ibm.icu.impl.duration.PeriodFormatterFactory setSeparatorVariant(int) -> setSeparatorVariant
    145:145:int getSeparatorVariant() -> getSeparatorVariant
    155:156:com.ibm.icu.impl.duration.PeriodFormatterFactory setUnitVariant(int) -> setUnitVariant
    165:165:int getUnitVariant() -> getUnitVariant
    175:176:com.ibm.icu.impl.duration.PeriodFormatterFactory setCountVariant(int) -> setCountVariant
    185:185:int getCountVariant() -> getCountVariant
    189:190:com.ibm.icu.impl.duration.PeriodFormatter getFormatter() -> getFormatter
    195:199:com.ibm.icu.impl.duration.BasicPeriodFormatterFactory$Customizations updateCustomizations() -> a
    204:207:com.ibm.icu.impl.duration.impl.PeriodFormatterData getData() -> b
    212:212:com.ibm.icu.impl.duration.impl.PeriodFormatterData getData(java.lang.String) -> a
com.ibm.icu.impl.duration.BasicPeriodFormatterFactory$Customizations -> com.ibm.icu.impl.duration.f:
    boolean displayLimit -> a
    boolean displayDirection -> b
    byte separatorVariant -> c
    byte unitVariant -> d
    byte countVariant -> e
    216:221:void <init>() -> <init>
    224:230:com.ibm.icu.impl.duration.BasicPeriodFormatterFactory$Customizations copy() -> a
com.ibm.icu.impl.duration.BasicPeriodFormatterService -> com.ibm.icu.impl.duration.BasicPeriodFormatterService:
    com.ibm.icu.impl.duration.BasicPeriodFormatterService instance -> a
    com.ibm.icu.impl.duration.impl.PeriodFormatterDataService ds -> b
    29:34:com.ibm.icu.impl.duration.BasicPeriodFormatterService getInstance() -> getInstance
    43:45:void <init>(com.ibm.icu.impl.duration.impl.PeriodFormatterDataService) -> <init>
    48:48:com.ibm.icu.impl.duration.DurationFormatterFactory newDurationFormatterFactory() -> newDurationFormatterFactory
    52:52:com.ibm.icu.impl.duration.PeriodFormatterFactory newPeriodFormatterFactory() -> newPeriodFormatterFactory
    56:56:com.ibm.icu.impl.duration.PeriodBuilderFactory newPeriodBuilderFactory() -> newPeriodBuilderFactory
    60:60:java.util.Collection getAvailableLocaleNames() -> getAvailableLocaleNames
com.ibm.icu.impl.duration.DateFormatter -> com.ibm.icu.impl.duration.DateFormatter:
    java.lang.String format(java.util.Date) -> format
    java.lang.String format(long) -> format
    com.ibm.icu.impl.duration.DateFormatter withLocale(java.lang.String) -> withLocale
    com.ibm.icu.impl.duration.DateFormatter withTimeZone(java.util.TimeZone) -> withTimeZone
com.ibm.icu.impl.duration.DurationFormatter -> com.ibm.icu.impl.duration.DurationFormatter:
    java.lang.String formatDurationFromNowTo(java.util.Date) -> formatDurationFromNowTo
    java.lang.String formatDurationFromNow(long) -> formatDurationFromNow
    java.lang.String formatDurationFrom(long,long) -> formatDurationFrom
    com.ibm.icu.impl.duration.DurationFormatter withLocale(java.lang.String) -> withLocale
    com.ibm.icu.impl.duration.DurationFormatter withTimeZone(java.util.TimeZone) -> withTimeZone
com.ibm.icu.impl.duration.DurationFormatterFactory -> com.ibm.icu.impl.duration.DurationFormatterFactory:
    com.ibm.icu.impl.duration.DurationFormatterFactory setPeriodFormatter(com.ibm.icu.impl.duration.PeriodFormatter) -> setPeriodFormatter
    com.ibm.icu.impl.duration.DurationFormatterFactory setPeriodBuilder(com.ibm.icu.impl.duration.PeriodBuilder) -> setPeriodBuilder
    com.ibm.icu.impl.duration.DurationFormatterFactory setFallback(com.ibm.icu.impl.duration.DateFormatter) -> setFallback
    com.ibm.icu.impl.duration.DurationFormatterFactory setFallbackLimit(long) -> setFallbackLimit
    com.ibm.icu.impl.duration.DurationFormatterFactory setLocale(java.lang.String) -> setLocale
    com.ibm.icu.impl.duration.DurationFormatterFactory setTimeZone(java.util.TimeZone) -> setTimeZone
    com.ibm.icu.impl.duration.DurationFormatter getFormatter() -> getFormatter
com.ibm.icu.impl.duration.FixedUnitBuilder -> com.ibm.icu.impl.duration.g:
    com.ibm.icu.impl.duration.TimeUnit unit -> b
    360:363:com.ibm.icu.impl.duration.FixedUnitBuilder get(com.ibm.icu.impl.duration.TimeUnit,com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> a
    367:369:void <init>(com.ibm.icu.impl.duration.TimeUnit,com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> <init>
    372:372:com.ibm.icu.impl.duration.PeriodBuilder withSettings(com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> a
    377:381:com.ibm.icu.impl.duration.Period handleCreate$43d87f64(long,boolean) -> a
com.ibm.icu.impl.duration.MultiUnitBuilder -> com.ibm.icu.impl.duration.h:
    int nPeriods -> b
    469:471:void <init>(int,com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> <init>
    474:477:com.ibm.icu.impl.duration.MultiUnitBuilder get(int,com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> a
    481:481:com.ibm.icu.impl.duration.PeriodBuilder withSettings(com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> a
    486:511:com.ibm.icu.impl.duration.Period handleCreate$43d87f64(long,boolean) -> a
com.ibm.icu.impl.duration.OneOrTwoUnitBuilder -> com.ibm.icu.impl.duration.i:
    421:422:void <init>(com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> <init>
    425:428:com.ibm.icu.impl.duration.OneOrTwoUnitBuilder get(com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> b
    432:432:com.ibm.icu.impl.duration.PeriodBuilder withSettings(com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> a
    437:461:com.ibm.icu.impl.duration.Period handleCreate$43d87f64(long,boolean) -> a
com.ibm.icu.impl.duration.Period -> com.ibm.icu.impl.duration.Period:
    byte timeLimit -> a
    boolean inFuture -> b
    int[] counts -> c
    40:41:com.ibm.icu.impl.duration.Period at(float,com.ibm.icu.impl.duration.TimeUnit) -> at
    52:53:com.ibm.icu.impl.duration.Period moreThan(float,com.ibm.icu.impl.duration.TimeUnit) -> moreThan
    64:65:com.ibm.icu.impl.duration.Period lessThan(float,com.ibm.icu.impl.duration.TimeUnit) -> lessThan
    80:81:com.ibm.icu.impl.duration.Period and(float,com.ibm.icu.impl.duration.TimeUnit) -> and
    91:91:com.ibm.icu.impl.duration.Period omit(com.ibm.icu.impl.duration.TimeUnit) -> omit
    100:100:com.ibm.icu.impl.duration.Period at() -> at
    109:109:com.ibm.icu.impl.duration.Period moreThan() -> moreThan
    118:118:com.ibm.icu.impl.duration.Period lessThan() -> lessThan
    127:127:com.ibm.icu.impl.duration.Period inFuture() -> inFuture
    136:136:com.ibm.icu.impl.duration.Period inPast() -> inPast
    147:147:com.ibm.icu.impl.duration.Period inFuture(boolean) -> inFuture
    158:158:com.ibm.icu.impl.duration.Period inPast(boolean) -> inPast
    166:171:boolean isSet() -> isSet
    180:180:boolean isSet(com.ibm.icu.impl.duration.TimeUnit) -> isSet
    190:194:float getCount(com.ibm.icu.impl.duration.TimeUnit) -> getCount
    204:204:boolean isInFuture() -> isInFuture
    214:214:boolean isInPast() -> isInPast
    224:224:boolean isMoreThan() -> isMoreThan
    234:234:boolean isLessThan() -> isLessThan
    245:248:boolean equals(java.lang.Object) -> equals
    263:273:boolean equals(com.ibm.icu.impl.duration.Period) -> equals
    281:285:int hashCode() -> hashCode
    291:296:void <init>(int,boolean,float,com.ibm.icu.impl.duration.TimeUnit) -> <init>
    301:305:void <init>(int,boolean,int[]) -> <init>
    311:314:com.ibm.icu.impl.duration.Period setTimeUnitValue(com.ibm.icu.impl.duration.TimeUnit,float) -> a
    326:335:com.ibm.icu.impl.duration.Period setTimeUnitInternalValue(com.ibm.icu.impl.duration.TimeUnit,int) -> a
    344:347:com.ibm.icu.impl.duration.Period setFuture(boolean) -> a
    357:361:com.ibm.icu.impl.duration.Period setTimeLimit(byte) -> a
    368:372:void checkCount(float) -> a
com.ibm.icu.impl.duration.PeriodBuilder -> com.ibm.icu.impl.duration.PeriodBuilder:
    com.ibm.icu.impl.duration.Period create(long) -> create
    com.ibm.icu.impl.duration.Period createWithReferenceDate(long,long) -> createWithReferenceDate
    com.ibm.icu.impl.duration.PeriodBuilder withLocale(java.lang.String) -> withLocale
    com.ibm.icu.impl.duration.PeriodBuilder withTimeZone(java.util.TimeZone) -> withTimeZone
com.ibm.icu.impl.duration.PeriodBuilderFactory -> com.ibm.icu.impl.duration.PeriodBuilderFactory:
    com.ibm.icu.impl.duration.PeriodBuilderFactory setAvailableUnitRange(com.ibm.icu.impl.duration.TimeUnit,com.ibm.icu.impl.duration.TimeUnit) -> setAvailableUnitRange
    com.ibm.icu.impl.duration.PeriodBuilderFactory setUnitIsAvailable(com.ibm.icu.impl.duration.TimeUnit,boolean) -> setUnitIsAvailable
    com.ibm.icu.impl.duration.PeriodBuilderFactory setMaxLimit(float) -> setMaxLimit
    com.ibm.icu.impl.duration.PeriodBuilderFactory setMinLimit(float) -> setMinLimit
    com.ibm.icu.impl.duration.PeriodBuilderFactory setAllowZero(boolean) -> setAllowZero
    com.ibm.icu.impl.duration.PeriodBuilderFactory setWeeksAloneOnly(boolean) -> setWeeksAloneOnly
    com.ibm.icu.impl.duration.PeriodBuilderFactory setAllowMilliseconds(boolean) -> setAllowMilliseconds
    com.ibm.icu.impl.duration.PeriodBuilderFactory setLocale(java.lang.String) -> setLocale
    com.ibm.icu.impl.duration.PeriodBuilderFactory setTimeZone(java.util.TimeZone) -> setTimeZone
    com.ibm.icu.impl.duration.PeriodBuilder getFixedUnitBuilder(com.ibm.icu.impl.duration.TimeUnit) -> getFixedUnitBuilder
    com.ibm.icu.impl.duration.PeriodBuilder getSingleUnitBuilder() -> getSingleUnitBuilder
    com.ibm.icu.impl.duration.PeriodBuilder getOneOrTwoUnitBuilder() -> getOneOrTwoUnitBuilder
    com.ibm.icu.impl.duration.PeriodBuilder getMultiUnitBuilder(int) -> getMultiUnitBuilder
com.ibm.icu.impl.duration.PeriodBuilderImpl -> com.ibm.icu.impl.duration.j:
    com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings settings -> a
    311:311:com.ibm.icu.impl.duration.Period create(long) -> create
    315:315:long approximateDurationOf(com.ibm.icu.impl.duration.TimeUnit) -> a
    319:330:com.ibm.icu.impl.duration.Period createWithReferenceDate(long,long) -> createWithReferenceDate
    335:335:com.ibm.icu.impl.duration.PeriodBuilder withTimeZone(java.util.TimeZone) -> withTimeZone
    339:343:com.ibm.icu.impl.duration.PeriodBuilder withLocale(java.lang.String) -> withLocale
    com.ibm.icu.impl.duration.PeriodBuilder withSettings(com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> a
    com.ibm.icu.impl.duration.Period handleCreate$43d87f64(long,boolean) -> a
    351:353:void <init>(com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> <init>
com.ibm.icu.impl.duration.PeriodFormatter -> com.ibm.icu.impl.duration.PeriodFormatter:
    java.lang.String format(com.ibm.icu.impl.duration.Period) -> format
    com.ibm.icu.impl.duration.PeriodFormatter withLocale(java.lang.String) -> withLocale
com.ibm.icu.impl.duration.PeriodFormatterFactory -> com.ibm.icu.impl.duration.PeriodFormatterFactory:
    com.ibm.icu.impl.duration.PeriodFormatterFactory setLocale(java.lang.String) -> setLocale
    com.ibm.icu.impl.duration.PeriodFormatterFactory setDisplayLimit(boolean) -> setDisplayLimit
    com.ibm.icu.impl.duration.PeriodFormatterFactory setDisplayPastFuture(boolean) -> setDisplayPastFuture
    com.ibm.icu.impl.duration.PeriodFormatterFactory setSeparatorVariant(int) -> setSeparatorVariant
    com.ibm.icu.impl.duration.PeriodFormatterFactory setUnitVariant(int) -> setUnitVariant
    com.ibm.icu.impl.duration.PeriodFormatterFactory setCountVariant(int) -> setCountVariant
    com.ibm.icu.impl.duration.PeriodFormatter getFormatter() -> getFormatter
com.ibm.icu.impl.duration.PeriodFormatterService -> com.ibm.icu.impl.duration.PeriodFormatterService:
    com.ibm.icu.impl.duration.DurationFormatterFactory newDurationFormatterFactory() -> newDurationFormatterFactory
    com.ibm.icu.impl.duration.PeriodFormatterFactory newPeriodFormatterFactory() -> newPeriodFormatterFactory
    com.ibm.icu.impl.duration.PeriodBuilderFactory newPeriodBuilderFactory() -> newPeriodBuilderFactory
    java.util.Collection getAvailableLocaleNames() -> getAvailableLocaleNames
com.ibm.icu.impl.duration.SingleUnitBuilder -> com.ibm.icu.impl.duration.k:
    388:389:void <init>(com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> <init>
    392:395:com.ibm.icu.impl.duration.SingleUnitBuilder get(com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> b
    399:399:com.ibm.icu.impl.duration.PeriodBuilder withSettings(com.ibm.icu.impl.duration.BasicPeriodBuilderFactory$Settings) -> a
    404:415:com.ibm.icu.impl.duration.Period handleCreate$43d87f64(long,boolean) -> a
com.ibm.icu.impl.duration.TimeUnit -> com.ibm.icu.impl.duration.TimeUnit:
    java.lang.String name -> d
    byte ordinal -> a
    com.ibm.icu.impl.duration.TimeUnit YEAR -> YEAR
    com.ibm.icu.impl.duration.TimeUnit MONTH -> MONTH
    com.ibm.icu.impl.duration.TimeUnit WEEK -> WEEK
    com.ibm.icu.impl.duration.TimeUnit DAY -> DAY
    com.ibm.icu.impl.duration.TimeUnit HOUR -> HOUR
    com.ibm.icu.impl.duration.TimeUnit MINUTE -> MINUTE
    com.ibm.icu.impl.duration.TimeUnit SECOND -> SECOND
    com.ibm.icu.impl.duration.TimeUnit MILLISECOND -> MILLISECOND
    com.ibm.icu.impl.duration.TimeUnit[] units -> b
    long[] approxDurations -> c
    22:25:void <init>(java.lang.String,int) -> <init>
    28:28:java.lang.String toString() -> toString
    57:57:com.ibm.icu.impl.duration.TimeUnit larger() -> larger
    62:62:com.ibm.icu.impl.duration.TimeUnit smaller() -> smaller
    72:72:int ordinal() -> ordinal
    32:81:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.TimeUnitConstants -> com.ibm.icu.impl.duration.TimeUnitConstants:
    com.ibm.icu.impl.duration.TimeUnit YEAR -> YEAR
    com.ibm.icu.impl.duration.TimeUnit MONTH -> MONTH
    com.ibm.icu.impl.duration.TimeUnit WEEK -> WEEK
    com.ibm.icu.impl.duration.TimeUnit DAY -> DAY
    com.ibm.icu.impl.duration.TimeUnit HOUR -> HOUR
    com.ibm.icu.impl.duration.TimeUnit MINUTE -> MINUTE
    com.ibm.icu.impl.duration.TimeUnit SECOND -> SECOND
    com.ibm.icu.impl.duration.TimeUnit MILLISECOND -> MILLISECOND
    15:36:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord -> com.ibm.icu.impl.duration.impl.DataRecord:
    byte pl -> a
    java.lang.String[][] pluralNames -> b
    byte[] genders -> c
    java.lang.String[] singularNames -> d
    java.lang.String[] halfNames -> e
    java.lang.String[] numberNames -> f
    java.lang.String[] mediumNames -> g
    java.lang.String[] shortNames -> h
    java.lang.String[] measures -> i
    java.lang.String[] rqdSuffixes -> j
    java.lang.String[] optSuffixes -> k
    java.lang.String[] halves -> l
    byte[] halfPlacements -> m
    byte[] halfSupport -> n
    java.lang.String fifteenMinutes -> o
    java.lang.String fiveMinutes -> p
    boolean requiresDigitSeparator -> q
    java.lang.String digitPrefix -> r
    java.lang.String countSep -> s
    java.lang.String shortUnitSep -> t
    java.lang.String[] unitSep -> u
    boolean[] unitSepRequiresDP -> v
    boolean[] requiresSkipMarker -> w
    byte numberSystem -> x
    char zero -> y
    char decimalSep -> z
    boolean omitSingularCount -> A
    boolean omitDualCount -> B
    byte zeroHandling -> C
    byte decimalHandling -> D
    byte fractionHandling -> E
    java.lang.String skippedUnitMarker -> F
    boolean allowZero -> G
    boolean weeksAloneOnly -> H
    byte useMilliseconds -> I
    com.ibm.icu.impl.duration.impl.DataRecord$ScopeData[] scopeData -> J
    18:305:void <init>() -> <init>
    57:119:com.ibm.icu.impl.duration.impl.DataRecord read(java.lang.String,com.ibm.icu.impl.duration.impl.RecordReader) -> read
    125:172:void write(com.ibm.icu.impl.duration.impl.RecordWriter) -> write
com.ibm.icu.impl.duration.impl.DataRecord$ECountVariant -> com.ibm.icu.impl.duration.impl.DataRecord$ECountVariant:
    byte INTEGER -> INTEGER
    byte INTEGER_CUSTOM -> INTEGER_CUSTOM
    byte HALF_FRACTION -> HALF_FRACTION
    byte DECIMAL1 -> DECIMAL1
    byte DECIMAL2 -> DECIMAL2
    byte DECIMAL3 -> DECIMAL3
    java.lang.String[] names -> names
    229:229:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$EDecimalHandling -> com.ibm.icu.impl.duration.impl.DataRecord$EDecimalHandling:
    byte DPLURAL -> DPLURAL
    byte DSINGULAR -> DSINGULAR
    byte DSINGULAR_SUBONE -> DSINGULAR_SUBONE
    byte DPAUCAL -> DPAUCAL
    java.lang.String[] names -> names
    271:271:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$EFractionHandling -> com.ibm.icu.impl.duration.impl.DataRecord$EFractionHandling:
    byte FPLURAL -> FPLURAL
    byte FSINGULAR_PLURAL -> FSINGULAR_PLURAL
    byte FSINGULAR_PLURAL_ANDAHALF -> FSINGULAR_PLURAL_ANDAHALF
    byte FPAUCAL -> FPAUCAL
    java.lang.String[] names -> names
    280:280:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$EGender -> com.ibm.icu.impl.duration.impl.DataRecord$EGender:
    byte M -> M
    byte F -> F
    byte N -> N
    java.lang.String[] names -> names
    309:309:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$EHalfPlacement -> com.ibm.icu.impl.duration.impl.DataRecord$EHalfPlacement:
    byte PREFIX -> PREFIX
    byte AFTER_FIRST -> AFTER_FIRST
    byte LAST -> LAST
    java.lang.String[] names -> names
    248:248:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$EHalfSupport -> com.ibm.icu.impl.duration.impl.DataRecord$EHalfSupport:
    byte YES -> YES
    byte NO -> NO
    byte ONE_PLUS -> ONE_PLUS
    java.lang.String[] names -> names
    288:288:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$EMilliSupport -> com.ibm.icu.impl.duration.impl.DataRecord$EMilliSupport:
    byte YES -> YES
    byte NO -> NO
    byte WITH_SECONDS -> WITH_SECONDS
    java.lang.String[] names -> names
    295:295:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$ENumberSystem -> com.ibm.icu.impl.duration.impl.DataRecord$ENumberSystem:
    byte DEFAULT -> DEFAULT
    byte CHINESE_TRADITIONAL -> CHINESE_TRADITIONAL
    byte CHINESE_SIMPLIFIED -> CHINESE_SIMPLIFIED
    byte KOREAN -> KOREAN
    java.lang.String[] names -> names
    256:256:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$EPluralization -> com.ibm.icu.impl.duration.impl.DataRecord$EPluralization:
    byte NONE -> NONE
    byte PLURAL -> PLURAL
    byte DUAL -> DUAL
    byte PAUCAL -> PAUCAL
    byte HEBREW -> HEBREW
    byte ARABIC -> ARABIC
    java.lang.String[] names -> names
    240:240:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$ESeparatorVariant -> com.ibm.icu.impl.duration.impl.DataRecord$ESeparatorVariant:
    byte NONE -> NONE
    byte SHORT -> SHORT
    byte FULL -> FULL
    java.lang.String[] names -> names
    302:302:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$ETimeDirection -> com.ibm.icu.impl.duration.impl.DataRecord$ETimeDirection:
    byte NODIRECTION -> NODIRECTION
    byte PAST -> PAST
    byte FUTURE -> FUTURE
    java.lang.String[] names -> names
    212:212:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$ETimeLimit -> com.ibm.icu.impl.duration.impl.DataRecord$ETimeLimit:
    byte NOLIMIT -> NOLIMIT
    byte LT -> LT
    byte MT -> MT
    java.lang.String[] names -> names
    205:205:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$EUnitVariant -> com.ibm.icu.impl.duration.impl.DataRecord$EUnitVariant:
    byte PLURALIZED -> PLURALIZED
    byte MEDIUM -> MEDIUM
    byte SHORT -> SHORT
    java.lang.String[] names -> names
    219:219:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$EZeroHandling -> com.ibm.icu.impl.duration.impl.DataRecord$EZeroHandling:
    byte ZPLURAL -> ZPLURAL
    byte ZSINGULAR -> ZSINGULAR
    java.lang.String[] names -> names
    263:263:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.DataRecord$ScopeData -> com.ibm.icu.impl.duration.impl.DataRecord$ScopeData:
    java.lang.String prefix -> a
    boolean requiresDigitPrefix -> b
    java.lang.String suffix -> c
    174:174:void <init>() -> <init>
    180:185:void write(com.ibm.icu.impl.duration.impl.RecordWriter) -> write
    188:197:com.ibm.icu.impl.duration.impl.DataRecord$ScopeData read(com.ibm.icu.impl.duration.impl.RecordReader) -> read
com.ibm.icu.impl.duration.impl.PeriodFormatterData -> com.ibm.icu.impl.duration.impl.PeriodFormatterData:
    com.ibm.icu.impl.duration.impl.DataRecord dr -> a
    java.lang.String localeName -> b
    boolean trace -> trace
    40:51:void <init>(java.lang.String,com.ibm.icu.impl.duration.impl.DataRecord) -> <init>
    66:66:int pluralization() -> pluralization
    74:74:boolean allowZero() -> allowZero
    78:78:boolean weeksAloneOnly() -> weeksAloneOnly
    82:82:int useMilliseconds() -> useMilliseconds
    95:106:boolean appendPrefix(int,int,java.lang.StringBuffer) -> appendPrefix
    118:131:void appendSuffix(int,int,java.lang.StringBuffer) -> appendSuffix
    154:240:boolean appendUnit(com.ibm.icu.impl.duration.TimeUnit,int,int,int,boolean,boolean,boolean,boolean,boolean,java.lang.StringBuffer) -> appendUnit
    259:375:int appendCount(com.ibm.icu.impl.duration.TimeUnit,boolean,boolean,int,int,boolean,java.lang.String,boolean,java.lang.StringBuffer) -> appendCount
    388:409:void appendCountValue(int,int,int,java.lang.StringBuffer) -> appendCountValue
    413:436:void appendInteger(int,int,int,java.lang.StringBuffer) -> appendInteger
    448:458:void appendDigits(long,int,int,java.lang.StringBuffer) -> appendDigits
    465:468:void appendSkippedUnit(java.lang.StringBuffer) -> appendSkippedUnit
    487:495:boolean appendUnitSeparator(com.ibm.icu.impl.duration.TimeUnit,boolean,boolean,boolean,java.lang.StringBuffer) -> appendUnitSeparator
    514:670:int computeForm(com.ibm.icu.impl.duration.TimeUnit,int,int,boolean) -> a
    38:38:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.PeriodFormatterDataService -> com.ibm.icu.impl.duration.impl.PeriodFormatterDataService:
    16:16:void <init>() -> <init>
    com.ibm.icu.impl.duration.impl.PeriodFormatterData get(java.lang.String) -> get
    java.util.Collection getAvailableLocales() -> getAvailableLocales
com.ibm.icu.impl.duration.impl.RecordReader -> com.ibm.icu.impl.duration.impl.a:
    boolean open(java.lang.String) -> open
    boolean close() -> close
    boolean bool(java.lang.String) -> bool
    boolean[] boolArray(java.lang.String) -> boolArray
    char character(java.lang.String) -> character
    byte namedIndex(java.lang.String,java.lang.String[]) -> namedIndex
    byte[] namedIndexArray(java.lang.String,java.lang.String[]) -> namedIndexArray
    java.lang.String string(java.lang.String) -> string
    java.lang.String[] stringArray(java.lang.String) -> stringArray
    java.lang.String[][] stringTable(java.lang.String) -> stringTable
com.ibm.icu.impl.duration.impl.RecordWriter -> com.ibm.icu.impl.duration.impl.b:
    boolean open(java.lang.String) -> open
    boolean close() -> close
    void bool(java.lang.String,boolean) -> bool
    void boolArray(java.lang.String,boolean[]) -> boolArray
    void character(java.lang.String,char) -> character
    void namedIndex(java.lang.String,java.lang.String[],int) -> namedIndex
    void namedIndexArray(java.lang.String,java.lang.String[],byte[]) -> namedIndexArray
    void string(java.lang.String,java.lang.String) -> string
    void stringArray(java.lang.String,java.lang.String[]) -> stringArray
    void stringTable(java.lang.String,java.lang.String[][]) -> stringTable
com.ibm.icu.impl.duration.impl.ResourceBasedPeriodFormatterDataService -> com.ibm.icu.impl.duration.impl.ResourceBasedPeriodFormatterDataService:
    java.util.Collection availableLocales -> a
    com.ibm.icu.impl.duration.impl.PeriodFormatterData lastData -> b
    java.lang.String lastLocale -> c
    java.util.Map cache -> d
    com.ibm.icu.impl.duration.impl.ResourceBasedPeriodFormatterDataService singleton -> e
    49:49:com.ibm.icu.impl.duration.impl.ResourceBasedPeriodFormatterDataService getInstance() -> getInstance
    36:81:void <init>() -> <init>
    85:150:com.ibm.icu.impl.duration.impl.PeriodFormatterData get(java.lang.String) -> get
    154:154:java.util.Collection getAvailableLocales() -> getAvailableLocales
    43:43:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.Utils -> com.ibm.icu.impl.duration.impl.Utils:
    12:186:void <init>() -> <init>
    14:28:java.util.Locale localeFromString(java.lang.String) -> localeFromString
    53:173:java.lang.String chineseNumber(long,com.ibm.icu.impl.duration.impl.Utils$ChineseDigits) -> chineseNumber
com.ibm.icu.impl.duration.impl.Utils$ChineseDigits -> com.ibm.icu.impl.duration.impl.Utils$ChineseDigits:
    char[] digits -> a
    char[] units -> b
    char[] levels -> c
    char liang -> d
    boolean ko -> e
    com.ibm.icu.impl.duration.impl.Utils$ChineseDigits DEBUG -> DEBUG
    com.ibm.icu.impl.duration.impl.Utils$ChineseDigits TRADITIONAL -> TRADITIONAL
    com.ibm.icu.impl.duration.impl.Utils$ChineseDigits SIMPLIFIED -> SIMPLIFIED
    com.ibm.icu.impl.duration.impl.Utils$ChineseDigits KOREAN -> KOREAN
    193:199:void <init>(java.lang.String,java.lang.String,java.lang.String,char,boolean) -> <init>
    201:218:void <clinit>() -> <clinit>
com.ibm.icu.impl.duration.impl.XMLRecordReader -> com.ibm.icu.impl.duration.impl.XMLRecordReader:
    java.io.Reader r -> a
    java.util.List nameStack -> b
    boolean atTag -> c
    java.lang.String tag -> d
    26:39:void <init>(java.io.Reader) -> <init>
    42:47:boolean open(java.lang.String) -> open
    51:58:boolean close() -> close
    62:66:boolean bool(java.lang.String) -> bool
    70:78:boolean[] boolArray(java.lang.String) -> boolArray
    82:86:char character(java.lang.String) -> character
    90:98:char[] characterArray(java.lang.String) -> characterArray
    102:110:byte namedIndex(java.lang.String,java.lang.String[]) -> namedIndex
    114:129:byte[] namedIndexArray(java.lang.String,java.lang.String[]) -> namedIndexArray
    133:139:java.lang.String string(java.lang.String) -> string
    143:156:java.lang.String[] stringArray(java.lang.String) -> stringArray
    160:170:java.lang.String[][] stringTable(java.lang.String) -> stringTable
    174:179:boolean match(java.lang.String) -> a
    183:186:java.lang.String getTag() -> a
    190:191:void advance() -> b
    194:262:java.lang.String readData() -> c
    266:295:java.lang.String readNextTag() -> d
    300:304:int readChar() -> e
com.ibm.icu.impl.duration.impl.XMLRecordWriter -> com.ibm.icu.impl.duration.impl.XMLRecordWriter:
    java.io.Writer w -> a
    java.util.List nameStack -> b
    21:24:void <init>(java.io.Writer) -> <init>
    27:30:boolean open(java.lang.String) -> open
    34:41:boolean close() -> close
    46:49:void flush() -> flush
    52:53:void bool(java.lang.String,boolean) -> bool
    56:63:void boolArray(java.lang.String,boolean[]) -> boolArray
    66:72:java.lang.String ctos(char) -> a
    76:79:void character(java.lang.String,char) -> character
    82:94:void characterArray(java.lang.String,char[]) -> characterArray
    97:100:void namedIndex(java.lang.String,java.lang.String[],int) -> namedIndex
    103:115:void namedIndexArray(java.lang.String,java.lang.String[],byte[]) -> namedIndexArray
    118:159:java.lang.String normalize(java.lang.String) -> normalize
    163:167:void internalString(java.lang.String,java.lang.String) -> a
    170:181:void internalStringArray(java.lang.String,java.lang.String[]) -> a
    184:185:void string(java.lang.String,java.lang.String) -> string
    188:199:void stringArray(java.lang.String,java.lang.String[]) -> stringArray
    202:214:void stringTable(java.lang.String,java.lang.String[][]) -> stringTable
    217:220:void push(java.lang.String) -> a
    223:227:void pop() -> a
    230:234:void newline() -> b
    237:246:void writeString(java.lang.String) -> b
com.ibm.icu.impl.duration.impl.YMDDateFormatter -> com.ibm.icu.impl.duration.impl.YMDDateFormatter:
    java.lang.String requestedFields -> a
    java.lang.String localeName -> b
    java.util.TimeZone timeZone -> c
    java.text.SimpleDateFormat df -> d
    34:36:void <init>(java.lang.String) -> <init>
    47:55:void <init>(java.lang.String,java.lang.String,java.util.TimeZone) -> <init>
    62:62:java.lang.String format(long) -> format
    76:76:java.lang.String format(java.util.Date) -> format
    83:86:com.ibm.icu.impl.duration.DateFormatter withLocale(java.lang.String) -> withLocale
    93:96:com.ibm.icu.impl.duration.DateFormatter withTimeZone(java.util.TimeZone) -> withTimeZone
com.ibm.icu.impl.locale.AsciiUtil -> com.ibm.icu.impl.locale.AsciiUtil:
    9:160:void <init>() -> <init>
    11:27:boolean caseIgnoreMatch(java.lang.String,java.lang.String) -> caseIgnoreMatch
    31:34:int caseIgnoreCompare(java.lang.String,java.lang.String) -> caseIgnoreCompare
    39:42:char toUpper(char) -> toUpper
    46:49:char toLower(char) -> toLower
    53:67:java.lang.String toLowerString(java.lang.String) -> toLowerString
    71:85:java.lang.String toUpperString(java.lang.String) -> toUpperString
    89:112:java.lang.String toTitleString(java.lang.String) -> toTitleString
    116:116:boolean isAlpha(char) -> isAlpha
    120:127:boolean isAlphaString(java.lang.String) -> isAlphaString
    131:131:boolean isNumeric(char) -> isNumeric
    135:142:boolean isNumericString(java.lang.String) -> isNumericString
    146:146:boolean isAlphaNumeric(char) -> isAlphaNumeric
    150:157:boolean isAlphaNumericString(java.lang.String) -> isAlphaNumericString
com.ibm.icu.impl.locale.AsciiUtil$CaseInsensitiveKey -> com.ibm.icu.impl.locale.AsciiUtil$CaseInsensitiveKey:
    java.lang.String _key -> a
    int _hash -> b
    164:167:void <init>(java.lang.String) -> <init>
    170:176:boolean equals(java.lang.Object) -> equals
    180:180:int hashCode() -> hashCode
com.ibm.icu.impl.locale.BaseLocale -> com.ibm.icu.impl.locale.BaseLocale:
    java.lang.String SEP -> SEP
    com.ibm.icu.impl.locale.BaseLocale$Cache CACHE -> a
    com.ibm.icu.impl.locale.BaseLocale ROOT -> ROOT
    java.lang.String _language -> b
    java.lang.String _script -> c
    java.lang.String _region -> d
    java.lang.String _variant -> e
    int _hash -> f
    20:45:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    58:60:com.ibm.icu.impl.locale.BaseLocale getInstance(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getInstance
    64:64:java.lang.String getLanguage() -> getLanguage
    68:68:java.lang.String getScript() -> getScript
    72:72:java.lang.String getRegion() -> getRegion
    76:76:java.lang.String getVariant() -> getVariant
    80:87:boolean equals(java.lang.Object) -> equals
    95:121:java.lang.String toString() -> toString
    125:142:int hashCode() -> hashCode
    11:11:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte) -> <init>
    17:18:void <clinit>() -> <clinit>
com.ibm.icu.impl.locale.BaseLocale$1 -> com.ibm.icu.impl.locale.a:
    java.lang.String legacyId -> a
    java.lang.String bcpId -> b
    java.util.Map typeMap -> c
    java.util.EnumSet specialTypes -> d
    1064:1069:void com.ibm.icu.impl.locale.KeyTypeData$KeyData.<init>(java.lang.String,java.lang.String,java.util.Map,java.util.EnumSet):64:69 -> <init>
com.ibm.icu.impl.locale.BaseLocale$Cache -> com.ibm.icu.impl.locale.b:
    245:246:void <init>() -> <init>
    249:249:com.ibm.icu.impl.locale.BaseLocale$Key normalizeKey(com.ibm.icu.impl.locale.BaseLocale$Key) -> a
    253:253:com.ibm.icu.impl.locale.BaseLocale createObject(com.ibm.icu.impl.locale.BaseLocale$Key) -> b
    243:243:java.lang.Object normalizeKey(java.lang.Object) -> normalizeKey
    243:243:java.lang.Object createObject(java.lang.Object) -> createObject
com.ibm.icu.impl.locale.BaseLocale$Key -> com.ibm.icu.impl.locale.c:
    java.lang.String _lang -> a
    java.lang.String _scrt -> b
    java.lang.String _regn -> c
    java.lang.String _vart -> d
    int _hash -> e
    146:166:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    177:177:boolean equals(java.lang.Object) -> equals
    186:200:int compareTo(com.ibm.icu.impl.locale.BaseLocale$Key) -> f
    204:225:int hashCode() -> hashCode
    229:239:com.ibm.icu.impl.locale.BaseLocale$Key normalize(com.ibm.icu.impl.locale.BaseLocale$Key) -> a
    145:145:int compareTo(java.lang.Object) -> compareTo
    145:145:java.lang.String access$000(com.ibm.icu.impl.locale.BaseLocale$Key) -> b
    145:145:java.lang.String access$100(com.ibm.icu.impl.locale.BaseLocale$Key) -> c
    145:145:java.lang.String access$200(com.ibm.icu.impl.locale.BaseLocale$Key) -> d
    145:145:java.lang.String access$300(com.ibm.icu.impl.locale.BaseLocale$Key) -> e
com.ibm.icu.impl.locale.Extension -> com.ibm.icu.impl.locale.Extension:
    char _key -> a
    java.lang.String _value -> _value
    14:16:void <init>(char) -> <init>
    18:21:void <init>(char,java.lang.String) -> <init>
    24:24:char getKey() -> getKey
    28:28:java.lang.String getValue() -> getValue
    32:32:java.lang.String getID() -> getID
    36:36:java.lang.String toString() -> toString
com.ibm.icu.impl.locale.InternalLocaleBuilder -> com.ibm.icu.impl.locale.InternalLocaleBuilder:
    java.lang.String _language -> a
    java.lang.String _script -> b
    java.lang.String _region -> c
    java.lang.String _variant -> d
    com.ibm.icu.impl.locale.InternalLocaleBuilder$CaseInsensitiveChar PRIVUSE_KEY -> e
    java.util.HashMap _extensions -> f
    java.util.HashSet _uattributes -> g
    java.util.HashMap _ukeywords -> h
    boolean $assertionsDisabled -> i
    19:32:void <init>() -> <init>
    35:43:com.ibm.icu.impl.locale.InternalLocaleBuilder setLanguage(java.lang.String) -> setLanguage
    47:55:com.ibm.icu.impl.locale.InternalLocaleBuilder setScript(java.lang.String) -> setScript
    59:67:com.ibm.icu.impl.locale.InternalLocaleBuilder setRegion(java.lang.String) -> setRegion
    71:82:com.ibm.icu.impl.locale.InternalLocaleBuilder setVariant(java.lang.String) -> setVariant
    86:94:com.ibm.icu.impl.locale.InternalLocaleBuilder addUnicodeLocaleAttribute(java.lang.String) -> addUnicodeLocaleAttribute
    98:104:com.ibm.icu.impl.locale.InternalLocaleBuilder removeUnicodeLocaleAttribute(java.lang.String) -> removeUnicodeLocaleAttribute
    108:137:com.ibm.icu.impl.locale.InternalLocaleBuilder setUnicodeLocaleKeyword(java.lang.String,java.lang.String) -> setUnicodeLocaleKeyword
    142:191:com.ibm.icu.impl.locale.InternalLocaleBuilder setExtension(char,java.lang.String) -> setExtension
    198:272:com.ibm.icu.impl.locale.InternalLocaleBuilder setExtensions(java.lang.String) -> setExtensions
    280:308:com.ibm.icu.impl.locale.InternalLocaleBuilder setExtensions(java.util.List,java.lang.String) -> a
    315:338:com.ibm.icu.impl.locale.InternalLocaleBuilder setLanguageTag(com.ibm.icu.impl.locale.LanguageTag) -> setLanguageTag
    342:430:com.ibm.icu.impl.locale.InternalLocaleBuilder setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions) -> setLocale
    434:439:com.ibm.icu.impl.locale.InternalLocaleBuilder clear() -> clear
    443:452:com.ibm.icu.impl.locale.InternalLocaleBuilder clearExtensions() -> clearExtensions
    456:490:com.ibm.icu.impl.locale.BaseLocale getBaseLocale() -> getBaseLocale
    494:500:com.ibm.icu.impl.locale.LocaleExtensions getLocaleExtensions() -> getLocaleExtensions
    508:532:java.lang.String removePrivateuseVariant(java.lang.String) -> a
    540:548:int checkVariants(java.lang.String,java.lang.String) -> a
    558:630:void setUnicodeLocaleExtension(java.lang.String) -> b
    15:24:void <clinit>() -> <clinit>
com.ibm.icu.impl.locale.InternalLocaleBuilder$CaseInsensitiveChar -> com.ibm.icu.impl.locale.d:
    char _c -> a
    661:663:void <init>(char) -> <init>
    666:666:char value() -> a
    670:670:int hashCode() -> hashCode
    674:680:boolean equals(java.lang.Object) -> equals
com.ibm.icu.impl.locale.InternalLocaleBuilder$CaseInsensitiveString -> com.ibm.icu.impl.locale.e:
    java.lang.String _s -> a
    635:637:void <init>(java.lang.String) -> <init>
    640:640:java.lang.String value() -> a
    644:644:int hashCode() -> hashCode
    648:654:boolean equals(java.lang.Object) -> equals
com.ibm.icu.impl.locale.KeyTypeData -> com.ibm.icu.impl.locale.KeyTypeData:
    java.util.Map KEYMAP -> a
    boolean $assertionsDisabled -> b
    24:72:void <init>() -> <init>
    83:88:java.lang.String toBcpKey(java.lang.String) -> toBcpKey
    92:97:java.lang.String toLegacyKey(java.lang.String) -> toLegacyKey
    103:133:java.lang.String toBcpType(java.lang.String,java.lang.String,com.ibm.icu.util.Output,com.ibm.icu.util.Output) -> toBcpType
    140:170:java.lang.String toLegacyType(java.lang.String,java.lang.String,com.ibm.icu.util.Output,com.ibm.icu.util.Output) -> toLegacyType
    175:359:void initFromResourceBundle() -> a
    24:540:void <clinit>() -> <clinit>
com.ibm.icu.impl.locale.KeyTypeData$CodepointsTypeHandler -> com.ibm.icu.impl.locale.f:
    java.util.regex.Pattern pat -> a
    33:33:void <init>() -> <init>
    36:36:boolean isValid(java.lang.String) -> a
    33:33:void <init>(byte) -> <init>
    34:34:void <clinit>() -> <clinit>
com.ibm.icu.impl.locale.KeyTypeData$ReorderCodeTypeHandler -> com.ibm.icu.impl.locale.g:
    java.util.regex.Pattern pat -> a
    40:40:void <init>() -> <init>
    43:43:boolean isValid(java.lang.String) -> a
    40:40:void <init>(byte) -> <init>
    41:41:void <clinit>() -> <clinit>
com.ibm.icu.impl.locale.KeyTypeData$SpecialType -> com.ibm.icu.impl.locale.h:
    com.ibm.icu.impl.locale.KeyTypeData$SpecialType CODEPOINTS -> b
    com.ibm.icu.impl.locale.KeyTypeData$SpecialType REORDER_CODE -> c
    com.ibm.icu.impl.locale.KeyTypeData$SpecialTypeHandler handler -> a
    com.ibm.icu.impl.locale.KeyTypeData$SpecialType[] $VALUES -> d
    47:47:com.ibm.icu.impl.locale.KeyTypeData$SpecialType[] values() -> values
    47:47:com.ibm.icu.impl.locale.KeyTypeData$SpecialType valueOf(java.lang.String) -> valueOf
    52:54:void <init>(java.lang.String,int,com.ibm.icu.impl.locale.KeyTypeData$SpecialTypeHandler) -> <init>
    47:49:void <clinit>() -> <clinit>
com.ibm.icu.impl.locale.KeyTypeData$SpecialTypeHandler -> com.ibm.icu.impl.locale.i:
    26:26:void <init>() -> <init>
    boolean isValid(java.lang.String) -> a
    29:29:java.lang.String canonicalize(java.lang.String) -> b
    26:26:void <init>(byte) -> <init>
com.ibm.icu.impl.locale.KeyTypeData$Type -> com.ibm.icu.impl.locale.j:
    java.lang.String legacyId -> a
    java.lang.String bcpId -> b
    76:79:void <init>(java.lang.String,java.lang.String) -> <init>
com.ibm.icu.impl.locale.LanguageTag -> com.ibm.icu.impl.locale.LanguageTag:
    java.lang.String SEP -> SEP
    java.lang.String PRIVATEUSE -> PRIVATEUSE
    java.lang.String UNDETERMINED -> UNDETERMINED
    java.lang.String PRIVUSE_VARIANT_PREFIX -> PRIVUSE_VARIANT_PREFIX
    java.lang.String _language -> a
    java.lang.String _script -> b
    java.lang.String _region -> c
    java.lang.String _privateuse -> d
    java.util.List _extlangs -> e
    java.util.List _variants -> f
    java.util.List _extensions -> g
    java.util.Map GRANDFATHERED -> h
    boolean $assertionsDisabled -> i
    30:111:void <init>() -> <init>
    159:206:com.ibm.icu.impl.locale.LanguageTag parse(java.lang.String,com.ibm.icu.impl.locale.ParseStatus) -> parse
    214:228:boolean parseLanguage(com.ibm.icu.impl.locale.StringTokenIterator,com.ibm.icu.impl.locale.ParseStatus) -> a
    232:257:boolean parseExtlangs(com.ibm.icu.impl.locale.StringTokenIterator,com.ibm.icu.impl.locale.ParseStatus) -> b
    261:275:boolean parseScript(com.ibm.icu.impl.locale.StringTokenIterator,com.ibm.icu.impl.locale.ParseStatus) -> c
    279:293:boolean parseRegion(com.ibm.icu.impl.locale.StringTokenIterator,com.ibm.icu.impl.locale.ParseStatus) -> d
    297:317:boolean parseVariants(com.ibm.icu.impl.locale.StringTokenIterator,com.ibm.icu.impl.locale.ParseStatus) -> e
    321:361:boolean parseExtensions(com.ibm.icu.impl.locale.StringTokenIterator,com.ibm.icu.impl.locale.ParseStatus) -> f
    365:398:boolean parsePrivateuse(com.ibm.icu.impl.locale.StringTokenIterator,com.ibm.icu.impl.locale.ParseStatus) -> g
    402:531:com.ibm.icu.impl.locale.LanguageTag parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions) -> parseLocale
    539:539:java.lang.String getLanguage() -> getLanguage
    543:543:java.util.List getExtlangs() -> getExtlangs
    547:547:java.lang.String getScript() -> getScript
    551:551:java.lang.String getRegion() -> getRegion
    555:555:java.util.List getVariants() -> getVariants
    559:559:java.util.List getExtensions() -> getExtensions
    563:563:java.lang.String getPrivateuse() -> getPrivateuse
    576:576:boolean isLanguage(java.lang.String) -> isLanguage
    582:582:boolean isExtlang(java.lang.String) -> isExtlang
    587:587:boolean isScript(java.lang.String) -> isScript
    593:593:boolean isRegion(java.lang.String) -> isRegion
    600:610:boolean isVariant(java.lang.String) -> isVariant
    620:620:boolean isExtensionSingleton(java.lang.String) -> isExtensionSingleton
    626:626:boolean isExtensionSingletonChar(char) -> isExtensionSingletonChar
    631:631:boolean isExtensionSubtag(java.lang.String) -> isExtensionSubtag
    636:636:boolean isPrivateusePrefix(java.lang.String) -> isPrivateusePrefix
    641:641:boolean isPrivateusePrefixChar(char) -> isPrivateusePrefixChar
    646:646:boolean isPrivateuseSubtag(java.lang.String) -> isPrivateuseSubtag
    654:654:java.lang.String canonicalizeLanguage(java.lang.String) -> canonicalizeLanguage
    658:658:java.lang.String canonicalizeExtlang(java.lang.String) -> canonicalizeExtlang
    662:662:java.lang.String canonicalizeScript(java.lang.String) -> canonicalizeScript
    666:666:java.lang.String canonicalizeRegion(java.lang.String) -> canonicalizeRegion
    670:670:java.lang.String canonicalizeVariant(java.lang.String) -> canonicalizeVariant
    674:674:java.lang.String canonicalizeExtension(java.lang.String) -> canonicalizeExtension
    678:678:java.lang.String canonicalizeExtensionSingleton(java.lang.String) -> canonicalizeExtensionSingleton
    682:682:java.lang.String canonicalizeExtensionSubtag(java.lang.String) -> canonicalizeExtensionSubtag
    686:686:java.lang.String canonicalizePrivateuse(java.lang.String) -> canonicalizePrivateuse
    690:690:java.lang.String canonicalizePrivateuseSubtag(java.lang.String) -> canonicalizePrivateuseSubtag
    694:726:java.lang.String toString() -> toString
    16:108:void <clinit>() -> <clinit>
com.ibm.icu.impl.locale.LocaleExtensions -> com.ibm.icu.impl.locale.LocaleExtensions:
    java.util.SortedMap _map -> a
    java.lang.String _id -> b
    java.util.SortedMap EMPTY_MAP -> c
    com.ibm.icu.impl.locale.LocaleExtensions EMPTY_EXTENSIONS -> EMPTY_EXTENSIONS
    com.ibm.icu.impl.locale.LocaleExtensions CALENDAR_JAPANESE -> CALENDAR_JAPANESE
    com.ibm.icu.impl.locale.LocaleExtensions NUMBER_THAI -> NUMBER_THAI
    boolean $assertionsDisabled -> d
    49:50:void <init>() -> <init>
    56:118:void <init>(java.util.Map,java.util.Set,java.util.Map) -> <init>
    121:121:java.util.Set getKeys() -> getKeys
    125:125:com.ibm.icu.impl.locale.Extension getExtension(java.lang.Character) -> getExtension
    129:133:java.lang.String getExtensionValue(java.lang.Character) -> getExtensionValue
    137:142:java.util.Set getUnicodeLocaleAttributes() -> getUnicodeLocaleAttributes
    146:151:java.util.Set getUnicodeLocaleKeys() -> getUnicodeLocaleKeys
    155:160:java.lang.String getUnicodeLocaleType(java.lang.String) -> getUnicodeLocaleType
    164:164:boolean isEmpty() -> isEmpty
    168:168:boolean isValidKey(char) -> isValidKey
    172:172:boolean isValidUnicodeLocaleKey(java.lang.String) -> isValidUnicodeLocaleKey
    176:196:java.lang.String toID(java.util.SortedMap) -> a
    201:201:java.lang.String toString() -> toString
    205:205:java.lang.String getID() -> getID
    209:209:int hashCode() -> hashCode
    213:219:boolean equals(java.lang.Object) -> equals
    21:47:void <clinit>() -> <clinit>
com.ibm.icu.impl.locale.LocaleObjectCache -> com.ibm.icu.impl.locale.LocaleObjectCache:
    java.util.concurrent.ConcurrentHashMap _map -> a
    java.lang.ref.ReferenceQueue _queue -> b
    18:19:void <init>() -> <init>
    15:23:void <init>(int,float,int) -> <init>
    26:54:java.lang.Object get(java.lang.Object) -> get
    60:63:void cleanStaleEntries() -> a
    java.lang.Object createObject(java.lang.Object) -> createObject
    68:68:java.lang.Object normalizeKey(java.lang.Object) -> normalizeKey
com.ibm.icu.impl.locale.LocaleObjectCache$CacheEntry -> com.ibm.icu.impl.locale.k:
    java.lang.Object _key -> a
    75:77:void <init>(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue) -> <init>
    80:80:java.lang.Object getKey() -> a
com.ibm.icu.impl.locale.LocaleSyntaxException -> com.ibm.icu.impl.locale.LocaleSyntaxException:
    long serialVersionUID -> serialVersionUID
    int _index -> a
    16:17:void <init>(java.lang.String) -> <init>
    13:22:void <init>(java.lang.String,int) -> <init>
    25:25:int getErrorIndex() -> getErrorIndex
com.ibm.icu.impl.locale.ParseStatus -> com.ibm.icu.impl.locale.ParseStatus:
    int _parseLength -> a
    int _errorIndex -> b
    java.lang.String _errorMsg -> c
    9:12:void <init>() -> <init>
    15:18:void reset() -> reset
    21:21:boolean isError() -> isError
    25:25:int getErrorIndex() -> getErrorIndex
    29:29:int getParseLength() -> getParseLength
    33:33:java.lang.String getErrorMessage() -> getErrorMessage
com.ibm.icu.impl.locale.StringTokenIterator -> com.ibm.icu.impl.locale.StringTokenIterator:
    java.lang.String _text -> a
    java.lang.String _dlms -> b
    java.lang.String _token -> c
    int _start -> d
    int _end -> e
    boolean _done -> f
    18:22:void <init>(java.lang.String,java.lang.String) -> <init>
    25:26:java.lang.String first() -> first
    30:30:java.lang.String current() -> current
    34:34:int currentStart() -> currentStart
    38:38:int currentEnd() -> currentEnd
    42:42:boolean isDone() -> isDone
    46:55:java.lang.String next() -> next
    59:59:boolean hasNext() -> hasNext
    63:70:com.ibm.icu.impl.locale.StringTokenIterator setStart(int) -> setStart
    74:76:com.ibm.icu.impl.locale.StringTokenIterator setText(java.lang.String) -> setText
    80:90:int nextDelimiter(int) -> a
com.ibm.icu.impl.locale.UnicodeLocaleExtension -> com.ibm.icu.impl.locale.UnicodeLocaleExtension:
    char SINGLETON -> SINGLETON
    java.util.SortedSet EMPTY_SORTED_SET -> a
    java.util.SortedMap EMPTY_SORTED_MAP -> b
    java.util.SortedSet _attributes -> c
    java.util.SortedMap _keywords -> d
    com.ibm.icu.impl.locale.UnicodeLocaleExtension CA_JAPANESE -> CA_JAPANESE
    com.ibm.icu.impl.locale.UnicodeLocaleExtension NU_THAI -> NU_THAI
    23:43:void <init>() -> <init>
    46:70:void <init>(java.util.SortedSet,java.util.SortedMap) -> <init>
    73:73:java.util.Set getUnicodeLocaleAttributes() -> getUnicodeLocaleAttributes
    77:77:java.util.Set getUnicodeLocaleKeys() -> getUnicodeLocaleKeys
    81:81:java.lang.String getUnicodeLocaleType(java.lang.String) -> getUnicodeLocaleType
    85:85:boolean isSingletonChar(char) -> isSingletonChar
    90:90:boolean isAttribute(java.lang.String) -> isAttribute
    95:95:boolean isKey(java.lang.String) -> isKey
    100:100:boolean isTypeSubtag(java.lang.String) -> isTypeSubtag
    105:119:boolean isType(java.lang.String) -> isType
    20:39:void <clinit>() -> <clinit>
com.ibm.icu.impl.text.RbnfScannerProviderImpl -> com.ibm.icu.impl.text.RbnfScannerProviderImpl:
    boolean DEBUG -> a
    java.util.Map cache -> b
    37:39:void <init>() -> <init>
    74:86:com.ibm.icu.text.RbnfLenientScanner get(com.ibm.icu.util.ULocale,java.lang.String) -> get
    95:119:com.ibm.icu.text.RbnfLenientScanner createScanner(com.ibm.icu.util.ULocale,java.lang.String) -> createScanner
    29:29:void <clinit>() -> <clinit>
com.ibm.icu.impl.text.RbnfScannerProviderImpl$RbnfLenientScannerImpl -> com.ibm.icu.impl.text.a:
    com.ibm.icu.text.RuleBasedCollator collator -> a
    125:127:void <init>(com.ibm.icu.text.RuleBasedCollator) -> <init>
    130:137:boolean allIgnorable(java.lang.String) -> allIgnorable
    141:161:int[] findText(java.lang.String,java.lang.String,int) -> findText
    229:281:int prefixLength(java.lang.String,java.lang.String) -> prefixLength
    122:122:void <init>(com.ibm.icu.text.RuleBasedCollator,byte) -> <init>
com.ibm.icu.lang.CharSequences -> com.ibm.icu.lang.CharSequences:
    52:67:int matchAfter(java.lang.CharSequence,java.lang.CharSequence,int,int) -> matchAfter
    77:77:int codePointLength(java.lang.CharSequence) -> codePointLength
    100:106:boolean equals(int,java.lang.CharSequence) -> equals
    116:116:boolean equals(java.lang.CharSequence,int) -> equals
    131:161:int compare(java.lang.CharSequence,int) -> compare
    175:175:int compare(int,java.lang.CharSequence) -> compare
    186:191:int getSingleCodePoint(java.lang.CharSequence) -> getSingleCodePoint
    203:203:boolean equals(java.lang.Object,java.lang.Object) -> equals
    216:225:int compare(java.lang.CharSequence,java.lang.CharSequence) -> compare
    237:237:boolean equalsChars(java.lang.CharSequence,java.lang.CharSequence) -> equalsChars
    248:248:boolean onCharacterBoundary(java.lang.CharSequence,int) -> onCharacterBoundary
    263:269:int indexOf(java.lang.CharSequence,int) -> indexOf
    285:304:int[] codePoints(java.lang.CharSequence) -> codePoints
    307:308:void <init>() -> <init>
com.ibm.icu.lang.UCharacter -> com.ibm.icu.lang.UCharacter:
    int MIN_VALUE -> MIN_VALUE
    int MAX_VALUE -> MAX_VALUE
    int SUPPLEMENTARY_MIN_VALUE -> SUPPLEMENTARY_MIN_VALUE
    int REPLACEMENT_CHAR -> REPLACEMENT_CHAR
    double NO_NUMERIC_VALUE -> NO_NUMERIC_VALUE
    int MIN_RADIX -> MIN_RADIX
    int MAX_RADIX -> MAX_RADIX
    int TITLECASE_NO_LOWERCASE -> TITLECASE_NO_LOWERCASE
    int TITLECASE_NO_BREAK_ADJUSTMENT -> TITLECASE_NO_BREAK_ADJUSTMENT
    int FOLD_CASE_DEFAULT -> FOLD_CASE_DEFAULT
    int FOLD_CASE_EXCLUDE_SPECIAL_I -> FOLD_CASE_EXCLUDE_SPECIAL_I
    char MIN_HIGH_SURROGATE -> MIN_HIGH_SURROGATE
    char MAX_HIGH_SURROGATE -> MAX_HIGH_SURROGATE
    char MIN_LOW_SURROGATE -> MIN_LOW_SURROGATE
    char MAX_LOW_SURROGATE -> MAX_LOW_SURROGATE
    char MIN_SURROGATE -> MIN_SURROGATE
    char MAX_SURROGATE -> MAX_SURROGATE
    int MIN_SUPPLEMENTARY_CODE_POINT -> MIN_SUPPLEMENTARY_CODE_POINT
    int MAX_CODE_POINT -> MAX_CODE_POINT
    int MIN_CODE_POINT -> MIN_CODE_POINT
    3556:3564:int digit(int,int) -> digit
    3583:3583:int digit(int) -> digit
    3602:3602:int getNumericValue(int) -> getNumericValue
    3624:3624:double getUnicodeNumericValue(int) -> getUnicodeNumericValue
    3638:3638:boolean isSpace(int) -> isSpace
    3659:3659:int getType(int) -> getType
    3675:3675:boolean isDefined(int) -> isDefined
    3692:3692:boolean isDigit(int) -> isDigit
    3707:3707:boolean isISOControl(int) -> isISOControl
    3721:3721:boolean isLetter(int) -> isLetter
    3739:3739:boolean isLetterOrDigit(int) -> isLetterOrDigit
    3758:3758:boolean isJavaLetter(int) -> isJavaLetter
    3771:3771:boolean isJavaLetterOrDigit(int) -> isJavaLetterOrDigit
    3783:3783:boolean isJavaIdentifierStart(int) -> isJavaIdentifierStart
    3795:3795:boolean isJavaIdentifierPart(int) -> isJavaIdentifierPart
    3814:3814:boolean isLowerCase(int) -> isLowerCase
    3850:3850:boolean isWhitespace(int) -> isWhitespace
    3871:3871:boolean isSpaceChar(int) -> isSpaceChar
    3893:3893:boolean isTitleCase(int) -> isTitleCase
    3927:3927:boolean isUnicodeIdentifierPart(int) -> isUnicodeIdentifierPart
    3965:3965:boolean isUnicodeIdentifierStart(int) -> isUnicodeIdentifierStart
    3993:3998:boolean isIdentifierIgnorable(int) -> isIdentifierIgnorable
    4021:4021:boolean isUpperCase(int) -> isUpperCase
    4044:4044:int toLowerCase(int) -> toLowerCase
    4061:4069:java.lang.String toString(int) -> toString
    4093:4093:int toTitleCase(int) -> toTitleCase
    4116:4116:int toUpperCase(int) -> toUpperCase
    4132:4132:boolean isSupplementary(int) -> isSupplementary
    4145:4145:boolean isBMP(int) -> isBMP
    4157:4159:boolean isPrintable(int) -> isPrintable
    4177:4179:boolean isBaseForm(int) -> isBaseForm
    4204:4204:int getDirection(int) -> getDirection
    4218:4218:boolean isMirrored(int) -> isMirrored
    4237:4237:int getMirror(int) -> getMirror
    4257:4257:int getBidiPairedBracket(int) -> getBidiPairedBracket
    4268:4268:int getCombiningClass(int) -> getCombiningClass
    4285:4297:boolean isLegal(int) -> isLegal
    4315:4324:boolean isLegal(java.lang.String) -> isLegal
    4334:4334:com.ibm.icu.util.VersionInfo getUnicodeVersion() -> getUnicodeVersion
    4350:4350:java.lang.String getName(int) -> getName
    4361:4371:java.lang.String getName(java.lang.String,java.lang.String) -> getName
    4384:4384:java.lang.String getName1_0(int) -> getName1_0
    4406:4406:java.lang.String getExtendedName(int) -> getExtendedName
    4422:4422:java.lang.String getNameAlias(int) -> getNameAlias
    4438:4438:java.lang.String getISOComment(int) -> getISOComment
    4452:4452:int getCharFromName(java.lang.String) -> getCharFromName
    4468:4468:int getCharFromName1_0(java.lang.String) -> getCharFromName1_0
    4491:4491:int getCharFromExtendedName(java.lang.String) -> getCharFromExtendedName
    4505:4505:int getCharFromNameAlias(java.lang.String) -> getCharFromNameAlias
    4543:4543:java.lang.String getPropertyName(int,int) -> getPropertyName
    4569:4573:int getPropertyEnum(java.lang.CharSequence) -> getPropertyEnum
    4628:4646:java.lang.String getPropertyValueName(int,int,int) -> getPropertyValueName
    4681:4685:int getPropertyValueEnum(int,java.lang.CharSequence) -> getPropertyValueEnum
    4698:4698:int getPropertyValueEnumNoThrow(int,java.lang.CharSequence) -> getPropertyValueEnumNoThrow
    4714:4717:int getCodePoint(char,char) -> getCodePoint
    4731:4734:int getCodePoint(char) -> getCodePoint
    4864:4864:java.lang.String toUpperCase(java.lang.String) -> toUpperCase
    4876:4876:java.lang.String toLowerCase(java.lang.String) -> toLowerCase
    4899:4899:java.lang.String toTitleCase(java.lang.String,com.ibm.icu.text.BreakIterator) -> toTitleCase
    4912:4912:java.lang.String toUpperCase(java.util.Locale,java.lang.String) -> toUpperCase
    4924:4948:java.lang.String toUpperCase(com.ibm.icu.util.ULocale,java.lang.String) -> toUpperCase
    4961:4961:java.lang.String toLowerCase(java.util.Locale,java.lang.String) -> toLowerCase
    4973:4997:java.lang.String toLowerCase(com.ibm.icu.util.ULocale,java.lang.String) -> toLowerCase
    5022:5022:java.lang.String toTitleCase(java.util.Locale,java.lang.String,com.ibm.icu.text.BreakIterator) -> toTitleCase
    5046:5046:java.lang.String toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator) -> toTitleCase
    5074:5191:java.lang.String toTitleCase(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.BreakIterator,int) -> toTitleCase
    5224:5266:java.lang.String toTitleFirst(com.ibm.icu.util.ULocale,java.lang.String) -> toTitleFirst
    5294:5294:java.lang.String toTitleCase(java.util.Locale,java.lang.String,com.ibm.icu.text.BreakIterator,int) -> toTitleCase
    5322:5322:int foldCase(int,boolean) -> foldCase
    5343:5343:java.lang.String foldCase(java.lang.String,boolean) -> foldCase
    5392:5392:int foldCase(int,int) -> foldCase
    5411:5431:java.lang.String foldCase(java.lang.String,int) -> foldCase
    5456:5502:int getHanNumericValue(int) -> getHanNumericValue
    5525:5525:com.ibm.icu.util.RangeValueIterator getTypeIterator() -> getTypeIterator
    5583:5583:com.ibm.icu.util.ValueIterator getNameIterator() -> getNameIterator
    5596:5596:com.ibm.icu.util.ValueIterator getName1_0Iterator() -> getName1_0Iterator
    5625:5625:com.ibm.icu.util.ValueIterator getExtendedNameIterator() -> getExtendedNameIterator
    5643:5646:com.ibm.icu.util.VersionInfo getAge(int) -> getAge
    5676:5676:boolean hasBinaryProperty(int,int) -> hasBinaryProperty
    5688:5688:boolean isUAlphabetic(int) -> isUAlphabetic
    5700:5700:boolean isULowercase(int) -> isULowercase
    5712:5712:boolean isUUppercase(int) -> isUUppercase
    5725:5725:boolean isUWhiteSpace(int) -> isUWhiteSpace
    5769:5769:int getIntPropertyValue(int,int) -> getIntPropertyValue
    5783:5807:java.lang.String getStringPropertyValue(int,int,int) -> getStringPropertyValue
    5831:5831:int getIntPropertyMinValue(int) -> getIntPropertyMinValue
    5862:5862:int getIntPropertyMaxValue(int) -> getIntPropertyMaxValue
    5870:5870:char forDigit(int,int) -> forDigit
    5945:5945:boolean isValidCodePoint(int) -> isValidCodePoint
    5956:5956:boolean isSupplementaryCodePoint(int) -> isSupplementaryCodePoint
    5967:5967:boolean isHighSurrogate(char) -> isHighSurrogate
    5978:5978:boolean isLowSurrogate(char) -> isLowSurrogate
    5990:5990:boolean isSurrogatePair(char,char) -> isSurrogatePair
    6003:6003:int charCount(int) -> charCount
    6017:6017:int toCodePoint(char,char) -> toCodePoint
    6031:6040:int codePointAt(java.lang.CharSequence,int) -> codePointAt
    6054:6063:int codePointAt(char[],int) -> codePointAt
    6078:6090:int codePointAt(char[],int,int) -> codePointAt
    6104:6113:int codePointBefore(java.lang.CharSequence,int) -> codePointBefore
    6127:6136:int codePointBefore(char[],int) -> codePointBefore
    6151:6163:int codePointBefore(char[],int,int) -> codePointBefore
    6179:6179:int toChars(int,char[],int) -> toChars
    6192:6192:char[] toChars(int) -> toChars
    6213:6213:byte getDirectionality(int) -> getDirectionality
    6225:6242:int codePointCount(java.lang.CharSequence,int,int) -> codePointCount
    6254:6271:int codePointCount(char[],int,int) -> codePointCount
    6283:6315:int offsetByCodePoints(java.lang.CharSequence,int,int) -> offsetByCodePoints
    6330:6374:int offsetByCodePoints(char[],int,int,int,int) -> offsetByCodePoints
    6512:6513:void <init>() -> <init>
com.ibm.icu.lang.UCharacter$1 -> com.ibm.icu.lang.a:
    int pairIndex -> a
    int scriptCode -> b
    1428:1431:void com.ibm.icu.lang.UScriptRun$ParenStackEntry.<init>(int,int):428:431 -> <init>
com.ibm.icu.lang.UCharacter$BidiPairedBracketType -> com.ibm.icu.lang.UCharacter$BidiPairedBracketType:
    int NONE -> NONE
    int OPEN -> OPEN
    int CLOSE -> CLOSE
    int COUNT -> COUNT
com.ibm.icu.lang.UCharacter$DecompositionType -> com.ibm.icu.lang.UCharacter$DecompositionType:
    int NONE -> NONE
    int CANONICAL -> CANONICAL
    int COMPAT -> COMPAT
    int CIRCLE -> CIRCLE
    int FINAL -> FINAL
    int FONT -> FONT
    int FRACTION -> FRACTION
    int INITIAL -> INITIAL
    int ISOLATED -> ISOLATED
    int MEDIAL -> MEDIAL
    int NARROW -> NARROW
    int NOBREAK -> NOBREAK
    int SMALL -> SMALL
    int SQUARE -> SQUARE
    int SUB -> SUB
    int SUPER -> SUPER
    int VERTICAL -> VERTICAL
    int WIDE -> WIDE
    int COUNT -> COUNT
com.ibm.icu.lang.UCharacter$DummyValueIterator -> com.ibm.icu.lang.b:
    5599:5599:void <init>() -> <init>
    5600:5600:boolean next(com.ibm.icu.util.ValueIterator$Element) -> next
    5601:5601:void reset() -> reset
    5602:5602:void setRange(int,int) -> setRange
    5599:5599:void <init>(byte) -> <init>
com.ibm.icu.lang.UCharacter$EastAsianWidth -> com.ibm.icu.lang.UCharacter$EastAsianWidth:
    int NEUTRAL -> NEUTRAL
    int AMBIGUOUS -> AMBIGUOUS
    int HALFWIDTH -> HALFWIDTH
    int FULLWIDTH -> FULLWIDTH
    int NARROW -> NARROW
    int WIDE -> WIDE
    int COUNT -> COUNT
com.ibm.icu.lang.UCharacter$GraphemeClusterBreak -> com.ibm.icu.lang.UCharacter$GraphemeClusterBreak:
    int OTHER -> OTHER
    int CONTROL -> CONTROL
    int CR -> CR
    int EXTEND -> EXTEND
    int L -> L
    int LF -> LF
    int LV -> LV
    int LVT -> LVT
    int T -> T
    int V -> V
    int SPACING_MARK -> SPACING_MARK
    int PREPEND -> PREPEND
    int REGIONAL_INDICATOR -> REGIONAL_INDICATOR
    int COUNT -> COUNT
com.ibm.icu.lang.UCharacter$HangulSyllableType -> com.ibm.icu.lang.UCharacter$HangulSyllableType:
    int NOT_APPLICABLE -> NOT_APPLICABLE
    int LEADING_JAMO -> LEADING_JAMO
    int VOWEL_JAMO -> VOWEL_JAMO
    int TRAILING_JAMO -> TRAILING_JAMO
    int LV_SYLLABLE -> LV_SYLLABLE
    int LVT_SYLLABLE -> LVT_SYLLABLE
    int COUNT -> COUNT
com.ibm.icu.lang.UCharacter$JoiningGroup -> com.ibm.icu.lang.UCharacter$JoiningGroup:
    int NO_JOINING_GROUP -> NO_JOINING_GROUP
    int AIN -> AIN
    int ALAPH -> ALAPH
    int ALEF -> ALEF
    int BEH -> BEH
    int BETH -> BETH
    int DAL -> DAL
    int DALATH_RISH -> DALATH_RISH
    int E -> E
    int FEH -> FEH
    int FINAL_SEMKATH -> FINAL_SEMKATH
    int GAF -> GAF
    int GAMAL -> GAMAL
    int HAH -> HAH
    int TEH_MARBUTA_GOAL -> TEH_MARBUTA_GOAL
    int HAMZA_ON_HEH_GOAL -> HAMZA_ON_HEH_GOAL
    int HE -> HE
    int HEH -> HEH
    int HEH_GOAL -> HEH_GOAL
    int HETH -> HETH
    int KAF -> KAF
    int KAPH -> KAPH
    int KNOTTED_HEH -> KNOTTED_HEH
    int LAM -> LAM
    int LAMADH -> LAMADH
    int MEEM -> MEEM
    int MIM -> MIM
    int NOON -> NOON
    int NUN -> NUN
    int PE -> PE
    int QAF -> QAF
    int QAPH -> QAPH
    int REH -> REH
    int REVERSED_PE -> REVERSED_PE
    int SAD -> SAD
    int SADHE -> SADHE
    int SEEN -> SEEN
    int SEMKATH -> SEMKATH
    int SHIN -> SHIN
    int SWASH_KAF -> SWASH_KAF
    int SYRIAC_WAW -> SYRIAC_WAW
    int TAH -> TAH
    int TAW -> TAW
    int TEH_MARBUTA -> TEH_MARBUTA
    int TETH -> TETH
    int WAW -> WAW
    int YEH -> YEH
    int YEH_BARREE -> YEH_BARREE
    int YEH_WITH_TAIL -> YEH_WITH_TAIL
    int YUDH -> YUDH
    int YUDH_HE -> YUDH_HE
    int ZAIN -> ZAIN
    int FE -> FE
    int KHAPH -> KHAPH
    int ZHAIN -> ZHAIN
    int BURUSHASKI_YEH_BARREE -> BURUSHASKI_YEH_BARREE
    int FARSI_YEH -> FARSI_YEH
    int NYA -> NYA
    int ROHINGYA_YEH -> ROHINGYA_YEH
    int MANICHAEAN_ALEPH -> MANICHAEAN_ALEPH
    int MANICHAEAN_AYIN -> MANICHAEAN_AYIN
    int MANICHAEAN_BETH -> MANICHAEAN_BETH
    int MANICHAEAN_DALETH -> MANICHAEAN_DALETH
    int MANICHAEAN_DHAMEDH -> MANICHAEAN_DHAMEDH
    int MANICHAEAN_FIVE -> MANICHAEAN_FIVE
    int MANICHAEAN_GIMEL -> MANICHAEAN_GIMEL
    int MANICHAEAN_HETH -> MANICHAEAN_HETH
    int MANICHAEAN_HUNDRED -> MANICHAEAN_HUNDRED
    int MANICHAEAN_KAPH -> MANICHAEAN_KAPH
    int MANICHAEAN_LAMEDH -> MANICHAEAN_LAMEDH
    int MANICHAEAN_MEM -> MANICHAEAN_MEM
    int MANICHAEAN_NUN -> MANICHAEAN_NUN
    int MANICHAEAN_ONE -> MANICHAEAN_ONE
    int MANICHAEAN_PE -> MANICHAEAN_PE
    int MANICHAEAN_QOPH -> MANICHAEAN_QOPH
    int MANICHAEAN_RESH -> MANICHAEAN_RESH
    int MANICHAEAN_SADHE -> MANICHAEAN_SADHE
    int MANICHAEAN_SAMEKH -> MANICHAEAN_SAMEKH
    int MANICHAEAN_TAW -> MANICHAEAN_TAW
    int MANICHAEAN_TEN -> MANICHAEAN_TEN
    int MANICHAEAN_TETH -> MANICHAEAN_TETH
    int MANICHAEAN_THAMEDH -> MANICHAEAN_THAMEDH
    int MANICHAEAN_TWENTY -> MANICHAEAN_TWENTY
    int MANICHAEAN_WAW -> MANICHAEAN_WAW
    int MANICHAEAN_YODH -> MANICHAEAN_YODH
    int MANICHAEAN_ZAYIN -> MANICHAEAN_ZAYIN
    int STRAIGHT_WAW -> STRAIGHT_WAW
    int COUNT -> COUNT
com.ibm.icu.lang.UCharacter$JoiningType -> com.ibm.icu.lang.UCharacter$JoiningType:
    int NON_JOINING -> NON_JOINING
    int JOIN_CAUSING -> JOIN_CAUSING
    int DUAL_JOINING -> DUAL_JOINING
    int LEFT_JOINING -> LEFT_JOINING
    int RIGHT_JOINING -> RIGHT_JOINING
    int TRANSPARENT -> TRANSPARENT
    int COUNT -> COUNT
com.ibm.icu.lang.UCharacter$LineBreak -> com.ibm.icu.lang.UCharacter$LineBreak:
    int UNKNOWN -> UNKNOWN
    int AMBIGUOUS -> AMBIGUOUS
    int ALPHABETIC -> ALPHABETIC
    int BREAK_BOTH -> BREAK_BOTH
    int BREAK_AFTER -> BREAK_AFTER
    int BREAK_BEFORE -> BREAK_BEFORE
    int MANDATORY_BREAK -> MANDATORY_BREAK
    int CONTINGENT_BREAK -> CONTINGENT_BREAK
    int CLOSE_PUNCTUATION -> CLOSE_PUNCTUATION
    int COMBINING_MARK -> COMBINING_MARK
    int CARRIAGE_RETURN -> CARRIAGE_RETURN
    int EXCLAMATION -> EXCLAMATION
    int GLUE -> GLUE
    int HYPHEN -> HYPHEN
    int IDEOGRAPHIC -> IDEOGRAPHIC
    int INSEPERABLE -> INSEPERABLE
    int INSEPARABLE -> INSEPARABLE
    int INFIX_NUMERIC -> INFIX_NUMERIC
    int LINE_FEED -> LINE_FEED
    int NONSTARTER -> NONSTARTER
    int NUMERIC -> NUMERIC
    int OPEN_PUNCTUATION -> OPEN_PUNCTUATION
    int POSTFIX_NUMERIC -> POSTFIX_NUMERIC
    int PREFIX_NUMERIC -> PREFIX_NUMERIC
    int QUOTATION -> QUOTATION
    int COMPLEX_CONTEXT -> COMPLEX_CONTEXT
    int SURROGATE -> SURROGATE
    int SPACE -> SPACE
    int BREAK_SYMBOLS -> BREAK_SYMBOLS
    int ZWSPACE -> ZWSPACE
    int NEXT_LINE -> NEXT_LINE
    int WORD_JOINER -> WORD_JOINER
    int H2 -> H2
    int H3 -> H3
    int JL -> JL
    int JT -> JT
    int JV -> JV
    int CLOSE_PARENTHESIS -> CLOSE_PARENTHESIS
    int CONDITIONAL_JAPANESE_STARTER -> CONDITIONAL_JAPANESE_STARTER
    int HEBREW_LETTER -> HEBREW_LETTER
    int REGIONAL_INDICATOR -> REGIONAL_INDICATOR
    int COUNT -> COUNT
com.ibm.icu.lang.UCharacter$NumericType -> com.ibm.icu.lang.UCharacter$NumericType:
    int NONE -> NONE
    int DECIMAL -> DECIMAL
    int DIGIT -> DIGIT
    int NUMERIC -> NUMERIC
    int COUNT -> COUNT
com.ibm.icu.lang.UCharacter$SentenceBreak -> com.ibm.icu.lang.UCharacter$SentenceBreak:
    int OTHER -> OTHER
    int ATERM -> ATERM
    int CLOSE -> CLOSE
    int FORMAT -> FORMAT
    int LOWER -> LOWER
    int NUMERIC -> NUMERIC
    int OLETTER -> OLETTER
    int SEP -> SEP
    int SP -> SP
    int STERM -> STERM
    int UPPER -> UPPER
    int CR -> CR
    int EXTEND -> EXTEND
    int LF -> LF
    int SCONTINUE -> SCONTINUE
    int COUNT -> COUNT
com.ibm.icu.lang.UCharacter$StringContextIterator -> com.ibm.icu.lang.c:
    java.lang.String s -> a
    int index -> b
    int limit -> c
    int cpStart -> d
    int cpLimit -> e
    int dir -> f
    4746:4751:void <init>(java.lang.String) -> <init>
    4764:4769:void setLimit(int) -> a
    4775:4776:void moveToLimit() -> a
    4790:4796:int nextCaseMapCP() -> b
    4805:4805:int getCPStart() -> c
    4813:4813:int getCPLimit() -> d
    4819:4832:void reset(int) -> reset
    4837:4846:int next() -> next
com.ibm.icu.lang.UCharacter$UCharacterTypeIterator -> com.ibm.icu.lang.d:
    java.util.Iterator trieIterator -> a
    com.ibm.icu.impl.Trie2$Range range -> b
    com.ibm.icu.lang.UCharacter$UCharacterTypeIterator$MaskType MASK_TYPE -> c
    5529:5531:void <init>() -> <init>
    5535:5541:boolean next(com.ibm.icu.util.RangeValueIterator$Element) -> next
    5547:5548:void reset() -> reset
    5559:5559:void <clinit>() -> <clinit>
com.ibm.icu.lang.UCharacter$UCharacterTypeIterator$MaskType -> com.ibm.icu.lang.e:
    5553:5553:void <init>() -> <init>
    5556:5556:int map(int) -> map
    5553:5553:void <init>(byte) -> <init>
com.ibm.icu.lang.UCharacter$UnicodeBlock -> com.ibm.icu.lang.UCharacter$UnicodeBlock:
    int INVALID_CODE_ID -> INVALID_CODE_ID
    int BASIC_LATIN_ID -> BASIC_LATIN_ID
    int LATIN_1_SUPPLEMENT_ID -> LATIN_1_SUPPLEMENT_ID
    int LATIN_EXTENDED_A_ID -> LATIN_EXTENDED_A_ID
    int LATIN_EXTENDED_B_ID -> LATIN_EXTENDED_B_ID
    int IPA_EXTENSIONS_ID -> IPA_EXTENSIONS_ID
    int SPACING_MODIFIER_LETTERS_ID -> SPACING_MODIFIER_LETTERS_ID
    int COMBINING_DIACRITICAL_MARKS_ID -> COMBINING_DIACRITICAL_MARKS_ID
    int GREEK_ID -> GREEK_ID
    int CYRILLIC_ID -> CYRILLIC_ID
    int ARMENIAN_ID -> ARMENIAN_ID
    int HEBREW_ID -> HEBREW_ID
    int ARABIC_ID -> ARABIC_ID
    int SYRIAC_ID -> SYRIAC_ID
    int THAANA_ID -> THAANA_ID
    int DEVANAGARI_ID -> DEVANAGARI_ID
    int BENGALI_ID -> BENGALI_ID
    int GURMUKHI_ID -> GURMUKHI_ID
    int GUJARATI_ID -> GUJARATI_ID
    int ORIYA_ID -> ORIYA_ID
    int TAMIL_ID -> TAMIL_ID
    int TELUGU_ID -> TELUGU_ID
    int KANNADA_ID -> KANNADA_ID
    int MALAYALAM_ID -> MALAYALAM_ID
    int SINHALA_ID -> SINHALA_ID
    int THAI_ID -> THAI_ID
    int LAO_ID -> LAO_ID
    int TIBETAN_ID -> TIBETAN_ID
    int MYANMAR_ID -> MYANMAR_ID
    int GEORGIAN_ID -> GEORGIAN_ID
    int HANGUL_JAMO_ID -> HANGUL_JAMO_ID
    int ETHIOPIC_ID -> ETHIOPIC_ID
    int CHEROKEE_ID -> CHEROKEE_ID
    int UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_ID -> UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_ID
    int OGHAM_ID -> OGHAM_ID
    int RUNIC_ID -> RUNIC_ID
    int KHMER_ID -> KHMER_ID
    int MONGOLIAN_ID -> MONGOLIAN_ID
    int LATIN_EXTENDED_ADDITIONAL_ID -> LATIN_EXTENDED_ADDITIONAL_ID
    int GREEK_EXTENDED_ID -> GREEK_EXTENDED_ID
    int GENERAL_PUNCTUATION_ID -> GENERAL_PUNCTUATION_ID
    int SUPERSCRIPTS_AND_SUBSCRIPTS_ID -> SUPERSCRIPTS_AND_SUBSCRIPTS_ID
    int CURRENCY_SYMBOLS_ID -> CURRENCY_SYMBOLS_ID
    int COMBINING_MARKS_FOR_SYMBOLS_ID -> COMBINING_MARKS_FOR_SYMBOLS_ID
    int LETTERLIKE_SYMBOLS_ID -> LETTERLIKE_SYMBOLS_ID
    int NUMBER_FORMS_ID -> NUMBER_FORMS_ID
    int ARROWS_ID -> ARROWS_ID
    int MATHEMATICAL_OPERATORS_ID -> MATHEMATICAL_OPERATORS_ID
    int MISCELLANEOUS_TECHNICAL_ID -> MISCELLANEOUS_TECHNICAL_ID
    int CONTROL_PICTURES_ID -> CONTROL_PICTURES_ID
    int OPTICAL_CHARACTER_RECOGNITION_ID -> OPTICAL_CHARACTER_RECOGNITION_ID
    int ENCLOSED_ALPHANUMERICS_ID -> ENCLOSED_ALPHANUMERICS_ID
    int BOX_DRAWING_ID -> BOX_DRAWING_ID
    int BLOCK_ELEMENTS_ID -> BLOCK_ELEMENTS_ID
    int GEOMETRIC_SHAPES_ID -> GEOMETRIC_SHAPES_ID
    int MISCELLANEOUS_SYMBOLS_ID -> MISCELLANEOUS_SYMBOLS_ID
    int DINGBATS_ID -> DINGBATS_ID
    int BRAILLE_PATTERNS_ID -> BRAILLE_PATTERNS_ID
    int CJK_RADICALS_SUPPLEMENT_ID -> CJK_RADICALS_SUPPLEMENT_ID
    int KANGXI_RADICALS_ID -> KANGXI_RADICALS_ID
    int IDEOGRAPHIC_DESCRIPTION_CHARACTERS_ID -> IDEOGRAPHIC_DESCRIPTION_CHARACTERS_ID
    int CJK_SYMBOLS_AND_PUNCTUATION_ID -> CJK_SYMBOLS_AND_PUNCTUATION_ID
    int HIRAGANA_ID -> HIRAGANA_ID
    int KATAKANA_ID -> KATAKANA_ID
    int BOPOMOFO_ID -> BOPOMOFO_ID
    int HANGUL_COMPATIBILITY_JAMO_ID -> HANGUL_COMPATIBILITY_JAMO_ID
    int KANBUN_ID -> KANBUN_ID
    int BOPOMOFO_EXTENDED_ID -> BOPOMOFO_EXTENDED_ID
    int ENCLOSED_CJK_LETTERS_AND_MONTHS_ID -> ENCLOSED_CJK_LETTERS_AND_MONTHS_ID
    int CJK_COMPATIBILITY_ID -> CJK_COMPATIBILITY_ID
    int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_ID -> CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_ID
    int CJK_UNIFIED_IDEOGRAPHS_ID -> CJK_UNIFIED_IDEOGRAPHS_ID
    int YI_SYLLABLES_ID -> YI_SYLLABLES_ID
    int YI_RADICALS_ID -> YI_RADICALS_ID
    int HANGUL_SYLLABLES_ID -> HANGUL_SYLLABLES_ID
    int HIGH_SURROGATES_ID -> HIGH_SURROGATES_ID
    int HIGH_PRIVATE_USE_SURROGATES_ID -> HIGH_PRIVATE_USE_SURROGATES_ID
    int LOW_SURROGATES_ID -> LOW_SURROGATES_ID
    int PRIVATE_USE_AREA_ID -> PRIVATE_USE_AREA_ID
    int PRIVATE_USE_ID -> PRIVATE_USE_ID
    int CJK_COMPATIBILITY_IDEOGRAPHS_ID -> CJK_COMPATIBILITY_IDEOGRAPHS_ID
    int ALPHABETIC_PRESENTATION_FORMS_ID -> ALPHABETIC_PRESENTATION_FORMS_ID
    int ARABIC_PRESENTATION_FORMS_A_ID -> ARABIC_PRESENTATION_FORMS_A_ID
    int COMBINING_HALF_MARKS_ID -> COMBINING_HALF_MARKS_ID
    int CJK_COMPATIBILITY_FORMS_ID -> CJK_COMPATIBILITY_FORMS_ID
    int SMALL_FORM_VARIANTS_ID -> SMALL_FORM_VARIANTS_ID
    int ARABIC_PRESENTATION_FORMS_B_ID -> ARABIC_PRESENTATION_FORMS_B_ID
    int SPECIALS_ID -> SPECIALS_ID
    int HALFWIDTH_AND_FULLWIDTH_FORMS_ID -> HALFWIDTH_AND_FULLWIDTH_FORMS_ID
    int OLD_ITALIC_ID -> OLD_ITALIC_ID
    int GOTHIC_ID -> GOTHIC_ID
    int DESERET_ID -> DESERET_ID
    int BYZANTINE_MUSICAL_SYMBOLS_ID -> BYZANTINE_MUSICAL_SYMBOLS_ID
    int MUSICAL_SYMBOLS_ID -> MUSICAL_SYMBOLS_ID
    int MATHEMATICAL_ALPHANUMERIC_SYMBOLS_ID -> MATHEMATICAL_ALPHANUMERIC_SYMBOLS_ID
    int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_ID -> CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_ID
    int CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_ID -> CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_ID
    int TAGS_ID -> TAGS_ID
    int CYRILLIC_SUPPLEMENTARY_ID -> CYRILLIC_SUPPLEMENTARY_ID
    int CYRILLIC_SUPPLEMENT_ID -> CYRILLIC_SUPPLEMENT_ID
    int TAGALOG_ID -> TAGALOG_ID
    int HANUNOO_ID -> HANUNOO_ID
    int BUHID_ID -> BUHID_ID
    int TAGBANWA_ID -> TAGBANWA_ID
    int MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_ID -> MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_ID
    int SUPPLEMENTAL_ARROWS_A_ID -> SUPPLEMENTAL_ARROWS_A_ID
    int SUPPLEMENTAL_ARROWS_B_ID -> SUPPLEMENTAL_ARROWS_B_ID
    int MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_ID -> MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_ID
    int SUPPLEMENTAL_MATHEMATICAL_OPERATORS_ID -> SUPPLEMENTAL_MATHEMATICAL_OPERATORS_ID
    int KATAKANA_PHONETIC_EXTENSIONS_ID -> KATAKANA_PHONETIC_EXTENSIONS_ID
    int VARIATION_SELECTORS_ID -> VARIATION_SELECTORS_ID
    int SUPPLEMENTARY_PRIVATE_USE_AREA_A_ID -> SUPPLEMENTARY_PRIVATE_USE_AREA_A_ID
    int SUPPLEMENTARY_PRIVATE_USE_AREA_B_ID -> SUPPLEMENTARY_PRIVATE_USE_AREA_B_ID
    int LIMBU_ID -> LIMBU_ID
    int TAI_LE_ID -> TAI_LE_ID
    int KHMER_SYMBOLS_ID -> KHMER_SYMBOLS_ID
    int PHONETIC_EXTENSIONS_ID -> PHONETIC_EXTENSIONS_ID
    int MISCELLANEOUS_SYMBOLS_AND_ARROWS_ID -> MISCELLANEOUS_SYMBOLS_AND_ARROWS_ID
    int YIJING_HEXAGRAM_SYMBOLS_ID -> YIJING_HEXAGRAM_SYMBOLS_ID
    int LINEAR_B_SYLLABARY_ID -> LINEAR_B_SYLLABARY_ID
    int LINEAR_B_IDEOGRAMS_ID -> LINEAR_B_IDEOGRAMS_ID
    int AEGEAN_NUMBERS_ID -> AEGEAN_NUMBERS_ID
    int UGARITIC_ID -> UGARITIC_ID
    int SHAVIAN_ID -> SHAVIAN_ID
    int OSMANYA_ID -> OSMANYA_ID
    int CYPRIOT_SYLLABARY_ID -> CYPRIOT_SYLLABARY_ID
    int TAI_XUAN_JING_SYMBOLS_ID -> TAI_XUAN_JING_SYMBOLS_ID
    int VARIATION_SELECTORS_SUPPLEMENT_ID -> VARIATION_SELECTORS_SUPPLEMENT_ID
    int ANCIENT_GREEK_MUSICAL_NOTATION_ID -> ANCIENT_GREEK_MUSICAL_NOTATION_ID
    int ANCIENT_GREEK_NUMBERS_ID -> ANCIENT_GREEK_NUMBERS_ID
    int ARABIC_SUPPLEMENT_ID -> ARABIC_SUPPLEMENT_ID
    int BUGINESE_ID -> BUGINESE_ID
    int CJK_STROKES_ID -> CJK_STROKES_ID
    int COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_ID -> COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_ID
    int COPTIC_ID -> COPTIC_ID
    int ETHIOPIC_EXTENDED_ID -> ETHIOPIC_EXTENDED_ID
    int ETHIOPIC_SUPPLEMENT_ID -> ETHIOPIC_SUPPLEMENT_ID
    int GEORGIAN_SUPPLEMENT_ID -> GEORGIAN_SUPPLEMENT_ID
    int GLAGOLITIC_ID -> GLAGOLITIC_ID
    int KHAROSHTHI_ID -> KHAROSHTHI_ID
    int MODIFIER_TONE_LETTERS_ID -> MODIFIER_TONE_LETTERS_ID
    int NEW_TAI_LUE_ID -> NEW_TAI_LUE_ID
    int OLD_PERSIAN_ID -> OLD_PERSIAN_ID
    int PHONETIC_EXTENSIONS_SUPPLEMENT_ID -> PHONETIC_EXTENSIONS_SUPPLEMENT_ID
    int SUPPLEMENTAL_PUNCTUATION_ID -> SUPPLEMENTAL_PUNCTUATION_ID
    int SYLOTI_NAGRI_ID -> SYLOTI_NAGRI_ID
    int TIFINAGH_ID -> TIFINAGH_ID
    int VERTICAL_FORMS_ID -> VERTICAL_FORMS_ID
    int NKO_ID -> NKO_ID
    int BALINESE_ID -> BALINESE_ID
    int LATIN_EXTENDED_C_ID -> LATIN_EXTENDED_C_ID
    int LATIN_EXTENDED_D_ID -> LATIN_EXTENDED_D_ID
    int PHAGS_PA_ID -> PHAGS_PA_ID
    int PHOENICIAN_ID -> PHOENICIAN_ID
    int CUNEIFORM_ID -> CUNEIFORM_ID
    int CUNEIFORM_NUMBERS_AND_PUNCTUATION_ID -> CUNEIFORM_NUMBERS_AND_PUNCTUATION_ID
    int COUNTING_ROD_NUMERALS_ID -> COUNTING_ROD_NUMERALS_ID
    int SUNDANESE_ID -> SUNDANESE_ID
    int LEPCHA_ID -> LEPCHA_ID
    int OL_CHIKI_ID -> OL_CHIKI_ID
    int CYRILLIC_EXTENDED_A_ID -> CYRILLIC_EXTENDED_A_ID
    int VAI_ID -> VAI_ID
    int CYRILLIC_EXTENDED_B_ID -> CYRILLIC_EXTENDED_B_ID
    int SAURASHTRA_ID -> SAURASHTRA_ID
    int KAYAH_LI_ID -> KAYAH_LI_ID
    int REJANG_ID -> REJANG_ID
    int CHAM_ID -> CHAM_ID
    int ANCIENT_SYMBOLS_ID -> ANCIENT_SYMBOLS_ID
    int PHAISTOS_DISC_ID -> PHAISTOS_DISC_ID
    int LYCIAN_ID -> LYCIAN_ID
    int CARIAN_ID -> CARIAN_ID
    int LYDIAN_ID -> LYDIAN_ID
    int MAHJONG_TILES_ID -> MAHJONG_TILES_ID
    int DOMINO_TILES_ID -> DOMINO_TILES_ID
    int SAMARITAN_ID -> SAMARITAN_ID
    int UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_ID -> UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_ID
    int TAI_THAM_ID -> TAI_THAM_ID
    int VEDIC_EXTENSIONS_ID -> VEDIC_EXTENSIONS_ID
    int LISU_ID -> LISU_ID
    int BAMUM_ID -> BAMUM_ID
    int COMMON_INDIC_NUMBER_FORMS_ID -> COMMON_INDIC_NUMBER_FORMS_ID
    int DEVANAGARI_EXTENDED_ID -> DEVANAGARI_EXTENDED_ID
    int HANGUL_JAMO_EXTENDED_A_ID -> HANGUL_JAMO_EXTENDED_A_ID
    int JAVANESE_ID -> JAVANESE_ID
    int MYANMAR_EXTENDED_A_ID -> MYANMAR_EXTENDED_A_ID
    int TAI_VIET_ID -> TAI_VIET_ID
    int MEETEI_MAYEK_ID -> MEETEI_MAYEK_ID
    int HANGUL_JAMO_EXTENDED_B_ID -> HANGUL_JAMO_EXTENDED_B_ID
    int IMPERIAL_ARAMAIC_ID -> IMPERIAL_ARAMAIC_ID
    int OLD_SOUTH_ARABIAN_ID -> OLD_SOUTH_ARABIAN_ID
    int AVESTAN_ID -> AVESTAN_ID
    int INSCRIPTIONAL_PARTHIAN_ID -> INSCRIPTIONAL_PARTHIAN_ID
    int INSCRIPTIONAL_PAHLAVI_ID -> INSCRIPTIONAL_PAHLAVI_ID
    int OLD_TURKIC_ID -> OLD_TURKIC_ID
    int RUMI_NUMERAL_SYMBOLS_ID -> RUMI_NUMERAL_SYMBOLS_ID
    int KAITHI_ID -> KAITHI_ID
    int EGYPTIAN_HIEROGLYPHS_ID -> EGYPTIAN_HIEROGLYPHS_ID
    int ENCLOSED_ALPHANUMERIC_SUPPLEMENT_ID -> ENCLOSED_ALPHANUMERIC_SUPPLEMENT_ID
    int ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_ID -> ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_ID
    int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_ID -> CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_ID
    int MANDAIC_ID -> MANDAIC_ID
    int BATAK_ID -> BATAK_ID
    int ETHIOPIC_EXTENDED_A_ID -> ETHIOPIC_EXTENDED_A_ID
    int BRAHMI_ID -> BRAHMI_ID
    int BAMUM_SUPPLEMENT_ID -> BAMUM_SUPPLEMENT_ID
    int KANA_SUPPLEMENT_ID -> KANA_SUPPLEMENT_ID
    int PLAYING_CARDS_ID -> PLAYING_CARDS_ID
    int MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_ID -> MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_ID
    int EMOTICONS_ID -> EMOTICONS_ID
    int TRANSPORT_AND_MAP_SYMBOLS_ID -> TRANSPORT_AND_MAP_SYMBOLS_ID
    int ALCHEMICAL_SYMBOLS_ID -> ALCHEMICAL_SYMBOLS_ID
    int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_ID -> CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_ID
    int ARABIC_EXTENDED_A_ID -> ARABIC_EXTENDED_A_ID
    int ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_ID -> ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_ID
    int CHAKMA_ID -> CHAKMA_ID
    int MEETEI_MAYEK_EXTENSIONS_ID -> MEETEI_MAYEK_EXTENSIONS_ID
    int MEROITIC_CURSIVE_ID -> MEROITIC_CURSIVE_ID
    int MEROITIC_HIEROGLYPHS_ID -> MEROITIC_HIEROGLYPHS_ID
    int MIAO_ID -> MIAO_ID
    int SHARADA_ID -> SHARADA_ID
    int SORA_SOMPENG_ID -> SORA_SOMPENG_ID
    int SUNDANESE_SUPPLEMENT_ID -> SUNDANESE_SUPPLEMENT_ID
    int TAKRI_ID -> TAKRI_ID
    int BASSA_VAH_ID -> BASSA_VAH_ID
    int CAUCASIAN_ALBANIAN_ID -> CAUCASIAN_ALBANIAN_ID
    int COPTIC_EPACT_NUMBERS_ID -> COPTIC_EPACT_NUMBERS_ID
    int COMBINING_DIACRITICAL_MARKS_EXTENDED_ID -> COMBINING_DIACRITICAL_MARKS_EXTENDED_ID
    int DUPLOYAN_ID -> DUPLOYAN_ID
    int ELBASAN_ID -> ELBASAN_ID
    int GEOMETRIC_SHAPES_EXTENDED_ID -> GEOMETRIC_SHAPES_EXTENDED_ID
    int GRANTHA_ID -> GRANTHA_ID
    int KHOJKI_ID -> KHOJKI_ID
    int KHUDAWADI_ID -> KHUDAWADI_ID
    int LATIN_EXTENDED_E_ID -> LATIN_EXTENDED_E_ID
    int LINEAR_A_ID -> LINEAR_A_ID
    int MAHAJANI_ID -> MAHAJANI_ID
    int MANICHAEAN_ID -> MANICHAEAN_ID
    int MENDE_KIKAKUI_ID -> MENDE_KIKAKUI_ID
    int MODI_ID -> MODI_ID
    int MRO_ID -> MRO_ID
    int MYANMAR_EXTENDED_B_ID -> MYANMAR_EXTENDED_B_ID
    int NABATAEAN_ID -> NABATAEAN_ID
    int OLD_NORTH_ARABIAN_ID -> OLD_NORTH_ARABIAN_ID
    int OLD_PERMIC_ID -> OLD_PERMIC_ID
    int ORNAMENTAL_DINGBATS_ID -> ORNAMENTAL_DINGBATS_ID
    int PAHAWH_HMONG_ID -> PAHAWH_HMONG_ID
    int PALMYRENE_ID -> PALMYRENE_ID
    int PAU_CIN_HAU_ID -> PAU_CIN_HAU_ID
    int PSALTER_PAHLAVI_ID -> PSALTER_PAHLAVI_ID
    int SHORTHAND_FORMAT_CONTROLS_ID -> SHORTHAND_FORMAT_CONTROLS_ID
    int SIDDHAM_ID -> SIDDHAM_ID
    int SINHALA_ARCHAIC_NUMBERS_ID -> SINHALA_ARCHAIC_NUMBERS_ID
    int SUPPLEMENTAL_ARROWS_C_ID -> SUPPLEMENTAL_ARROWS_C_ID
    int TIRHUTA_ID -> TIRHUTA_ID
    int WARANG_CITI_ID -> WARANG_CITI_ID
    int AHOM_ID -> AHOM_ID
    int ANATOLIAN_HIEROGLYPHS_ID -> ANATOLIAN_HIEROGLYPHS_ID
    int CHEROKEE_SUPPLEMENT_ID -> CHEROKEE_SUPPLEMENT_ID
    int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_ID -> CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_ID
    int EARLY_DYNASTIC_CUNEIFORM_ID -> EARLY_DYNASTIC_CUNEIFORM_ID
    int HATRAN_ID -> HATRAN_ID
    int MULTANI_ID -> MULTANI_ID
    int OLD_HUNGARIAN_ID -> OLD_HUNGARIAN_ID
    int SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_ID -> SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_ID
    int SUTTON_SIGNWRITING_ID -> SUTTON_SIGNWRITING_ID
    int COUNT -> COUNT
    com.ibm.icu.lang.UCharacter$UnicodeBlock[] BLOCKS_ -> a
    com.ibm.icu.lang.UCharacter$UnicodeBlock NO_BLOCK -> NO_BLOCK
    com.ibm.icu.lang.UCharacter$UnicodeBlock BASIC_LATIN -> BASIC_LATIN
    com.ibm.icu.lang.UCharacter$UnicodeBlock LATIN_1_SUPPLEMENT -> LATIN_1_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock LATIN_EXTENDED_A -> LATIN_EXTENDED_A
    com.ibm.icu.lang.UCharacter$UnicodeBlock LATIN_EXTENDED_B -> LATIN_EXTENDED_B
    com.ibm.icu.lang.UCharacter$UnicodeBlock IPA_EXTENSIONS -> IPA_EXTENSIONS
    com.ibm.icu.lang.UCharacter$UnicodeBlock SPACING_MODIFIER_LETTERS -> SPACING_MODIFIER_LETTERS
    com.ibm.icu.lang.UCharacter$UnicodeBlock COMBINING_DIACRITICAL_MARKS -> COMBINING_DIACRITICAL_MARKS
    com.ibm.icu.lang.UCharacter$UnicodeBlock GREEK -> GREEK
    com.ibm.icu.lang.UCharacter$UnicodeBlock CYRILLIC -> CYRILLIC
    com.ibm.icu.lang.UCharacter$UnicodeBlock ARMENIAN -> ARMENIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock HEBREW -> HEBREW
    com.ibm.icu.lang.UCharacter$UnicodeBlock ARABIC -> ARABIC
    com.ibm.icu.lang.UCharacter$UnicodeBlock SYRIAC -> SYRIAC
    com.ibm.icu.lang.UCharacter$UnicodeBlock THAANA -> THAANA
    com.ibm.icu.lang.UCharacter$UnicodeBlock DEVANAGARI -> DEVANAGARI
    com.ibm.icu.lang.UCharacter$UnicodeBlock BENGALI -> BENGALI
    com.ibm.icu.lang.UCharacter$UnicodeBlock GURMUKHI -> GURMUKHI
    com.ibm.icu.lang.UCharacter$UnicodeBlock GUJARATI -> GUJARATI
    com.ibm.icu.lang.UCharacter$UnicodeBlock ORIYA -> ORIYA
    com.ibm.icu.lang.UCharacter$UnicodeBlock TAMIL -> TAMIL
    com.ibm.icu.lang.UCharacter$UnicodeBlock TELUGU -> TELUGU
    com.ibm.icu.lang.UCharacter$UnicodeBlock KANNADA -> KANNADA
    com.ibm.icu.lang.UCharacter$UnicodeBlock MALAYALAM -> MALAYALAM
    com.ibm.icu.lang.UCharacter$UnicodeBlock SINHALA -> SINHALA
    com.ibm.icu.lang.UCharacter$UnicodeBlock THAI -> THAI
    com.ibm.icu.lang.UCharacter$UnicodeBlock LAO -> LAO
    com.ibm.icu.lang.UCharacter$UnicodeBlock TIBETAN -> TIBETAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock MYANMAR -> MYANMAR
    com.ibm.icu.lang.UCharacter$UnicodeBlock GEORGIAN -> GEORGIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock HANGUL_JAMO -> HANGUL_JAMO
    com.ibm.icu.lang.UCharacter$UnicodeBlock ETHIOPIC -> ETHIOPIC
    com.ibm.icu.lang.UCharacter$UnicodeBlock CHEROKEE -> CHEROKEE
    com.ibm.icu.lang.UCharacter$UnicodeBlock UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS -> UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS
    com.ibm.icu.lang.UCharacter$UnicodeBlock OGHAM -> OGHAM
    com.ibm.icu.lang.UCharacter$UnicodeBlock RUNIC -> RUNIC
    com.ibm.icu.lang.UCharacter$UnicodeBlock KHMER -> KHMER
    com.ibm.icu.lang.UCharacter$UnicodeBlock MONGOLIAN -> MONGOLIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock LATIN_EXTENDED_ADDITIONAL -> LATIN_EXTENDED_ADDITIONAL
    com.ibm.icu.lang.UCharacter$UnicodeBlock GREEK_EXTENDED -> GREEK_EXTENDED
    com.ibm.icu.lang.UCharacter$UnicodeBlock GENERAL_PUNCTUATION -> GENERAL_PUNCTUATION
    com.ibm.icu.lang.UCharacter$UnicodeBlock SUPERSCRIPTS_AND_SUBSCRIPTS -> SUPERSCRIPTS_AND_SUBSCRIPTS
    com.ibm.icu.lang.UCharacter$UnicodeBlock CURRENCY_SYMBOLS -> CURRENCY_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock COMBINING_MARKS_FOR_SYMBOLS -> COMBINING_MARKS_FOR_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock LETTERLIKE_SYMBOLS -> LETTERLIKE_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock NUMBER_FORMS -> NUMBER_FORMS
    com.ibm.icu.lang.UCharacter$UnicodeBlock ARROWS -> ARROWS
    com.ibm.icu.lang.UCharacter$UnicodeBlock MATHEMATICAL_OPERATORS -> MATHEMATICAL_OPERATORS
    com.ibm.icu.lang.UCharacter$UnicodeBlock MISCELLANEOUS_TECHNICAL -> MISCELLANEOUS_TECHNICAL
    com.ibm.icu.lang.UCharacter$UnicodeBlock CONTROL_PICTURES -> CONTROL_PICTURES
    com.ibm.icu.lang.UCharacter$UnicodeBlock OPTICAL_CHARACTER_RECOGNITION -> OPTICAL_CHARACTER_RECOGNITION
    com.ibm.icu.lang.UCharacter$UnicodeBlock ENCLOSED_ALPHANUMERICS -> ENCLOSED_ALPHANUMERICS
    com.ibm.icu.lang.UCharacter$UnicodeBlock BOX_DRAWING -> BOX_DRAWING
    com.ibm.icu.lang.UCharacter$UnicodeBlock BLOCK_ELEMENTS -> BLOCK_ELEMENTS
    com.ibm.icu.lang.UCharacter$UnicodeBlock GEOMETRIC_SHAPES -> GEOMETRIC_SHAPES
    com.ibm.icu.lang.UCharacter$UnicodeBlock MISCELLANEOUS_SYMBOLS -> MISCELLANEOUS_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock DINGBATS -> DINGBATS
    com.ibm.icu.lang.UCharacter$UnicodeBlock BRAILLE_PATTERNS -> BRAILLE_PATTERNS
    com.ibm.icu.lang.UCharacter$UnicodeBlock CJK_RADICALS_SUPPLEMENT -> CJK_RADICALS_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock KANGXI_RADICALS -> KANGXI_RADICALS
    com.ibm.icu.lang.UCharacter$UnicodeBlock IDEOGRAPHIC_DESCRIPTION_CHARACTERS -> IDEOGRAPHIC_DESCRIPTION_CHARACTERS
    com.ibm.icu.lang.UCharacter$UnicodeBlock CJK_SYMBOLS_AND_PUNCTUATION -> CJK_SYMBOLS_AND_PUNCTUATION
    com.ibm.icu.lang.UCharacter$UnicodeBlock HIRAGANA -> HIRAGANA
    com.ibm.icu.lang.UCharacter$UnicodeBlock KATAKANA -> KATAKANA
    com.ibm.icu.lang.UCharacter$UnicodeBlock BOPOMOFO -> BOPOMOFO
    com.ibm.icu.lang.UCharacter$UnicodeBlock HANGUL_COMPATIBILITY_JAMO -> HANGUL_COMPATIBILITY_JAMO
    com.ibm.icu.lang.UCharacter$UnicodeBlock KANBUN -> KANBUN
    com.ibm.icu.lang.UCharacter$UnicodeBlock BOPOMOFO_EXTENDED -> BOPOMOFO_EXTENDED
    com.ibm.icu.lang.UCharacter$UnicodeBlock ENCLOSED_CJK_LETTERS_AND_MONTHS -> ENCLOSED_CJK_LETTERS_AND_MONTHS
    com.ibm.icu.lang.UCharacter$UnicodeBlock CJK_COMPATIBILITY -> CJK_COMPATIBILITY
    com.ibm.icu.lang.UCharacter$UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A -> CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A
    com.ibm.icu.lang.UCharacter$UnicodeBlock CJK_UNIFIED_IDEOGRAPHS -> CJK_UNIFIED_IDEOGRAPHS
    com.ibm.icu.lang.UCharacter$UnicodeBlock YI_SYLLABLES -> YI_SYLLABLES
    com.ibm.icu.lang.UCharacter$UnicodeBlock YI_RADICALS -> YI_RADICALS
    com.ibm.icu.lang.UCharacter$UnicodeBlock HANGUL_SYLLABLES -> HANGUL_SYLLABLES
    com.ibm.icu.lang.UCharacter$UnicodeBlock HIGH_SURROGATES -> HIGH_SURROGATES
    com.ibm.icu.lang.UCharacter$UnicodeBlock HIGH_PRIVATE_USE_SURROGATES -> HIGH_PRIVATE_USE_SURROGATES
    com.ibm.icu.lang.UCharacter$UnicodeBlock LOW_SURROGATES -> LOW_SURROGATES
    com.ibm.icu.lang.UCharacter$UnicodeBlock PRIVATE_USE_AREA -> PRIVATE_USE_AREA
    com.ibm.icu.lang.UCharacter$UnicodeBlock PRIVATE_USE -> PRIVATE_USE
    com.ibm.icu.lang.UCharacter$UnicodeBlock CJK_COMPATIBILITY_IDEOGRAPHS -> CJK_COMPATIBILITY_IDEOGRAPHS
    com.ibm.icu.lang.UCharacter$UnicodeBlock ALPHABETIC_PRESENTATION_FORMS -> ALPHABETIC_PRESENTATION_FORMS
    com.ibm.icu.lang.UCharacter$UnicodeBlock ARABIC_PRESENTATION_FORMS_A -> ARABIC_PRESENTATION_FORMS_A
    com.ibm.icu.lang.UCharacter$UnicodeBlock COMBINING_HALF_MARKS -> COMBINING_HALF_MARKS
    com.ibm.icu.lang.UCharacter$UnicodeBlock CJK_COMPATIBILITY_FORMS -> CJK_COMPATIBILITY_FORMS
    com.ibm.icu.lang.UCharacter$UnicodeBlock SMALL_FORM_VARIANTS -> SMALL_FORM_VARIANTS
    com.ibm.icu.lang.UCharacter$UnicodeBlock ARABIC_PRESENTATION_FORMS_B -> ARABIC_PRESENTATION_FORMS_B
    com.ibm.icu.lang.UCharacter$UnicodeBlock SPECIALS -> SPECIALS
    com.ibm.icu.lang.UCharacter$UnicodeBlock HALFWIDTH_AND_FULLWIDTH_FORMS -> HALFWIDTH_AND_FULLWIDTH_FORMS
    com.ibm.icu.lang.UCharacter$UnicodeBlock OLD_ITALIC -> OLD_ITALIC
    com.ibm.icu.lang.UCharacter$UnicodeBlock GOTHIC -> GOTHIC
    com.ibm.icu.lang.UCharacter$UnicodeBlock DESERET -> DESERET
    com.ibm.icu.lang.UCharacter$UnicodeBlock BYZANTINE_MUSICAL_SYMBOLS -> BYZANTINE_MUSICAL_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock MUSICAL_SYMBOLS -> MUSICAL_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock MATHEMATICAL_ALPHANUMERIC_SYMBOLS -> MATHEMATICAL_ALPHANUMERIC_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B -> CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B
    com.ibm.icu.lang.UCharacter$UnicodeBlock CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT -> CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock TAGS -> TAGS
    com.ibm.icu.lang.UCharacter$UnicodeBlock CYRILLIC_SUPPLEMENTARY -> CYRILLIC_SUPPLEMENTARY
    com.ibm.icu.lang.UCharacter$UnicodeBlock CYRILLIC_SUPPLEMENT -> CYRILLIC_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock TAGALOG -> TAGALOG
    com.ibm.icu.lang.UCharacter$UnicodeBlock HANUNOO -> HANUNOO
    com.ibm.icu.lang.UCharacter$UnicodeBlock BUHID -> BUHID
    com.ibm.icu.lang.UCharacter$UnicodeBlock TAGBANWA -> TAGBANWA
    com.ibm.icu.lang.UCharacter$UnicodeBlock MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A -> MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A
    com.ibm.icu.lang.UCharacter$UnicodeBlock SUPPLEMENTAL_ARROWS_A -> SUPPLEMENTAL_ARROWS_A
    com.ibm.icu.lang.UCharacter$UnicodeBlock SUPPLEMENTAL_ARROWS_B -> SUPPLEMENTAL_ARROWS_B
    com.ibm.icu.lang.UCharacter$UnicodeBlock MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B -> MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B
    com.ibm.icu.lang.UCharacter$UnicodeBlock SUPPLEMENTAL_MATHEMATICAL_OPERATORS -> SUPPLEMENTAL_MATHEMATICAL_OPERATORS
    com.ibm.icu.lang.UCharacter$UnicodeBlock KATAKANA_PHONETIC_EXTENSIONS -> KATAKANA_PHONETIC_EXTENSIONS
    com.ibm.icu.lang.UCharacter$UnicodeBlock VARIATION_SELECTORS -> VARIATION_SELECTORS
    com.ibm.icu.lang.UCharacter$UnicodeBlock SUPPLEMENTARY_PRIVATE_USE_AREA_A -> SUPPLEMENTARY_PRIVATE_USE_AREA_A
    com.ibm.icu.lang.UCharacter$UnicodeBlock SUPPLEMENTARY_PRIVATE_USE_AREA_B -> SUPPLEMENTARY_PRIVATE_USE_AREA_B
    com.ibm.icu.lang.UCharacter$UnicodeBlock LIMBU -> LIMBU
    com.ibm.icu.lang.UCharacter$UnicodeBlock TAI_LE -> TAI_LE
    com.ibm.icu.lang.UCharacter$UnicodeBlock KHMER_SYMBOLS -> KHMER_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock PHONETIC_EXTENSIONS -> PHONETIC_EXTENSIONS
    com.ibm.icu.lang.UCharacter$UnicodeBlock MISCELLANEOUS_SYMBOLS_AND_ARROWS -> MISCELLANEOUS_SYMBOLS_AND_ARROWS
    com.ibm.icu.lang.UCharacter$UnicodeBlock YIJING_HEXAGRAM_SYMBOLS -> YIJING_HEXAGRAM_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock LINEAR_B_SYLLABARY -> LINEAR_B_SYLLABARY
    com.ibm.icu.lang.UCharacter$UnicodeBlock LINEAR_B_IDEOGRAMS -> LINEAR_B_IDEOGRAMS
    com.ibm.icu.lang.UCharacter$UnicodeBlock AEGEAN_NUMBERS -> AEGEAN_NUMBERS
    com.ibm.icu.lang.UCharacter$UnicodeBlock UGARITIC -> UGARITIC
    com.ibm.icu.lang.UCharacter$UnicodeBlock SHAVIAN -> SHAVIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock OSMANYA -> OSMANYA
    com.ibm.icu.lang.UCharacter$UnicodeBlock CYPRIOT_SYLLABARY -> CYPRIOT_SYLLABARY
    com.ibm.icu.lang.UCharacter$UnicodeBlock TAI_XUAN_JING_SYMBOLS -> TAI_XUAN_JING_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock VARIATION_SELECTORS_SUPPLEMENT -> VARIATION_SELECTORS_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock ANCIENT_GREEK_MUSICAL_NOTATION -> ANCIENT_GREEK_MUSICAL_NOTATION
    com.ibm.icu.lang.UCharacter$UnicodeBlock ANCIENT_GREEK_NUMBERS -> ANCIENT_GREEK_NUMBERS
    com.ibm.icu.lang.UCharacter$UnicodeBlock ARABIC_SUPPLEMENT -> ARABIC_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock BUGINESE -> BUGINESE
    com.ibm.icu.lang.UCharacter$UnicodeBlock CJK_STROKES -> CJK_STROKES
    com.ibm.icu.lang.UCharacter$UnicodeBlock COMBINING_DIACRITICAL_MARKS_SUPPLEMENT -> COMBINING_DIACRITICAL_MARKS_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock COPTIC -> COPTIC
    com.ibm.icu.lang.UCharacter$UnicodeBlock ETHIOPIC_EXTENDED -> ETHIOPIC_EXTENDED
    com.ibm.icu.lang.UCharacter$UnicodeBlock ETHIOPIC_SUPPLEMENT -> ETHIOPIC_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock GEORGIAN_SUPPLEMENT -> GEORGIAN_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock GLAGOLITIC -> GLAGOLITIC
    com.ibm.icu.lang.UCharacter$UnicodeBlock KHAROSHTHI -> KHAROSHTHI
    com.ibm.icu.lang.UCharacter$UnicodeBlock MODIFIER_TONE_LETTERS -> MODIFIER_TONE_LETTERS
    com.ibm.icu.lang.UCharacter$UnicodeBlock NEW_TAI_LUE -> NEW_TAI_LUE
    com.ibm.icu.lang.UCharacter$UnicodeBlock OLD_PERSIAN -> OLD_PERSIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock PHONETIC_EXTENSIONS_SUPPLEMENT -> PHONETIC_EXTENSIONS_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock SUPPLEMENTAL_PUNCTUATION -> SUPPLEMENTAL_PUNCTUATION
    com.ibm.icu.lang.UCharacter$UnicodeBlock SYLOTI_NAGRI -> SYLOTI_NAGRI
    com.ibm.icu.lang.UCharacter$UnicodeBlock TIFINAGH -> TIFINAGH
    com.ibm.icu.lang.UCharacter$UnicodeBlock VERTICAL_FORMS -> VERTICAL_FORMS
    com.ibm.icu.lang.UCharacter$UnicodeBlock NKO -> NKO
    com.ibm.icu.lang.UCharacter$UnicodeBlock BALINESE -> BALINESE
    com.ibm.icu.lang.UCharacter$UnicodeBlock LATIN_EXTENDED_C -> LATIN_EXTENDED_C
    com.ibm.icu.lang.UCharacter$UnicodeBlock LATIN_EXTENDED_D -> LATIN_EXTENDED_D
    com.ibm.icu.lang.UCharacter$UnicodeBlock PHAGS_PA -> PHAGS_PA
    com.ibm.icu.lang.UCharacter$UnicodeBlock PHOENICIAN -> PHOENICIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock CUNEIFORM -> CUNEIFORM
    com.ibm.icu.lang.UCharacter$UnicodeBlock CUNEIFORM_NUMBERS_AND_PUNCTUATION -> CUNEIFORM_NUMBERS_AND_PUNCTUATION
    com.ibm.icu.lang.UCharacter$UnicodeBlock COUNTING_ROD_NUMERALS -> COUNTING_ROD_NUMERALS
    com.ibm.icu.lang.UCharacter$UnicodeBlock SUNDANESE -> SUNDANESE
    com.ibm.icu.lang.UCharacter$UnicodeBlock LEPCHA -> LEPCHA
    com.ibm.icu.lang.UCharacter$UnicodeBlock OL_CHIKI -> OL_CHIKI
    com.ibm.icu.lang.UCharacter$UnicodeBlock CYRILLIC_EXTENDED_A -> CYRILLIC_EXTENDED_A
    com.ibm.icu.lang.UCharacter$UnicodeBlock VAI -> VAI
    com.ibm.icu.lang.UCharacter$UnicodeBlock CYRILLIC_EXTENDED_B -> CYRILLIC_EXTENDED_B
    com.ibm.icu.lang.UCharacter$UnicodeBlock SAURASHTRA -> SAURASHTRA
    com.ibm.icu.lang.UCharacter$UnicodeBlock KAYAH_LI -> KAYAH_LI
    com.ibm.icu.lang.UCharacter$UnicodeBlock REJANG -> REJANG
    com.ibm.icu.lang.UCharacter$UnicodeBlock CHAM -> CHAM
    com.ibm.icu.lang.UCharacter$UnicodeBlock ANCIENT_SYMBOLS -> ANCIENT_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock PHAISTOS_DISC -> PHAISTOS_DISC
    com.ibm.icu.lang.UCharacter$UnicodeBlock LYCIAN -> LYCIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock CARIAN -> CARIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock LYDIAN -> LYDIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock MAHJONG_TILES -> MAHJONG_TILES
    com.ibm.icu.lang.UCharacter$UnicodeBlock DOMINO_TILES -> DOMINO_TILES
    com.ibm.icu.lang.UCharacter$UnicodeBlock SAMARITAN -> SAMARITAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED -> UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED
    com.ibm.icu.lang.UCharacter$UnicodeBlock TAI_THAM -> TAI_THAM
    com.ibm.icu.lang.UCharacter$UnicodeBlock VEDIC_EXTENSIONS -> VEDIC_EXTENSIONS
    com.ibm.icu.lang.UCharacter$UnicodeBlock LISU -> LISU
    com.ibm.icu.lang.UCharacter$UnicodeBlock BAMUM -> BAMUM
    com.ibm.icu.lang.UCharacter$UnicodeBlock COMMON_INDIC_NUMBER_FORMS -> COMMON_INDIC_NUMBER_FORMS
    com.ibm.icu.lang.UCharacter$UnicodeBlock DEVANAGARI_EXTENDED -> DEVANAGARI_EXTENDED
    com.ibm.icu.lang.UCharacter$UnicodeBlock HANGUL_JAMO_EXTENDED_A -> HANGUL_JAMO_EXTENDED_A
    com.ibm.icu.lang.UCharacter$UnicodeBlock JAVANESE -> JAVANESE
    com.ibm.icu.lang.UCharacter$UnicodeBlock MYANMAR_EXTENDED_A -> MYANMAR_EXTENDED_A
    com.ibm.icu.lang.UCharacter$UnicodeBlock TAI_VIET -> TAI_VIET
    com.ibm.icu.lang.UCharacter$UnicodeBlock MEETEI_MAYEK -> MEETEI_MAYEK
    com.ibm.icu.lang.UCharacter$UnicodeBlock HANGUL_JAMO_EXTENDED_B -> HANGUL_JAMO_EXTENDED_B
    com.ibm.icu.lang.UCharacter$UnicodeBlock IMPERIAL_ARAMAIC -> IMPERIAL_ARAMAIC
    com.ibm.icu.lang.UCharacter$UnicodeBlock OLD_SOUTH_ARABIAN -> OLD_SOUTH_ARABIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock AVESTAN -> AVESTAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock INSCRIPTIONAL_PARTHIAN -> INSCRIPTIONAL_PARTHIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock INSCRIPTIONAL_PAHLAVI -> INSCRIPTIONAL_PAHLAVI
    com.ibm.icu.lang.UCharacter$UnicodeBlock OLD_TURKIC -> OLD_TURKIC
    com.ibm.icu.lang.UCharacter$UnicodeBlock RUMI_NUMERAL_SYMBOLS -> RUMI_NUMERAL_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock KAITHI -> KAITHI
    com.ibm.icu.lang.UCharacter$UnicodeBlock EGYPTIAN_HIEROGLYPHS -> EGYPTIAN_HIEROGLYPHS
    com.ibm.icu.lang.UCharacter$UnicodeBlock ENCLOSED_ALPHANUMERIC_SUPPLEMENT -> ENCLOSED_ALPHANUMERIC_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock ENCLOSED_IDEOGRAPHIC_SUPPLEMENT -> ENCLOSED_IDEOGRAPHIC_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C -> CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C
    com.ibm.icu.lang.UCharacter$UnicodeBlock MANDAIC -> MANDAIC
    com.ibm.icu.lang.UCharacter$UnicodeBlock BATAK -> BATAK
    com.ibm.icu.lang.UCharacter$UnicodeBlock ETHIOPIC_EXTENDED_A -> ETHIOPIC_EXTENDED_A
    com.ibm.icu.lang.UCharacter$UnicodeBlock BRAHMI -> BRAHMI
    com.ibm.icu.lang.UCharacter$UnicodeBlock BAMUM_SUPPLEMENT -> BAMUM_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock KANA_SUPPLEMENT -> KANA_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock PLAYING_CARDS -> PLAYING_CARDS
    com.ibm.icu.lang.UCharacter$UnicodeBlock MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS -> MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS
    com.ibm.icu.lang.UCharacter$UnicodeBlock EMOTICONS -> EMOTICONS
    com.ibm.icu.lang.UCharacter$UnicodeBlock TRANSPORT_AND_MAP_SYMBOLS -> TRANSPORT_AND_MAP_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock ALCHEMICAL_SYMBOLS -> ALCHEMICAL_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D -> CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D
    com.ibm.icu.lang.UCharacter$UnicodeBlock ARABIC_EXTENDED_A -> ARABIC_EXTENDED_A
    com.ibm.icu.lang.UCharacter$UnicodeBlock ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS -> ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock CHAKMA -> CHAKMA
    com.ibm.icu.lang.UCharacter$UnicodeBlock MEETEI_MAYEK_EXTENSIONS -> MEETEI_MAYEK_EXTENSIONS
    com.ibm.icu.lang.UCharacter$UnicodeBlock MEROITIC_CURSIVE -> MEROITIC_CURSIVE
    com.ibm.icu.lang.UCharacter$UnicodeBlock MEROITIC_HIEROGLYPHS -> MEROITIC_HIEROGLYPHS
    com.ibm.icu.lang.UCharacter$UnicodeBlock MIAO -> MIAO
    com.ibm.icu.lang.UCharacter$UnicodeBlock SHARADA -> SHARADA
    com.ibm.icu.lang.UCharacter$UnicodeBlock SORA_SOMPENG -> SORA_SOMPENG
    com.ibm.icu.lang.UCharacter$UnicodeBlock SUNDANESE_SUPPLEMENT -> SUNDANESE_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock TAKRI -> TAKRI
    com.ibm.icu.lang.UCharacter$UnicodeBlock BASSA_VAH -> BASSA_VAH
    com.ibm.icu.lang.UCharacter$UnicodeBlock CAUCASIAN_ALBANIAN -> CAUCASIAN_ALBANIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock COPTIC_EPACT_NUMBERS -> COPTIC_EPACT_NUMBERS
    com.ibm.icu.lang.UCharacter$UnicodeBlock COMBINING_DIACRITICAL_MARKS_EXTENDED -> COMBINING_DIACRITICAL_MARKS_EXTENDED
    com.ibm.icu.lang.UCharacter$UnicodeBlock DUPLOYAN -> DUPLOYAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock ELBASAN -> ELBASAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock GEOMETRIC_SHAPES_EXTENDED -> GEOMETRIC_SHAPES_EXTENDED
    com.ibm.icu.lang.UCharacter$UnicodeBlock GRANTHA -> GRANTHA
    com.ibm.icu.lang.UCharacter$UnicodeBlock KHOJKI -> KHOJKI
    com.ibm.icu.lang.UCharacter$UnicodeBlock KHUDAWADI -> KHUDAWADI
    com.ibm.icu.lang.UCharacter$UnicodeBlock LATIN_EXTENDED_E -> LATIN_EXTENDED_E
    com.ibm.icu.lang.UCharacter$UnicodeBlock LINEAR_A -> LINEAR_A
    com.ibm.icu.lang.UCharacter$UnicodeBlock MAHAJANI -> MAHAJANI
    com.ibm.icu.lang.UCharacter$UnicodeBlock MANICHAEAN -> MANICHAEAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock MENDE_KIKAKUI -> MENDE_KIKAKUI
    com.ibm.icu.lang.UCharacter$UnicodeBlock MODI -> MODI
    com.ibm.icu.lang.UCharacter$UnicodeBlock MRO -> MRO
    com.ibm.icu.lang.UCharacter$UnicodeBlock MYANMAR_EXTENDED_B -> MYANMAR_EXTENDED_B
    com.ibm.icu.lang.UCharacter$UnicodeBlock NABATAEAN -> NABATAEAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock OLD_NORTH_ARABIAN -> OLD_NORTH_ARABIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock OLD_PERMIC -> OLD_PERMIC
    com.ibm.icu.lang.UCharacter$UnicodeBlock ORNAMENTAL_DINGBATS -> ORNAMENTAL_DINGBATS
    com.ibm.icu.lang.UCharacter$UnicodeBlock PAHAWH_HMONG -> PAHAWH_HMONG
    com.ibm.icu.lang.UCharacter$UnicodeBlock PALMYRENE -> PALMYRENE
    com.ibm.icu.lang.UCharacter$UnicodeBlock PAU_CIN_HAU -> PAU_CIN_HAU
    com.ibm.icu.lang.UCharacter$UnicodeBlock PSALTER_PAHLAVI -> PSALTER_PAHLAVI
    com.ibm.icu.lang.UCharacter$UnicodeBlock SHORTHAND_FORMAT_CONTROLS -> SHORTHAND_FORMAT_CONTROLS
    com.ibm.icu.lang.UCharacter$UnicodeBlock SIDDHAM -> SIDDHAM
    com.ibm.icu.lang.UCharacter$UnicodeBlock SINHALA_ARCHAIC_NUMBERS -> SINHALA_ARCHAIC_NUMBERS
    com.ibm.icu.lang.UCharacter$UnicodeBlock SUPPLEMENTAL_ARROWS_C -> SUPPLEMENTAL_ARROWS_C
    com.ibm.icu.lang.UCharacter$UnicodeBlock TIRHUTA -> TIRHUTA
    com.ibm.icu.lang.UCharacter$UnicodeBlock WARANG_CITI -> WARANG_CITI
    com.ibm.icu.lang.UCharacter$UnicodeBlock AHOM -> AHOM
    com.ibm.icu.lang.UCharacter$UnicodeBlock ANATOLIAN_HIEROGLYPHS -> ANATOLIAN_HIEROGLYPHS
    com.ibm.icu.lang.UCharacter$UnicodeBlock CHEROKEE_SUPPLEMENT -> CHEROKEE_SUPPLEMENT
    com.ibm.icu.lang.UCharacter$UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E -> CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E
    com.ibm.icu.lang.UCharacter$UnicodeBlock EARLY_DYNASTIC_CUNEIFORM -> EARLY_DYNASTIC_CUNEIFORM
    com.ibm.icu.lang.UCharacter$UnicodeBlock HATRAN -> HATRAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock MULTANI -> MULTANI
    com.ibm.icu.lang.UCharacter$UnicodeBlock OLD_HUNGARIAN -> OLD_HUNGARIAN
    com.ibm.icu.lang.UCharacter$UnicodeBlock SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS -> SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS
    com.ibm.icu.lang.UCharacter$UnicodeBlock SUTTON_SIGNWRITING -> SUTTON_SIGNWRITING
    com.ibm.icu.lang.UCharacter$UnicodeBlock INVALID_CODE -> INVALID_CODE
    java.lang.ref.SoftReference mref -> b
    int m_id_ -> c
    2403:2406:com.ibm.icu.lang.UCharacter$UnicodeBlock getInstance(int) -> getInstance
    2418:2422:com.ibm.icu.lang.UCharacter$UnicodeBlock of(int) -> of
    2437:2456:com.ibm.icu.lang.UCharacter$UnicodeBlock forName(java.lang.String) -> forName
    2461:2469:java.lang.String trimBlockName(java.lang.String) -> a
    2479:2479:int getID() -> getID
    2499:2504:void <init>(java.lang.String,int) -> <init>
    1154:2388:void <clinit>() -> <clinit>
com.ibm.icu.lang.UCharacter$WordBreak -> com.ibm.icu.lang.UCharacter$WordBreak:
    int OTHER -> OTHER
    int ALETTER -> ALETTER
    int FORMAT -> FORMAT
    int KATAKANA -> KATAKANA
    int MIDLETTER -> MIDLETTER
    int MIDNUM -> MIDNUM
    int NUMERIC -> NUMERIC
    int EXTENDNUMLET -> EXTENDNUMLET
    int CR -> CR
    int EXTEND -> EXTEND
    int LF -> LF
    int MIDNUMLET -> MIDNUMLET
    int NEWLINE -> NEWLINE
    int REGIONAL_INDICATOR -> REGIONAL_INDICATOR
    int HEBREW_LETTER -> HEBREW_LETTER
    int SINGLE_QUOTE -> SINGLE_QUOTE
    int DOUBLE_QUOTE -> DOUBLE_QUOTE
    int COUNT -> COUNT
com.ibm.icu.lang.UCharacterCategory -> com.ibm.icu.lang.UCharacterCategory:
    40:100:java.lang.String toString(int) -> toString
    109:110:void <init>() -> <init>
com.ibm.icu.lang.UCharacterDirection -> com.ibm.icu.lang.UCharacterDirection:
    30:31:void <init>() -> <init>
    41:90:java.lang.String toString(int) -> toString
com.ibm.icu.lang.UCharacterEnums -> com.ibm.icu.lang.UCharacterEnums:
    18:18:void <init>() -> <init>
com.ibm.icu.lang.UCharacterEnums$ECharacterCategory -> com.ibm.icu.lang.UCharacterEnums$ECharacterCategory:
    byte UNASSIGNED -> UNASSIGNED
    byte GENERAL_OTHER_TYPES -> GENERAL_OTHER_TYPES
    byte UPPERCASE_LETTER -> UPPERCASE_LETTER
    byte LOWERCASE_LETTER -> LOWERCASE_LETTER
    byte TITLECASE_LETTER -> TITLECASE_LETTER
    byte MODIFIER_LETTER -> MODIFIER_LETTER
    byte OTHER_LETTER -> OTHER_LETTER
    byte NON_SPACING_MARK -> NON_SPACING_MARK
    byte ENCLOSING_MARK -> ENCLOSING_MARK
    byte COMBINING_SPACING_MARK -> COMBINING_SPACING_MARK
    byte DECIMAL_DIGIT_NUMBER -> DECIMAL_DIGIT_NUMBER
    byte LETTER_NUMBER -> LETTER_NUMBER
    byte OTHER_NUMBER -> OTHER_NUMBER
    byte SPACE_SEPARATOR -> SPACE_SEPARATOR
    byte LINE_SEPARATOR -> LINE_SEPARATOR
    byte PARAGRAPH_SEPARATOR -> PARAGRAPH_SEPARATOR
    byte CONTROL -> CONTROL
    byte FORMAT -> FORMAT
    byte PRIVATE_USE -> PRIVATE_USE
    byte SURROGATE -> SURROGATE
    byte DASH_PUNCTUATION -> DASH_PUNCTUATION
    byte START_PUNCTUATION -> START_PUNCTUATION
    byte END_PUNCTUATION -> END_PUNCTUATION
    byte CONNECTOR_PUNCTUATION -> CONNECTOR_PUNCTUATION
    byte OTHER_PUNCTUATION -> OTHER_PUNCTUATION
    byte MATH_SYMBOL -> MATH_SYMBOL
    byte CURRENCY_SYMBOL -> CURRENCY_SYMBOL
    byte MODIFIER_SYMBOL -> MODIFIER_SYMBOL
    byte OTHER_SYMBOL -> OTHER_SYMBOL
    byte INITIAL_PUNCTUATION -> INITIAL_PUNCTUATION
    byte INITIAL_QUOTE_PUNCTUATION -> INITIAL_QUOTE_PUNCTUATION
    byte FINAL_PUNCTUATION -> FINAL_PUNCTUATION
    byte FINAL_QUOTE_PUNCTUATION -> FINAL_QUOTE_PUNCTUATION
    byte CHAR_CATEGORY_COUNT -> CHAR_CATEGORY_COUNT
com.ibm.icu.lang.UCharacterEnums$ECharacterDirection -> com.ibm.icu.lang.UCharacterEnums$ECharacterDirection:
    int LEFT_TO_RIGHT -> LEFT_TO_RIGHT
    byte DIRECTIONALITY_LEFT_TO_RIGHT -> DIRECTIONALITY_LEFT_TO_RIGHT
    int RIGHT_TO_LEFT -> RIGHT_TO_LEFT
    byte DIRECTIONALITY_RIGHT_TO_LEFT -> DIRECTIONALITY_RIGHT_TO_LEFT
    int EUROPEAN_NUMBER -> EUROPEAN_NUMBER
    byte DIRECTIONALITY_EUROPEAN_NUMBER -> DIRECTIONALITY_EUROPEAN_NUMBER
    int EUROPEAN_NUMBER_SEPARATOR -> EUROPEAN_NUMBER_SEPARATOR
    byte DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR -> DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR
    int EUROPEAN_NUMBER_TERMINATOR -> EUROPEAN_NUMBER_TERMINATOR
    byte DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR -> DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR
    int ARABIC_NUMBER -> ARABIC_NUMBER
    byte DIRECTIONALITY_ARABIC_NUMBER -> DIRECTIONALITY_ARABIC_NUMBER
    int COMMON_NUMBER_SEPARATOR -> COMMON_NUMBER_SEPARATOR
    byte DIRECTIONALITY_COMMON_NUMBER_SEPARATOR -> DIRECTIONALITY_COMMON_NUMBER_SEPARATOR
    int BLOCK_SEPARATOR -> BLOCK_SEPARATOR
    byte DIRECTIONALITY_PARAGRAPH_SEPARATOR -> DIRECTIONALITY_PARAGRAPH_SEPARATOR
    int SEGMENT_SEPARATOR -> SEGMENT_SEPARATOR
    byte DIRECTIONALITY_SEGMENT_SEPARATOR -> DIRECTIONALITY_SEGMENT_SEPARATOR
    int WHITE_SPACE_NEUTRAL -> WHITE_SPACE_NEUTRAL
    byte DIRECTIONALITY_WHITESPACE -> DIRECTIONALITY_WHITESPACE
    int OTHER_NEUTRAL -> OTHER_NEUTRAL
    byte DIRECTIONALITY_OTHER_NEUTRALS -> DIRECTIONALITY_OTHER_NEUTRALS
    int LEFT_TO_RIGHT_EMBEDDING -> LEFT_TO_RIGHT_EMBEDDING
    byte DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING -> DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING
    int LEFT_TO_RIGHT_OVERRIDE -> LEFT_TO_RIGHT_OVERRIDE
    byte DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE -> DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE
    int RIGHT_TO_LEFT_ARABIC -> RIGHT_TO_LEFT_ARABIC
    byte DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC -> DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC
    int RIGHT_TO_LEFT_EMBEDDING -> RIGHT_TO_LEFT_EMBEDDING
    byte DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING -> DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING
    int RIGHT_TO_LEFT_OVERRIDE -> RIGHT_TO_LEFT_OVERRIDE
    byte DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE -> DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE
    int POP_DIRECTIONAL_FORMAT -> POP_DIRECTIONAL_FORMAT
    byte DIRECTIONALITY_POP_DIRECTIONAL_FORMAT -> DIRECTIONALITY_POP_DIRECTIONAL_FORMAT
    int DIR_NON_SPACING_MARK -> DIR_NON_SPACING_MARK
    byte DIRECTIONALITY_NONSPACING_MARK -> DIRECTIONALITY_NONSPACING_MARK
    int BOUNDARY_NEUTRAL -> BOUNDARY_NEUTRAL
    byte DIRECTIONALITY_BOUNDARY_NEUTRAL -> DIRECTIONALITY_BOUNDARY_NEUTRAL
    byte FIRST_STRONG_ISOLATE -> FIRST_STRONG_ISOLATE
    byte LEFT_TO_RIGHT_ISOLATE -> LEFT_TO_RIGHT_ISOLATE
    byte RIGHT_TO_LEFT_ISOLATE -> RIGHT_TO_LEFT_ISOLATE
    byte POP_DIRECTIONAL_ISOLATE -> POP_DIRECTIONAL_ISOLATE
    int CHAR_DIRECTION_COUNT -> CHAR_DIRECTION_COUNT
    byte DIRECTIONALITY_UNDEFINED -> DIRECTIONALITY_UNDEFINED
com.ibm.icu.lang.UCharacterNameIterator -> com.ibm.icu.lang.f:
    com.ibm.icu.impl.UCharacterName m_name_ -> a
    int m_choice_ -> b
    int m_start_ -> c
    int m_limit_ -> d
    int m_current_ -> e
    int m_groupIndex_ -> f
    int m_algorithmIndex_ -> g
    char[] GROUP_OFFSETS_ -> h
    char[] GROUP_LENGTHS_ -> i
    37:109:boolean next(com.ibm.icu.util.ValueIterator$Element) -> next
    119:122:void reset() -> reset
    141:159:void setRange(int,int) -> setRange
    170:211:void <init>(com.ibm.icu.impl.UCharacterName,int) -> <init>
    233:255:boolean iterateSingleGroup(com.ibm.icu.util.ValueIterator$Element,int) -> a
    269:311:boolean iterateGroup(com.ibm.icu.util.ValueIterator$Element,int) -> b
    325:334:boolean iterateExtended(com.ibm.icu.util.ValueIterator$Element,int) -> c
    215:217:void <clinit>() -> <clinit>
com.ibm.icu.lang.UProperty -> com.ibm.icu.lang.UProperty:
    int UNDEFINED -> UNDEFINED
    int ALPHABETIC -> ALPHABETIC
    int BINARY_START -> BINARY_START
    int ASCII_HEX_DIGIT -> ASCII_HEX_DIGIT
    int BIDI_CONTROL -> BIDI_CONTROL
    int BIDI_MIRRORED -> BIDI_MIRRORED
    int DASH -> DASH
    int DEFAULT_IGNORABLE_CODE_POINT -> DEFAULT_IGNORABLE_CODE_POINT
    int DEPRECATED -> DEPRECATED
    int DIACRITIC -> DIACRITIC
    int EXTENDER -> EXTENDER
    int FULL_COMPOSITION_EXCLUSION -> FULL_COMPOSITION_EXCLUSION
    int GRAPHEME_BASE -> GRAPHEME_BASE
    int GRAPHEME_EXTEND -> GRAPHEME_EXTEND
    int GRAPHEME_LINK -> GRAPHEME_LINK
    int HEX_DIGIT -> HEX_DIGIT
    int HYPHEN -> HYPHEN
    int ID_CONTINUE -> ID_CONTINUE
    int ID_START -> ID_START
    int IDEOGRAPHIC -> IDEOGRAPHIC
    int IDS_BINARY_OPERATOR -> IDS_BINARY_OPERATOR
    int IDS_TRINARY_OPERATOR -> IDS_TRINARY_OPERATOR
    int JOIN_CONTROL -> JOIN_CONTROL
    int LOGICAL_ORDER_EXCEPTION -> LOGICAL_ORDER_EXCEPTION
    int LOWERCASE -> LOWERCASE
    int MATH -> MATH
    int NONCHARACTER_CODE_POINT -> NONCHARACTER_CODE_POINT
    int QUOTATION_MARK -> QUOTATION_MARK
    int RADICAL -> RADICAL
    int SOFT_DOTTED -> SOFT_DOTTED
    int TERMINAL_PUNCTUATION -> TERMINAL_PUNCTUATION
    int UNIFIED_IDEOGRAPH -> UNIFIED_IDEOGRAPH
    int UPPERCASE -> UPPERCASE
    int WHITE_SPACE -> WHITE_SPACE
    int XID_CONTINUE -> XID_CONTINUE
    int XID_START -> XID_START
    int CASE_SENSITIVE -> CASE_SENSITIVE
    int S_TERM -> S_TERM
    int VARIATION_SELECTOR -> VARIATION_SELECTOR
    int NFD_INERT -> NFD_INERT
    int NFKD_INERT -> NFKD_INERT
    int NFC_INERT -> NFC_INERT
    int NFKC_INERT -> NFKC_INERT
    int SEGMENT_STARTER -> SEGMENT_STARTER
    int PATTERN_SYNTAX -> PATTERN_SYNTAX
    int PATTERN_WHITE_SPACE -> PATTERN_WHITE_SPACE
    int POSIX_ALNUM -> POSIX_ALNUM
    int POSIX_BLANK -> POSIX_BLANK
    int POSIX_GRAPH -> POSIX_GRAPH
    int POSIX_PRINT -> POSIX_PRINT
    int POSIX_XDIGIT -> POSIX_XDIGIT
    int CASED -> CASED
    int CASE_IGNORABLE -> CASE_IGNORABLE
    int CHANGES_WHEN_LOWERCASED -> CHANGES_WHEN_LOWERCASED
    int CHANGES_WHEN_UPPERCASED -> CHANGES_WHEN_UPPERCASED
    int CHANGES_WHEN_TITLECASED -> CHANGES_WHEN_TITLECASED
    int CHANGES_WHEN_CASEFOLDED -> CHANGES_WHEN_CASEFOLDED
    int CHANGES_WHEN_CASEMAPPED -> CHANGES_WHEN_CASEMAPPED
    int CHANGES_WHEN_NFKC_CASEFOLDED -> CHANGES_WHEN_NFKC_CASEFOLDED
    int BINARY_LIMIT -> BINARY_LIMIT
    int BIDI_CLASS -> BIDI_CLASS
    int INT_START -> INT_START
    int BLOCK -> BLOCK
    int CANONICAL_COMBINING_CLASS -> CANONICAL_COMBINING_CLASS
    int DECOMPOSITION_TYPE -> DECOMPOSITION_TYPE
    int EAST_ASIAN_WIDTH -> EAST_ASIAN_WIDTH
    int GENERAL_CATEGORY -> GENERAL_CATEGORY
    int JOINING_GROUP -> JOINING_GROUP
    int JOINING_TYPE -> JOINING_TYPE
    int LINE_BREAK -> LINE_BREAK
    int NUMERIC_TYPE -> NUMERIC_TYPE
    int SCRIPT -> SCRIPT
    int HANGUL_SYLLABLE_TYPE -> HANGUL_SYLLABLE_TYPE
    int NFD_QUICK_CHECK -> NFD_QUICK_CHECK
    int NFKD_QUICK_CHECK -> NFKD_QUICK_CHECK
    int NFC_QUICK_CHECK -> NFC_QUICK_CHECK
    int NFKC_QUICK_CHECK -> NFKC_QUICK_CHECK
    int LEAD_CANONICAL_COMBINING_CLASS -> LEAD_CANONICAL_COMBINING_CLASS
    int TRAIL_CANONICAL_COMBINING_CLASS -> TRAIL_CANONICAL_COMBINING_CLASS
    int GRAPHEME_CLUSTER_BREAK -> GRAPHEME_CLUSTER_BREAK
    int SENTENCE_BREAK -> SENTENCE_BREAK
    int WORD_BREAK -> WORD_BREAK
    int BIDI_PAIRED_BRACKET_TYPE -> BIDI_PAIRED_BRACKET_TYPE
    int INT_LIMIT -> INT_LIMIT
    int GENERAL_CATEGORY_MASK -> GENERAL_CATEGORY_MASK
    int MASK_START -> MASK_START
    int MASK_LIMIT -> MASK_LIMIT
    int NUMERIC_VALUE -> NUMERIC_VALUE
    int DOUBLE_START -> DOUBLE_START
    int DOUBLE_LIMIT -> DOUBLE_LIMIT
    int AGE -> AGE
    int STRING_START -> STRING_START
    int BIDI_MIRRORING_GLYPH -> BIDI_MIRRORING_GLYPH
    int CASE_FOLDING -> CASE_FOLDING
    int ISO_COMMENT -> ISO_COMMENT
    int LOWERCASE_MAPPING -> LOWERCASE_MAPPING
    int NAME -> NAME
    int SIMPLE_CASE_FOLDING -> SIMPLE_CASE_FOLDING
    int SIMPLE_LOWERCASE_MAPPING -> SIMPLE_LOWERCASE_MAPPING
    int SIMPLE_TITLECASE_MAPPING -> SIMPLE_TITLECASE_MAPPING
    int SIMPLE_UPPERCASE_MAPPING -> SIMPLE_UPPERCASE_MAPPING
    int TITLECASE_MAPPING -> TITLECASE_MAPPING
    int UNICODE_1_NAME -> UNICODE_1_NAME
    int UPPERCASE_MAPPING -> UPPERCASE_MAPPING
    int BIDI_PAIRED_BRACKET -> BIDI_PAIRED_BRACKET
    int STRING_LIMIT -> STRING_LIMIT
    int SCRIPT_EXTENSIONS -> SCRIPT_EXTENSIONS
    int OTHER_PROPERTY_START -> OTHER_PROPERTY_START
    int OTHER_PROPERTY_LIMIT -> OTHER_PROPERTY_LIMIT
com.ibm.icu.lang.UProperty$NameChoice -> com.ibm.icu.lang.UProperty$NameChoice:
    int SHORT -> SHORT
    int LONG -> LONG
    int COUNT -> COUNT
com.ibm.icu.lang.UScript -> com.ibm.icu.lang.UScript:
    int INVALID_CODE -> INVALID_CODE
    int COMMON -> COMMON
    int INHERITED -> INHERITED
    int ARABIC -> ARABIC
    int ARMENIAN -> ARMENIAN
    int BENGALI -> BENGALI
    int BOPOMOFO -> BOPOMOFO
    int CHEROKEE -> CHEROKEE
    int COPTIC -> COPTIC
    int CYRILLIC -> CYRILLIC
    int DESERET -> DESERET
    int DEVANAGARI -> DEVANAGARI
    int ETHIOPIC -> ETHIOPIC
    int GEORGIAN -> GEORGIAN
    int GOTHIC -> GOTHIC
    int GREEK -> GREEK
    int GUJARATI -> GUJARATI
    int GURMUKHI -> GURMUKHI
    int HAN -> HAN
    int HANGUL -> HANGUL
    int HEBREW -> HEBREW
    int HIRAGANA -> HIRAGANA
    int KANNADA -> KANNADA
    int KATAKANA -> KATAKANA
    int KHMER -> KHMER
    int LAO -> LAO
    int LATIN -> LATIN
    int MALAYALAM -> MALAYALAM
    int MONGOLIAN -> MONGOLIAN
    int MYANMAR -> MYANMAR
    int OGHAM -> OGHAM
    int OLD_ITALIC -> OLD_ITALIC
    int ORIYA -> ORIYA
    int RUNIC -> RUNIC
    int SINHALA -> SINHALA
    int SYRIAC -> SYRIAC
    int TAMIL -> TAMIL
    int TELUGU -> TELUGU
    int THAANA -> THAANA
    int THAI -> THAI
    int TIBETAN -> TIBETAN
    int CANADIAN_ABORIGINAL -> CANADIAN_ABORIGINAL
    int UCAS -> UCAS
    int YI -> YI
    int TAGALOG -> TAGALOG
    int HANUNOO -> HANUNOO
    int BUHID -> BUHID
    int TAGBANWA -> TAGBANWA
    int BRAILLE -> BRAILLE
    int CYPRIOT -> CYPRIOT
    int LIMBU -> LIMBU
    int LINEAR_B -> LINEAR_B
    int OSMANYA -> OSMANYA
    int SHAVIAN -> SHAVIAN
    int TAI_LE -> TAI_LE
    int UGARITIC -> UGARITIC
    int KATAKANA_OR_HIRAGANA -> KATAKANA_OR_HIRAGANA
    int BUGINESE -> BUGINESE
    int GLAGOLITIC -> GLAGOLITIC
    int KHAROSHTHI -> KHAROSHTHI
    int SYLOTI_NAGRI -> SYLOTI_NAGRI
    int NEW_TAI_LUE -> NEW_TAI_LUE
    int TIFINAGH -> TIFINAGH
    int OLD_PERSIAN -> OLD_PERSIAN
    int BALINESE -> BALINESE
    int BATAK -> BATAK
    int BLISSYMBOLS -> BLISSYMBOLS
    int BRAHMI -> BRAHMI
    int CHAM -> CHAM
    int CIRTH -> CIRTH
    int OLD_CHURCH_SLAVONIC_CYRILLIC -> OLD_CHURCH_SLAVONIC_CYRILLIC
    int DEMOTIC_EGYPTIAN -> DEMOTIC_EGYPTIAN
    int HIERATIC_EGYPTIAN -> HIERATIC_EGYPTIAN
    int EGYPTIAN_HIEROGLYPHS -> EGYPTIAN_HIEROGLYPHS
    int KHUTSURI -> KHUTSURI
    int SIMPLIFIED_HAN -> SIMPLIFIED_HAN
    int TRADITIONAL_HAN -> TRADITIONAL_HAN
    int PAHAWH_HMONG -> PAHAWH_HMONG
    int OLD_HUNGARIAN -> OLD_HUNGARIAN
    int HARAPPAN_INDUS -> HARAPPAN_INDUS
    int JAVANESE -> JAVANESE
    int KAYAH_LI -> KAYAH_LI
    int LATIN_FRAKTUR -> LATIN_FRAKTUR
    int LATIN_GAELIC -> LATIN_GAELIC
    int LEPCHA -> LEPCHA
    int LINEAR_A -> LINEAR_A
    int MANDAIC -> MANDAIC
    int MANDAEAN -> MANDAEAN
    int MAYAN_HIEROGLYPHS -> MAYAN_HIEROGLYPHS
    int MEROITIC_HIEROGLYPHS -> MEROITIC_HIEROGLYPHS
    int MEROITIC -> MEROITIC
    int NKO -> NKO
    int ORKHON -> ORKHON
    int OLD_PERMIC -> OLD_PERMIC
    int PHAGS_PA -> PHAGS_PA
    int PHOENICIAN -> PHOENICIAN
    int MIAO -> MIAO
    int PHONETIC_POLLARD -> PHONETIC_POLLARD
    int RONGORONGO -> RONGORONGO
    int SARATI -> SARATI
    int ESTRANGELO_SYRIAC -> ESTRANGELO_SYRIAC
    int WESTERN_SYRIAC -> WESTERN_SYRIAC
    int EASTERN_SYRIAC -> EASTERN_SYRIAC
    int TENGWAR -> TENGWAR
    int VAI -> VAI
    int VISIBLE_SPEECH -> VISIBLE_SPEECH
    int CUNEIFORM -> CUNEIFORM
    int UNWRITTEN_LANGUAGES -> UNWRITTEN_LANGUAGES
    int UNKNOWN -> UNKNOWN
    int CARIAN -> CARIAN
    int JAPANESE -> JAPANESE
    int LANNA -> LANNA
    int LYCIAN -> LYCIAN
    int LYDIAN -> LYDIAN
    int OL_CHIKI -> OL_CHIKI
    int REJANG -> REJANG
    int SAURASHTRA -> SAURASHTRA
    int SIGN_WRITING -> SIGN_WRITING
    int SUNDANESE -> SUNDANESE
    int MOON -> MOON
    int MEITEI_MAYEK -> MEITEI_MAYEK
    int IMPERIAL_ARAMAIC -> IMPERIAL_ARAMAIC
    int AVESTAN -> AVESTAN
    int CHAKMA -> CHAKMA
    int KOREAN -> KOREAN
    int KAITHI -> KAITHI
    int MANICHAEAN -> MANICHAEAN
    int INSCRIPTIONAL_PAHLAVI -> INSCRIPTIONAL_PAHLAVI
    int PSALTER_PAHLAVI -> PSALTER_PAHLAVI
    int BOOK_PAHLAVI -> BOOK_PAHLAVI
    int INSCRIPTIONAL_PARTHIAN -> INSCRIPTIONAL_PARTHIAN
    int SAMARITAN -> SAMARITAN
    int TAI_VIET -> TAI_VIET
    int MATHEMATICAL_NOTATION -> MATHEMATICAL_NOTATION
    int SYMBOLS -> SYMBOLS
    int BAMUM -> BAMUM
    int LISU -> LISU
    int NAKHI_GEBA -> NAKHI_GEBA
    int OLD_SOUTH_ARABIAN -> OLD_SOUTH_ARABIAN
    int BASSA_VAH -> BASSA_VAH
    int DUPLOYAN -> DUPLOYAN
    int DUPLOYAN_SHORTAND -> DUPLOYAN_SHORTAND
    int ELBASAN -> ELBASAN
    int GRANTHA -> GRANTHA
    int KPELLE -> KPELLE
    int LOMA -> LOMA
    int MENDE -> MENDE
    int MEROITIC_CURSIVE -> MEROITIC_CURSIVE
    int OLD_NORTH_ARABIAN -> OLD_NORTH_ARABIAN
    int NABATAEAN -> NABATAEAN
    int PALMYRENE -> PALMYRENE
    int KHUDAWADI -> KHUDAWADI
    int SINDHI -> SINDHI
    int WARANG_CITI -> WARANG_CITI
    int AFAKA -> AFAKA
    int JURCHEN -> JURCHEN
    int MRO -> MRO
    int NUSHU -> NUSHU
    int SHARADA -> SHARADA
    int SORA_SOMPENG -> SORA_SOMPENG
    int TAKRI -> TAKRI
    int TANGUT -> TANGUT
    int WOLEAI -> WOLEAI
    int ANATOLIAN_HIEROGLYPHS -> ANATOLIAN_HIEROGLYPHS
    int KHOJKI -> KHOJKI
    int TIRHUTA -> TIRHUTA
    int CAUCASIAN_ALBANIAN -> CAUCASIAN_ALBANIAN
    int MAHAJANI -> MAHAJANI
    int AHOM -> AHOM
    int HATRAN -> HATRAN
    int MODI -> MODI
    int MULTANI -> MULTANI
    int PAU_CIN_HAU -> PAU_CIN_HAU
    int SIDDHAM -> SIDDHAM
    int CODE_LIMIT -> CODE_LIMIT
    com.ibm.icu.lang.UScript$ScriptUsage[] usageValues -> a
    972:993:int[] getCodesFromLocale(com.ibm.icu.util.ULocale) -> a
    1001:1006:int[] findCodeFromLocale(com.ibm.icu.util.ULocale) -> b
    1018:1018:int[] getCode(java.util.Locale) -> getCode
    1029:1029:int[] getCode(com.ibm.icu.util.ULocale) -> getCode
    1045:1063:int[] getCode(java.lang.String) -> getCode
    1077:1078:int getCodeFromName(java.lang.String) -> getCodeFromName
    1089:1101:int getScript(int) -> getScript
    1121:1139:boolean hasScript(int,int) -> hasScript
    1171:1191:int getScriptExtensions(int,java.util.BitSet) -> getScriptExtensions
    1205:1205:java.lang.String getName(int) -> getName
    1221:1221:java.lang.String getShortName(int) -> getShortName
    1480:1484:java.lang.String getSampleString(int) -> getSampleString
    1497:1497:com.ibm.icu.lang.UScript$ScriptUsage getUsage(int) -> getUsage
    1509:1509:boolean isRightToLeft(int) -> isRightToLeft
    1522:1522:boolean breaksBetweenLetters(int) -> breaksBetweenLetters
    1534:1534:boolean isCased(int) -> isCased
    1541:1541:void <init>() -> <init>
    1468:1468:void <clinit>() -> <clinit>
com.ibm.icu.lang.UScript$ScriptMetadata -> com.ibm.icu.lang.g:
    int[] SCRIPT_PROPS -> a
    1421:1424:int getScriptProps(int) -> b
    1230:1230:int access$000(int) -> a
    1246:1246:void <clinit>() -> <clinit>
com.ibm.icu.lang.UScript$ScriptUsage -> com.ibm.icu.lang.UScript$ScriptUsage:
    com.ibm.icu.lang.UScript$ScriptUsage NOT_ENCODED -> NOT_ENCODED
    com.ibm.icu.lang.UScript$ScriptUsage UNKNOWN -> UNKNOWN
    com.ibm.icu.lang.UScript$ScriptUsage EXCLUDED -> EXCLUDED
    com.ibm.icu.lang.UScript$ScriptUsage LIMITED_USE -> LIMITED_USE
    com.ibm.icu.lang.UScript$ScriptUsage ASPIRATIONAL -> ASPIRATIONAL
    com.ibm.icu.lang.UScript$ScriptUsage RECOMMENDED -> RECOMMENDED
    com.ibm.icu.lang.UScript$ScriptUsage[] $VALUES -> a
    1436:1436:com.ibm.icu.lang.UScript$ScriptUsage[] values() -> values
    1436:1436:com.ibm.icu.lang.UScript$ScriptUsage valueOf(java.lang.String) -> valueOf
    1436:1436:void <init>(java.lang.String,int) -> <init>
    1436:1466:void <clinit>() -> <clinit>
com.ibm.icu.lang.UScriptRun -> com.ibm.icu.lang.UScriptRun:
    char[] emptyCharArray -> a
    char[] text -> b
    int textIndex -> c
    int textStart -> d
    int textLimit -> e
    int scriptStart -> f
    int scriptLimit -> g
    int scriptCode -> h
    int PAREN_STACK_DEPTH -> i
    com.ibm.icu.lang.UCharacter$1[] parenStack$4c51a853 -> j
    int parenSP -> k
    int pushCount -> l
    int fixupCount -> m
    int[] pairedChars -> n
    int pairedCharPower -> o
    int pairedCharExtra -> p
    64:546:void <init>() -> <init>
    81:546:void <init>(java.lang.String) -> <init>
    98:546:void <init>(java.lang.String,int,int) -> <init>
    113:546:void <init>(char[]) -> <init>
    130:546:void <init>(char[],int,int) -> <init>
    147:159:void reset() -> reset
    177:191:void reset(int,int) -> reset
    208:215:void reset(char[],int,int) -> reset
    229:236:void reset(char[]) -> reset
    253:260:void reset(java.lang.String,int,int) -> reset
    274:281:void reset(java.lang.String) -> reset
    296:296:int getScriptStart() -> getScriptStart
    310:310:int getScriptLimit() -> getScriptLimit
    325:325:int getScriptCode() -> getScriptCode
    341:402:boolean next() -> next
    416:416:boolean sameScript(int,int) -> a
    436:436:int mod(int) -> a
    441:441:int inc(int,int) -> b
    446:446:int inc(int) -> b
    451:451:int dec(int,int) -> c
    456:456:int dec(int) -> c
    461:465:int limitInc(int) -> d
    470:470:boolean stackIsEmpty() -> a
    475:475:boolean stackIsNotEmpty() -> b
    480:485:void push(int,int) -> d
    490:508:void pop() -> c
    512:512:com.ibm.icu.lang.UCharacter$1 top$2a955739() -> d
    517:518:void syncFixup() -> e
    522:528:void fixup(int) -> e
    557:588:byte highBit(int) -> f
    599:618:int getPairIndex(int) -> g
    542:642:void <clinit>() -> <clinit>
com.ibm.icu.math.BigDecimal -> com.ibm.icu.math.BigDecimal:
    com.ibm.icu.math.BigDecimal ZERO -> ZERO
    com.ibm.icu.math.BigDecimal ONE -> ONE
    com.ibm.icu.math.BigDecimal TEN -> TEN
    int ROUND_CEILING -> ROUND_CEILING
    int ROUND_DOWN -> ROUND_DOWN
    int ROUND_FLOOR -> ROUND_FLOOR
    int ROUND_HALF_DOWN -> ROUND_HALF_DOWN
    int ROUND_HALF_EVEN -> ROUND_HALF_EVEN
    int ROUND_HALF_UP -> ROUND_HALF_UP
    int ROUND_UNNECESSARY -> ROUND_UNNECESSARY
    int ROUND_UP -> ROUND_UP
    com.ibm.icu.math.MathContext plainMC -> a
    long serialVersionUID -> serialVersionUID
    byte[] bytecar -> b
    byte[] bytedig -> c
    byte ind -> d
    byte form -> e
    byte[] mant -> f
    int exp -> g
    429:430:void <init>(java.math.BigDecimal) -> <init>
    448:449:void <init>(java.math.BigInteger) -> <init>
    473:477:void <init>(java.math.BigInteger,int) -> <init>
    496:497:void <init>(char[]) -> <init>
    379:731:void <init>(char[],int,int) -> <init>
    755:756:void <init>(double) -> <init>
    379:835:void <init>(int) -> <init>
    379:884:void <init>(long) -> <init>
    928:929:void <init>(java.lang.String) -> <init>
    379:936:void <init>() -> <init>
    955:955:com.ibm.icu.math.BigDecimal abs() -> abs
    971:973:com.ibm.icu.math.BigDecimal abs(com.ibm.icu.math.MathContext) -> abs
    990:990:com.ibm.icu.math.BigDecimal add(com.ibm.icu.math.BigDecimal) -> add
    1013:1211:com.ibm.icu.math.BigDecimal add(com.ibm.icu.math.BigDecimal,com.ibm.icu.math.MathContext) -> add
    1227:1227:int compareTo(com.ibm.icu.math.BigDecimal) -> compareTo
    1259:1301:int compareTo(com.ibm.icu.math.BigDecimal,com.ibm.icu.math.MathContext) -> compareTo
    1320:1320:com.ibm.icu.math.BigDecimal divide(com.ibm.icu.math.BigDecimal) -> divide
    1346:1348:com.ibm.icu.math.BigDecimal divide(com.ibm.icu.math.BigDecimal,int) -> divide
    1378:1381:com.ibm.icu.math.BigDecimal divide(com.ibm.icu.math.BigDecimal,int,int) -> divide
    1398:1398:com.ibm.icu.math.BigDecimal divide(com.ibm.icu.math.BigDecimal,com.ibm.icu.math.MathContext) -> divide
    1415:1415:com.ibm.icu.math.BigDecimal divideInteger(com.ibm.icu.math.BigDecimal) -> divideInteger
    1434:1434:com.ibm.icu.math.BigDecimal divideInteger(com.ibm.icu.math.BigDecimal,com.ibm.icu.math.MathContext) -> divideInteger
    1449:1449:com.ibm.icu.math.BigDecimal max(com.ibm.icu.math.BigDecimal) -> max
    1470:1473:com.ibm.icu.math.BigDecimal max(com.ibm.icu.math.BigDecimal,com.ibm.icu.math.MathContext) -> max
    1488:1488:com.ibm.icu.math.BigDecimal min(com.ibm.icu.math.BigDecimal) -> min
    1509:1512:com.ibm.icu.math.BigDecimal min(com.ibm.icu.math.BigDecimal,com.ibm.icu.math.MathContext) -> min
    1530:1530:com.ibm.icu.math.BigDecimal multiply(com.ibm.icu.math.BigDecimal) -> multiply
    1549:1629:com.ibm.icu.math.BigDecimal multiply(com.ibm.icu.math.BigDecimal,com.ibm.icu.math.MathContext) -> multiply
    1646:1646:com.ibm.icu.math.BigDecimal negate() -> negate
    1664:1668:com.ibm.icu.math.BigDecimal negate(com.ibm.icu.math.MathContext) -> negate
    1684:1684:com.ibm.icu.math.BigDecimal plus() -> plus
    1703:1713:com.ibm.icu.math.BigDecimal plus(com.ibm.icu.math.MathContext) -> plus
    1736:1736:com.ibm.icu.math.BigDecimal pow(com.ibm.icu.math.BigDecimal) -> pow
    1766:1823:com.ibm.icu.math.BigDecimal pow(com.ibm.icu.math.BigDecimal,com.ibm.icu.math.MathContext) -> pow
    1843:1843:com.ibm.icu.math.BigDecimal remainder(com.ibm.icu.math.BigDecimal) -> remainder
    1863:1863:com.ibm.icu.math.BigDecimal remainder(com.ibm.icu.math.BigDecimal,com.ibm.icu.math.MathContext) -> remainder
    1880:1880:com.ibm.icu.math.BigDecimal subtract(com.ibm.icu.math.BigDecimal) -> subtract
    1897:1904:com.ibm.icu.math.BigDecimal subtract(com.ibm.icu.math.BigDecimal,com.ibm.icu.math.MathContext) -> subtract
    1923:1926:byte byteValueExact() -> byteValueExact
    1945:1945:double doubleValue() -> doubleValue
    1970:2008:boolean equals(java.lang.Object) -> equals
    2025:2025:float floatValue() -> floatValue
    2069:2069:java.lang.String format(int,int) -> format
    2144:2355:java.lang.String format(int,int,int,int,int,int) -> format
    2373:2373:int hashCode() -> hashCode
    2388:2388:int intValue() -> intValue
    2403:2457:int intValueExact() -> intValueExact
    2472:2472:long longValue() -> longValue
    2487:2545:long longValueExact() -> longValueExact
    2567:2569:com.ibm.icu.math.BigDecimal movePointLeft(int) -> movePointLeft
    2590:2592:com.ibm.icu.math.BigDecimal movePointRight(int) -> movePointRight
    2605:2607:int scale() -> scale
    2631:2631:com.ibm.icu.math.BigDecimal setScale(int) -> setScale
    2661:2692:com.ibm.icu.math.BigDecimal setScale(int,int) -> setScale
    2707:2710:short shortValueExact() -> shortValueExact
    2724:2724:int signum() -> signum
    2742:2742:java.math.BigDecimal toBigDecimal() -> toBigDecimal
    2756:2783:java.math.BigInteger toBigInteger() -> toBigInteger
    2798:2803:java.math.BigInteger toBigIntegerExact() -> toBigIntegerExact
    2816:2816:char[] toCharArray() -> toCharArray
    2835:2835:java.lang.String toString() -> toString
    2849:2856:java.math.BigInteger unscaledValue() -> unscaledValue
    2880:2880:com.ibm.icu.math.BigDecimal valueOf(double) -> valueOf
    2893:2893:com.ibm.icu.math.BigDecimal valueOf(long) -> valueOf
    2915:2933:com.ibm.icu.math.BigDecimal valueOf(long,int) -> valueOf
    2950:3076:char[] layout() -> a
    3086:3090:int intcheck(int,int) -> a
    3126:3408:com.ibm.icu.math.BigDecimal dodivide(char,com.ibm.icu.math.BigDecimal,com.ibm.icu.math.MathContext,int) -> a
    3414:3414:void bad(char[]) -> a
    3423:3423:void badarg(java.lang.String,int,java.lang.String) -> a
    3436:3441:byte[] extend(byte[],int) -> a
    3476:3561:byte[] byteaddsub(byte[],int,byte[],int,int,boolean) -> a
    3571:3589:byte[] diginit() -> b
    3599:3604:com.ibm.icu.math.BigDecimal clone(com.ibm.icu.math.BigDecimal) -> a
    3613:3624:void checkdigits(com.ibm.icu.math.BigDecimal,int) -> a
    3632:3632:com.ibm.icu.math.BigDecimal round(com.ibm.icu.math.MathContext) -> a
    3649:3747:com.ibm.icu.math.BigDecimal round(int,int) -> b
    3758:3769:boolean allzero(byte[],int) -> b
    3782:3880:com.ibm.icu.math.BigDecimal finish(com.ibm.icu.math.MathContext,boolean) -> a
    222:222:int compareTo(java.lang.Object) -> compareTo
    234:349:void <clinit>() -> <clinit>
com.ibm.icu.math.MathContext -> com.ibm.icu.math.MathContext:
    int PLAIN -> PLAIN
    int SCIENTIFIC -> SCIENTIFIC
    int ENGINEERING -> ENGINEERING
    int ROUND_CEILING -> ROUND_CEILING
    int ROUND_DOWN -> ROUND_DOWN
    int ROUND_FLOOR -> ROUND_FLOOR
    int ROUND_HALF_DOWN -> ROUND_HALF_DOWN
    int ROUND_HALF_EVEN -> ROUND_HALF_EVEN
    int ROUND_HALF_UP -> ROUND_HALF_UP
    int ROUND_UNNECESSARY -> ROUND_UNNECESSARY
    int ROUND_UP -> ROUND_UP
    int digits -> a
    int form -> b
    boolean lostDigits -> c
    int roundingMode -> d
    int[] ROUNDS -> e
    java.lang.String[] ROUNDWORDS -> f
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.math.MathContext DEFAULT -> DEFAULT
    359:360:void <init>(int) -> <init>
    384:385:void <init>(int,int) -> <init>
    410:411:void <init>(int,int,boolean) -> <init>
    435:461:void <init>(int,int,boolean,int) -> <init>
    473:473:int getDigits() -> getDigits
    488:488:int getForm() -> getForm
    502:502:boolean getLostDigits() -> getLostDigits
    523:523:int getRoundingMode() -> getRoundingMode
    565:585:java.lang.String toString() -> toString
    593:599:boolean isValidRound(int) -> a
    311:335:void <clinit>() -> <clinit>
com.ibm.icu.text.AbsoluteValueSubstitution -> com.ibm.icu.text.a:
    1354:1355:void <init>(int,com.ibm.icu.text.NFRuleSet,java.lang.String) -> <init>
    1367:1367:long transformNumber(long) -> a
    1376:1376:double transformNumber(double) -> a
    1392:1392:double composeRuleValue(double,double) -> a
    1401:1401:double calcUpperBound(double) -> b
    1413:1413:char tokenChar() -> a
com.ibm.icu.text.AlphabeticIndex -> com.ibm.icu.text.AlphabeticIndex:
    java.util.Comparator binaryCmp -> a
    com.ibm.icu.text.RuleBasedCollator collatorOriginal -> b
    com.ibm.icu.text.RuleBasedCollator collatorPrimaryOnly -> c
    com.ibm.icu.text.RuleBasedCollator collatorExternal -> d
    java.util.Comparator recordComparator -> e
    java.util.List firstCharsInScripts -> f
    com.ibm.icu.text.UnicodeSet initialLabels -> g
    java.util.List inputList -> h
    com.ibm.icu.text.AlphabeticIndex$BucketList buckets -> i
    java.lang.String overflowLabel -> j
    java.lang.String underflowLabel -> k
    java.lang.String inflowLabel -> l
    int maxLabelCount -> m
    boolean $assertionsDisabled -> n
    232:233:void <init>(com.ibm.icu.util.ULocale) -> <init>
    243:244:void <init>(java.util.Locale) -> <init>
    260:261:void <init>(com.ibm.icu.text.RuleBasedCollator) -> <init>
    140:815:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.RuleBasedCollator) -> <init>
    307:309:com.ibm.icu.text.AlphabeticIndex addLabels(com.ibm.icu.text.UnicodeSet) -> addLabels
    319:323:com.ibm.icu.text.AlphabeticIndex addLabels(com.ibm.icu.util.ULocale[]) -> addLabels
    333:337:com.ibm.icu.text.AlphabeticIndex addLabels(java.util.Locale[]) -> addLabels
    347:349:com.ibm.icu.text.AlphabeticIndex setOverflowLabel(java.lang.String) -> setOverflowLabel
    359:359:java.lang.String getUnderflowLabel() -> getUnderflowLabel
    370:372:com.ibm.icu.text.AlphabeticIndex setUnderflowLabel(java.lang.String) -> setUnderflowLabel
    382:382:java.lang.String getOverflowLabel() -> getOverflowLabel
    393:395:com.ibm.icu.text.AlphabeticIndex setInflowLabel(java.lang.String) -> setInflowLabel
    406:406:java.lang.String getInflowLabel() -> getInflowLabel
    417:417:int getMaxLabelCount() -> getMaxLabelCount
    431:433:com.ibm.icu.text.AlphabeticIndex setMaxLabelCount(int) -> setMaxLabelCount
    441:502:java.util.List initLabels() -> a
    506:513:java.lang.String fixLabel(java.lang.String) -> a
    521:562:void addIndexExemplars(com.ibm.icu.util.ULocale) -> a
    568:585:boolean addChineseIndexCharacters() -> b
    593:605:java.lang.String separated(java.lang.String) -> b
    619:628:com.ibm.icu.text.AlphabeticIndex$ImmutableIndex buildImmutableIndex() -> buildImmutableIndex
    638:643:java.util.List getBucketLabels() -> getBucketLabels
    657:665:com.ibm.icu.text.RuleBasedCollator getCollator() -> getCollator
    682:687:com.ibm.icu.text.AlphabeticIndex addRecord(java.lang.CharSequence,java.lang.Object) -> addRecord
    706:707:int getBucketIndex(java.lang.CharSequence) -> getBucketIndex
    717:721:com.ibm.icu.text.AlphabeticIndex clearRecords() -> clearRecords
    731:732:int getBucketCount() -> getBucketCount
    742:742:int getRecordCount() -> getRecordCount
    752:753:java.util.Iterator iterator() -> iterator
    760:813:void initBuckets() -> c
    824:834:boolean isOneLabelBetterThanOther(com.ibm.icu.text.Normalizer2,java.lang.String,java.lang.String) -> a
    1004:1137:com.ibm.icu.text.AlphabeticIndex$BucketList createBucketList() -> d
    1196:1209:boolean hasMultiplePrimaryWeights(com.ibm.icu.text.RuleBasedCollator,long,java.lang.String) -> a
    1231:1250:java.util.List getFirstCharactersInScripts() -> getFirstCharactersInScripts
    124:124:com.ibm.icu.text.RuleBasedCollator access$100(com.ibm.icu.text.AlphabeticIndex) -> a
    124:133:void <clinit>() -> <clinit>
com.ibm.icu.text.AlphabeticIndex$1 -> com.ibm.icu.text.b:
    com.ibm.icu.text.AlphabeticIndex this$0 -> a
    140:140:void <init>(com.ibm.icu.text.AlphabeticIndex) -> <init>
    142:142:int compare(com.ibm.icu.text.AlphabeticIndex$Record,com.ibm.icu.text.AlphabeticIndex$Record) -> a
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
com.ibm.icu.text.AlphabeticIndex$Bucket -> com.ibm.icu.text.AlphabeticIndex$Bucket:
    java.lang.String label -> a
    java.lang.String lowerBoundary -> b
    com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType labelType -> c
    com.ibm.icu.text.AlphabeticIndex$Bucket displayBucket -> d
    int displayIndex -> e
    java.util.List records -> f
    938:942:void <init>(java.lang.String,java.lang.String,com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType) -> <init>
    951:951:java.lang.String getLabel() -> getLabel
    961:961:com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType getLabelType() -> getLabelType
    971:971:int size() -> size
    979:982:java.util.Iterator iterator() -> iterator
    991:991:java.lang.String toString() -> toString
    893:893:java.lang.String access$800(com.ibm.icu.text.AlphabeticIndex$Bucket) -> a
    893:893:com.ibm.icu.text.AlphabeticIndex$Bucket access$900(com.ibm.icu.text.AlphabeticIndex$Bucket) -> b
    893:893:java.util.List access$1000(com.ibm.icu.text.AlphabeticIndex$Bucket) -> c
    893:893:java.util.List access$1002(com.ibm.icu.text.AlphabeticIndex$Bucket,java.util.List) -> a
    893:893:void <init>(java.lang.String,java.lang.String,com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType,byte) -> <init>
    893:893:com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType access$1200(com.ibm.icu.text.AlphabeticIndex$Bucket) -> d
    893:893:com.ibm.icu.text.AlphabeticIndex$Bucket access$902(com.ibm.icu.text.AlphabeticIndex$Bucket,com.ibm.icu.text.AlphabeticIndex$Bucket) -> a
    893:893:int access$1402(com.ibm.icu.text.AlphabeticIndex$Bucket,int) -> a
    893:893:int access$1400(com.ibm.icu.text.AlphabeticIndex$Bucket) -> e
com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType -> com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType:
    com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType NORMAL -> NORMAL
    com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType UNDERFLOW -> UNDERFLOW
    com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType INFLOW -> INFLOW
    com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType OVERFLOW -> OVERFLOW
    com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType[] $VALUES -> a
    906:906:com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType[] values() -> values
    906:906:com.ibm.icu.text.AlphabeticIndex$Bucket$LabelType valueOf(java.lang.String) -> valueOf
    906:906:void <init>(java.lang.String,int) -> <init>
    906:926:void <clinit>() -> <clinit>
com.ibm.icu.text.AlphabeticIndex$BucketList -> com.ibm.icu.text.c:
    java.util.ArrayList bucketList -> a
    java.util.List immutableVisibleList -> b
    1144:1152:void <init>(java.util.ArrayList,java.util.ArrayList) -> <init>
    1155:1155:int getBucketCount() -> a
    1160:1176:int getBucketIndex(java.lang.CharSequence,com.ibm.icu.text.Collator) -> a
    1183:1183:java.util.Iterator fullIterator() -> b
    1190:1190:java.util.Iterator iterator() -> iterator
    1140:1140:int access$200(com.ibm.icu.text.AlphabeticIndex$BucketList) -> a
    1140:1140:int access$300(com.ibm.icu.text.AlphabeticIndex$BucketList,java.lang.CharSequence,com.ibm.icu.text.Collator) -> a
    1140:1140:java.util.List access$400(com.ibm.icu.text.AlphabeticIndex$BucketList) -> b
    1140:1140:java.util.Iterator access$700(com.ibm.icu.text.AlphabeticIndex$BucketList) -> c
    1140:1140:void <init>(java.util.ArrayList,java.util.ArrayList,byte) -> <init>
com.ibm.icu.text.AlphabeticIndex$ImmutableIndex -> com.ibm.icu.text.AlphabeticIndex$ImmutableIndex:
    com.ibm.icu.text.AlphabeticIndex$BucketList buckets -> a
    com.ibm.icu.text.Collator collatorPrimaryOnly -> b
    173:176:void <init>(com.ibm.icu.text.AlphabeticIndex$BucketList,com.ibm.icu.text.Collator) -> <init>
    185:185:int getBucketCount() -> getBucketCount
    197:197:int getBucketIndex(java.lang.CharSequence) -> getBucketIndex
    208:211:com.ibm.icu.text.AlphabeticIndex$Bucket getBucket(int) -> getBucket
    220:220:java.util.Iterator iterator() -> iterator
    169:169:void <init>(com.ibm.icu.text.AlphabeticIndex$BucketList,com.ibm.icu.text.Collator,byte) -> <init>
com.ibm.icu.text.AlphabeticIndex$Record -> com.ibm.icu.text.AlphabeticIndex$Record:
    java.lang.CharSequence name -> a
    java.lang.Object data -> b
    847:850:void <init>(java.lang.CharSequence,java.lang.Object) -> <init>
    859:859:java.lang.CharSequence getName() -> getName
    869:869:java.lang.Object getData() -> getData
    877:877:java.lang.String toString() -> toString
    843:843:java.lang.CharSequence access$000(com.ibm.icu.text.AlphabeticIndex$Record) -> a
    843:843:void <init>(java.lang.CharSequence,java.lang.Object,byte) -> <init>
com.ibm.icu.text.AnyTransliterator -> com.ibm.icu.text.d:
    java.util.concurrent.ConcurrentHashMap cache -> a
    java.lang.String target -> b
    int targetScript -> c
    com.ibm.icu.text.Transliterator widthFix -> d
    78:119:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    71:144:void <init>(java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    71:161:void <init>(java.lang.String,com.ibm.icu.text.UnicodeFilter,java.lang.String,int,java.util.concurrent.ConcurrentHashMap) -> <init>
    172:214:com.ibm.icu.text.Transliterator getTransliterator(int) -> a
    222:222:boolean isWide(int) -> b
    232:274:void register() -> a
    282:286:int scriptNameToCode(java.lang.String) -> a
    404:408:com.ibm.icu.text.Transliterator safeClone() -> b
    416:422:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
com.ibm.icu.text.AnyTransliterator$ScriptRunIterator -> com.ibm.icu.text.e:
    com.ibm.icu.text.Replaceable text -> d
    int textStart -> e
    int textLimit -> f
    int scriptCode -> a
    int start -> b
    int limit -> c
    333:338:void <init>(com.ibm.icu.text.Replaceable,int,int) -> <init>
    350:387:boolean next() -> a
    395:397:void adjustLimit(int) -> a
    2085:2112:void com.ibm.icu.text.BidiLine.setTrailingWSStart(com.ibm.icu.text.Bidi):85:112 -> a
    2117:2234:com.ibm.icu.text.Bidi com.ibm.icu.text.BidiLine.setLine(com.ibm.icu.text.Bidi,int,int):117:234 -> a
    2240:2243:byte com.ibm.icu.text.BidiLine.getLevelAt(com.ibm.icu.text.Bidi,int):240:243 -> a
    2249:2273:byte[] com.ibm.icu.text.BidiLine.getLevels(com.ibm.icu.text.Bidi):249:273 -> b
    2281:2299:com.ibm.icu.text.BidiRun com.ibm.icu.text.BidiLine.getLogicalRun(com.ibm.icu.text.Bidi,int):281:299 -> b
    2304:2315:com.ibm.icu.text.BidiRun com.ibm.icu.text.BidiLine.getVisualRun(com.ibm.icu.text.Bidi,int):304:315 -> c
    2321:2326:void com.ibm.icu.text.BidiLine.getSingleRun(com.ibm.icu.text.Bidi,byte):321:326 -> a
    2364:2443:void com.ibm.icu.text.BidiLine.reorderLine(com.ibm.icu.text.Bidi,byte,byte):364:443 -> a
    2448:2461:int com.ibm.icu.text.BidiLine.getRunFromLogicalIndex(com.ibm.icu.text.Bidi,int):448:461 -> d
    2481:2626:void com.ibm.icu.text.BidiLine.getRuns(com.ibm.icu.text.Bidi):481:626 -> c
    2633:2665:int[] com.ibm.icu.text.BidiLine.prepareReorder(byte[],byte[],byte[]):633:665 -> a
    2670:2734:int[] com.ibm.icu.text.BidiLine.reorderLogical(byte[]):670:734 -> a
    2739:2802:int[] com.ibm.icu.text.BidiLine.reorderVisual(byte[]):739:802 -> b
    2807:2905:int com.ibm.icu.text.BidiLine.getVisualIndex(com.ibm.icu.text.Bidi,int):807:905 -> e
    2913:3011:int com.ibm.icu.text.BidiLine.getLogicalIndex(com.ibm.icu.text.Bidi,int):913:1011 -> f
    3018:3103:int[] com.ibm.icu.text.BidiLine.getLogicalMap(com.ibm.icu.text.Bidi):1018:1103 -> d
    3109:3207:int[] com.ibm.icu.text.BidiLine.getVisualMap(com.ibm.icu.text.Bidi):1109:1207 -> e
    3212:3237:int[] com.ibm.icu.text.BidiLine.invertMap(int[]):1212:1237 -> a
    4025:4025:boolean com.ibm.icu.text.BidiWriter.IsCombining(int):25:25 -> b
    4042:4088:java.lang.String com.ibm.icu.text.BidiWriter.doWriteForward(java.lang.String,int):42:88 -> b
    4096:4096:java.lang.String com.ibm.icu.text.BidiWriter.doWriteForward(char[],int,int,int):96:96 -> b
    4118:4228:java.lang.String com.ibm.icu.text.BidiWriter.writeReverse(java.lang.String,int):118:228 -> a
    4233:4233:java.lang.String com.ibm.icu.text.BidiWriter.doWriteReverse(char[],int,int,int):233:233 -> a
    4240:4428:java.lang.String com.ibm.icu.text.BidiWriter.writeReordered(com.ibm.icu.text.Bidi,int):240:428 -> g
    4618:4631:boolean com.ibm.icu.text.Collator$ASCII.equalIgnoreCase(java.lang.CharSequence,java.lang.CharSequence):618:631 -> a
    5045:5076:com.ibm.icu.text.DictionaryMatcher com.ibm.icu.text.DictionaryData.loadDictionaryFor(java.lang.String):45:76 -> a
com.ibm.icu.text.ArabicShaping -> com.ibm.icu.text.ArabicShaping:
    int options -> a
    boolean isLogical -> b
    boolean spacesRelativeToTextBeginEnd -> c
    char tailChar -> d
    int SEEN_TWOCELL_NEAR -> SEEN_TWOCELL_NEAR
    int SEEN_MASK -> SEEN_MASK
    int YEHHAMZA_TWOCELL_NEAR -> YEHHAMZA_TWOCELL_NEAR
    int YEHHAMZA_MASK -> YEHHAMZA_MASK
    int TASHKEEL_BEGIN -> TASHKEEL_BEGIN
    int TASHKEEL_END -> TASHKEEL_END
    int TASHKEEL_RESIZE -> TASHKEEL_RESIZE
    int TASHKEEL_REPLACE_BY_TATWEEL -> TASHKEEL_REPLACE_BY_TATWEEL
    int TASHKEEL_MASK -> TASHKEEL_MASK
    int SPACES_RELATIVE_TO_TEXT_BEGIN_END -> SPACES_RELATIVE_TO_TEXT_BEGIN_END
    int SPACES_RELATIVE_TO_TEXT_MASK -> SPACES_RELATIVE_TO_TEXT_MASK
    int SHAPE_TAIL_NEW_UNICODE -> SHAPE_TAIL_NEW_UNICODE
    int SHAPE_TAIL_TYPE_MASK -> SHAPE_TAIL_TYPE_MASK
    int LENGTH_GROW_SHRINK -> LENGTH_GROW_SHRINK
    int LAMALEF_RESIZE -> LAMALEF_RESIZE
    int LENGTH_FIXED_SPACES_NEAR -> LENGTH_FIXED_SPACES_NEAR
    int LAMALEF_NEAR -> LAMALEF_NEAR
    int LENGTH_FIXED_SPACES_AT_END -> LENGTH_FIXED_SPACES_AT_END
    int LAMALEF_END -> LAMALEF_END
    int LENGTH_FIXED_SPACES_AT_BEGINNING -> LENGTH_FIXED_SPACES_AT_BEGINNING
    int LAMALEF_BEGIN -> LAMALEF_BEGIN
    int LAMALEF_AUTO -> LAMALEF_AUTO
    int LENGTH_MASK -> LENGTH_MASK
    int LAMALEF_MASK -> LAMALEF_MASK
    int TEXT_DIRECTION_LOGICAL -> TEXT_DIRECTION_LOGICAL
    int TEXT_DIRECTION_VISUAL_RTL -> TEXT_DIRECTION_VISUAL_RTL
    int TEXT_DIRECTION_VISUAL_LTR -> TEXT_DIRECTION_VISUAL_LTR
    int TEXT_DIRECTION_MASK -> TEXT_DIRECTION_MASK
    int LETTERS_NOOP -> LETTERS_NOOP
    int LETTERS_SHAPE -> LETTERS_SHAPE
    int LETTERS_UNSHAPE -> LETTERS_UNSHAPE
    int LETTERS_SHAPE_TASHKEEL_ISOLATED -> LETTERS_SHAPE_TASHKEEL_ISOLATED
    int LETTERS_MASK -> LETTERS_MASK
    int DIGITS_NOOP -> DIGITS_NOOP
    int DIGITS_EN2AN -> DIGITS_EN2AN
    int DIGITS_AN2EN -> DIGITS_AN2EN
    int DIGITS_EN2AN_INIT_LR -> DIGITS_EN2AN_INIT_LR
    int DIGITS_EN2AN_INIT_AL -> DIGITS_EN2AN_INIT_AL
    int DIGITS_MASK -> DIGITS_MASK
    int DIGIT_TYPE_AN -> DIGIT_TYPE_AN
    int DIGIT_TYPE_AN_EXTENDED -> DIGIT_TYPE_AN_EXTENDED
    int DIGIT_TYPE_MASK -> DIGIT_TYPE_MASK
    int[] irrelevantPos -> e
    int[] tailFamilyIsolatedFinal -> f
    int[] tashkeelMedial -> g
    char[] yehHamzaToYeh -> h
    char[] convertNormalizedLamAlef -> i
    int[] araLink -> j
    int[] presLink -> k
    int[] convertFEto06 -> l
    int[][][] shapeTable -> m
    88:130:int shape(char[],int,int,char[],int,int) -> shape
    144:148:void shape(char[],int,int) -> shape
    159:168:java.lang.String shape(java.lang.String) -> shape
    187:201:void <init>(int) -> <init>
    584:584:boolean equals(java.lang.Object) -> equals
    594:594:int hashCode() -> hashCode
    601:647:java.lang.String toString() -> toString
    878:900:void shapeToArabicDigitsWithContext(char[],int,int,char,boolean) -> a
    912:917:void invertBuffer(char[],int,int) -> a
    928:933:char changeLamAlef(char) -> a
    943:956:int specialChar(char) -> b
    967:976:int getLink(char) -> c
    988:993:int countSpacesLeft(char[],int,int) -> b
    1000:1005:int countSpacesRight(char[],int,int) -> c
    1013:1013:boolean isTashkeelChar(char) -> d
    1023:1026:int isSeenTailFamilyChar(char) -> e
    1036:1039:int isSeenFamilyChar(char) -> f
    1050:1053:boolean isTailChar(char) -> g
    1063:1063:boolean isAlefMaksouraChar(char) -> h
    1072:1075:boolean isYehHamzaChar(char) -> i
    1085:1085:boolean isTashkeelCharFE(char) -> j
    1096:1102:int isTashkeelOnTatweelChar(char) -> k
    1114:1119:int isIsolatedTashkeelChar(char) -> l
    1128:1128:boolean isAlefChar(char) -> m
    1136:1136:boolean isLamAlefChar(char) -> n
    1140:1140:boolean isNormalizedLamAlefChar(char) -> o
    1152:1184:int calculateSize(char[],int,int) -> d
    1193:1201:int countSpaceSub(char[],int,char) -> a
    1209:1220:void shiftArray(char[],int,int,char) -> a
    1228:1238:int flipArray(char[],int,int,int) -> a
    1252:1261:int handleTashkeelWithTatweel(char[],int) -> a
    1286:1389:int handleGeneratedSpaces(char[],int,int) -> e
    1403:1418:boolean expandCompositCharAtBegin(char[],int,int,int) -> b
    1433:1448:boolean expandCompositCharAtEnd(char[],int,int,int) -> c
    1461:1499:boolean expandCompositCharAtNear(char[],int,int,int,int,int) -> a
    1519:1598:int expandCompositChar(char[],int,int,int,int) -> a
    1608:1618:int normalize(char[],int,int) -> f
    1631:1656:int deshapeNormalize(char[],int,int) -> g
    1670:1809:int shapeUnicode$70b68cf0(char[],int,int,int) -> d
    1822:1832:int deShapeUnicode$7f81beb9(char[],int,int) -> h
    1842:1959:int internalShape(char[],int,int,char[],int,int) -> a
    663:861:void <clinit>() -> <clinit>
com.ibm.icu.text.ArabicShapingException -> com.ibm.icu.text.ArabicShapingException:
    long serialVersionUID -> serialVersionUID
    24:25:void <init>(java.lang.String) -> <init>
com.ibm.icu.text.Bidi -> com.ibm.icu.text.Bidi:
    byte LEVEL_DEFAULT_LTR -> LEVEL_DEFAULT_LTR
    byte LEVEL_DEFAULT_RTL -> LEVEL_DEFAULT_RTL
    byte MAX_EXPLICIT_LEVEL -> MAX_EXPLICIT_LEVEL
    byte LEVEL_OVERRIDE -> LEVEL_OVERRIDE
    int MAP_NOWHERE -> MAP_NOWHERE
    byte LTR -> LTR
    byte RTL -> RTL
    byte MIXED -> MIXED
    byte NEUTRAL -> NEUTRAL
    short KEEP_BASE_COMBINING -> KEEP_BASE_COMBINING
    short DO_MIRRORING -> DO_MIRRORING
    short INSERT_LRM_FOR_NUMERIC -> INSERT_LRM_FOR_NUMERIC
    short REMOVE_BIDI_CONTROLS -> REMOVE_BIDI_CONTROLS
    short OUTPUT_REVERSE -> OUTPUT_REVERSE
    short REORDER_DEFAULT -> REORDER_DEFAULT
    short REORDER_NUMBERS_SPECIAL -> REORDER_NUMBERS_SPECIAL
    short REORDER_GROUP_NUMBERS_WITH_R -> REORDER_GROUP_NUMBERS_WITH_R
    short REORDER_RUNS_ONLY -> REORDER_RUNS_ONLY
    short REORDER_INVERSE_NUMBERS_AS_L -> REORDER_INVERSE_NUMBERS_AS_L
    short REORDER_INVERSE_LIKE_DIRECT -> REORDER_INVERSE_LIKE_DIRECT
    short REORDER_INVERSE_FOR_NUMBERS_SPECIAL -> REORDER_INVERSE_FOR_NUMBERS_SPECIAL
    int OPTION_DEFAULT -> OPTION_DEFAULT
    int OPTION_INSERT_MARKS -> OPTION_INSERT_MARKS
    int OPTION_REMOVE_CONTROLS -> OPTION_REMOVE_CONTROLS
    int OPTION_STREAMING -> OPTION_STREAMING
    int CLASS_DEFAULT -> CLASS_DEFAULT
    byte FOUND_L -> w
    byte FOUND_R -> x
    com.ibm.icu.text.Bidi paraBidi -> a
    com.ibm.icu.impl.UBiDiProps bdp -> y
    char[] text -> b
    int originalLength -> c
    int length -> d
    int resultLength -> e
    boolean mayAllocateText -> z
    boolean mayAllocateRuns -> A
    byte[] dirPropsMemory -> f
    byte[] levelsMemory -> g
    byte[] dirProps -> h
    byte[] levels -> i
    boolean isInverse -> B
    int reorderingMode -> j
    int reorderingOptions -> k
    boolean orderParagraphsLTR -> C
    byte paraLevel -> l
    byte defaultParaLevel -> D
    java.lang.String prologue -> E
    java.lang.String epilogue -> F
    com.ibm.icu.text.Bidi$ImpTabPair impTabPair -> G
    byte direction -> m
    int flags -> H
    int lastArabicPos -> I
    int trailingWSStart -> n
    int paraCount -> o
    int[] paras_limit -> J
    byte[] paras_level -> K
    int runCount -> p
    com.ibm.icu.text.BidiRun[] runsMemory -> q
    com.ibm.icu.text.BidiRun[] runs -> r
    com.ibm.icu.text.BidiRun[] simpleRuns -> s
    com.ibm.icu.text.Bidi$Isolate[] isolates -> L
    int isolateCount -> M
    int[] logicalToVisualRunsMap -> N
    boolean isGoodLogicalToVisualRunsMap -> O
    com.ibm.icu.text.BidiClassifier customClassifier -> P
    com.ibm.icu.text.Bidi$InsertPoints insertPoints -> t
    int controlCount -> u
    int DirPropFlagMultiRuns -> Q
    int[] DirPropFlagLR -> R
    int[] DirPropFlagE -> S
    int[] DirPropFlagO -> T
    int MASK_LTR -> U
    int MASK_RTL -> V
    int MASK_R_AL -> W
    int MASK_EXPLICIT -> X
    int MASK_BN_EXPLICIT -> Y
    int MASK_ISO -> Z
    int MASK_B_S -> aa
    int MASK_WS -> v
    int MASK_POSSIBLE_N -> ab
    int MASK_EMBEDDING -> ac
    short[] groupProp -> ad
    short[][] impTabProps -> ae
    byte[][] impTabL_DEFAULT -> af
    byte[][] impTabR_DEFAULT -> ag
    short[] impAct0 -> ah
    com.ibm.icu.text.Bidi$ImpTabPair impTab_DEFAULT -> ai
    byte[][] impTabL_NUMBERS_SPECIAL -> aj
    com.ibm.icu.text.Bidi$ImpTabPair impTab_NUMBERS_SPECIAL -> ak
    byte[][] impTabL_GROUP_NUMBERS_WITH_R -> al
    byte[][] impTabR_GROUP_NUMBERS_WITH_R -> am
    com.ibm.icu.text.Bidi$ImpTabPair impTab_GROUP_NUMBERS_WITH_R -> an
    byte[][] impTabL_INVERSE_NUMBERS_AS_L -> ao
    byte[][] impTabR_INVERSE_NUMBERS_AS_L -> ap
    com.ibm.icu.text.Bidi$ImpTabPair impTab_INVERSE_NUMBERS_AS_L -> aq
    byte[][] impTabR_INVERSE_LIKE_DIRECT -> ar
    short[] impAct1 -> as
    com.ibm.icu.text.Bidi$ImpTabPair impTab_INVERSE_LIKE_DIRECT -> at
    byte[][] impTabL_INVERSE_LIKE_DIRECT_WITH_MARKS -> au
    byte[][] impTabR_INVERSE_LIKE_DIRECT_WITH_MARKS -> av
    short[] impAct2 -> aw
    short[] impAct3 -> ax
    com.ibm.icu.text.Bidi$ImpTabPair impTab_INVERSE_LIKE_DIRECT_WITH_MARKS -> ay
    com.ibm.icu.text.Bidi$ImpTabPair impTab_INVERSE_FOR_NUMBERS_SPECIAL -> az
    byte[][] impTabL_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS -> aA
    com.ibm.icu.text.Bidi$ImpTabPair impTab_INVERSE_FOR_NUMBERS_SPECIAL_WITH_MARKS -> aB
    int DIRECTION_LEFT_TO_RIGHT -> DIRECTION_LEFT_TO_RIGHT
    int DIRECTION_RIGHT_TO_LEFT -> DIRECTION_RIGHT_TO_LEFT
    int DIRECTION_DEFAULT_LEFT_TO_RIGHT -> DIRECTION_DEFAULT_LEFT_TO_RIGHT
    int DIRECTION_DEFAULT_RIGHT_TO_LEFT -> DIRECTION_DEFAULT_RIGHT_TO_LEFT
    1133:1133:int DirPropFlag(byte) -> a
    1137:1137:boolean testDirPropFlagAt(int,int) -> a
    1147:1147:int DirPropFlagLR(byte) -> b
    1148:1148:int DirPropFlagE(byte) -> c
    1149:1149:int DirPropFlagO(byte) -> d
    1150:1150:byte DirFromStrong(byte) -> e
    1151:1151:byte NoOverride(byte) -> f
    1188:1188:byte GetLRFromLevel(byte) -> g
    1193:1193:boolean IsDefaultLevel(byte) -> h
    1200:1200:boolean IsBidiControlChar(int) -> a
    1206:1209:void verifyValidPara() -> a
    1213:1222:void verifyValidParaOrLine() -> b
    1226:1230:void verifyRange(int,int,int) -> a
    1247:1248:void <init>() -> <init>
    1047:1323:void <init>(int,int) -> <init>
    1335:1355:java.lang.Object getMemory(java.lang.String,java.lang.Object,java.lang.Class,boolean,int) -> a
    1363:1365:void getDirPropsMemory(boolean,int) -> a
    1369:1370:void getDirPropsMemory(int) -> b
    1374:1376:void getLevelsMemory(boolean,int) -> b
    1380:1381:void getLevelsMemory(int) -> c
    1385:1387:void getRunsMemory(boolean,int) -> c
    1391:1392:void getRunsMemory(int) -> d
    1397:1398:void getInitialDirPropsMemory(int) -> f
    1402:1403:void getInitialLevelsMemory(int) -> g
    1407:1408:void getInitialRunsMemory(int) -> h
    1457:1460:void setInverse(boolean) -> setInverse
    1480:1480:boolean isInverse() -> isInverse
    1646:1652:void setReorderingMode(int) -> setReorderingMode
    1663:1663:int getReorderingMode() -> getReorderingMode
    1683:1688:void setReorderingOptions(int) -> setReorderingOptions
    1699:1699:int getReorderingOptions() -> getReorderingOptions
    1719:1740:byte getBaseDirection(java.lang.CharSequence) -> getBaseDirection
    1751:1766:byte firstL_R_AL() -> c
    1775:1789:void checkParaCount() -> d
    1806:2013:void getDirProps() -> e
    2018:2026:byte GetParaLevelAt(int) -> e
    2046:2056:void bracketInit(com.ibm.icu.text.Bidi$BracketData) -> a
    2060:2065:void bracketProcessB(com.ibm.icu.text.Bidi$BracketData,byte) -> a
    2070:2079:void bracketProcessBoundary(com.ibm.icu.text.Bidi$BracketData,int,byte,byte) -> a
    2083:2095:void bracketProcessLRI_RLI(com.ibm.icu.text.Bidi$BracketData,byte) -> b
    2100:2103:void bracketProcessPDI(com.ibm.icu.text.Bidi$BracketData) -> b
    2107:2129:void bracketAddOpening(com.ibm.icu.text.Bidi$BracketData,char,int) -> a
    2134:2155:void fixN0c(com.ibm.icu.text.Bidi$BracketData,int,int,byte) -> a
    2159:2231:byte bracketProcessClosing(com.ibm.icu.text.Bidi$BracketData,int,int) -> a
    2236:2356:void bracketProcessChar(com.ibm.icu.text.Bidi$BracketData,int) -> a
    2363:2370:byte directionFromFlags() -> f
    2426:2674:byte resolveExplicitLevels() -> g
    2690:2727:byte checkExplicitLevels() -> h
    2749:2749:short GetStateProps(short) -> a
    2752:2752:short GetActionProps(short) -> b
    2851:2851:short GetState(byte) -> i
    2852:2852:short GetAction(byte) -> j
    3088:3104:void addPoint(int,int) -> b
    3109:3119:void setLevelsOutsideIsolates(int,int,byte) -> a
    3139:3328:void processPropertySeq(com.ibm.icu.text.Bidi$LevState,short,int,int) -> a
    3335:3349:byte lastL_R_AL() -> i
    3357:3374:byte firstL_R_AL_EN_AN() -> j
    3380:3533:void resolveImplicitLevels(int,int,short,short) -> a
    3546:3575:void adjustWSLevels() -> k
    3646:3648:void setContext(java.lang.String,java.lang.String) -> setContext
    3651:3654:void setParaSuccess() -> l
    3657:3657:int Bidi_Min(int,int) -> c
    3661:3661:int Bidi_Abs(int) -> i
    3676:3815:void setParaRunsOnly(char[],byte) -> a
    3895:3900:void setPara(java.lang.String,byte,byte[]) -> setPara
    3980:4235:void setPara(char[],byte,byte[]) -> setPara
    4280:4318:void setPara(java.text.AttributedCharacterIterator) -> setPara
    4339:4340:void orderParagraphsLTR(boolean) -> orderParagraphsLTR
    4352:4352:boolean isOrderParagraphsLTR() -> isOrderParagraphsLTR
    4373:4374:byte getDirection() -> getDirection
    4392:4393:java.lang.String getTextAsString() -> getTextAsString
    4411:4412:char[] getText() -> getText
    4427:4428:int getLength() -> getLength
    4472:4473:int getProcessedLength() -> getProcessedLength
    4506:4507:int getResultLength() -> getResultLength
    4531:4532:byte getParaLevel() -> getParaLevel
    4546:4547:int countParagraphs() -> countParagraphs
    4574:4588:com.ibm.icu.text.BidiRun getParagraphByIndex(int) -> getParagraphByIndex
    4617:4623:com.ibm.icu.text.BidiRun getParagraph(int) -> getParagraph
    4645:4651:int getParagraphIndex(int) -> getParagraphIndex
    4664:4665:void setCustomClassifier(com.ibm.icu.text.BidiClassifier) -> setCustomClassifier
    4677:4677:com.ibm.icu.text.BidiClassifier getCustomClassifier() -> getCustomClassifier
    4697:4703:int getCustomizedClass(int) -> getCustomizedClass
    4747:4754:com.ibm.icu.text.Bidi setLine(int,int) -> setLine
    4774:4776:byte getLevelAt(int) -> getLevelAt
    4794:4798:byte[] getLevels() -> getLevels
    4828:4830:com.ibm.icu.text.BidiRun getLogicalRun(int) -> getLogicalRun
    4849:4851:int countRuns() -> countRuns
    4920:4923:com.ibm.icu.text.BidiRun getVisualRun(int) -> getVisualRun
    4970:4972:int getVisualIndex(int) -> getVisualIndex
    5015:5027:int getLogicalIndex(int) -> getLogicalIndex
    5072:5076:int[] getLogicalMap() -> getLogicalMap
    5114:5118:int[] getVisualMap() -> getVisualMap
    5141:5141:int[] reorderLogical(byte[]) -> reorderLogical
    5164:5164:int[] reorderVisual(byte[]) -> reorderVisual
    5203:5206:int[] invertMap(int[]) -> invertMap
    5260:5261:void <init>(java.lang.String,int) -> <init>
    5291:5293:void <init>(java.text.AttributedCharacterIterator) -> <init>
    5336:5379:void <init>(char[],int,byte[],int,int,int) -> <init>
    5400:5400:com.ibm.icu.text.Bidi createLineBidi(int,int) -> createLineBidi
    5416:5416:boolean isMixed() -> isMixed
    5432:5432:boolean isLeftToRight() -> isLeftToRight
    5448:5448:boolean isRightToLeft() -> isRightToLeft
    5463:5463:boolean baseIsLeftToRight() -> baseIsLeftToRight
    5478:5478:int getBaseLevel() -> getBaseLevel
    5493:5493:int getRunCount() -> getRunCount
    5501:5519:void getLogicalToVisualRunsMap() -> m
    5536:5540:int getRunLevel(int) -> getRunLevel
    5559:5563:int getRunStart(int) -> getRunStart
    5583:5590:int getRunLimit(int) -> getRunLimit
    5612:5623:boolean requiresBidi(char[],int,int) -> requiresBidi
    5649:5657:void reorderVisually(byte[],int,java.lang.Object[],int,int) -> reorderVisually
    5719:5724:java.lang.String writeReordered(int) -> writeReordered
    5767:5775:java.lang.String writeReverse(java.lang.String,int) -> writeReverse
    1004:3064:void <clinit>() -> <clinit>
com.ibm.icu.text.Bidi$BracketData -> com.ibm.icu.text.f:
    com.ibm.icu.text.Bidi$Opening[] openings -> a
    int isoRunLast -> b
    com.ibm.icu.text.Bidi$IsoRun[] isoRuns -> c
    boolean isNumbersSpecial -> d
    546:551:void <init>() -> <init>
com.ibm.icu.text.Bidi$ImpTabPair -> com.ibm.icu.text.g:
    byte[][][] imptab -> a
    short[][] impact -> b
    2859:2862:void <init>(byte[][],byte[][],short[],short[]) -> <init>
com.ibm.icu.text.Bidi$InsertPoints -> com.ibm.icu.text.h:
    int size -> a
    int confirmed -> b
    com.ibm.icu.text.Bidi$Point[] points -> c
    521:524:void <init>() -> <init>
com.ibm.icu.text.Bidi$IsoRun -> com.ibm.icu.text.i:
    int contextPos -> a
    short start -> b
    short limit -> c
    byte level -> d
    byte lastStrong -> e
    byte lastBase -> f
    byte contextDir -> g
    536:536:void <init>() -> <init>
com.ibm.icu.text.Bidi$Isolate -> com.ibm.icu.text.j:
    int startON -> a
    int start1 -> b
    short stateImp -> c
    short state -> d
    555:555:void <init>() -> <init>
com.ibm.icu.text.Bidi$LevState -> com.ibm.icu.text.k:
    byte[][] impTab -> a
    short[] impAct -> b
    int startON -> c
    int startL2EN -> d
    int lastStrongRTL -> e
    int runStart -> f
    short state -> g
    byte runLevel -> h
    3068:3068:void <init>() -> <init>
    3068:3068:void <init>(byte) -> <init>
com.ibm.icu.text.Bidi$Opening -> com.ibm.icu.text.l:
    int position -> a
    int match -> b
    int contextPos -> c
    short flags -> d
    byte contextDir -> e
    527:527:void <init>() -> <init>
com.ibm.icu.text.Bidi$Point -> com.ibm.icu.text.m:
    int pos -> a
    int flag -> b
    516:516:void <init>() -> <init>
com.ibm.icu.text.BidiClassifier -> com.ibm.icu.text.BidiClassifier:
    java.lang.Object context -> context
    56:58:void <init>(java.lang.Object) -> <init>
    69:70:void setContext(java.lang.Object) -> setContext
    77:77:java.lang.Object getContext() -> getContext
    94:94:int classify(int) -> classify
com.ibm.icu.text.BidiRun -> com.ibm.icu.text.BidiRun:
    int start -> a
    int limit -> b
    int insertRemove -> c
    byte level -> d
    54:55:void <init>() -> <init>
    61:65:void <init>(int,int,byte) -> <init>
    72:76:void copyFrom(com.ibm.icu.text.BidiRun) -> a
    84:84:int getStart() -> getStart
    93:93:int getLimit() -> getLimit
    102:102:int getLength() -> getLength
    111:111:byte getEmbeddingLevel() -> getEmbeddingLevel
    122:122:boolean isOddRun() -> isOddRun
    133:133:boolean isEvenRun() -> isEvenRun
    142:142:byte getDirection() -> getDirection
    151:151:java.lang.String toString() -> toString
com.ibm.icu.text.BreakIterator -> com.ibm.icu.text.BreakIterator:
    boolean DEBUG -> a
    int DONE -> DONE
    int WORD_NONE -> WORD_NONE
    int WORD_NONE_LIMIT -> WORD_NONE_LIMIT
    int WORD_NUMBER -> WORD_NUMBER
    int WORD_NUMBER_LIMIT -> WORD_NUMBER_LIMIT
    int WORD_LETTER -> WORD_LETTER
    int WORD_LETTER_LIMIT -> WORD_LETTER_LIMIT
    int WORD_KANA -> WORD_KANA
    int WORD_KANA_LIMIT -> WORD_KANA_LIMIT
    int WORD_IDEO -> WORD_IDEO
    int WORD_IDEO_LIMIT -> WORD_IDEO_LIMIT
    int KIND_CHARACTER -> KIND_CHARACTER
    int KIND_WORD -> KIND_WORD
    int KIND_LINE -> KIND_LINE
    int KIND_SENTENCE -> KIND_SENTENCE
    int KIND_TITLE -> KIND_TITLE
    java.lang.ref.SoftReference[] iterCache -> b
    com.ibm.icu.text.BreakIterator$BreakIteratorServiceShim shim -> c
    com.ibm.icu.util.ULocale validLocale -> d
    com.ibm.icu.util.ULocale actualLocale -> e
    223:224:void <init>() -> <init>
    235:239:java.lang.Object clone() -> clone
    int first() -> first
    int last() -> last
    int next(int) -> next
    int next() -> next
    int previous() -> previous
    int following(int) -> following
    348:351:int preceding(int) -> preceding
    367:371:boolean isBoundary(int) -> isBoundary
    int current() -> current
    459:459:int getRuleStatus() -> getRuleStatus
    482:485:int getRuleStatusVec(int[]) -> getRuleStatusVec
    java.text.CharacterIterator getText() -> getText
    512:513:void setText(java.lang.String) -> setText
    void setText(java.text.CharacterIterator) -> setText
    570:570:com.ibm.icu.text.BreakIterator getWordInstance() -> getWordInstance
    583:583:com.ibm.icu.text.BreakIterator getWordInstance(java.util.Locale) -> getWordInstance
    596:596:com.ibm.icu.text.BreakIterator getWordInstance(com.ibm.icu.util.ULocale) -> getWordInstance
    609:609:com.ibm.icu.text.BreakIterator getLineInstance() -> getLineInstance
    623:623:com.ibm.icu.text.BreakIterator getLineInstance(java.util.Locale) -> getLineInstance
    637:637:com.ibm.icu.text.BreakIterator getLineInstance(com.ibm.icu.util.ULocale) -> getLineInstance
    650:650:com.ibm.icu.text.BreakIterator getCharacterInstance() -> getCharacterInstance
    664:664:com.ibm.icu.text.BreakIterator getCharacterInstance(java.util.Locale) -> getCharacterInstance
    678:678:com.ibm.icu.text.BreakIterator getCharacterInstance(com.ibm.icu.util.ULocale) -> getCharacterInstance
    690:690:com.ibm.icu.text.BreakIterator getSentenceInstance() -> getSentenceInstance
    702:702:com.ibm.icu.text.BreakIterator getSentenceInstance(java.util.Locale) -> getSentenceInstance
    714:714:com.ibm.icu.text.BreakIterator getSentenceInstance(com.ibm.icu.util.ULocale) -> getSentenceInstance
    728:728:com.ibm.icu.text.BreakIterator getTitleInstance() -> getTitleInstance
    743:743:com.ibm.icu.text.BreakIterator getTitleInstance(java.util.Locale) -> getTitleInstance
    758:758:com.ibm.icu.text.BreakIterator getTitleInstance(com.ibm.icu.util.ULocale) -> getTitleInstance
    777:777:java.lang.Object registerInstance(com.ibm.icu.text.BreakIterator,java.util.Locale,int) -> registerInstance
    798:806:java.lang.Object registerInstance(com.ibm.icu.text.BreakIterator,com.ibm.icu.util.ULocale,int) -> registerInstance
    818:840:boolean unregister(java.lang.Object) -> unregister
    854:876:com.ibm.icu.text.BreakIterator getBreakInstance(com.ibm.icu.util.ULocale,int) -> getBreakInstance
    889:889:java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    902:902:com.ibm.icu.util.ULocale[] getAvailableULocales() -> getAvailableULocales
    938:956:com.ibm.icu.text.BreakIterator$BreakIteratorServiceShim getShim() -> a
    984:984:com.ibm.icu.util.ULocale getLocale(com.ibm.icu.util.ULocale$Type) -> getLocale
    1006:1015:void setLocale(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> a
    215:559:void <clinit>() -> <clinit>
com.ibm.icu.text.BreakIterator$BreakIteratorCache -> com.ibm.icu.text.n:
    com.ibm.icu.text.BreakIterator iter -> a
    com.ibm.icu.util.ULocale where -> b
    910:913:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.BreakIterator) -> <init>
    916:916:com.ibm.icu.util.ULocale getLocale() -> a
    920:920:com.ibm.icu.text.BreakIterator createBreakInstance() -> b
com.ibm.icu.text.BreakIterator$BreakIteratorServiceShim -> com.ibm.icu.text.o:
    924:924:void <init>() -> <init>
    java.lang.Object registerInstance(com.ibm.icu.text.BreakIterator,com.ibm.icu.util.ULocale,int) -> a
    boolean unregister(java.lang.Object) -> a
    java.util.Locale[] getAvailableLocales() -> a
    com.ibm.icu.util.ULocale[] getAvailableULocales() -> b
    com.ibm.icu.text.BreakIterator createBreakIterator(com.ibm.icu.util.ULocale,int) -> a
com.ibm.icu.text.BreakIteratorFactory -> com.ibm.icu.text.p:
    com.ibm.icu.impl.ICULocaleService service -> a
    java.lang.String[] KIND_NAMES -> b
    32:73:void <init>() -> <init>
    35:36:java.lang.Object registerInstance(com.ibm.icu.text.BreakIterator,com.ibm.icu.util.ULocale,int) -> a
    40:43:boolean unregister(java.lang.Object) -> a
    47:50:java.util.Locale[] getAvailableLocales() -> a
    55:58:com.ibm.icu.util.ULocale[] getAvailableULocales() -> b
    64:70:com.ibm.icu.text.BreakIterator createBreakIterator(com.ibm.icu.util.ULocale,int) -> a
    115:157:com.ibm.icu.text.BreakIterator createBreakInstance(com.ibm.icu.util.ULocale,int) -> c
    32:32:com.ibm.icu.text.BreakIterator access$000(com.ibm.icu.util.ULocale,int) -> b
    100:108:void <clinit>() -> <clinit>
com.ibm.icu.text.BreakIteratorFactory$BFService -> com.ibm.icu.text.q:
    75:85:void <init>() -> <init>
    97:97:java.lang.String validateFallbackLocale() -> validateFallbackLocale
com.ibm.icu.text.BreakIteratorFactory$BFService$1RBBreakIteratorFactory -> com.ibm.icu.text.r:
    77:77:void <init>(com.ibm.icu.text.BreakIteratorFactory$BFService) -> <init>
    79:79:java.lang.Object handleCreate(com.ibm.icu.util.ULocale,int,com.ibm.icu.impl.ICUService) -> handleCreate
com.ibm.icu.text.BreakTransliterator -> com.ibm.icu.text.s:
    com.ibm.icu.text.BreakIterator bi -> a
    java.lang.String insertion -> b
    int[] boundaries -> c
    int boundaryCount -> d
    23:30:void <init>(java.lang.String,com.ibm.icu.text.UnicodeFilter,com.ibm.icu.text.BreakIterator,java.lang.String) -> <init>
    33:34:void <init>(java.lang.String,com.ibm.icu.text.UnicodeFilter) -> <init>
    53:54:com.ibm.icu.text.BreakIterator getBreakIterator() -> b
    75:133:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    142:151:void register() -> a
    396:402:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
com.ibm.icu.text.BreakTransliterator$ReplaceableCharacterIterator -> com.ibm.icu.text.t:
    com.ibm.icu.text.Replaceable text -> a
    int begin -> b
    int end -> c
    int pos -> d
    190:207:void <init>(com.ibm.icu.text.Replaceable,int,int,int) -> <init>
    233:234:char first() -> first
    243:248:char last() -> last
    257:261:char setIndex(int) -> setIndex
    270:274:char current() -> current
    284:290:char next() -> next
    300:305:char previous() -> previous
    315:315:int getBeginIndex() -> getBeginIndex
    324:324:int getEndIndex() -> getEndIndex
    333:333:int getIndex() -> getIndex
    344:362:boolean equals(java.lang.Object) -> equals
    371:371:int hashCode() -> hashCode
    381:386:java.lang.Object clone() -> clone
com.ibm.icu.text.BurmeseBreakEngine -> com.ibm.icu.text.u:
    com.ibm.icu.text.DictionaryMatcher fDictionary -> b
    com.ibm.icu.text.UnicodeSet fBurmeseWordSet -> c
    com.ibm.icu.text.UnicodeSet fEndWordSet -> d
    com.ibm.icu.text.UnicodeSet fBeginWordSet -> e
    com.ibm.icu.text.UnicodeSet fMarkSet -> f
    62:66:void <init>() -> <init>
    71:71:boolean equals(java.lang.Object) -> equals
    75:75:int hashCode() -> hashCode
    79:83:boolean handles(int,int) -> a
    90:222:int divideUpDictionaryRange(java.text.CharacterIterator,int,int,com.ibm.icu.text.DictionaryBreakEngine$DequeI) -> a
    37:59:void <clinit>() -> <clinit>
com.ibm.icu.text.BytesDictionaryMatcher -> com.ibm.icu.text.v:
    byte[] characters -> a
    int transform -> b
    19:26:void <init>(byte[],int) -> <init>
    29:39:int transform(int) -> a
    43:81:int matches(java.text.CharacterIterator,int,int[],int[],int,int[]) -> a
com.ibm.icu.text.CanonicalIterator -> com.ibm.icu.text.CanonicalIterator:
    boolean PROGRESS -> a
    boolean SKIP_ZEROS -> b
    com.ibm.icu.text.Normalizer2 nfd -> c
    com.ibm.icu.impl.Normalizer2Impl nfcImpl -> d
    java.lang.String source -> e
    boolean done -> f
    java.lang.String[][] pieces -> g
    int[] current -> h
    java.lang.StringBuilder buffer -> i
    java.util.Set SET_WITH_NULL_STRING -> j
    50:244:void <init>(java.lang.String) -> <init>
    63:63:java.lang.String getSource() -> getSource
    71:75:void reset() -> reset
    85:106:java.lang.String next() -> next
    116:153:void setSource(java.lang.String) -> setSource
    172:204:void permute(java.lang.String,boolean,java.util.Set) -> permute
    249:283:java.lang.String[] getEquivalents(java.lang.String) -> a
    289:322:java.util.Set getEquivalents2(java.lang.String) -> b
    367:428:java.util.Set extract(int,java.lang.String,int,java.lang.StringBuffer) -> a
    228:446:void <clinit>() -> <clinit>
com.ibm.icu.text.CaseFoldTransliterator -> com.ibm.icu.text.w:
    com.ibm.icu.impl.UCaseProps csp -> a
    com.ibm.icu.text.ReplaceableContextIterator iter -> b
    java.lang.StringBuilder result -> c
    com.ibm.icu.text.SourceTargetUtility sourceTargetUtility -> d
    29:36:void register() -> a
    47:51:void <init>() -> <init>
    58:105:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    114:124:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
    107:107:void <clinit>() -> <clinit>
com.ibm.icu.text.CaseFoldTransliterator$1 -> com.ibm.icu.text.x:
    29:29:void <init>() -> <init>
    31:31:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.CaseFoldTransliterator$2 -> com.ibm.icu.text.y:
    116:116:void <init>(com.ibm.icu.text.CaseFoldTransliterator) -> <init>
    118:118:java.lang.String transform(java.lang.String) -> a
    116:116:java.lang.Object transform(java.lang.Object) -> transform
com.ibm.icu.text.CharsDictionaryMatcher -> com.ibm.icu.text.z:
    java.lang.CharSequence characters -> a
    17:19:void <init>(java.lang.CharSequence) -> <init>
    22:60:int matches(java.text.CharacterIterator,int,int[],int[],int,int[]) -> a
com.ibm.icu.text.CharsetDetector -> com.ibm.icu.text.CharsetDetector:
    byte[] fInputBytes -> a
    int fInputLen -> b
    short[] fByteStats -> g
    boolean fC1Bytes -> c
    byte[] fRawInput -> d
    int fRawLength -> e
    java.io.InputStream fInputStream -> f
    boolean fStripTags -> h
    boolean[] fEnabledRecognizers -> i
    java.util.List ALL_CS_RECOGNIZERS -> j
    55:453:void <init>() -> <init>
    75:76:com.ibm.icu.text.CharsetDetector setDeclaredEncoding(java.lang.String) -> setDeclaredEncoding
    89:92:com.ibm.icu.text.CharsetDetector setText(byte[]) -> setText
    114:132:com.ibm.icu.text.CharsetDetector setText(java.io.InputStream) -> setText
    160:166:com.ibm.icu.text.CharsetMatch detect() -> detect
    185:205:com.ibm.icu.text.CharsetMatch[] detectAll() -> detectAll
    232:245:java.io.Reader getReader(java.io.InputStream,java.lang.String) -> getReader
    267:280:java.lang.String getString(byte[],java.lang.String) -> getString
    301:305:java.lang.String[] getAllDetectableCharsets() -> getAllDetectableCharsets
    319:319:boolean inputFilterEnabled() -> inputFilterEnabled
    335:339:boolean enableInputFilter(boolean) -> enableInputFilter
    347:419:void MungeInput() -> a
    525:533:java.lang.String[] getDetectableCharsets() -> getDetectableCharsets
    553:582:com.ibm.icu.text.CharsetDetector setDetectableCharset(java.lang.String,boolean) -> setDetectableCharset
    476:512:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetDetector$CSRecognizerInfo -> com.ibm.icu.text.A:
    com.ibm.icu.text.CharsetRecognizer recognizer -> a
    boolean isDefaultEnabled -> b
    464:467:void <init>(com.ibm.icu.text.CharsetRecognizer,boolean) -> <init>
com.ibm.icu.text.CharsetMatch -> com.ibm.icu.text.CharsetMatch:
    int fConfidence -> a
    byte[] fRawInput -> b
    int fRawLength -> c
    java.io.InputStream fInputStream -> d
    java.lang.String fCharsetName -> e
    java.lang.String fLang -> f
    46:56:java.io.Reader getReader() -> getReader
    69:69:java.lang.String getString() -> getString
    88:117:java.lang.String getString(int) -> getString
    132:132:int getConfidence() -> getConfidence
    151:151:java.lang.String getName() -> getName
    162:162:java.lang.String getLanguage() -> getLanguage
    179:185:int compareTo(com.ibm.icu.text.CharsetMatch) -> compareTo
    191:237:void <init>(com.ibm.icu.text.CharsetDetector,com.ibm.icu.text.CharsetRecognizer,int) -> <init>
    211:237:void <init>(com.ibm.icu.text.CharsetDetector,int,java.lang.String,java.lang.String) -> <init>
    29:29:int compareTo(java.lang.Object) -> compareTo
com.ibm.icu.text.CharsetRecog_2022 -> com.ibm.icu.text.B:
    17:139:void <init>() -> <init>
    35:92:int match(byte[],int,byte[][]) -> a
com.ibm.icu.text.CharsetRecog_2022$CharsetRecog_2022CN -> com.ibm.icu.text.C:
    byte[][] escapeSequences -> a
    139:140:void <init>() -> <init>
    155:155:java.lang.String getName() -> a
    159:160:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
com.ibm.icu.text.CharsetRecog_2022$CharsetRecog_2022JP -> com.ibm.icu.text.D:
    byte[][] escapeSequences -> a
    98:99:void <init>() -> <init>
    115:115:java.lang.String getName() -> a
    119:120:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
com.ibm.icu.text.CharsetRecog_2022$CharsetRecog_2022KR -> com.ibm.icu.text.E:
    byte[][] escapeSequences -> a
    124:125:void <init>() -> <init>
    130:130:java.lang.String getName() -> a
    134:135:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
com.ibm.icu.text.CharsetRecog_UTF8 -> com.ibm.icu.text.F:
    12:12:void <init>() -> <init>
    15:15:java.lang.String getName() -> a
    22:92:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
com.ibm.icu.text.CharsetRecog_Unicode -> com.ibm.icu.text.G:
    15:185:void <init>() -> <init>
    java.lang.String getName() -> a
    com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    28:28:int codeUnit16FromBytes(byte,byte) -> a
    37:47:int adjustConfidence(int,int) -> a
com.ibm.icu.text.CharsetRecog_Unicode$CharsetRecog_UTF_16_BE -> com.ibm.icu.text.H:
    50:50:void <init>() -> <init>
    54:54:java.lang.String getName() -> a
    59:80:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
com.ibm.icu.text.CharsetRecog_Unicode$CharsetRecog_UTF_16_LE -> com.ibm.icu.text.I:
    84:84:void <init>() -> <init>
    88:88:java.lang.String getName() -> a
    93:114:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
com.ibm.icu.text.CharsetRecog_Unicode$CharsetRecog_UTF_32 -> com.ibm.icu.text.J:
    118:118:void <init>() -> <init>
    int getChar(byte[],int) -> a
    java.lang.String getName() -> a
    126:166:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
com.ibm.icu.text.CharsetRecog_Unicode$CharsetRecog_UTF_32_BE -> com.ibm.icu.text.K:
    170:170:void <init>() -> <init>
    174:174:int getChar(byte[],int) -> a
    180:180:java.lang.String getName() -> a
com.ibm.icu.text.CharsetRecog_Unicode$CharsetRecog_UTF_32_LE -> com.ibm.icu.text.L:
    185:185:void <init>() -> <init>
    189:189:int getChar(byte[],int) -> a
    195:195:java.lang.String getName() -> a
com.ibm.icu.text.CharsetRecog_mbcs -> com.ibm.icu.text.M:
    24:453:void <init>() -> <init>
    java.lang.String getName() -> a
    47:126:int match(com.ibm.icu.text.CharsetDetector,int[]) -> a
    boolean nextChar(com.ibm.icu.text.CharsetRecog_mbcs$iteratedChar,com.ibm.icu.text.CharsetDetector) -> a
com.ibm.icu.text.CharsetRecog_mbcs$CharsetRecog_big5 -> com.ibm.icu.text.N:
    int[] commonChars -> a
    246:246:void <init>() -> <init>
    263:287:boolean nextChar(com.ibm.icu.text.CharsetRecog_mbcs$iteratedChar,com.ibm.icu.text.CharsetDetector) -> a
    291:292:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    296:296:java.lang.String getName() -> a
    302:302:java.lang.String getLanguage() -> b
    247:247:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_mbcs$CharsetRecog_euc -> com.ibm.icu.text.O:
    313:416:void <init>() -> <init>
    322:375:boolean nextChar(com.ibm.icu.text.CharsetRecog_mbcs$iteratedChar,com.ibm.icu.text.CharsetDetector) -> a
com.ibm.icu.text.CharsetRecog_mbcs$CharsetRecog_euc$CharsetRecog_euc_jp -> com.ibm.icu.text.P:
    int[] commonChars -> a
    382:382:void <init>() -> <init>
    398:398:java.lang.String getName() -> a
    402:403:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    408:408:java.lang.String getLanguage() -> b
    383:383:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_mbcs$CharsetRecog_euc$CharsetRecog_euc_kr -> com.ibm.icu.text.Q:
    int[] commonChars -> a
    416:416:void <init>() -> <init>
    433:433:java.lang.String getName() -> a
    437:438:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    443:443:java.lang.String getLanguage() -> b
    417:417:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_mbcs$CharsetRecog_gb_18030 -> com.ibm.icu.text.R:
    int[] commonChars -> a
    453:453:void <init>() -> <init>
    462:511:boolean nextChar(com.ibm.icu.text.CharsetRecog_mbcs$iteratedChar,com.ibm.icu.text.CharsetDetector) -> a
    531:531:java.lang.String getName() -> a
    535:536:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    541:541:java.lang.String getLanguage() -> b
    514:514:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_mbcs$CharsetRecog_sjis -> com.ibm.icu.text.S:
    int[] commonChars -> a
    187:187:void <init>() -> <init>
    200:221:boolean nextChar(com.ibm.icu.text.CharsetRecog_mbcs$iteratedChar,com.ibm.icu.text.CharsetDetector) -> a
    225:226:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    230:230:java.lang.String getName() -> a
    235:235:java.lang.String getLanguage() -> b
    188:188:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_mbcs$iteratedChar -> com.ibm.icu.text.T:
    int charValue -> a
    int nextIndex -> b
    boolean error -> c
    boolean done -> d
    140:145:void <init>() -> <init>
    148:153:void reset() -> a
    156:161:int nextByte(com.ibm.icu.text.CharsetDetector) -> a
com.ibm.icu.text.CharsetRecog_sbcs -> com.ibm.icu.text.U:
    15:1188:void <init>() -> <init>
    java.lang.String getName() -> a
    267:267:int match(com.ibm.icu.text.CharsetDetector,int[],byte[]) -> a
    272:273:int match(com.ibm.icu.text.CharsetDetector,int[],byte[],byte) -> a
    277:278:int matchIBM420(com.ibm.icu.text.CharsetDetector,int[],byte[],byte) -> b
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_8859_1 -> com.ibm.icu.text.V:
    byte[] byteMap -> a
    com.ibm.icu.text.CharsetRecog_sbcs$NGramsPlusLang[] ngrams_8859_1 -> b
    290:290:void <init>() -> <init>
    423:433:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    439:439:java.lang.String getName() -> a
    292:328:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_8859_2 -> com.ibm.icu.text.W:
    byte[] byteMap -> a
    com.ibm.icu.text.CharsetRecog_sbcs$NGramsPlusLang[] ngrams_8859_2 -> b
    444:444:void <init>() -> <init>
    518:528:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    533:533:java.lang.String getName() -> a
    446:481:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_8859_5 -> com.ibm.icu.text.X:
    byte[] byteMap -> a
    539:539:void <init>() -> <init>
    578:578:java.lang.String getName() -> a
    541:541:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_8859_5_ru -> com.ibm.icu.text.Y:
    int[] ngrams -> b
    582:582:void <init>() -> <init>
    593:593:java.lang.String getLanguage() -> b
    598:599:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    584:584:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_8859_6 -> com.ibm.icu.text.Z:
    byte[] byteMap -> a
    603:603:void <init>() -> <init>
    642:642:java.lang.String getName() -> a
    605:605:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_8859_6_ar -> com.ibm.icu.text.aa:
    int[] ngrams -> b
    646:646:void <init>() -> <init>
    657:657:java.lang.String getLanguage() -> b
    662:663:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    648:648:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_8859_7 -> com.ibm.icu.text.ab:
    byte[] byteMap -> a
    667:667:void <init>() -> <init>
    706:706:java.lang.String getName() -> a
    669:669:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_8859_7_el -> com.ibm.icu.text.ac:
    int[] ngrams -> b
    710:710:void <init>() -> <init>
    721:721:java.lang.String getLanguage() -> b
    726:728:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    712:712:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_8859_8 -> com.ibm.icu.text.ad:
    byte[] byteMap -> a
    732:732:void <init>() -> <init>
    771:771:java.lang.String getName() -> a
    734:734:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_8859_8_I_he -> com.ibm.icu.text.ae:
    int[] ngrams -> b
    775:775:void <init>() -> <init>
    786:786:java.lang.String getName() -> a
    791:791:java.lang.String getLanguage() -> b
    796:798:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    777:777:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_8859_8_he -> com.ibm.icu.text.af:
    int[] ngrams -> b
    802:802:void <init>() -> <init>
    813:813:java.lang.String getLanguage() -> b
    818:820:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    804:804:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_8859_9 -> com.ibm.icu.text.ag:
    byte[] byteMap -> a
    825:825:void <init>() -> <init>
    864:864:java.lang.String getName() -> a
    827:827:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_8859_9_tr -> com.ibm.icu.text.ah:
    int[] ngrams -> b
    868:868:void <init>() -> <init>
    879:879:java.lang.String getLanguage() -> b
    884:886:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    870:870:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_IBM420_ar -> com.ibm.icu.text.ai:
    byte[] byteMap -> a
    1138:1138:void <init>() -> <init>
    1164:1164:java.lang.String getLanguage() -> b
    1141:1141:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_IBM420_ar_ltr -> com.ibm.icu.text.aj:
    int[] ngrams -> b
    1188:1188:void <init>() -> <init>
    1199:1199:java.lang.String getName() -> a
    1203:1204:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    1190:1190:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_IBM420_ar_rtl -> com.ibm.icu.text.ak:
    int[] ngrams -> b
    1168:1168:void <init>() -> <init>
    1179:1179:java.lang.String getName() -> a
    1183:1184:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    1170:1170:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_IBM424_he -> com.ibm.icu.text.al:
    byte[] byteMap -> a
    1073:1073:void <init>() -> <init>
    1097:1097:java.lang.String getLanguage() -> b
    1075:1075:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_IBM424_he_ltr -> com.ibm.icu.text.am:
    int[] ngrams -> b
    1118:1118:void <init>() -> <init>
    1122:1122:java.lang.String getName() -> a
    1133:1134:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    1124:1124:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_IBM424_he_rtl -> com.ibm.icu.text.an:
    int[] ngrams -> b
    1100:1100:void <init>() -> <init>
    1104:1104:java.lang.String getName() -> a
    1114:1115:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    1106:1106:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_KOI8_R -> com.ibm.icu.text.ao:
    int[] ngrams -> a
    byte[] byteMap -> b
    1012:1012:void <init>() -> <init>
    1058:1058:java.lang.String getName() -> a
    1063:1063:java.lang.String getLanguage() -> b
    1068:1069:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    1014:1021:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_windows_1251 -> com.ibm.icu.text.ap:
    int[] ngrams -> a
    byte[] byteMap -> b
    890:890:void <init>() -> <init>
    936:936:java.lang.String getName() -> a
    941:941:java.lang.String getLanguage() -> b
    946:947:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    892:899:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$CharsetRecog_windows_1256 -> com.ibm.icu.text.aq:
    int[] ngrams -> a
    byte[] byteMap -> b
    951:951:void <init>() -> <init>
    997:997:java.lang.String getName() -> a
    1002:1002:java.lang.String getLanguage() -> b
    1007:1008:com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
    953:960:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$NGramParser -> com.ibm.icu.text.ar:
    int byteIndex -> a
    int ngram -> d
    int[] ngramList -> e
    byte[] byteMap -> b
    int ngramCount -> f
    int hitCount -> g
    byte spaceChar -> c
    27:46:void <init>(int[],byte[]) -> <init>
    53:87:int search(int[],int) -> a
    92:98:void lookup(int) -> b
    102:104:void addByte(int) -> a
    108:112:int nextByte(com.ibm.icu.text.CharsetDetector) -> b
    118:133:void parseCharacters(com.ibm.icu.text.CharsetDetector) -> a
    142:161:int parse(com.ibm.icu.text.CharsetDetector,byte) -> a
com.ibm.icu.text.CharsetRecog_sbcs$NGramParser_IBM420 -> com.ibm.icu.text.as:
    byte alef -> d
    byte[] unshapeMap -> e
    167:193:void <init>(int[],byte[]) -> <init>
    196:203:byte isLamAlef(byte) -> a
    215:228:int nextByte(com.ibm.icu.text.CharsetDetector) -> b
    234:261:void parseCharacters(com.ibm.icu.text.CharsetDetector) -> a
    169:169:void <clinit>() -> <clinit>
com.ibm.icu.text.CharsetRecog_sbcs$NGramsPlusLang -> com.ibm.icu.text.at:
    int[] fNGrams -> a
    java.lang.String fLang -> b
    284:287:void <init>(java.lang.String,int[]) -> <init>
com.ibm.icu.text.CharsetRecognizer -> com.ibm.icu.text.au:
    23:23:void <init>() -> <init>
    java.lang.String getName() -> a
    36:36:java.lang.String getLanguage() -> b
    com.ibm.icu.text.CharsetMatch match(com.ibm.icu.text.CharsetDetector) -> a
com.ibm.icu.text.ChineseDateFormat -> com.ibm.icu.text.ChineseDateFormat:
    long serialVersionUID -> serialVersionUID
    60:61:void <init>(java.lang.String,java.util.Locale) -> <init>
    71:72:void <init>(java.lang.String,com.ibm.icu.util.ULocale) -> <init>
    89:91:void <init>(java.lang.String,java.lang.String,com.ibm.icu.util.ULocale) -> <init>
    131:138:void subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar) -> subFormat
    154:154:int subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],com.ibm.icu.util.Calendar) -> subParse
    165:165:com.ibm.icu.text.DateFormat$Field patternCharToDateFormatField(char) -> patternCharToDateFormatField
com.ibm.icu.text.ChineseDateFormat$Field -> com.ibm.icu.text.ChineseDateFormat$Field:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.text.ChineseDateFormat$Field IS_LEAP_MONTH -> IS_LEAP_MONTH
    203:204:void <init>(java.lang.String,int) -> <init>
    223:226:com.ibm.icu.text.DateFormat$Field ofCalendarField(int) -> ofCalendarField
    237:243:java.lang.Object readResolve() -> readResolve
    188:188:void <clinit>() -> <clinit>
com.ibm.icu.text.ChineseDateFormatSymbols -> com.ibm.icu.text.ChineseDateFormatSymbols:
    long serialVersionUID -> serialVersionUID
    java.lang.String[] isLeapMonth -> B
    45:46:void <init>() -> <init>
    55:56:void <init>(java.util.Locale) -> <init>
    65:66:void <init>(com.ibm.icu.util.ULocale) -> <init>
    77:78:void <init>(com.ibm.icu.util.Calendar,java.util.Locale) -> <init>
    89:90:void <init>(com.ibm.icu.util.Calendar,com.ibm.icu.util.ULocale) -> <init>
    98:98:java.lang.String getLeapMonth(int) -> getLeapMonth
    107:109:void initializeData(com.ibm.icu.util.ULocale,com.ibm.icu.impl.CalendarData) -> initializeData
    112:119:void initializeData(com.ibm.icu.text.DateFormatSymbols) -> a
    126:129:void initializeIsLeapMonth() -> a
com.ibm.icu.text.CjkBreakEngine -> com.ibm.icu.text.av:
    com.ibm.icu.text.UnicodeSet fHangulWordSet -> b
    com.ibm.icu.text.UnicodeSet fHanWordSet -> c
    com.ibm.icu.text.UnicodeSet fKatakanaWordSet -> d
    com.ibm.icu.text.UnicodeSet fHiraganaWordSet -> e
    com.ibm.icu.text.DictionaryMatcher fDictionary -> f
    36:53:void <init>(boolean) -> <init>
    56:60:boolean equals(java.lang.Object) -> equals
    64:64:int hashCode() -> hashCode
    72:73:int getKatakanaCost(int) -> a
    77:77:boolean isKatakana(int) -> b
    83:233:int divideUpDictionaryRange(java.text.CharacterIterator,int,int,com.ibm.icu.text.DictionaryBreakEngine$DequeI) -> a
    19:34:void <clinit>() -> <clinit>
com.ibm.icu.text.CollationElementIterator -> com.ibm.icu.text.CollationElementIterator:
    com.ibm.icu.impl.coll.CollationIterator iter_ -> a
    com.ibm.icu.text.RuleBasedCollator rbc_ -> b
    int otherHalf_ -> c
    byte dir_ -> d
    com.ibm.icu.impl.coll.UVector32 offsets_ -> e
    java.lang.String string_ -> f
    int NULLORDER -> NULLORDER
    int IGNORABLE -> IGNORABLE
    boolean $assertionsDisabled -> g
    161:161:int primaryOrder(int) -> primaryOrder
    172:172:int secondaryOrder(int) -> secondaryOrder
    183:183:int tertiaryOrder(int) -> tertiaryOrder
    188:188:int getFirstHalf(long,int) -> c
    192:192:int getSecondHalf(long,int) -> d
    196:196:boolean ceNeedsTwoParts(long) -> b
    199:205:void <init>(com.ibm.icu.text.RuleBasedCollator) -> <init>
    219:221:void <init>(java.lang.String,com.ibm.icu.text.RuleBasedCollator) -> <init>
    243:245:void <init>(java.text.CharacterIterator,com.ibm.icu.text.RuleBasedCollator) -> <init>
    259:261:void <init>(com.ibm.icu.text.UCharacterIterator,com.ibm.icu.text.RuleBasedCollator) -> <init>
    291:302:int getOffset() -> getOffset
    324:356:int next() -> next
    379:424:int previous() -> previous
    439:442:void reset() -> reset
    467:500:void setOffset(int) -> setOffset
    510:521:void setText(java.lang.String) -> setText
    533:559:void setText(com.ibm.icu.text.UCharacterIterator) -> setText
    574:587:void setText(java.text.CharacterIterator) -> setText
    650:653:java.util.Map computeMaxExpansions(com.ibm.icu.impl.coll.CollationData) -> a
    667:667:int getMaxExpansion(int) -> getMaxExpansion
    671:682:int getMaxExpansion(java.util.Map,int) -> a
    688:688:byte normalizeDir() -> a
    700:711:boolean equals(java.lang.Object) -> equals
    722:723:int hashCode() -> hashCode
    732:732:com.ibm.icu.text.RuleBasedCollator getRuleBasedCollator() -> getRuleBasedCollator
    110:110:boolean access$000(long) -> a
    110:110:int access$100(long,int) -> a
    110:110:int access$200(long,int) -> b
    110:110:void <clinit>() -> <clinit>
com.ibm.icu.text.CollationElementIterator$MaxExpSink -> com.ibm.icu.text.aw:
    java.util.Map maxExpansions -> a
    boolean $assertionsDisabled -> b
    611:613:void <init>(java.util.Map) -> <init>
    617:617:void handleCE(long) -> handleCE
    621:644:void handleExpansion(long[],int,int) -> handleExpansion
    610:610:void <clinit>() -> <clinit>
com.ibm.icu.text.CollationKey -> com.ibm.icu.text.CollationKey:
    byte[] m_key_ -> a
    java.lang.String m_source_ -> b
    int m_hashCode_ -> c
    int m_length_ -> d
    boolean $assertionsDisabled -> e
    152:153:void <init>(java.lang.String,byte[]) -> <init>
    160:165:void <init>(java.lang.String,byte[],int) -> <init>
    179:185:void <init>(java.lang.String,com.ibm.icu.text.RawCollationKey) -> <init>
    196:196:java.lang.String getSourceString() -> getSourceString
    232:235:byte[] toByteArray() -> toByteArray
    260:268:int compareTo(com.ibm.icu.text.CollationKey) -> compareTo
    291:295:boolean equals(java.lang.Object) -> equals
    315:332:boolean equals(com.ibm.icu.text.CollationKey) -> equals
    347:365:int hashCode() -> hashCode
    429:478:com.ibm.icu.text.CollationKey getBound(int,int) -> getBound
    526:584:com.ibm.icu.text.CollationKey merge(com.ibm.icu.text.CollationKey) -> merge
    620:631:int getLength() -> a
    88:88:int compareTo(java.lang.Object) -> compareTo
    88:88:void <clinit>() -> <clinit>
com.ibm.icu.text.CollationKey$BoundMode -> com.ibm.icu.text.CollationKey$BoundMode:
    int LOWER -> LOWER
    int UPPER -> UPPER
    int UPPER_LONG -> UPPER_LONG
    int COUNT -> COUNT
    133:133:void <init>() -> <init>
com.ibm.icu.text.Collator -> com.ibm.icu.text.Collator:
    int PRIMARY -> PRIMARY
    int SECONDARY -> SECONDARY
    int TERTIARY -> TERTIARY
    int QUATERNARY -> QUATERNARY
    int IDENTICAL -> IDENTICAL
    int FULL_DECOMPOSITION -> FULL_DECOMPOSITION
    int NO_DECOMPOSITION -> NO_DECOMPOSITION
    int CANONICAL_DECOMPOSITION -> CANONICAL_DECOMPOSITION
    com.ibm.icu.text.Collator$ServiceShim shim -> a
    java.lang.String[] KEYWORDS -> b
    boolean DEBUG -> c
    321:321:boolean equals(java.lang.Object) -> equals
    327:330:void checkNotFrozen() -> a
    352:353:void setStrength(int) -> setStrength
    363:364:com.ibm.icu.text.Collator setStrength2(int) -> setStrength2
    397:398:void setDecomposition(int) -> setDecomposition
    441:441:void setReorderCodes(int[]) -> setReorderCodes
    459:459:com.ibm.icu.text.Collator getInstance() -> getInstance
    468:468:java.lang.Object clone() -> clone
    589:609:com.ibm.icu.text.Collator$ServiceShim getShim() -> b
    636:642:boolean getYesOrNo(java.lang.String,java.lang.String) -> a
    646:651:int getIntValue(java.lang.String,java.lang.String,java.lang.String[]) -> a
    655:655:int getReorderCode(java.lang.String,java.lang.String) -> b
    673:783:void setAttributesFromKeywords(com.ibm.icu.util.ULocale,com.ibm.icu.text.Collator,com.ibm.icu.text.RuleBasedCollator) -> a
    808:816:com.ibm.icu.text.Collator getInstance(com.ibm.icu.util.ULocale) -> getInstance
    841:841:com.ibm.icu.text.Collator getInstance(java.util.Locale) -> getInstance
    859:859:java.lang.Object registerInstance(com.ibm.icu.text.Collator,com.ibm.icu.util.ULocale) -> registerInstance
    875:875:java.lang.Object registerFactory(com.ibm.icu.text.Collator$CollatorFactory) -> registerFactory
    885:888:boolean unregister(java.lang.Object) -> unregister
    901:905:java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    917:921:com.ibm.icu.util.ULocale[] getAvailableULocales() -> getAvailableULocales
    954:954:java.lang.String[] getKeywords() -> getKeywords
    965:968:java.lang.String[] getKeywordValues(java.lang.String) -> getKeywordValues
    993:1027:java.lang.String[] getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean) -> getKeywordValuesForLocale
    1058:1058:com.ibm.icu.util.ULocale getFunctionalEquivalent(java.lang.String,com.ibm.icu.util.ULocale,boolean[]) -> getFunctionalEquivalent
    1075:1075:com.ibm.icu.util.ULocale getFunctionalEquivalent(java.lang.String,com.ibm.icu.util.ULocale) -> getFunctionalEquivalent
    1087:1087:java.lang.String getDisplayName(java.util.Locale,java.util.Locale) -> getDisplayName
    1100:1100:java.lang.String getDisplayName(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> getDisplayName
    1112:1112:java.lang.String getDisplayName(java.util.Locale) -> getDisplayName
    1124:1124:java.lang.String getDisplayName(com.ibm.icu.util.ULocale) -> getDisplayName
    1150:1150:int getStrength() -> getStrength
    1171:1171:int getDecomposition() -> getDecomposition
    1189:1189:boolean equals(java.lang.String,java.lang.String) -> equals
    1202:1202:com.ibm.icu.text.UnicodeSet getTailoredSet() -> getTailoredSet
    int compare(java.lang.String,java.lang.String) -> compare
    1237:1237:int compare(java.lang.Object,java.lang.Object) -> compare
    1249:1249:int doCompare(java.lang.CharSequence,java.lang.CharSequence) -> doCompare
    com.ibm.icu.text.CollationKey getCollationKey(java.lang.String) -> getCollationKey
    com.ibm.icu.text.RawCollationKey getRawCollationKey(java.lang.String,com.ibm.icu.text.RawCollationKey) -> getRawCollationKey
    1309:1309:com.ibm.icu.text.Collator setMaxVariable(int) -> setMaxVariable
    1322:1322:int getMaxVariable() -> getMaxVariable
    int setVariableTop(java.lang.String) -> setVariableTop
    int getVariableTop() -> getVariableTop
    void setVariableTop(int) -> setVariableTop
    com.ibm.icu.util.VersionInfo getVersion() -> getVersion
    com.ibm.icu.util.VersionInfo getUCAVersion() -> getUCAVersion
    1404:1404:int[] getReorderCodes() -> getReorderCodes
    1422:1423:int[] getEquivalentReorderCodes(int) -> getEquivalentReorderCodes
    1438:1438:boolean isFrozen() -> isFrozen
    1447:1447:com.ibm.icu.text.Collator freeze() -> freeze
    1455:1455:com.ibm.icu.text.Collator cloneAsThawed() -> cloneAsThawed
    1463:1464:void <init>() -> <init>
    1499:1499:com.ibm.icu.util.ULocale getLocale(com.ibm.icu.util.ULocale$Type) -> getLocale
    1521:1521:void setLocale(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> a
    133:133:java.lang.Object cloneAsThawed() -> cloneAsThawed
    133:133:java.lang.Object freeze() -> freeze
    929:1466:void <clinit>() -> <clinit>
com.ibm.icu.text.Collator$CollatorFactory -> com.ibm.icu.text.Collator$CollatorFactory:
    494:494:boolean visible() -> visible
    507:507:com.ibm.icu.text.Collator createCollator(com.ibm.icu.util.ULocale) -> createCollator
    522:522:com.ibm.icu.text.Collator createCollator(java.util.Locale) -> createCollator
    534:534:java.lang.String getDisplayName(java.util.Locale,java.util.Locale) -> getDisplayName
    546:553:java.lang.String getDisplayName(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> getDisplayName
    java.util.Set getSupportedLocaleIDs() -> getSupportedLocaleIDs
    569:570:void <init>() -> <init>
com.ibm.icu.text.Collator$ReorderCodes -> com.ibm.icu.text.Collator$ReorderCodes:
    int DEFAULT -> DEFAULT
    int NONE -> NONE
    int OTHERS -> OTHERS
    int SPACE -> SPACE
    int FIRST -> FIRST
    int PUNCTUATION -> PUNCTUATION
    int SYMBOL -> SYMBOL
    int CURRENCY -> CURRENCY
    int DIGIT -> DIGIT
    int LIMIT -> LIMIT
com.ibm.icu.text.Collator$ServiceShim -> com.ibm.icu.text.ax:
    573:573:void <init>() -> <init>
    com.ibm.icu.text.Collator getInstance(com.ibm.icu.util.ULocale) -> a
    java.lang.Object registerInstance(com.ibm.icu.text.Collator,com.ibm.icu.util.ULocale) -> a
    java.lang.Object registerFactory(com.ibm.icu.text.Collator$CollatorFactory) -> a
    boolean unregister(java.lang.Object) -> a
    java.util.Locale[] getAvailableLocales() -> a
    com.ibm.icu.util.ULocale[] getAvailableULocales() -> b
    java.lang.String getDisplayName(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> a
com.ibm.icu.text.CollatorServiceShim -> com.ibm.icu.text.ay:
    com.ibm.icu.impl.ICULocaleService service -> a
    26:118:void <init>() -> <init>
    34:46:com.ibm.icu.text.Collator getInstance(com.ibm.icu.util.ULocale) -> a
    55:56:java.lang.Object registerInstance(com.ibm.icu.text.Collator,com.ibm.icu.util.ULocale) -> a
    83:83:java.lang.Object registerFactory(com.ibm.icu.text.Collator$CollatorFactory) -> a
    87:87:boolean unregister(java.lang.Object) -> a
    93:99:java.util.Locale[] getAvailableLocales() -> a
    104:110:com.ibm.icu.util.ULocale[] getAvailableULocales() -> b
    114:115:java.lang.String getDisplayName(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> a
    168:171:com.ibm.icu.text.Collator makeInstance(com.ibm.icu.util.ULocale) -> c
    26:26:com.ibm.icu.text.Collator access$000(com.ibm.icu.util.ULocale) -> b
    174:174:void <clinit>() -> <clinit>
com.ibm.icu.text.CollatorServiceShim$1CFactory -> com.ibm.icu.text.az:
    com.ibm.icu.text.Collator$CollatorFactory delegate -> a
    63:66:void <init>(com.ibm.icu.text.CollatorServiceShim,com.ibm.icu.text.Collator$CollatorFactory) -> <init>
    69:70:java.lang.Object handleCreate(com.ibm.icu.util.ULocale,int,com.ibm.icu.impl.ICUService) -> handleCreate
    74:75:java.lang.String getDisplayName(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayName
    79:79:java.util.Set getSupportedIDs() -> getSupportedIDs
com.ibm.icu.text.CollatorServiceShim$CService -> com.ibm.icu.text.aA:
    120:135:void <init>() -> <init>
    147:147:java.lang.String validateFallbackLocale() -> validateFallbackLocale
    153:160:java.lang.Object handleDefault(com.ibm.icu.impl.ICUService$Key,java.lang.String[]) -> handleDefault
com.ibm.icu.text.CollatorServiceShim$CService$1CollatorFactory -> com.ibm.icu.text.aB:
    123:125:void <init>(com.ibm.icu.text.CollatorServiceShim$CService) -> <init>
    129:129:java.lang.Object handleCreate(com.ibm.icu.util.ULocale,int,com.ibm.icu.impl.ICUService) -> handleCreate
com.ibm.icu.text.CompactDecimalDataCache -> com.ibm.icu.text.aC:
    com.ibm.icu.impl.ICUCache cache -> a
    24:102:void <init>() -> <init>
    114:119:com.ibm.icu.text.CompactDecimalDataCache$DataBundle get(com.ibm.icu.util.ULocale) -> a
    135:167:com.ibm.icu.text.CompactDecimalDataCache$DataBundle load(com.ibm.icu.util.ULocale) -> b
    180:193:com.ibm.icu.impl.ICUResourceBundle findWithFallback$7e311665(com.ibm.icu.impl.ICUResourceBundle,java.lang.String,int) -> a
    203:210:com.ibm.icu.impl.ICUResourceBundle getWithFallback$7e311665(com.ibm.icu.impl.ICUResourceBundle,java.lang.String,int) -> b
    217:222:boolean isRoot(com.ibm.icu.impl.ICUResourceBundle) -> a
    235:243:com.ibm.icu.text.CompactDecimalDataCache$Data loadStyle(com.ibm.icu.impl.ICUResourceBundle,com.ibm.icu.util.ULocale,java.lang.String) -> a
    266:326:void populateData(com.ibm.icu.util.UResourceBundle,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data) -> a
    343:367:int populatePrefixSuffix(java.lang.String,int,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.text.CompactDecimalDataCache$Data) -> a
    371:397:java.lang.String fixQuotes(java.lang.String) -> a
    407:407:java.lang.String localeAndStyle(com.ibm.icu.util.ULocale,java.lang.String) -> a
    430:440:void fillInMissing(com.ibm.icu.text.CompactDecimalDataCache$Data) -> a
    444:450:void propagateOtherToMissing(int,java.util.Map) -> a
    453:460:void copyFromPreviousIndex(int,java.util.Map) -> b
    465:472:void saveUnit(com.ibm.icu.text.DecimalFormat$Unit,java.lang.String,int,java.util.Map) -> a
    484:488:com.ibm.icu.text.DecimalFormat$Unit getUnit(java.util.Map,java.lang.String,int) -> a
com.ibm.icu.text.CompactDecimalDataCache$1 -> com.ibm.icu.text.aD:
    int[] $SwitchMap$com$ibm$icu$text$CompactDecimalDataCache$UResFlags -> a
    int[] $SwitchMap$com$ibm$icu$text$CompactDecimalDataCache$QuoteState -> b
    187:385:void <clinit>() -> <clinit>
com.ibm.icu.text.CompactDecimalDataCache$Data -> com.ibm.icu.text.aE:
    long[] divisors -> a
    java.util.Map units -> b
    68:71:void <init>(long[],java.util.Map) -> <init>
com.ibm.icu.text.CompactDecimalDataCache$DataBundle -> com.ibm.icu.text.aF:
    com.ibm.icu.text.CompactDecimalDataCache$Data shortData -> a
    com.ibm.icu.text.CompactDecimalDataCache$Data longData -> b
    84:87:void <init>(com.ibm.icu.text.CompactDecimalDataCache$Data,com.ibm.icu.text.CompactDecimalDataCache$Data) -> <init>
com.ibm.icu.text.CompactDecimalDataCache$QuoteState -> com.ibm.icu.text.aG:
    int OUTSIDE$5e10653 -> a
    int INSIDE_EMPTY$5e10653 -> b
    int INSIDE_FULL$5e10653 -> c
    int[] $VALUES$4da708d8 -> d
    90:90:int[] values$1ca5a319() -> a
    90:93:void <clinit>() -> <clinit>
com.ibm.icu.text.CompactDecimalDataCache$UResFlags -> com.ibm.icu.text.aH:
    int ANY$461c0a2e -> a
    int NOT_ROOT$461c0a2e -> b
    int[] $VALUES$123ef153 -> c
    102:102:int[] values$6eaa57b4() -> a
    102:104:void <clinit>() -> <clinit>
com.ibm.icu.text.CompactDecimalFormat -> com.ibm.icu.text.CompactDecimalFormat:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.text.CompactDecimalDataCache cache -> d
    java.util.Map units -> e
    long[] divisor -> f
    java.util.Map pluralToCurrencyAffixes -> g
    com.ibm.icu.text.PluralRules pluralRules -> h
    93:93:com.ibm.icu.text.CompactDecimalFormat getInstance(com.ibm.icu.util.ULocale,com.ibm.icu.text.CompactDecimalFormat$CompactStyle) -> getInstance
    105:105:com.ibm.icu.text.CompactDecimalFormat getInstance(java.util.Locale,com.ibm.icu.text.CompactDecimalFormat$CompactStyle) -> getInstance
    116:134:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.CompactDecimalFormat$CompactStyle) -> <init>
    165:183:void <init>(java.lang.String,com.ibm.icu.text.DecimalFormatSymbols,com.ibm.icu.text.CompactDecimalFormat$CompactStyle,com.ibm.icu.text.PluralRules,long[],java.util.Map,java.util.Map,java.util.Collection) -> <init>
    186:194:void finishInit(com.ibm.icu.text.CompactDecimalFormat$CompactStyle,java.lang.String,com.ibm.icu.text.DecimalFormatSymbols) -> a
    202:207:boolean equals(java.lang.Object) -> equals
    216:226:boolean mapsAreEqual(java.util.Map,java.util.Map) -> a
    235:247:java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition) -> format
    256:261:java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object) -> formatToCharacterIterator
    270:270:java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition) -> format
    279:279:java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.FieldPosition) -> format
    288:288:java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition) -> format
    297:297:java.lang.StringBuffer format(com.ibm.icu.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition) -> format
    306:306:java.lang.Number parse(java.lang.String,java.text.ParsePosition) -> parse
    312:312:void writeObject(java.io.ObjectOutputStream) -> writeObject
    316:316:void readObject(java.io.ObjectInputStream) -> readObject
    325:339:com.ibm.icu.text.CompactDecimalFormat$Amount toAmount(double,com.ibm.icu.util.Output) -> a
    346:350:void recordError(java.util.Collection,java.lang.String) -> a
    359:424:java.util.Map otherPluralVariant(java.util.Map,long[],java.util.Collection) -> a
    428:431:java.lang.String getPluralForm(com.ibm.icu.text.PluralRules$FixedDecimal) -> a
    442:449:com.ibm.icu.text.CompactDecimalDataCache$Data getData(com.ibm.icu.util.ULocale,com.ibm.icu.text.CompactDecimalFormat$CompactStyle) -> a
    58:58:void <clinit>() -> <clinit>
com.ibm.icu.text.CompactDecimalFormat$1 -> com.ibm.icu.text.aI:
    int[] $SwitchMap$com$ibm$icu$text$CompactDecimalFormat$CompactStyle -> a
    443:443:void <clinit>() -> <clinit>
com.ibm.icu.text.CompactDecimalFormat$Amount -> com.ibm.icu.text.aJ:
    double qty -> a
    com.ibm.icu.text.DecimalFormat$Unit unit -> b
    457:460:void <init>(double,com.ibm.icu.text.DecimalFormat$Unit) -> <init>
    463:463:double getQty() -> a
    467:467:com.ibm.icu.text.DecimalFormat$Unit getUnit() -> b
com.ibm.icu.text.CompactDecimalFormat$CompactStyle -> com.ibm.icu.text.CompactDecimalFormat$CompactStyle:
    com.ibm.icu.text.CompactDecimalFormat$CompactStyle SHORT -> SHORT
    com.ibm.icu.text.CompactDecimalFormat$CompactStyle LONG -> LONG
    com.ibm.icu.text.CompactDecimalFormat$CompactStyle[] $VALUES -> a
    71:71:com.ibm.icu.text.CompactDecimalFormat$CompactStyle[] values() -> values
    71:71:com.ibm.icu.text.CompactDecimalFormat$CompactStyle valueOf(java.lang.String) -> valueOf
    71:71:void <init>(java.lang.String,int) -> <init>
    71:81:void <clinit>() -> <clinit>
com.ibm.icu.text.ComposedCharIter -> com.ibm.icu.text.ComposedCharIter:
    char DONE -> DONE
    com.ibm.icu.impl.Normalizer2Impl n2impl -> a
    java.lang.String decompBuf -> b
    int curChar -> c
    int nextChar -> d
    76:77:void <init>() -> <init>
    90:170:void <init>(boolean,int) -> <init>
    105:108:boolean hasNext() -> hasNext
    121:126:char next() -> next
    140:143:java.lang.String decomposition() -> decomposition
    148:165:void findNextChar() -> a
com.ibm.icu.text.CompoundTransliterator -> com.ibm.icu.text.aK:
    com.ibm.icu.text.Transliterator[] trans -> a
    int numAnonymousRBTs -> b
    104:105:void <init>(java.util.List) -> <init>
    34:113:void <init>(java.util.List,int) -> <init>
    34:126:void <init>(java.lang.String,com.ibm.icu.text.UnicodeFilter,com.ibm.icu.text.Transliterator[],int) -> <init>
    184:209:void init(java.util.List,int,boolean) -> a
    232:232:int getCount() -> a
    241:241:com.ibm.icu.text.Transliterator getTransliterator(int) -> a
    248:252:void _smartAppend(java.lang.StringBuilder,char) -> a
    271:304:java.lang.String toRules(boolean) -> toRules
    312:322:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
    397:504:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    511:519:void computeMaximumContextLength() -> c
    525:529:com.ibm.icu.text.Transliterator safeClone() -> b
com.ibm.icu.text.CurrencyDisplayNames -> com.ibm.icu.text.CurrencyDisplayNames:
    36:36:com.ibm.icu.text.CurrencyDisplayNames getInstance(com.ibm.icu.util.ULocale) -> getInstance
    52:52:com.ibm.icu.text.CurrencyDisplayNames getInstance(java.util.Locale) -> getInstance
    70:70:com.ibm.icu.text.CurrencyDisplayNames getInstance(com.ibm.icu.util.ULocale,boolean) -> getInstance
    88:88:com.ibm.icu.text.CurrencyDisplayNames getInstance(java.util.Locale,boolean) -> getInstance
    99:99:boolean hasData() -> hasData
    com.ibm.icu.util.ULocale getULocale() -> getULocale
    java.lang.String getSymbol(java.lang.String) -> getSymbol
    java.lang.String getName(java.lang.String) -> getName
    java.lang.String getPluralName(java.lang.String,java.lang.String) -> getPluralName
    java.util.Map symbolMap() -> symbolMap
    java.util.Map nameMap() -> nameMap
    167:168:void <init>() -> <init>
com.ibm.icu.text.CurrencyFormat -> com.ibm.icu.text.aL:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.text.NumberFormat fmt -> a
    com.ibm.icu.text.MeasureFormat mf -> b
    40:45:void <init>(com.ibm.icu.util.ULocale) -> <init>
    52:54:java.lang.Object clone() -> clone
    62:68:java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    77:77:com.ibm.icu.util.CurrencyAmount parseObject(java.lang.String,java.text.ParsePosition) -> a
    89:89:java.lang.StringBuilder formatMeasures(java.lang.StringBuilder,java.text.FieldPosition,com.ibm.icu.util.Measure[]) -> formatMeasures
    97:97:com.ibm.icu.text.MeasureFormat$FormatWidth getWidth() -> getWidth
    105:105:com.ibm.icu.text.NumberFormat getNumberFormat() -> getNumberFormat
    113:113:java.lang.Object writeReplace() -> writeReplace
    118:118:java.lang.Object readResolve() -> readResolve
    33:33:com.ibm.icu.util.Measure parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    33:33:java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
com.ibm.icu.text.CurrencyMetaInfo -> com.ibm.icu.text.CurrencyMetaInfo:
    com.ibm.icu.text.CurrencyMetaInfo impl -> a
    boolean hasData -> b
    com.ibm.icu.text.CurrencyMetaInfo$CurrencyDigits defaultDigits -> defaultDigits
    40:40:com.ibm.icu.text.CurrencyMetaInfo getInstance() -> getInstance
    51:51:com.ibm.icu.text.CurrencyMetaInfo getInstance(boolean) -> getInstance
    62:62:boolean hasData() -> hasData
    71:72:void <init>() -> <init>
    504:504:java.util.List currencyInfo(com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter) -> currencyInfo
    517:517:java.util.List currencies(com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter) -> currencies
    530:530:java.util.List regions(com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter) -> regions
    542:542:com.ibm.icu.text.CurrencyMetaInfo$CurrencyDigits currencyDigits(java.lang.String) -> currencyDigits
    553:553:com.ibm.icu.text.CurrencyMetaInfo$CurrencyDigits currencyDigits(java.lang.String,com.ibm.icu.util.Currency$CurrencyUsage) -> currencyDigits
    578:581:java.lang.String dateString(long) -> a
    585:614:java.lang.String debugString(java.lang.Object) -> b
    30:30:java.lang.String access$000(java.lang.Object) -> a
    561:575:void <clinit>() -> <clinit>
com.ibm.icu.text.CurrencyMetaInfo$CurrencyDigits -> com.ibm.icu.text.CurrencyMetaInfo$CurrencyDigits:
    int fractionDigits -> fractionDigits
    int roundingIncrement -> roundingIncrement
    386:389:void <init>(int,int) -> <init>
    398:398:java.lang.String toString() -> toString
com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter -> com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter:
    java.lang.String region -> region
    java.lang.String currency -> currency
    long from -> from
    long to -> to
    boolean tenderOnly -> tenderOnly
    com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter ALL -> a
    111:118:void <init>(java.lang.String,java.lang.String,long,long,boolean) -> <init>
    129:129:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter all() -> all
    139:139:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter now() -> now
    150:150:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter onRegion(java.lang.String) -> onRegion
    161:161:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter onCurrency(java.lang.String) -> onCurrency
    172:172:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter onDate(java.util.Date) -> onDate
    186:186:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter onDateRange(java.util.Date,java.util.Date) -> onDateRange
    195:195:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter onDate(long) -> onDate
    209:209:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter onDateRange(long,long) -> onDateRange
    218:218:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter onTender() -> onTender
    230:230:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter withRegion(java.lang.String) -> withRegion
    242:242:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter withCurrency(java.lang.String) -> withCurrency
    253:253:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter withDate(java.util.Date) -> withDate
    265:267:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter withDateRange(java.util.Date,java.util.Date) -> withDateRange
    277:277:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter withDate(long) -> withDate
    291:291:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter withDateRange(long,long) -> withDateRange
    300:300:com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter withTender() -> withTender
    309:309:boolean equals(java.lang.Object) -> equals
    320:320:boolean equals(com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter) -> equals
    334:346:int hashCode() -> hashCode
    356:356:java.lang.String toString() -> toString
    360:360:boolean equals(java.lang.String,java.lang.String) -> a
    120:120:void <clinit>() -> <clinit>
com.ibm.icu.text.CurrencyMetaInfo$CurrencyInfo -> com.ibm.icu.text.CurrencyMetaInfo$CurrencyInfo:
    java.lang.String region -> region
    java.lang.String code -> code
    long from -> from
    long to -> to
    int priority -> priority
    boolean tender -> a
    455:456:void <init>(java.lang.String,java.lang.String,long,long,int) -> <init>
    465:472:void <init>(java.lang.String,java.lang.String,long,long,int,boolean) -> <init>
    481:481:java.lang.String toString() -> toString
    490:490:boolean isTender() -> isTender
com.ibm.icu.text.CurrencyPluralInfo -> com.ibm.icu.text.CurrencyPluralInfo:
    long serialVersionUID -> serialVersionUID
    char[] tripleCurrencySign -> a
    java.lang.String tripleCurrencyStr -> b
    char[] defaultCurrencyPluralPatternChar -> c
    java.lang.String defaultCurrencyPluralPattern -> d
    java.util.Map pluralCountToCurrencyUnitPattern -> e
    com.ibm.icu.text.PluralRules pluralRules -> f
    com.ibm.icu.util.ULocale ulocale -> g
    boolean $assertionsDisabled -> h
    46:332:void <init>() -> <init>
    55:332:void <init>(java.util.Locale) -> <init>
    64:332:void <init>(com.ibm.icu.util.ULocale) -> <init>
    75:75:com.ibm.icu.text.CurrencyPluralInfo getInstance() -> getInstance
    86:86:com.ibm.icu.text.CurrencyPluralInfo getInstance(java.util.Locale) -> getInstance
    97:97:com.ibm.icu.text.CurrencyPluralInfo getInstance(com.ibm.icu.util.ULocale) -> getInstance
    107:107:com.ibm.icu.text.PluralRules getPluralRules() -> getPluralRules
    119:134:java.lang.String getCurrencyPluralPattern(java.lang.String) -> getCurrencyPluralPattern
    145:145:com.ibm.icu.util.ULocale getLocale() -> getLocale
    156:157:void setPluralRules(java.lang.String) -> setPluralRules
    169:170:void setCurrencyPluralPattern(java.lang.String,java.lang.String) -> setCurrencyPluralPattern
    180:182:void setLocale(com.ibm.icu.util.ULocale) -> setLocale
    191:205:java.lang.Object clone() -> clone
    215:220:boolean equals(java.lang.Object) -> equals
    231:232:int hashCode() -> hashCode
    254:254:java.lang.String select(com.ibm.icu.text.PluralRules$FixedDecimal) -> a
    263:263:java.util.Iterator pluralPatternIterator() -> a
    267:270:void initialize(com.ibm.icu.util.ULocale) -> a
    273:303:void setupCurrencyPluralPattern(com.ibm.icu.util.ULocale) -> b
    38:316:void <clinit>() -> <clinit>
com.ibm.icu.text.DateFormat -> com.ibm.icu.text.DateFormat:
    com.ibm.icu.util.Calendar calendar -> calendar
    com.ibm.icu.text.NumberFormat numberFormat -> numberFormat
    int ERA_FIELD -> ERA_FIELD
    int YEAR_FIELD -> YEAR_FIELD
    int MONTH_FIELD -> MONTH_FIELD
    int DATE_FIELD -> DATE_FIELD
    int HOUR_OF_DAY1_FIELD -> HOUR_OF_DAY1_FIELD
    int HOUR_OF_DAY0_FIELD -> HOUR_OF_DAY0_FIELD
    int MINUTE_FIELD -> MINUTE_FIELD
    int SECOND_FIELD -> SECOND_FIELD
    int FRACTIONAL_SECOND_FIELD -> FRACTIONAL_SECOND_FIELD
    int MILLISECOND_FIELD -> MILLISECOND_FIELD
    int DAY_OF_WEEK_FIELD -> DAY_OF_WEEK_FIELD
    int DAY_OF_YEAR_FIELD -> DAY_OF_YEAR_FIELD
    int DAY_OF_WEEK_IN_MONTH_FIELD -> DAY_OF_WEEK_IN_MONTH_FIELD
    int WEEK_OF_YEAR_FIELD -> WEEK_OF_YEAR_FIELD
    int WEEK_OF_MONTH_FIELD -> WEEK_OF_MONTH_FIELD
    int AM_PM_FIELD -> AM_PM_FIELD
    int HOUR1_FIELD -> HOUR1_FIELD
    int HOUR0_FIELD -> HOUR0_FIELD
    int TIMEZONE_FIELD -> TIMEZONE_FIELD
    int YEAR_WOY_FIELD -> YEAR_WOY_FIELD
    int DOW_LOCAL_FIELD -> DOW_LOCAL_FIELD
    int EXTENDED_YEAR_FIELD -> EXTENDED_YEAR_FIELD
    int JULIAN_DAY_FIELD -> JULIAN_DAY_FIELD
    int MILLISECONDS_IN_DAY_FIELD -> MILLISECONDS_IN_DAY_FIELD
    int TIMEZONE_RFC_FIELD -> TIMEZONE_RFC_FIELD
    int TIMEZONE_GENERIC_FIELD -> TIMEZONE_GENERIC_FIELD
    int STANDALONE_DAY_FIELD -> STANDALONE_DAY_FIELD
    int STANDALONE_MONTH_FIELD -> STANDALONE_MONTH_FIELD
    int QUARTER_FIELD -> QUARTER_FIELD
    int STANDALONE_QUARTER_FIELD -> STANDALONE_QUARTER_FIELD
    int TIMEZONE_SPECIAL_FIELD -> TIMEZONE_SPECIAL_FIELD
    int YEAR_NAME_FIELD -> YEAR_NAME_FIELD
    int TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD -> TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD
    int TIMEZONE_ISO_FIELD -> TIMEZONE_ISO_FIELD
    int TIMEZONE_ISO_LOCAL_FIELD -> TIMEZONE_ISO_LOCAL_FIELD
    int TIME_SEPARATOR -> TIME_SEPARATOR
    int FIELD_COUNT -> FIELD_COUNT
    java.util.EnumSet booleanAttributes -> a
    com.ibm.icu.text.DisplayContext capitalizationSetting -> b
    int serialVersionOnStream -> c
    long serialVersionUID -> serialVersionUID
    int NONE -> NONE
    int FULL -> FULL
    int LONG -> LONG
    int MEDIUM -> MEDIUM
    int SHORT -> SHORT
    int DEFAULT -> DEFAULT
    int RELATIVE -> RELATIVE
    int RELATIVE_FULL -> RELATIVE_FULL
    int RELATIVE_LONG -> RELATIVE_LONG
    int RELATIVE_MEDIUM -> RELATIVE_MEDIUM
    int RELATIVE_SHORT -> RELATIVE_SHORT
    int RELATIVE_DEFAULT -> RELATIVE_DEFAULT
    java.lang.String YEAR -> YEAR
    java.lang.String QUARTER -> QUARTER
    java.lang.String ABBR_QUARTER -> ABBR_QUARTER
    java.lang.String YEAR_QUARTER -> YEAR_QUARTER
    java.lang.String YEAR_ABBR_QUARTER -> YEAR_ABBR_QUARTER
    java.lang.String MONTH -> MONTH
    java.lang.String ABBR_MONTH -> ABBR_MONTH
    java.lang.String NUM_MONTH -> NUM_MONTH
    java.lang.String YEAR_MONTH -> YEAR_MONTH
    java.lang.String YEAR_ABBR_MONTH -> YEAR_ABBR_MONTH
    java.lang.String YEAR_NUM_MONTH -> YEAR_NUM_MONTH
    java.lang.String DAY -> DAY
    java.lang.String YEAR_MONTH_DAY -> YEAR_MONTH_DAY
    java.lang.String YEAR_ABBR_MONTH_DAY -> YEAR_ABBR_MONTH_DAY
    java.lang.String YEAR_NUM_MONTH_DAY -> YEAR_NUM_MONTH_DAY
    java.lang.String WEEKDAY -> WEEKDAY
    java.lang.String ABBR_WEEKDAY -> ABBR_WEEKDAY
    java.lang.String YEAR_MONTH_WEEKDAY_DAY -> YEAR_MONTH_WEEKDAY_DAY
    java.lang.String YEAR_ABBR_MONTH_WEEKDAY_DAY -> YEAR_ABBR_MONTH_WEEKDAY_DAY
    java.lang.String YEAR_NUM_MONTH_WEEKDAY_DAY -> YEAR_NUM_MONTH_WEEKDAY_DAY
    java.lang.String MONTH_DAY -> MONTH_DAY
    java.lang.String ABBR_MONTH_DAY -> ABBR_MONTH_DAY
    java.lang.String NUM_MONTH_DAY -> NUM_MONTH_DAY
    java.lang.String MONTH_WEEKDAY_DAY -> MONTH_WEEKDAY_DAY
    java.lang.String ABBR_MONTH_WEEKDAY_DAY -> ABBR_MONTH_WEEKDAY_DAY
    java.lang.String NUM_MONTH_WEEKDAY_DAY -> NUM_MONTH_WEEKDAY_DAY
    java.util.List DATE_SKELETONS -> DATE_SKELETONS
    java.lang.String HOUR -> HOUR
    java.lang.String HOUR24 -> HOUR24
    java.lang.String MINUTE -> MINUTE
    java.lang.String HOUR_MINUTE -> HOUR_MINUTE
    java.lang.String HOUR24_MINUTE -> HOUR24_MINUTE
    java.lang.String SECOND -> SECOND
    java.lang.String HOUR_MINUTE_SECOND -> HOUR_MINUTE_SECOND
    java.lang.String HOUR24_MINUTE_SECOND -> HOUR24_MINUTE_SECOND
    java.lang.String MINUTE_SECOND -> MINUTE_SECOND
    java.util.List TIME_SKELETONS -> TIME_SKELETONS
    java.lang.String LOCATION_TZ -> LOCATION_TZ
    java.lang.String GENERIC_TZ -> GENERIC_TZ
    java.lang.String ABBR_GENERIC_TZ -> ABBR_GENERIC_TZ
    java.lang.String SPECIFIC_TZ -> SPECIFIC_TZ
    java.lang.String ABBR_SPECIFIC_TZ -> ABBR_SPECIFIC_TZ
    java.lang.String ABBR_UTC_TZ -> ABBR_UTC_TZ
    java.util.List ZONE_SKELETONS -> ZONE_SKELETONS
    java.lang.String STANDALONE_MONTH -> STANDALONE_MONTH
    java.lang.String ABBR_STANDALONE_MONTH -> ABBR_STANDALONE_MONTH
    java.lang.String HOUR_MINUTE_GENERIC_TZ -> HOUR_MINUTE_GENERIC_TZ
    java.lang.String HOUR_MINUTE_TZ -> HOUR_MINUTE_TZ
    java.lang.String HOUR_GENERIC_TZ -> HOUR_GENERIC_TZ
    java.lang.String HOUR_TZ -> HOUR_TZ
    578:586:java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.StringBuffer format(com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition) -> format
    646:647:java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    658:658:java.lang.String format(java.util.Date) -> format
    697:702:java.util.Date parse(java.lang.String) -> parse
    void parse(java.lang.String,com.ibm.icu.util.Calendar,java.text.ParsePosition) -> parse
    781:799:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    811:811:java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    1305:1305:com.ibm.icu.text.DateFormat getTimeInstance() -> getTimeInstance
    1320:1320:com.ibm.icu.text.DateFormat getTimeInstance(int) -> getTimeInstance
    1336:1336:com.ibm.icu.text.DateFormat getTimeInstance(int,java.util.Locale) -> getTimeInstance
    1352:1352:com.ibm.icu.text.DateFormat getTimeInstance(int,com.ibm.icu.util.ULocale) -> getTimeInstance
    1364:1364:com.ibm.icu.text.DateFormat getDateInstance() -> getDateInstance
    1382:1382:com.ibm.icu.text.DateFormat getDateInstance(int) -> getDateInstance
    1401:1401:com.ibm.icu.text.DateFormat getDateInstance(int,java.util.Locale) -> getDateInstance
    1420:1420:com.ibm.icu.text.DateFormat getDateInstance(int,com.ibm.icu.util.ULocale) -> getDateInstance
    1432:1432:com.ibm.icu.text.DateFormat getDateTimeInstance() -> getDateTimeInstance
    1454:1454:com.ibm.icu.text.DateFormat getDateTimeInstance(int,int) -> getDateTimeInstance
    1474:1474:com.ibm.icu.text.DateFormat getDateTimeInstance(int,int,java.util.Locale) -> getDateTimeInstance
    1494:1494:com.ibm.icu.text.DateFormat getDateTimeInstance(int,int,com.ibm.icu.util.ULocale) -> getDateTimeInstance
    1503:1503:com.ibm.icu.text.DateFormat getInstance() -> getInstance
    1513:1513:java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    1524:1524:com.ibm.icu.util.ULocale[] getAvailableULocales() -> getAvailableULocales
    1535:1536:void setCalendar(com.ibm.icu.util.Calendar) -> setCalendar
    1545:1545:com.ibm.icu.util.Calendar getCalendar() -> getCalendar
    1555:1560:void setNumberFormat(com.ibm.icu.text.NumberFormat) -> setNumberFormat
    1570:1570:com.ibm.icu.text.NumberFormat getNumberFormat() -> getNumberFormat
    1580:1581:void setTimeZone(com.ibm.icu.util.TimeZone) -> setTimeZone
    1590:1590:com.ibm.icu.util.TimeZone getTimeZone() -> getTimeZone
    1617:1620:void setLenient(boolean) -> setLenient
    1629:1629:boolean isLenient() -> isLenient
    1645:1646:void setCalendarLenient(boolean) -> setCalendarLenient
    1655:1655:boolean isCalendarLenient() -> isCalendarLenient
    1667:1679:com.ibm.icu.text.DateFormat setBooleanAttribute(com.ibm.icu.text.DateFormat$BooleanAttribute,boolean) -> setBooleanAttribute
    1692:1695:boolean getBooleanAttribute(com.ibm.icu.text.DateFormat$BooleanAttribute) -> getBooleanAttribute
    1707:1710:void setContext(com.ibm.icu.text.DisplayContext) -> setContext
    1721:1721:com.ibm.icu.text.DisplayContext getContext(com.ibm.icu.text.DisplayContext$Type) -> getContext
    1732:1732:int hashCode() -> hashCode
    1742:1745:boolean equals(java.lang.Object) -> equals
    1758:1763:java.lang.Object clone() -> clone
    1777:1802:com.ibm.icu.text.DateFormat get(int,int,com.ibm.icu.util.ULocale,com.ibm.icu.util.Calendar) -> a
    1819:1831:void readObject(java.io.ObjectInputStream) -> readObject
    519:1837:void <init>() -> <init>
    1861:1861:com.ibm.icu.text.DateFormat getDateInstance(com.ibm.icu.util.Calendar,int,java.util.Locale) -> getDateInstance
    1879:1879:com.ibm.icu.text.DateFormat getDateInstance(com.ibm.icu.util.Calendar,int,com.ibm.icu.util.ULocale) -> getDateInstance
    1902:1902:com.ibm.icu.text.DateFormat getTimeInstance(com.ibm.icu.util.Calendar,int,java.util.Locale) -> getTimeInstance
    1925:1925:com.ibm.icu.text.DateFormat getTimeInstance(com.ibm.icu.util.Calendar,int,com.ibm.icu.util.ULocale) -> getTimeInstance
    1953:1953:com.ibm.icu.text.DateFormat getDateTimeInstance(com.ibm.icu.util.Calendar,int,int,java.util.Locale) -> getDateTimeInstance
    1981:1984:com.ibm.icu.text.DateFormat getDateTimeInstance(com.ibm.icu.util.Calendar,int,int,com.ibm.icu.util.ULocale) -> getDateTimeInstance
    1996:1996:com.ibm.icu.text.DateFormat getInstance(com.ibm.icu.util.Calendar,java.util.Locale) -> getInstance
    2009:2009:com.ibm.icu.text.DateFormat getInstance(com.ibm.icu.util.Calendar,com.ibm.icu.util.ULocale) -> getInstance
    2020:2020:com.ibm.icu.text.DateFormat getInstance(com.ibm.icu.util.Calendar) -> getInstance
    2035:2035:com.ibm.icu.text.DateFormat getDateInstance(com.ibm.icu.util.Calendar,int) -> getDateInstance
    2055:2055:com.ibm.icu.text.DateFormat getTimeInstance(com.ibm.icu.util.Calendar,int) -> getTimeInstance
    2079:2079:com.ibm.icu.text.DateFormat getDateTimeInstance(com.ibm.icu.util.Calendar,int,int) -> getDateTimeInstance
    2093:2093:com.ibm.icu.text.DateFormat getInstanceForSkeleton(java.lang.String) -> getInstanceForSkeleton
    2109:2109:com.ibm.icu.text.DateFormat getInstanceForSkeleton(java.lang.String,java.util.Locale) -> getInstanceForSkeleton
    2125:2127:com.ibm.icu.text.DateFormat getInstanceForSkeleton(java.lang.String,com.ibm.icu.util.ULocale) -> getInstanceForSkeleton
    2146:2146:com.ibm.icu.text.DateFormat getInstanceForSkeleton(com.ibm.icu.util.Calendar,java.lang.String,java.util.Locale) -> getInstanceForSkeleton
    2166:2170:com.ibm.icu.text.DateFormat getInstanceForSkeleton(com.ibm.icu.util.Calendar,java.lang.String,com.ibm.icu.util.ULocale) -> getInstanceForSkeleton
    2186:2186:com.ibm.icu.text.DateFormat getPatternInstance(java.lang.String) -> getPatternInstance
    2203:2203:com.ibm.icu.text.DateFormat getPatternInstance(java.lang.String,java.util.Locale) -> getPatternInstance
    2220:2220:com.ibm.icu.text.DateFormat getPatternInstance(java.lang.String,com.ibm.icu.util.ULocale) -> getPatternInstance
    2240:2240:com.ibm.icu.text.DateFormat getPatternInstance(com.ibm.icu.util.Calendar,java.lang.String,java.util.Locale) -> getPatternInstance
    2261:2261:com.ibm.icu.text.DateFormat getPatternInstance(com.ibm.icu.util.Calendar,java.lang.String,com.ibm.icu.util.ULocale) -> getPatternInstance
    1065:1241:void <clinit>() -> <clinit>
com.ibm.icu.text.DateFormat$BooleanAttribute -> com.ibm.icu.text.DateFormat$BooleanAttribute:
    com.ibm.icu.text.DateFormat$BooleanAttribute PARSE_ALLOW_WHITESPACE -> PARSE_ALLOW_WHITESPACE
    com.ibm.icu.text.DateFormat$BooleanAttribute PARSE_ALLOW_NUMERIC -> PARSE_ALLOW_NUMERIC
    com.ibm.icu.text.DateFormat$BooleanAttribute PARSE_MULTIPLE_PATTERNS_FOR_MATCH -> PARSE_MULTIPLE_PATTERNS_FOR_MATCH
    com.ibm.icu.text.DateFormat$BooleanAttribute PARSE_PARTIAL_LITERAL_MATCH -> PARSE_PARTIAL_LITERAL_MATCH
    com.ibm.icu.text.DateFormat$BooleanAttribute PARSE_PARTIAL_MATCH -> PARSE_PARTIAL_MATCH
    com.ibm.icu.text.DateFormat$BooleanAttribute[] $VALUES -> a
    481:481:com.ibm.icu.text.DateFormat$BooleanAttribute[] values() -> values
    481:481:com.ibm.icu.text.DateFormat$BooleanAttribute valueOf(java.lang.String) -> valueOf
    481:481:void <init>(java.lang.String,int) -> <init>
    481:512:void <clinit>() -> <clinit>
com.ibm.icu.text.DateFormat$Field -> com.ibm.icu.text.DateFormat$Field:
    long serialVersionUID -> serialVersionUID
    int CAL_FIELD_COUNT -> a
    com.ibm.icu.text.DateFormat$Field[] CAL_FIELDS -> b
    java.util.Map FIELD_NAME_MAP -> c
    com.ibm.icu.text.DateFormat$Field AM_PM -> AM_PM
    com.ibm.icu.text.DateFormat$Field DAY_OF_MONTH -> DAY_OF_MONTH
    com.ibm.icu.text.DateFormat$Field DAY_OF_WEEK -> DAY_OF_WEEK
    com.ibm.icu.text.DateFormat$Field DAY_OF_WEEK_IN_MONTH -> DAY_OF_WEEK_IN_MONTH
    com.ibm.icu.text.DateFormat$Field DAY_OF_YEAR -> DAY_OF_YEAR
    com.ibm.icu.text.DateFormat$Field ERA -> ERA
    com.ibm.icu.text.DateFormat$Field HOUR_OF_DAY0 -> HOUR_OF_DAY0
    com.ibm.icu.text.DateFormat$Field HOUR_OF_DAY1 -> HOUR_OF_DAY1
    com.ibm.icu.text.DateFormat$Field HOUR0 -> HOUR0
    com.ibm.icu.text.DateFormat$Field HOUR1 -> HOUR1
    com.ibm.icu.text.DateFormat$Field MILLISECOND -> MILLISECOND
    com.ibm.icu.text.DateFormat$Field MINUTE -> MINUTE
    com.ibm.icu.text.DateFormat$Field MONTH -> MONTH
    com.ibm.icu.text.DateFormat$Field SECOND -> SECOND
    com.ibm.icu.text.DateFormat$Field TIME_ZONE -> TIME_ZONE
    com.ibm.icu.text.DateFormat$Field WEEK_OF_MONTH -> WEEK_OF_MONTH
    com.ibm.icu.text.DateFormat$Field WEEK_OF_YEAR -> WEEK_OF_YEAR
    com.ibm.icu.text.DateFormat$Field YEAR -> YEAR
    com.ibm.icu.text.DateFormat$Field DOW_LOCAL -> DOW_LOCAL
    com.ibm.icu.text.DateFormat$Field EXTENDED_YEAR -> EXTENDED_YEAR
    com.ibm.icu.text.DateFormat$Field JULIAN_DAY -> JULIAN_DAY
    com.ibm.icu.text.DateFormat$Field MILLISECONDS_IN_DAY -> MILLISECONDS_IN_DAY
    com.ibm.icu.text.DateFormat$Field YEAR_WOY -> YEAR_WOY
    com.ibm.icu.text.DateFormat$Field QUARTER -> QUARTER
    com.ibm.icu.text.DateFormat$Field RELATED_YEAR -> RELATED_YEAR
    com.ibm.icu.text.DateFormat$Field TIME_SEPARATOR -> TIME_SEPARATOR
    int calendarField -> d
    2486:2494:void <init>(java.lang.String,int) -> <init>
    2510:2513:com.ibm.icu.text.DateFormat$Field ofCalendarField(int) -> ofCalendarField
    2526:2526:int getCalendarField() -> getCalendarField
    2538:2549:java.lang.Object readResolve() -> readResolve
    2288:2460:void <clinit>() -> <clinit>
com.ibm.icu.text.DateFormatSymbols -> com.ibm.icu.text.DateFormatSymbols:
    int FORMAT -> FORMAT
    int STANDALONE -> STANDALONE
    int NUMERIC -> NUMERIC
    int DT_CONTEXT_COUNT -> DT_CONTEXT_COUNT
    int ABBREVIATED -> ABBREVIATED
    int WIDE -> WIDE
    int NARROW -> NARROW
    int SHORT -> SHORT
    int DT_WIDTH_COUNT -> DT_WIDTH_COUNT
    java.lang.String[] eras -> a
    java.lang.String[] eraNames -> b
    java.lang.String[] narrowEras -> c
    java.lang.String[] months -> d
    java.lang.String[] shortMonths -> e
    java.lang.String[] narrowMonths -> f
    java.lang.String[] standaloneMonths -> g
    java.lang.String[] standaloneShortMonths -> h
    java.lang.String[] standaloneNarrowMonths -> i
    java.lang.String[] weekdays -> j
    java.lang.String[] shortWeekdays -> k
    java.lang.String[] shorterWeekdays -> l
    java.lang.String[] narrowWeekdays -> m
    java.lang.String[] standaloneWeekdays -> n
    java.lang.String[] standaloneShortWeekdays -> o
    java.lang.String[] standaloneShorterWeekdays -> p
    java.lang.String[] standaloneNarrowWeekdays -> q
    java.lang.String[] ampms -> r
    java.lang.String[] ampmsNarrow -> s
    java.lang.String timeSeparator -> B
    java.lang.String[] shortQuarters -> t
    java.lang.String[] quarters -> u
    java.lang.String[] standaloneShortQuarters -> v
    java.lang.String[] standaloneQuarters -> w
    java.lang.String[] leapMonthPatterns -> x
    java.lang.String[] shortYearNames -> y
    java.lang.String[] shortZodiacNames -> C
    java.lang.String[][] zoneStrings -> D
    java.lang.String localPatternChars -> z
    long serialVersionUID -> serialVersionUID
    java.lang.String[][] CALENDAR_CLASSES -> E
    java.util.Map contextUsageTypeMap -> F
    java.util.Map capitalization -> A
    com.ibm.icu.impl.ICUCache DFSCACHE -> G
    com.ibm.icu.util.ULocale requestedLocale -> H
    com.ibm.icu.util.ULocale validLocale -> I
    com.ibm.icu.util.ULocale actualLocale -> J
    221:222:void <init>() -> <init>
    234:235:void <init>(java.util.Locale) -> <init>
    246:674:void <init>(com.ibm.icu.util.ULocale) -> <init>
    262:262:com.ibm.icu.text.DateFormatSymbols getInstance() -> getInstance
    278:278:com.ibm.icu.text.DateFormatSymbols getInstance(java.util.Locale) -> getInstance
    294:294:com.ibm.icu.text.DateFormatSymbols getInstance(com.ibm.icu.util.ULocale) -> getInstance
    311:311:java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    329:329:com.ibm.icu.util.ULocale[] getAvailableULocales() -> getAvailableULocales
    682:682:java.lang.String[] getEras() -> getEras
    691:692:void setEras(java.lang.String[]) -> setEras
    700:700:java.lang.String[] getEraNames() -> getEraNames
    709:710:void setEraNames(java.lang.String[]) -> setEraNames
    718:718:java.lang.String[] getMonths() -> getMonths
    730:764:java.lang.String[] getMonths(int,int) -> getMonths
    773:774:void setMonths(java.lang.String[]) -> setMonths
    785:817:void setMonths(java.lang.String[],int,int) -> setMonths
    825:825:java.lang.String[] getShortMonths() -> getShortMonths
    834:835:void setShortMonths(java.lang.String[]) -> setShortMonths
    844:844:java.lang.String[] getWeekdays() -> getWeekdays
    857:895:java.lang.String[] getWeekdays(int,int) -> getWeekdays
    907:941:void setWeekdays(java.lang.String[],int,int) -> setWeekdays
    951:952:void setWeekdays(java.lang.String[]) -> setWeekdays
    963:963:java.lang.String[] getShortWeekdays() -> getShortWeekdays
    976:977:void setShortWeekdays(java.lang.String[]) -> setShortWeekdays
    987:1022:java.lang.String[] getQuarters(int,int) -> getQuarters
    1034:1066:void setQuarters(java.lang.String[],int,int) -> setQuarters
    1079:1082:java.lang.String[] getYearNames(int,int) -> getYearNames
    1093:1096:void setYearNames(java.lang.String[],int,int) -> setYearNames
    1109:1112:java.lang.String[] getZodiacNames(int,int) -> getZodiacNames
    1123:1126:void setZodiacNames(java.lang.String[],int,int) -> setZodiacNames
    1140:1180:java.lang.String getLeapMonthPattern(int,int) -> getLeapMonthPattern
    1193:1236:void setLeapMonthPattern(java.lang.String,int,int) -> setLeapMonthPattern
    1244:1244:java.lang.String[] getAmPmStrings() -> getAmPmStrings
    1253:1254:void setAmPmStrings(java.lang.String[]) -> setAmPmStrings
    1263:1263:java.lang.String getTimeSeparatorString() -> getTimeSeparatorString
    1273:1274:void setTimeSeparatorString(java.lang.String) -> setTimeSeparatorString
    1302:1326:java.lang.String[][] getZoneStrings() -> getZoneStrings
    1346:1347:void setZoneStrings(java.lang.String[][]) -> setZoneStrings
    1359:1359:java.lang.String getLocalPatternChars() -> getLocalPatternChars
    1369:1370:void setLocalPatternChars(java.lang.String) -> setLocalPatternChars
    1379:1383:java.lang.Object clone() -> clone
    1395:1395:int hashCode() -> hashCode
    1404:1407:boolean equals(java.lang.Object) -> equals
    1456:1474:void initializeData(com.ibm.icu.util.ULocale,java.lang.String) -> initializeData
    1482:1518:void initializeData(com.ibm.icu.text.DateFormatSymbols) -> a
    1534:1702:void initializeData(com.ibm.icu.util.ULocale,com.ibm.icu.impl.CalendarData) -> initializeData
    1705:1721:boolean arrayOfArrayEquals(java.lang.Object[][],java.lang.Object[][]) -> a
    1736:1736:java.lang.String[] duplicate(java.lang.String[]) -> a
    1741:1744:java.lang.String[][] duplicate(java.lang.String[][]) -> a
    337:1826:void <init>(com.ibm.icu.util.Calendar,java.util.Locale) -> <init>
    337:1890:void <init>(com.ibm.icu.util.Calendar,com.ibm.icu.util.ULocale) -> <init>
    1899:1900:void <init>(java.lang.Class,java.util.Locale) -> <init>
    337:1924:void <init>(java.lang.Class,com.ibm.icu.util.ULocale) -> <init>
    1934:1935:void <init>(java.util.ResourceBundle,java.util.Locale) -> <init>
    337:1947:void <init>(java.util.ResourceBundle,com.ibm.icu.util.ULocale) -> <init>
    1968:1968:java.util.ResourceBundle getDateFormatBundle(java.lang.Class,java.util.Locale) -> getDateFormatBundle
    1990:1990:java.util.ResourceBundle getDateFormatBundle(java.lang.Class,com.ibm.icu.util.ULocale) -> getDateFormatBundle
    2006:2006:java.util.ResourceBundle getDateFormatBundle(com.ibm.icu.util.Calendar,java.util.Locale) -> getDateFormatBundle
    2022:2022:java.util.ResourceBundle getDateFormatBundle(com.ibm.icu.util.Calendar,com.ibm.icu.util.ULocale) -> getDateFormatBundle
    2052:2052:com.ibm.icu.util.ULocale getLocale(com.ibm.icu.util.ULocale$Type) -> getLocale
    2074:2083:void setLocale(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> a
    2105:2106:void readObject(java.io.ObjectInputStream) -> readObject
    612:1443:void <clinit>() -> <clinit>
com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage -> com.ibm.icu.text.aM:
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage OTHER -> a
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage MONTH_FORMAT -> b
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage MONTH_STANDALONE -> c
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage MONTH_NARROW -> d
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage DAY_FORMAT -> e
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage DAY_STANDALONE -> f
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage DAY_NARROW -> g
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage ERA_WIDE -> h
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage ERA_ABBREV -> i
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage ERA_NARROW -> j
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage ZONE_LONG -> k
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage ZONE_SHORT -> l
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage METAZONE_LONG -> m
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage METAZONE_SHORT -> n
    com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage[] $VALUES -> o
    631:631:com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage[] values() -> values
    631:631:com.ibm.icu.text.DateFormatSymbols$CapitalizationContextUsage valueOf(java.lang.String) -> valueOf
    631:631:void <init>(java.lang.String,int) -> <init>
    631:645:void <clinit>() -> <clinit>
com.ibm.icu.text.DateIntervalFormat -> com.ibm.icu.text.DateIntervalFormat:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.impl.ICUCache LOCAL_PATTERN_CACHE -> a
    com.ibm.icu.text.DateIntervalInfo fInfo -> b
    com.ibm.icu.text.SimpleDateFormat fDateFormat -> c
    com.ibm.icu.util.Calendar fFromCalendar -> d
    com.ibm.icu.util.Calendar fToCalendar -> e
    java.lang.String fSkeleton -> f
    boolean isDateIntervalInfoDefault -> g
    java.util.Map fIntervalPatterns -> h
    java.lang.String fDatePattern -> i
    java.lang.String fTimePattern -> j
    java.lang.String fDateTimeFormat -> k
    315:341:void <init>() -> <init>
    315:372:void <init>(java.lang.String,com.ibm.icu.text.DateIntervalInfo,com.ibm.icu.text.SimpleDateFormat) -> <init>
    315:384:void <init>(java.lang.String,com.ibm.icu.util.ULocale,com.ibm.icu.text.SimpleDateFormat) -> <init>
    403:403:com.ibm.icu.text.DateIntervalFormat getInstance(java.lang.String) -> getInstance
    422:422:com.ibm.icu.text.DateIntervalFormat getInstance(java.lang.String,java.util.Locale) -> getInstance
    458:459:com.ibm.icu.text.DateIntervalFormat getInstance(java.lang.String,com.ibm.icu.util.ULocale) -> getInstance
    481:481:com.ibm.icu.text.DateIntervalFormat getInstance(java.lang.String,com.ibm.icu.text.DateIntervalInfo) -> getInstance
    504:504:com.ibm.icu.text.DateIntervalFormat getInstance(java.lang.String,java.util.Locale,com.ibm.icu.text.DateIntervalInfo) -> getInstance
    551:553:com.ibm.icu.text.DateIntervalFormat getInstance(java.lang.String,com.ibm.icu.util.ULocale,com.ibm.icu.text.DateIntervalInfo) -> getInstance
    564:572:java.lang.Object clone() -> clone
    599:603:java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    625:627:java.lang.StringBuffer format(com.ibm.icu.util.DateInterval,java.lang.StringBuffer,java.text.FieldPosition) -> format
    640:669:java.lang.String getPatterns(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,com.ibm.icu.util.Output) -> getPatterns
    695:780:java.lang.StringBuffer format(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition) -> format
    787:814:void adjustPosition(java.lang.String,java.lang.String,java.text.FieldPosition,java.lang.String,java.text.FieldPosition,java.text.FieldPosition) -> a
    837:869:java.lang.StringBuffer fallbackFormat(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,boolean,java.lang.StringBuffer,java.text.FieldPosition) -> a
    896:900:java.lang.StringBuffer fallbackFormat(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,boolean,java.lang.StringBuffer,java.text.FieldPosition,java.lang.String) -> a
    932:932:java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    944:944:com.ibm.icu.text.DateIntervalInfo getDateIntervalInfo() -> getDateIntervalInfo
    957:963:void setDateIntervalInfo(com.ibm.icu.text.DateIntervalInfo) -> setDateIntervalInfo
    972:979:com.ibm.icu.util.TimeZone getTimeZone() -> getTimeZone
    991:1003:void setTimeZone(com.ibm.icu.util.TimeZone) -> setTimeZone
    1013:1013:com.ibm.icu.text.DateFormat getDateFormat() -> getDateFormat
    1025:1045:void initializePattern(com.ibm.icu.impl.ICUCache) -> a
    1086:1251:java.util.Map initializeIntervalPattern(java.lang.String,com.ibm.icu.util.ULocale) -> a
    1266:1275:void genFallbackPattern(int,java.lang.String,java.util.Map,com.ibm.icu.text.DateTimePatternGenerator) -> a
    1327:1457:void getDateTimeSkeleton(java.lang.String,java.lang.StringBuilder,java.lang.StringBuilder,java.lang.StringBuilder,java.lang.StringBuilder) -> a
    1494:1551:boolean genSeparateDateTimePtn(java.lang.String,java.lang.String,java.util.Map,com.ibm.icu.text.DateTimePatternGenerator) -> a
    1581:1654:com.ibm.icu.text.DateIntervalFormat$SkeletonAndItsBestMatch genIntervalPattern(int,java.lang.String,java.lang.String,int,java.util.Map) -> a
    1690:1780:java.lang.String adjustFieldWidth(java.lang.String,java.lang.String,java.lang.String,int) -> a
    1801:1815:void concatSingleDate2TimeInterval(java.lang.String,java.lang.String,int,java.util.Map) -> a
    1826:1827:boolean fieldExistsInSkeleton(int,java.lang.String) -> a
    1836:1838:void readObject(java.io.ObjectInputStream) -> readObject
    1848:1848:java.util.Map getRawPatterns() -> getRawPatterns
    290:290:void <clinit>() -> <clinit>
com.ibm.icu.text.DateIntervalFormat$BestMatchInfo -> com.ibm.icu.text.aN:
    java.lang.String bestMatchSkeleton -> a
    int bestMatchDistanceInfo -> b
    269:272:void <init>(java.lang.String,int) -> <init>
com.ibm.icu.text.DateIntervalFormat$SkeletonAndItsBestMatch -> com.ibm.icu.text.aO:
    java.lang.String skeleton -> a
    java.lang.String bestMatchSkeleton -> b
    282:285:void <init>(java.lang.String,java.lang.String) -> <init>
com.ibm.icu.text.DateIntervalInfo -> com.ibm.icu.text.DateIntervalInfo:
    java.lang.String DEBUG_SKELETON -> b
    java.lang.String[] CALENDAR_FIELD_TO_PATTERN_LETTER -> a
    long serialVersionUID -> serialVersionUID
    java.lang.String FALLBACK_STRING -> c
    java.lang.String LATEST_FIRST_PREFIX -> d
    java.lang.String EARLIEST_FIRST_PREFIX -> e
    com.ibm.icu.impl.ICUCache DIICACHE -> f
    java.lang.String fFallbackIntervalPattern -> g
    boolean fFirstDateInPtnIsLaterDate -> h
    java.util.Map fIntervalPatterns -> i
    boolean frozen -> j
    boolean fIntervalPatternsReadOnly -> k
    304:337:void <init>() -> <init>
    304:350:void <init>(com.ibm.icu.util.ULocale) -> <init>
    362:363:void <init>(java.util.Locale) -> <init>
    371:383:void initializeData(com.ibm.icu.util.ULocale) -> a
    392:396:void initializeFromReadOnlyPatterns(com.ibm.icu.text.DateIntervalInfo) -> a
    404:510:void setup(com.ibm.icu.util.ULocale) -> b
    519:577:int splitPatternInto2Part(java.lang.String) -> b
    619:645:void setIntervalPattern(java.lang.String,int,java.lang.String) -> setIntervalPattern
    664:688:com.ibm.icu.text.DateIntervalInfo$PatternInfo setIntervalPatternInternally(java.lang.String,java.lang.String,java.lang.String) -> a
    701:703:void setIntervalPattern(java.lang.String,java.lang.String,com.ibm.icu.text.DateIntervalInfo$PatternInfo) -> a
    718:726:com.ibm.icu.text.DateIntervalInfo$PatternInfo genPatternInfo(java.lang.String,boolean) -> genPatternInfo
    742:753:com.ibm.icu.text.DateIntervalInfo$PatternInfo getIntervalPattern(java.lang.String,int) -> getIntervalPattern
    765:765:java.lang.String getFallbackIntervalPattern() -> getFallbackIntervalPattern
    787:799:void setFallbackIntervalPattern(java.lang.String) -> setFallbackIntervalPattern
    812:812:boolean getDefaultOrder() -> getDefaultOrder
    823:826:java.lang.Object clone() -> clone
    837:851:java.lang.Object cloneUnfrozenDII() -> a
    858:870:java.util.Map cloneIntervalPatterns(java.util.Map) -> a
    880:880:boolean isFrozen() -> isFrozen
    888:890:com.ibm.icu.text.DateIntervalInfo freeze() -> freeze
    898:899:com.ibm.icu.text.DateIntervalInfo cloneAsThawed() -> cloneAsThawed
    911:915:void parseSkeleton(java.lang.String,int[]) -> a
    933:939:boolean stringNumeric(int,int,char) -> a
    958:1023:com.ibm.icu.text.DateIntervalFormat$BestMatchInfo getBestSkeleton(java.lang.String) -> a
    1031:1035:boolean equals(java.lang.Object) -> equals
    1043:1043:int hashCode() -> hashCode
    1052:1056:java.util.Map getPatterns() -> getPatterns
    1066:1070:java.util.Map getRawPatterns() -> getRawPatterns
    154:154:java.lang.Object cloneAsThawed() -> cloneAsThawed
    154:154:java.lang.Object freeze() -> freeze
    159:298:void <clinit>() -> <clinit>
com.ibm.icu.text.DateIntervalInfo$PatternInfo -> com.ibm.icu.text.DateIntervalInfo$PatternInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String fIntervalPatternFirstPart -> a
    java.lang.String fIntervalPatternSecondPart -> b
    boolean fFirstDateInPtnIsLaterDate -> c
    202:206:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    213:213:java.lang.String getFirstPart() -> getFirstPart
    221:221:java.lang.String getSecondPart() -> getSecondPart
    229:229:boolean firstDateInPtnIsLaterDate() -> firstDateInPtnIsLaterDate
    237:243:boolean equals(java.lang.Object) -> equals
    251:258:int hashCode() -> hashCode
    269:269:java.lang.String toString() -> toString
com.ibm.icu.text.DateTimePatternGenerator -> com.ibm.icu.text.DateTimePatternGenerator:
    int ERA -> ERA
    int YEAR -> YEAR
    int QUARTER -> QUARTER
    int MONTH -> MONTH
    int WEEK_OF_YEAR -> WEEK_OF_YEAR
    int WEEK_OF_MONTH -> WEEK_OF_MONTH
    int WEEKDAY -> WEEKDAY
    int DAY -> DAY
    int DAY_OF_YEAR -> DAY_OF_YEAR
    int DAY_OF_WEEK_IN_MONTH -> DAY_OF_WEEK_IN_MONTH
    int DAYPERIOD -> DAYPERIOD
    int HOUR -> HOUR
    int MINUTE -> MINUTE
    int SECOND -> SECOND
    int FRACTIONAL_SECOND -> FRACTIONAL_SECOND
    int ZONE -> ZONE
    int TYPE_LIMIT -> TYPE_LIMIT
    int MATCH_NO_OPTIONS -> MATCH_NO_OPTIONS
    int MATCH_HOUR_FIELD_LENGTH -> MATCH_HOUR_FIELD_LENGTH
    int MATCH_MINUTE_FIELD_LENGTH -> MATCH_MINUTE_FIELD_LENGTH
    int MATCH_SECOND_FIELD_LENGTH -> MATCH_SECOND_FIELD_LENGTH
    int MATCH_ALL_FIELDS_LENGTH -> MATCH_ALL_FIELDS_LENGTH
    java.util.TreeMap skeleton2pattern -> a
    java.util.TreeMap basePattern_pattern -> b
    java.lang.String decimal -> c
    java.lang.String dateTimeFormat -> d
    java.lang.String[] appendItemFormats -> e
    java.lang.String[] appendItemNames -> f
    char defaultHourFormatChar -> g
    boolean frozen -> h
    com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher current -> i
    com.ibm.icu.text.DateTimePatternGenerator$FormatParser fp -> j
    com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo _distanceInfo -> k
    com.ibm.icu.impl.ICUCache DTPNG_CACHE -> l
    java.lang.String[] CLDR_FIELD_APPEND -> m
    java.lang.String[] CLDR_FIELD_NAME -> n
    java.lang.String[] FIELD_NAME -> o
    java.lang.String[] CANONICAL_ITEMS -> p
    java.util.Set CANONICAL_SET -> q
    java.util.Set cldrAvailableFormatKeys -> r
    int[][] types -> s
    62:62:com.ibm.icu.text.DateTimePatternGenerator getEmptyInstance() -> getEmptyInstance
    69:1889:void <init>() -> <init>
    78:78:com.ibm.icu.text.DateTimePatternGenerator getInstance() -> getInstance
    87:87:com.ibm.icu.text.DateTimePatternGenerator getInstance(com.ibm.icu.util.ULocale) -> getInstance
    96:96:com.ibm.icu.text.DateTimePatternGenerator getInstance(java.util.Locale) -> getInstance
    111:250:com.ibm.icu.text.DateTimePatternGenerator getFrozenInstance(com.ibm.icu.util.ULocale) -> getFrozenInstance
    259:259:char getDefaultHourFormatChar() -> getDefaultHourFormatChar
    268:269:void setDefaultHourFormatChar(char) -> setDefaultHourFormatChar
    272:319:void hackTimes(com.ibm.icu.text.DateTimePatternGenerator,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String) -> a
    322:332:java.lang.String getFilteredPattern(com.ibm.icu.text.DateTimePatternGenerator$FormatParser,java.util.BitSet) -> a
    348:351:int getAppendFormatNumber(java.lang.String) -> getAppendFormatNumber
    356:363:boolean isCLDRFieldName(int) -> b
    377:377:java.lang.String getBestPattern(java.lang.String) -> getBestPattern
    393:393:java.lang.String getBestPattern(java.lang.String,int) -> getBestPattern
    400:437:java.lang.String getBestPattern(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int) -> a
    497:497:com.ibm.icu.text.DateTimePatternGenerator addPattern(java.lang.String,boolean,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo) -> addPattern
    516:557:com.ibm.icu.text.DateTimePatternGenerator addPatternWithSkeleton(java.lang.String,java.lang.String,boolean,com.ibm.icu.text.DateTimePatternGenerator$PatternInfo) -> addPatternWithSkeleton
    569:572:java.lang.String getSkeleton(java.lang.String) -> getSkeleton
    585:588:java.lang.String getSkeletonAllowingDuplicates(java.lang.String) -> getSkeletonAllowingDuplicates
    602:605:java.lang.String getCanonicalSkeletonAllowingDuplicates(java.lang.String) -> getCanonicalSkeletonAllowingDuplicates
    620:623:java.lang.String getBaseSkeleton(java.lang.String) -> getBaseSkeleton
    642:653:java.util.Map getSkeletons(java.util.Map) -> getSkeletons
    661:665:java.util.Set getBaseSkeletons(java.util.Set) -> getBaseSkeletons
    681:681:java.lang.String replaceFieldTypes(java.lang.String,java.lang.String) -> replaceFieldTypes
    700:703:java.lang.String replaceFieldTypes(java.lang.String,java.lang.String,int) -> replaceFieldTypes
    725:727:void setDateTimeFormat(java.lang.String) -> setDateTimeFormat
    736:736:java.lang.String getDateTimeFormat() -> getDateTimeFormat
    751:753:void setDecimal(java.lang.String) -> setDecimal
    761:761:java.lang.String getDecimal() -> getDecimal
    778:815:java.util.Collection getRedundants(java.util.Collection) -> getRedundants
    967:969:void setAppendItemFormat(int,java.lang.String) -> setAppendItemFormat
    980:980:java.lang.String getAppendItemFormat(int) -> getAppendItemFormat
    995:997:void setAppendItemName(int,java.lang.String) -> setAppendItemName
    1008:1008:java.lang.String getAppendItemName(int) -> getAppendItemName
    1021:1025:boolean isSingleField(java.lang.String) -> isSingleField
    1035:1037:void setAvailableFormat(java.lang.String) -> a
    1051:1051:boolean isAvailableFormatSet(java.lang.String) -> b
    1059:1059:boolean isFrozen() -> isFrozen
    1067:1068:com.ibm.icu.text.DateTimePatternGenerator freeze() -> freeze
    1076:1078:com.ibm.icu.text.DateTimePatternGenerator cloneAsThawed() -> cloneAsThawed
    1088:1101:java.lang.Object clone() -> clone
    1529:1547:boolean skeletonsAreSimilar(java.lang.String,java.lang.String) -> skeletonsAreSimilar
    1551:1560:java.util.TreeSet getSet(java.lang.String) -> c
    1614:1617:void checkFrozen() -> c
    1624:1651:java.lang.String getBestAppending(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,java.util.EnumSet,int) -> a
    1655:1655:java.lang.String getAppendName(int) -> c
    1658:1658:java.lang.String getAppendFormat(int) -> d
    1674:1679:int getTopBitNumber(int) -> e
    1686:1693:void complete() -> d
    1704:1731:com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher getBestRaw(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher) -> a
    1741:1818:java.lang.String adjustFieldTypes(com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,java.util.EnumSet,int) -> a
    1838:1847:java.lang.String getFields(java.lang.String) -> getFields
    1851:1860:java.lang.String showMask(int) -> f
    1907:1914:java.lang.String getName(java.lang.String) -> d
    1923:1943:int getCanonicalIndex(java.lang.String,boolean) -> b
    50:50:java.lang.Object cloneAsThawed() -> cloneAsThawed
    50:50:java.lang.Object freeze() -> freeze
    50:50:int access$300(java.lang.String,boolean) -> a
    50:50:int[][] access$400() -> a
    50:50:java.lang.String[] access$500() -> b
    50:50:java.lang.String access$900(int) -> a
    1611:1946:void <clinit>() -> <clinit>
com.ibm.icu.text.DateTimePatternGenerator$DTPGflags -> com.ibm.icu.text.aP:
    com.ibm.icu.text.DateTimePatternGenerator$DTPGflags FIX_FRACTIONAL_SECONDS -> a
    com.ibm.icu.text.DateTimePatternGenerator$DTPGflags SKELETON_USES_CAP_J -> b
    com.ibm.icu.text.DateTimePatternGenerator$DTPGflags[] $VALUES -> c
    1738:1738:com.ibm.icu.text.DateTimePatternGenerator$DTPGflags[] values() -> values
    1738:1738:com.ibm.icu.text.DateTimePatternGenerator$DTPGflags valueOf(java.lang.String) -> valueOf
    1738:1738:void <init>(java.lang.String,int) -> <init>
    1738:1738:void <clinit>() -> <clinit>
com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher -> com.ibm.icu.text.aQ:
    int[] type -> a
    java.lang.String[] original -> b
    java.lang.String[] baseOriginal -> c
    2032:2036:void <init>() -> <init>
    2042:2042:java.lang.String origStringForField(int) -> a
    2046:2046:boolean fieldIsNumeric(int) -> b
    2050:2054:java.lang.String toString() -> toString
    2061:2076:java.lang.String toCanonicalString() -> a
    2080:2084:java.lang.String getBasePattern() -> b
    2088:2127:com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher set(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$FormatParser,boolean) -> a
    2134:2138:int getFieldMask() -> c
    2158:2174:int getDistance(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher,int,com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo) -> a
    2178:2182:int compareTo(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher) -> c
    2186:2193:boolean equals(java.lang.Object) -> equals
    2196:2200:int hashCode() -> hashCode
    2032:2032:int compareTo(java.lang.Object) -> compareTo
    2032:2032:void <init>(byte) -> <init>
    2032:2032:java.lang.String[] access$600(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher) -> a
    2032:2032:int[] access$700(com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher) -> b
com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo -> com.ibm.icu.text.aR:
    int missingFieldMask -> a
    int extraFieldMask -> b
    2204:2204:void <init>() -> <init>
    2208:2209:void clear() -> a
    2214:2216:void setTo(com.ibm.icu.text.DateTimePatternGenerator$DistanceInfo) -> a
    2218:2219:void addMissing(int) -> a
    2221:2222:void addExtra(int) -> b
    2224:2224:java.lang.String toString() -> toString
    2204:2204:void <init>(byte) -> <init>
com.ibm.icu.text.DateTimePatternGenerator$FormatParser -> com.ibm.icu.text.DateTimePatternGenerator$FormatParser:
    com.ibm.icu.text.UnicodeSet SYNTAX_CHARS -> a
    com.ibm.icu.text.UnicodeSet QUOTING_CHARS -> b
    com.ibm.icu.impl.PatternTokenizer tokenizer -> c
    java.util.List items -> d
    1233:1246:void <init>() -> <init>
    1257:1257:com.ibm.icu.text.DateTimePatternGenerator$FormatParser set(java.lang.String) -> set
    1270:1290:com.ibm.icu.text.DateTimePatternGenerator$FormatParser set(java.lang.String,boolean) -> set
    1294:1298:void addVariable(java.lang.StringBuffer,boolean) -> a
    1350:1350:java.util.List getItems() -> getItems
    1360:1360:java.lang.String toString() -> toString
    1373:1383:java.lang.String toString(int,int) -> toString
    1394:1403:boolean hasDateAndTimeFields() -> hasDateAndTimeFields
    1506:1506:java.lang.Object quoteLiteral(java.lang.String) -> quoteLiteral
    1230:1230:java.util.List access$000(com.ibm.icu.text.DateTimePatternGenerator$FormatParser) -> a
    1231:1232:void <clinit>() -> <clinit>
com.ibm.icu.text.DateTimePatternGenerator$PatternInfo -> com.ibm.icu.text.DateTimePatternGenerator$PatternInfo:
    int OK -> OK
    int BASE_CONFLICT -> BASE_CONFLICT
    int CONFLICT -> CONFLICT
    int status -> status
    java.lang.String conflictingPattern -> conflictingPattern
    477:478:void <init>() -> <init>
com.ibm.icu.text.DateTimePatternGenerator$PatternWithMatcher -> com.ibm.icu.text.aS:
    java.lang.String pattern -> a
    com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher matcherWithSkeleton -> b
    1569:1572:void <init>(java.lang.String,com.ibm.icu.text.DateTimePatternGenerator$DateTimeMatcher) -> <init>
com.ibm.icu.text.DateTimePatternGenerator$PatternWithSkeletonFlag -> com.ibm.icu.text.aT:
    java.lang.String pattern -> a
    boolean skeletonWasSpecified -> b
    1578:1581:void <init>(java.lang.String,boolean) -> <init>
    1583:1583:java.lang.String toString() -> toString
com.ibm.icu.text.DateTimePatternGenerator$VariableField -> com.ibm.icu.text.DateTimePatternGenerator$VariableField:
    java.lang.String string -> a
    int canonicalIndex -> b
    1129:1130:void <init>(java.lang.String) -> <init>
    1140:1147:void <init>(java.lang.String,boolean) -> <init>
    1159:1159:int getType() -> getType
    1169:1171:java.lang.String getCanonicalCode(int) -> getCanonicalCode
    1182:1182:boolean isNumeric() -> isNumeric
    1189:1189:int getCanonicalIndex() -> a
    1199:1199:java.lang.String toString() -> toString
    1117:1117:int access$800(com.ibm.icu.text.DateTimePatternGenerator$VariableField) -> a
com.ibm.icu.text.DecimalFormat -> com.ibm.icu.text.DecimalFormat:
    double epsilon -> d
    com.ibm.icu.text.UnicodeSet dotEquivalents -> e
    com.ibm.icu.text.UnicodeSet commaEquivalents -> f
    com.ibm.icu.text.UnicodeSet strictDotEquivalents -> g
    com.ibm.icu.text.UnicodeSet strictCommaEquivalents -> h
    com.ibm.icu.text.UnicodeSet defaultGroupingSeparators -> i
    com.ibm.icu.text.UnicodeSet strictDefaultGroupingSeparators -> j
    com.ibm.icu.text.UnicodeSet minusSigns -> a
    com.ibm.icu.text.UnicodeSet plusSigns -> b
    boolean skipExtendedSeparatorParsing -> k
    boolean parseRequireDecimalPoint -> l
    int PARSE_MAX_EXPONENT -> m
    com.ibm.icu.text.DigitList digitList -> n
    java.lang.String positivePrefix -> o
    java.lang.String positiveSuffix -> p
    java.lang.String negativePrefix -> q
    java.lang.String negativeSuffix -> r
    java.lang.String posPrefixPattern -> s
    java.lang.String posSuffixPattern -> t
    java.lang.String negPrefixPattern -> u
    java.lang.String negSuffixPattern -> v
    java.text.ChoiceFormat currencyChoice -> w
    int multiplier -> x
    byte groupingSize -> y
    byte groupingSize2 -> z
    boolean decimalSeparatorAlwaysShown -> A
    com.ibm.icu.text.DecimalFormatSymbols symbols -> B
    boolean useSignificantDigits -> C
    int minSignificantDigits -> D
    int maxSignificantDigits -> E
    boolean useExponentialNotation -> F
    byte minExponentDigits -> G
    boolean exponentSignAlwaysShown -> H
    java.math.BigDecimal roundingIncrement -> I
    com.ibm.icu.math.BigDecimal roundingIncrementICU -> J
    int roundingMode -> K
    com.ibm.icu.math.MathContext mathContext -> L
    int formatWidth -> M
    char pad -> N
    int padPosition -> O
    boolean parseBigDecimal -> P
    com.ibm.icu.util.Currency$CurrencyUsage currencyUsage -> Q
    int serialVersionOnStream -> R
    int PAD_BEFORE_PREFIX -> PAD_BEFORE_PREFIX
    int PAD_AFTER_PREFIX -> PAD_AFTER_PREFIX
    int PAD_BEFORE_SUFFIX -> PAD_BEFORE_SUFFIX
    int PAD_AFTER_SUFFIX -> PAD_AFTER_SUFFIX
    long serialVersionUID -> serialVersionUID
    java.util.ArrayList attributes -> S
    java.lang.String formatPattern -> T
    int style -> U
    int currencySignCount -> V
    java.util.Set affixPatternsForCurrency -> W
    boolean isReadyForParsing -> X
    com.ibm.icu.text.CurrencyPluralInfo currencyPluralInfo -> Y
    com.ibm.icu.text.DecimalFormat$Unit NULL_UNIT -> c
    com.ibm.icu.math.BigDecimal actualRoundingIncrementICU -> Z
    java.math.BigDecimal actualRoundingIncrement -> aa
    double roundingDouble -> ab
    double roundingDoubleReciprocal -> ac
    627:6126:void <init>() -> <init>
    661:6126:void <init>(java.lang.String) -> <init>
    693:6126:void <init>(java.lang.String,com.ibm.icu.text.DecimalFormatSymbols) -> <init>
    699:711:void createFromPatternAndSymbols(java.lang.String,com.ibm.icu.text.DecimalFormatSymbols) -> a
    740:6126:void <init>(java.lang.String,com.ibm.icu.text.DecimalFormatSymbols,com.ibm.icu.text.CurrencyPluralInfo,int) -> <init>
    750:767:void create(java.lang.String,com.ibm.icu.text.DecimalFormatSymbols,com.ibm.icu.text.CurrencyPluralInfo,int) -> a
    773:6126:void <init>(java.lang.String,com.ibm.icu.text.DecimalFormatSymbols,int) -> <init>
    787:787:java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition) -> format
    801:801:boolean isNegative(double) -> e
    807:819:double round(double) -> f
    825:828:double multiply(double) -> g
    835:929:java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition,boolean) -> a
    946:953:double adjustNumberAsInFormatting(double) -> a
    958:960:com.ibm.icu.text.DigitList toDigitList(double) -> b
    974:977:boolean isNumberNegative(double) -> c
    1002:1070:double round(double,double,double,int,boolean) -> a
    1081:1081:java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition) -> format
    1086:1130:java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition,boolean) -> a
    1141:1141:java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.FieldPosition) -> format
    1148:1166:java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.FieldPosition,boolean) -> a
    1177:1177:java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition) -> format
    1183:1200:java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition,boolean) -> a
    1215:1233:java.lang.StringBuffer format(com.ibm.icu.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition) -> format
    1245:1253:boolean isGroupingPosition(int) -> a
    1262:1267:int precision(boolean) -> a
    1273:1279:java.lang.StringBuffer subformat(int,java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean,boolean) -> a
    1288:1288:com.ibm.icu.text.PluralRules$FixedDecimal getFixedDecimal(double) -> d
    1292:1326:com.ibm.icu.text.PluralRules$FixedDecimal getFixedDecimal(double,com.ibm.icu.text.DigitList) -> a
    1332:1338:java.lang.StringBuffer subformat(double,java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean,boolean) -> a
    1355:1369:java.lang.StringBuffer subformat(java.lang.String,java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean,boolean) -> a
    1398:1412:java.lang.StringBuffer subformat(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean,boolean) -> a
    1419:1618:void subformatFixed(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean) -> a
    1623:1838:void subformatExponential(java.lang.StringBuffer,java.text.FieldPosition,boolean) -> a
    1842:1869:void addPadding(java.lang.StringBuffer,java.text.FieldPosition,int,int) -> a
    1891:1891:java.lang.Number parse(java.lang.String,java.text.ParsePosition) -> parse
    1910:1911:com.ibm.icu.util.CurrencyAmount parseCurrency(java.lang.CharSequence,java.text.ParsePosition) -> parseCurrency
    1928:2026:java.lang.Object parse(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[]) -> a
    2031:2135:boolean parseForCurrency(java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Currency[],boolean[]) -> a
    2141:2177:void setupCurrencyAffixForAllPatterns() -> a
    2362:2744:boolean subparse(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.DigitList,boolean[],com.ibm.icu.util.Currency[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int) -> a
    2749:2755:int countCodePoints(java.lang.String,int,int) -> a
    2762:2776:com.ibm.icu.text.UnicodeSet getEquivalentDecimals(char,boolean) -> a
    2785:2788:int skipPadding(java.lang.String,int) -> a
    2810:2816:int compareAffix(java.lang.String,int,boolean,boolean,java.lang.String,boolean,int,com.ibm.icu.util.Currency[]) -> a
    2825:2825:boolean isBidiMark(int) -> b
    2832:2854:java.lang.String trimMarksFromAffix(java.lang.String) -> a
    2868:2936:int compareSimpleAffix(java.lang.String,java.lang.String,int) -> a
    2940:2940:boolean equalWithSignCompatibility(int,int) -> a
    2949:2956:int skipPatternWhiteSpace(java.lang.String,int) -> b
    2963:2970:int skipUWhiteSpace(java.lang.String,int) -> c
    2977:2984:int skipBidiMarks(java.lang.String,int) -> d
    3002:3095:int compareComplexAffix(java.lang.String,java.lang.String,int,int,com.ibm.icu.util.Currency[]) -> a
    3104:3122:int match(java.lang.String,int,int) -> b
    3131:3139:int match(java.lang.String,int,java.lang.String) -> a
    3152:3154:com.ibm.icu.text.DecimalFormatSymbols getDecimalFormatSymbols() -> getDecimalFormatSymbols
    3167:3170:void setDecimalFormatSymbols(com.ibm.icu.text.DecimalFormatSymbols) -> setDecimalFormatSymbols
    3187:3196:void setCurrencyForSymbols() -> b
    3206:3206:java.lang.String getPositivePrefix() -> getPositivePrefix
    3217:3219:void setPositivePrefix(java.lang.String) -> setPositivePrefix
    3230:3230:java.lang.String getNegativePrefix() -> getNegativePrefix
    3241:3243:void setNegativePrefix(java.lang.String) -> setNegativePrefix
    3254:3254:java.lang.String getPositiveSuffix() -> getPositiveSuffix
    3265:3267:void setPositiveSuffix(java.lang.String) -> setPositiveSuffix
    3278:3278:java.lang.String getNegativeSuffix() -> getNegativeSuffix
    3289:3291:void setNegativeSuffix(java.lang.String) -> setNegativeSuffix
    3305:3305:int getMultiplier() -> getMultiplier
    3320:3324:void setMultiplier(int) -> setMultiplier
    3337:3339:java.math.BigDecimal getRoundingIncrement() -> getRoundingIncrement
    3355:3360:void setRoundingIncrement(java.math.BigDecimal) -> setRoundingIncrement
    3375:3385:void setRoundingIncrement(com.ibm.icu.math.BigDecimal) -> setRoundingIncrement
    3400:3411:void setRoundingIncrement(double) -> setRoundingIncrement
    3426:3426:int getRoundingMode() -> getRoundingMode
    3444:3450:void setRoundingMode(int) -> setRoundingMode
    3465:3465:int getFormatWidth() -> getFormatWidth
    3484:3488:void setFormatWidth(int) -> setFormatWidth
    3502:3502:char getPadCharacter() -> getPadCharacter
    3518:3519:void setPadCharacter(char) -> setPadCharacter
    3541:3541:int getPadPosition() -> getPadPosition
    3565:3569:void setPadPosition(int) -> setPadPosition
    3583:3583:boolean isScientificNotation() -> isScientificNotation
    3602:3603:void setScientificNotation(boolean) -> setScientificNotation
    3617:3617:byte getMinimumExponentDigits() -> getMinimumExponentDigits
    3635:3639:void setMinimumExponentDigits(byte) -> setMinimumExponentDigits
    3655:3655:boolean isExponentSignAlwaysShown() -> isExponentSignAlwaysShown
    3673:3674:void setExponentSignAlwaysShown(boolean) -> setExponentSignAlwaysShown
    3687:3687:int getGroupingSize() -> getGroupingSize
    3701:3702:void setGroupingSize(int) -> setGroupingSize
    3720:3720:int getSecondaryGroupingSize() -> getSecondaryGroupingSize
    3734:3735:void setSecondaryGroupingSize(int) -> setSecondaryGroupingSize
    3745:3745:com.ibm.icu.math.MathContext getMathContextICU() -> getMathContextICU
    3758:3761:java.math.MathContext getMathContext() -> getMathContext
    3773:3774:void setMathContextICU(com.ibm.icu.math.MathContext) -> setMathContextICU
    3784:3786:void setMathContext(java.math.MathContext) -> setMathContext
    3796:3796:boolean isDecimalSeparatorAlwaysShown() -> isDecimalSeparatorAlwaysShown
    3808:3809:void setDecimalPatternMatchRequired(boolean) -> setDecimalPatternMatchRequired
    3818:3818:boolean isDecimalPatternMatchRequired() -> isDecimalPatternMatchRequired
    3837:3838:void setDecimalSeparatorAlwaysShown(boolean) -> setDecimalSeparatorAlwaysShown
    3854:3857:com.ibm.icu.text.CurrencyPluralInfo getCurrencyPluralInfo() -> getCurrencyPluralInfo
    3870:3872:void setCurrencyPluralInfo(com.ibm.icu.text.CurrencyPluralInfo) -> setCurrencyPluralInfo
    3881:3895:java.lang.Object clone() -> clone
    3905:3914:boolean equals(java.lang.Object) -> equals
    3936:3943:boolean equals(java.lang.String,java.lang.String) -> a
    3947:3955:java.lang.String unquote(java.lang.String) -> b
    3987:3987:int hashCode() -> hashCode
    3999:4006:java.lang.String toPattern() -> toPattern
    4017:4020:java.lang.String toLocalizedPattern() -> toLocalizedPattern
    4038:4058:void expandAffixes(java.lang.String) -> c
    4095:4200:void expandAffix(java.lang.String,java.lang.String,java.lang.StringBuffer,boolean) -> a
    4215:4296:int appendAffix(java.lang.StringBuffer,boolean,boolean,java.text.FieldPosition,boolean) -> a
    4303:4309:void formatAffix2Attribute(boolean,com.ibm.icu.text.NumberFormat$Field,java.lang.StringBuffer,int,int) -> a
    4315:4319:void addAttribute(com.ibm.icu.text.NumberFormat$Field,int,int) -> a
    4328:4328:java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object) -> formatToCharacterIterator
    4332:4361:java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object,com.ibm.icu.text.DecimalFormat$Unit) -> a
    4369:4432:void appendAffixPattern(java.lang.StringBuffer,boolean,boolean,boolean) -> a
    4438:4582:java.lang.String toPattern(boolean) -> b
    4607:4608:void applyPattern(java.lang.String) -> applyPattern
    4633:4634:void applyLocalizedPattern(java.lang.String) -> applyLocalizedPattern
    4640:4642:void applyPattern(java.lang.String,boolean) -> a
    4647:4653:void expandAffixAdjustWidth(java.lang.String) -> d
    4656:5148:void applyPatternWithoutExpandAffix(java.lang.String,boolean) -> b
    5152:5152:void patternError(java.lang.String,java.lang.String) -> b
    5168:5169:void setMaximumIntegerDigits(int) -> setMaximumIntegerDigits
    5180:5181:void setMinimumIntegerDigits(int) -> setMinimumIntegerDigits
    5192:5192:int getMinimumSignificantDigits() -> getMinimumSignificantDigits
    5204:5204:int getMaximumSignificantDigits() -> getMaximumSignificantDigits
    5218:5226:void setMinimumSignificantDigits(int) -> setMinimumSignificantDigits
    5239:5247:void setMaximumSignificantDigits(int) -> setMaximumSignificantDigits
    5257:5257:boolean areSignificantDigitsUsed() -> areSignificantDigitsUsed
    5269:5270:void setSignificantDigitsUsed(boolean) -> setSignificantDigitsUsed
    5288:5310:void setCurrency(com.ibm.icu.util.Currency) -> setCurrency
    5320:5333:void setCurrencyUsage(com.ibm.icu.util.Currency$CurrencyUsage) -> setCurrencyUsage
    5340:5340:com.ibm.icu.util.Currency$CurrencyUsage getCurrencyUsage() -> getCurrencyUsage
    5353:5357:com.ibm.icu.util.Currency getEffectiveCurrency() -> getEffectiveCurrency
    5369:5371:void setMaximumFractionDigits(int) -> setMaximumFractionDigits
    5378:5379:void _setMaximumFractionDigits(int) -> c
    5390:5391:void setMinimumFractionDigits(int) -> setMinimumFractionDigits
    5402:5403:void setParseBigDecimal(boolean) -> setParseBigDecimal
    5412:5412:boolean isParseBigDecimal() -> isParseBigDecimal
    5423:5426:void setParseMaxDigits(int) -> setParseMaxDigits
    5435:5435:int getParseMaxDigits() -> getParseMaxDigits
    5445:5448:void writeObject(java.io.ObjectOutputStream) -> writeObject
    5459:5508:void readObject(java.io.ObjectInputStream) -> readObject
    5511:5513:void setInternalRoundingIncrement(com.ibm.icu.math.BigDecimal) -> a
    6138:6168:void resetActualRounding() -> c
    6173:6183:void setRoundingDouble(double) -> h
    1073:6093:void <clinit>() -> <clinit>
com.ibm.icu.text.DecimalFormat$AffixForCurrency -> com.ibm.icu.text.aU:
    java.lang.String negPrefixPatternForCurrency -> a
    java.lang.String negSuffixPatternForCurrency -> b
    java.lang.String posPrefixPatternForCurrency -> c
    java.lang.String posSuffixPatternForCurrency -> d
    int patternType -> e
    6001:6017:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    6020:6020:java.lang.String getNegPrefix() -> a
    6024:6024:java.lang.String getNegSuffix() -> b
    6028:6028:java.lang.String getPosPrefix() -> c
    6032:6032:java.lang.String getPosSuffix() -> d
    6036:6036:int getPatternType() -> e
com.ibm.icu.text.DecimalFormat$Unit -> com.ibm.icu.text.aV:
    java.lang.String prefix -> a
    java.lang.String suffix -> b
    6063:6066:void <init>(java.lang.String,java.lang.String) -> <init>
    6069:6070:void writeSuffix(java.lang.StringBuffer) -> a
    6073:6074:void writePrefix(java.lang.StringBuffer) -> b
    6078:6085:boolean equals(java.lang.Object) -> equals
    6089:6089:java.lang.String toString() -> toString
com.ibm.icu.text.DecimalFormatSymbols -> com.ibm.icu.text.DecimalFormatSymbols:
    int CURRENCY_SPC_CURRENCY_MATCH -> CURRENCY_SPC_CURRENCY_MATCH
    int CURRENCY_SPC_SURROUNDING_MATCH -> CURRENCY_SPC_SURROUNDING_MATCH
    int CURRENCY_SPC_INSERT -> CURRENCY_SPC_INSERT
    java.lang.String[] currencySpcBeforeSym -> a
    java.lang.String[] currencySpcAfterSym -> b
    char zeroDigit -> c
    char[] digits -> d
    char groupingSeparator -> e
    char decimalSeparator -> f
    char perMill -> g
    char percent -> h
    char digit -> i
    char sigDigit -> j
    char patternSeparator -> k
    java.lang.String infinity -> l
    java.lang.String NaN -> m
    char minusSign -> n
    java.lang.String currencySymbol -> o
    java.lang.String intlCurrencySymbol -> p
    char monetarySeparator -> q
    char monetaryGroupingSeparator -> r
    char exponential -> s
    java.lang.String exponentSeparator -> t
    char padEscape -> u
    char plusSign -> v
    java.util.Locale requestedLocale -> w
    com.ibm.icu.util.ULocale ulocale -> x
    java.lang.String minusString -> y
    java.lang.String plusString -> z
    java.lang.String exponentMultiplicationSign -> A
    long serialVersionUID -> serialVersionUID
    int serialVersionOnStream -> B
    com.ibm.icu.impl.ICUCache cachedLocaleData -> C
    java.lang.String currencyPattern -> D
    com.ibm.icu.util.ULocale validLocale -> E
    com.ibm.icu.util.ULocale actualLocale -> F
    com.ibm.icu.util.Currency currency -> G
    52:1324:void <init>() -> <init>
    61:1324:void <init>(java.util.Locale) -> <init>
    70:1324:void <init>(com.ibm.icu.util.ULocale) -> <init>
    86:86:com.ibm.icu.text.DecimalFormatSymbols getInstance() -> getInstance
    103:103:com.ibm.icu.text.DecimalFormatSymbols getInstance(java.util.Locale) -> getInstance
    120:120:com.ibm.icu.text.DecimalFormatSymbols getInstance(com.ibm.icu.util.ULocale) -> getInstance
    138:138:java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    157:157:com.ibm.icu.util.ULocale[] getAvailableULocales() -> getAvailableULocales
    167:170:char getZeroDigit() -> getZeroDigit
    179:186:char[] getDigits() -> getDigits
    196:203:char[] getDigitsLocal() -> a
    213:223:void setZeroDigit(char) -> setZeroDigit
    231:231:char getSignificantDigit() -> getSignificantDigit
    240:241:void setSignificantDigit(char) -> setSignificantDigit
    249:249:char getGroupingSeparator() -> getGroupingSeparator
    258:259:void setGroupingSeparator(char) -> setGroupingSeparator
    267:267:char getDecimalSeparator() -> getDecimalSeparator
    276:277:void setDecimalSeparator(char) -> setDecimalSeparator
    285:285:char getPerMill() -> getPerMill
    294:295:void setPerMill(char) -> setPerMill
    303:303:char getPercent() -> getPercent
    312:313:void setPercent(char) -> setPercent
    321:321:char getDigit() -> getDigit
    330:331:void setDigit(char) -> setDigit
    340:340:char getPatternSeparator() -> getPatternSeparator
    350:351:void setPatternSeparator(char) -> setPatternSeparator
    362:362:java.lang.String getInfinity() -> getInfinity
    372:373:void setInfinity(java.lang.String) -> setInfinity
    383:383:java.lang.String getNaN() -> getNaN
    393:394:void setNaN(java.lang.String) -> setNaN
    404:404:char getMinusSign() -> getMinusSign
    415:415:java.lang.String getMinusString() -> getMinusString
    426:430:void setMinusSign(char) -> setMinusSign
    438:438:java.lang.String getCurrencySymbol() -> getCurrencySymbol
    447:448:void setCurrencySymbol(java.lang.String) -> setCurrencySymbol
    456:456:java.lang.String getInternationalCurrencySymbol() -> getInternationalCurrencySymbol
    465:466:void setInternationalCurrencySymbol(java.lang.String) -> setInternationalCurrencySymbol
    475:475:com.ibm.icu.util.Currency getCurrency() -> getCurrency
    496:502:void setCurrency(com.ibm.icu.util.Currency) -> setCurrency
    510:510:char getMonetaryDecimalSeparator() -> getMonetaryDecimalSeparator
    519:519:char getMonetaryGroupingSeparator() -> getMonetaryGroupingSeparator
    527:527:java.lang.String getCurrencyPattern() -> b
    536:537:void setMonetaryDecimalSeparator(char) -> setMonetaryDecimalSeparator
    545:546:void setMonetaryGroupingSeparator(char) -> setMonetaryGroupingSeparator
    553:553:java.lang.String getExponentMultiplicationSign() -> getExponentMultiplicationSign
    561:562:void setExponentMultiplicationSign(java.lang.String) -> setExponentMultiplicationSign
    573:573:java.lang.String getExponentSeparator() -> getExponentSeparator
    585:586:void setExponentSeparator(java.lang.String) -> setExponentSeparator
    598:598:char getPlusSign() -> getPlusSign
    609:609:java.lang.String getPlusString() -> getPlusString
    622:626:void setPlusSign(char) -> setPlusSign
    641:641:char getPadEscape() -> getPadEscape
    656:657:void setPadEscape(char) -> setPadEscape
    701:708:java.lang.String getPatternForCurrencySpacing(int,boolean) -> getPatternForCurrencySpacing
    729:738:void setPatternForCurrencySpacing(int,boolean,java.lang.String) -> setPatternForCurrencySpacing
    746:746:java.util.Locale getLocale() -> getLocale
    755:755:com.ibm.icu.util.ULocale getULocale() -> getULocale
    764:768:java.lang.Object clone() -> clone
    778:804:boolean equals(java.lang.Object) -> equals
    831:834:int hashCode() -> hashCode
    841:841:boolean isBidiMark(char) -> a
    850:996:void initialize(com.ibm.icu.util.ULocale) -> a
    999:1005:void initSpacingInfo(com.ibm.icu.impl.CurrencyData$CurrencySpacingInfo) -> a
    1021:1086:void readObject(java.io.ObjectInputStream) -> readObject
    1351:1351:com.ibm.icu.util.ULocale getLocale(com.ibm.icu.util.ULocale$Type) -> getLocale
    1373:1382:void setLocale(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> a
    1318:1318:void <clinit>() -> <clinit>
com.ibm.icu.text.DictionaryBreakEngine -> com.ibm.icu.text.aW:
    com.ibm.icu.text.UnicodeSet fSet -> a
    java.util.BitSet fTypes -> b
    153:164:void <init>(java.lang.Integer[]) -> <init>
    167:167:boolean handles(int,int) -> a
    173:205:int findBreaks$16561d4c(java.text.CharacterIterator,int,int,boolean,com.ibm.icu.text.DictionaryBreakEngine$DequeI) -> a
    209:211:void setCharacters(com.ibm.icu.text.UnicodeSet) -> a
    int divideUpDictionaryRange(java.text.CharacterIterator,int,int,com.ibm.icu.text.DictionaryBreakEngine$DequeI) -> a
com.ibm.icu.text.DictionaryBreakEngine$DequeI -> com.ibm.icu.text.aX:
    int[] data -> a
    int lastIdx -> b
    int firstIdx -> c
    boolean $assertionsDisabled -> d
    90:93:void <init>() -> <init>
    96:96:int size() -> a
    100:100:boolean isEmpty() -> b
    104:107:void grow() -> g
    112:114:void offer(int) -> a
    117:121:void push(int) -> b
    124:125:int pop() -> c
    129:130:int peek() -> d
    134:135:int peekLast() -> e
    139:140:int pollLast() -> f
    144:149:boolean contains(int) -> c
    90:90:void <clinit>() -> <clinit>
com.ibm.icu.text.DictionaryBreakEngine$PossibleWord -> com.ibm.icu.text.aY:
    int[] lengths -> a
    int[] count -> b
    int prefix -> c
    int offset -> d
    int mark -> e
    int current -> f
    32:36:void <init>() -> <init>
    40:54:int candidates(java.text.CharacterIterator,com.ibm.icu.text.DictionaryMatcher,int) -> a
    59:60:int acceptMarked(java.text.CharacterIterator) -> a
    66:70:boolean backUp(java.text.CharacterIterator) -> b
    75:75:int longestPrefix() -> a
    80:81:void markCurrent() -> b
com.ibm.icu.text.DictionaryMatcher -> com.ibm.icu.text.aZ:
    15:15:void <init>() -> <init>
    int matches(java.text.CharacterIterator,int,int[],int[],int,int[]) -> a
    33:33:int matches(java.text.CharacterIterator,int,int[],int[],int) -> a
com.ibm.icu.text.DigitList -> com.ibm.icu.text.ba:
    int decimalAt -> a
    int count -> b
    byte[] digits -> c
    boolean didRound -> d
    byte[] LONG_MIN_REP -> e
    44:579:void <init>() -> <init>
    79:84:void ensureCapacity(int,int) -> a
    91:92:boolean isZero() -> a
    112:114:void append(int) -> a
    117:117:byte getDigitValue(int) -> b
    126:132:double getDouble() -> b
    144:156:long getLong() -> c
    168:205:java.math.BigInteger getBigInteger(boolean) -> a
    210:233:java.lang.String getStringRep(boolean) -> c
    292:322:com.ibm.icu.math.BigDecimal getBigDecimalICU(boolean) -> b
    333:334:boolean isIntegral() -> d
    409:447:void set(double,int,boolean) -> a
    455:497:void set(java.lang.String,int) -> a
    517:529:boolean shouldRoundUp(int) -> c
    542:576:void round(int) -> d
    587:587:boolean wasRounded() -> e
    595:596:void set(long) -> a
    615:641:void set(long,int) -> a
    652:673:void set(java.math.BigInteger,int) -> a
    737:751:void setBigDecimalDigits(java.lang.String,int,boolean) -> a
    765:766:void set(java.math.BigDecimal,int,boolean) -> a
    780:781:void set(com.ibm.icu.math.BigDecimal,int,boolean) -> a
    789:797:boolean isLongMIN_VALUE() -> f
    852:863:boolean equals(java.lang.Object) -> equals
    870:875:int hashCode() -> hashCode
    880:885:java.lang.String toString() -> toString
    805:811:void <clinit>() -> <clinit>
com.ibm.icu.text.DisplayContext -> com.ibm.icu.text.DisplayContext:
    com.ibm.icu.text.DisplayContext STANDARD_NAMES -> STANDARD_NAMES
    com.ibm.icu.text.DisplayContext DIALECT_NAMES -> DIALECT_NAMES
    com.ibm.icu.text.DisplayContext CAPITALIZATION_NONE -> CAPITALIZATION_NONE
    com.ibm.icu.text.DisplayContext CAPITALIZATION_FOR_MIDDLE_OF_SENTENCE -> CAPITALIZATION_FOR_MIDDLE_OF_SENTENCE
    com.ibm.icu.text.DisplayContext CAPITALIZATION_FOR_BEGINNING_OF_SENTENCE -> CAPITALIZATION_FOR_BEGINNING_OF_SENTENCE
    com.ibm.icu.text.DisplayContext CAPITALIZATION_FOR_UI_LIST_OR_MENU -> CAPITALIZATION_FOR_UI_LIST_OR_MENU
    com.ibm.icu.text.DisplayContext CAPITALIZATION_FOR_STANDALONE -> CAPITALIZATION_FOR_STANDALONE
    com.ibm.icu.text.DisplayContext LENGTH_FULL -> LENGTH_FULL
    com.ibm.icu.text.DisplayContext LENGTH_SHORT -> LENGTH_SHORT
    com.ibm.icu.text.DisplayContext$Type type -> a
    int value -> b
    com.ibm.icu.text.DisplayContext[] $VALUES -> c
    14:14:com.ibm.icu.text.DisplayContext[] values() -> values
    14:14:com.ibm.icu.text.DisplayContext valueOf(java.lang.String) -> valueOf
    116:119:void <init>(java.lang.String,int,com.ibm.icu.text.DisplayContext$Type,int) -> <init>
    126:126:com.ibm.icu.text.DisplayContext$Type type() -> type
    134:134:int value() -> value
    14:89:void <clinit>() -> <clinit>
com.ibm.icu.text.DisplayContext$Type -> com.ibm.icu.text.DisplayContext$Type:
    com.ibm.icu.text.DisplayContext$Type DIALECT_HANDLING -> DIALECT_HANDLING
    com.ibm.icu.text.DisplayContext$Type CAPITALIZATION -> CAPITALIZATION
    com.ibm.icu.text.DisplayContext$Type DISPLAY_LENGTH -> DISPLAY_LENGTH
    com.ibm.icu.text.DisplayContext$Type[] $VALUES -> a
    95:95:com.ibm.icu.text.DisplayContext$Type[] values() -> values
    95:95:com.ibm.icu.text.DisplayContext$Type valueOf(java.lang.String) -> valueOf
    95:95:void <init>(java.lang.String,int) -> <init>
    95:111:void <clinit>() -> <clinit>
com.ibm.icu.text.DurationFormat -> com.ibm.icu.text.DurationFormat:
    long serialVersionUID -> serialVersionUID
    38:38:com.ibm.icu.text.DurationFormat getInstance(com.ibm.icu.util.ULocale) -> getInstance
    48:49:void <init>() -> <init>
    57:59:void <init>(com.ibm.icu.util.ULocale) -> <init>
    java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    80:80:java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    java.lang.String formatDurationFromNowTo(java.util.Date) -> formatDurationFromNowTo
    java.lang.String formatDurationFromNow(long) -> formatDurationFromNow
    java.lang.String formatDurationFrom(long,long) -> formatDurationFrom
com.ibm.icu.text.EscapeTransliterator -> com.ibm.icu.text.bb:
    java.lang.String prefix -> a
    java.lang.String suffix -> b
    int radix -> c
    int minDigits -> d
    boolean grokSupplementals -> e
    com.ibm.icu.text.EscapeTransliterator supplementalHandler -> f
    82:145:void register() -> a
    155:162:void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,boolean,com.ibm.icu.text.EscapeTransliterator) -> <init>
    169:207:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    214:226:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
com.ibm.icu.text.EscapeTransliterator$1 -> com.ibm.icu.text.bc:
    82:82:void <init>() -> <init>
    84:84:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.EscapeTransliterator$2 -> com.ibm.icu.text.bd:
    90:90:void <init>() -> <init>
    92:92:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.EscapeTransliterator$3 -> com.ibm.icu.text.be:
    98:98:void <init>() -> <init>
    100:100:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.EscapeTransliterator$4 -> com.ibm.icu.text.bf:
    107:107:void <init>() -> <init>
    109:109:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.EscapeTransliterator$5 -> com.ibm.icu.text.bg:
    115:115:void <init>() -> <init>
    117:117:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.EscapeTransliterator$6 -> com.ibm.icu.text.bh:
    123:123:void <init>() -> <init>
    125:125:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.EscapeTransliterator$7 -> com.ibm.icu.text.bi:
    131:131:void <init>() -> <init>
    133:133:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.EscapeTransliterator$8 -> com.ibm.icu.text.bj:
    139:139:void <init>() -> <init>
    141:141:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.FilteredBreakIteratorBuilder -> com.ibm.icu.text.FilteredBreakIteratorBuilder:
    55:56:com.ibm.icu.text.FilteredBreakIteratorBuilder createInstance(com.ibm.icu.util.ULocale) -> createInstance
    68:69:com.ibm.icu.text.FilteredBreakIteratorBuilder createInstance() -> createInstance
    boolean suppressBreakAfter(java.lang.String) -> suppressBreakAfter
    boolean unsuppressBreakAfter(java.lang.String) -> unsuppressBreakAfter
    com.ibm.icu.text.BreakIterator build(com.ibm.icu.text.BreakIterator) -> build
    120:120:void <init>() -> <init>
com.ibm.icu.text.FilteredNormalizer2 -> com.ibm.icu.text.FilteredNormalizer2:
    com.ibm.icu.text.Normalizer2 norm2 -> a
    com.ibm.icu.text.UnicodeSet set -> b
    35:38:void <init>(com.ibm.icu.text.Normalizer2,com.ibm.icu.text.UnicodeSet) -> <init>
    46:51:java.lang.StringBuilder normalize(java.lang.CharSequence,java.lang.StringBuilder) -> normalize
    59:62:java.lang.Appendable normalize(java.lang.CharSequence,java.lang.Appendable) -> normalize
    72:72:java.lang.StringBuilder normalizeSecondAndAppend(java.lang.StringBuilder,java.lang.CharSequence) -> normalizeSecondAndAppend
    80:80:java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.CharSequence) -> append
    89:89:java.lang.String getDecomposition(int) -> getDecomposition
    98:98:java.lang.String getRawDecomposition(int) -> getRawDecomposition
    107:107:int composePair(int,int) -> composePair
    116:116:int getCombiningClass(int) -> getCombiningClass
    125:138:boolean isNormalized(java.lang.CharSequence) -> isNormalized
    147:165:com.ibm.icu.text.Normalizer$QuickCheckResult quickCheck(java.lang.CharSequence) -> quickCheck
    173:189:int spanQuickCheckYes(java.lang.CharSequence) -> spanQuickCheckYes
    198:198:boolean hasBoundaryBefore(int) -> hasBoundaryBefore
    207:207:boolean hasBoundaryAfter(int) -> hasBoundaryAfter
    216:216:boolean isInert(int) -> isInert
    229:252:java.lang.Appendable normalize(java.lang.CharSequence,java.lang.Appendable,com.ibm.icu.text.UnicodeSet$SpanCondition) -> a
    257:297:java.lang.StringBuilder normalizeSecondAndAppend(java.lang.StringBuilder,java.lang.CharSequence,boolean) -> a
com.ibm.icu.text.FractionalPartSubstitution -> com.ibm.icu.text.bk:
    boolean byDigits -> d
    boolean useSpaces -> e
    1154:1163:void <init>(int,com.ibm.icu.text.NFRuleSet,java.lang.String) -> <init>
    1180:1216:void doSubstitution(double,java.lang.StringBuffer,int,int) -> a
    1225:1225:long transformNumber(long) -> a
    1234:1234:double transformNumber(double) -> a
    1261:1299:java.lang.Number doParse(java.lang.String,java.text.ParsePosition,double,double,boolean) -> a
    1311:1311:double composeRuleValue(double,double) -> a
    1318:1318:double calcUpperBound(double) -> b
    1330:1330:char tokenChar() -> a
com.ibm.icu.text.FunctionReplacer -> com.ibm.icu.text.bl:
    com.ibm.icu.text.Transliterator translit -> a
    com.ibm.icu.text.UnicodeReplacer replacer -> b
    39:42:void <init>(com.ibm.icu.text.Transliterator,com.ibm.icu.text.UnicodeReplacer) -> <init>
    53:59:int replace(com.ibm.icu.text.Replaceable,int,int,int[]) -> a
    66:71:java.lang.String toReplacerPattern(boolean) -> a
    80:81:void addReplacementSetTo(com.ibm.icu.text.UnicodeSet) -> a
com.ibm.icu.text.IDNA -> com.ibm.icu.text.IDNA:
    int DEFAULT -> DEFAULT
    int ALLOW_UNASSIGNED -> ALLOW_UNASSIGNED
    int USE_STD3_RULES -> USE_STD3_RULES
    int CHECK_BIDI -> CHECK_BIDI
    int CHECK_CONTEXTJ -> CHECK_CONTEXTJ
    int NONTRANSITIONAL_TO_ASCII -> NONTRANSITIONAL_TO_ASCII
    int NONTRANSITIONAL_TO_UNICODE -> NONTRANSITIONAL_TO_UNICODE
    int CHECK_CONTEXTO -> CHECK_CONTEXTO
    151:151:com.ibm.icu.text.IDNA getUTS46Instance(int) -> getUTS46Instance
    java.lang.StringBuilder labelToASCII(java.lang.CharSequence,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info) -> labelToASCII
    java.lang.StringBuilder labelToUnicode(java.lang.CharSequence,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info) -> labelToUnicode
    java.lang.StringBuilder nameToASCII(java.lang.CharSequence,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info) -> nameToASCII
    java.lang.StringBuilder nameToUnicode(java.lang.CharSequence,java.lang.StringBuilder,com.ibm.icu.text.IDNA$Info) -> nameToUnicode
    277:278:void resetInfo(com.ibm.icu.text.IDNA$Info) -> resetInfo
    285:285:boolean hasCertainErrors(com.ibm.icu.text.IDNA$Info,java.util.EnumSet) -> hasCertainErrors
    293:293:boolean hasCertainLabelErrors(com.ibm.icu.text.IDNA$Info,java.util.EnumSet) -> hasCertainLabelErrors
    301:302:void addLabelError(com.ibm.icu.text.IDNA$Info,com.ibm.icu.text.IDNA$Error) -> addLabelError
    309:313:void promoteAndResetLabelErrors(com.ibm.icu.text.IDNA$Info) -> promoteAndResetLabelErrors
    320:321:void addError(com.ibm.icu.text.IDNA$Info,com.ibm.icu.text.IDNA$Error) -> addError
    328:329:void setTransitionalDifferent(com.ibm.icu.text.IDNA$Info) -> setTransitionalDifferent
    336:337:void setBiDi(com.ibm.icu.text.IDNA$Info) -> setBiDi
    344:344:boolean isBiDi(com.ibm.icu.text.IDNA$Info) -> isBiDi
    352:353:void setNotOkBiDi(com.ibm.icu.text.IDNA$Info) -> setNotOkBiDi
    360:360:boolean isOkBiDi(com.ibm.icu.text.IDNA$Info) -> isOkBiDi
    466:467:void <init>() -> <init>
    499:500:java.lang.StringBuffer convertToASCII(java.lang.String,int) -> convertToASCII
    530:531:java.lang.StringBuffer convertToASCII(java.lang.StringBuffer,int) -> convertToASCII
    561:561:java.lang.StringBuffer convertToASCII(com.ibm.icu.text.UCharacterIterator,int) -> convertToASCII
    596:596:java.lang.StringBuffer convertIDNToASCII(com.ibm.icu.text.UCharacterIterator,int) -> convertIDNToASCII
    631:631:java.lang.StringBuffer convertIDNToASCII(java.lang.StringBuffer,int) -> convertIDNToASCII
    666:666:java.lang.StringBuffer convertIDNToASCII(java.lang.String,int) -> convertIDNToASCII
    697:698:java.lang.StringBuffer convertToUnicode(java.lang.String,int) -> convertToUnicode
    728:729:java.lang.StringBuffer convertToUnicode(java.lang.StringBuffer,int) -> convertToUnicode
    759:759:java.lang.StringBuffer convertToUnicode(com.ibm.icu.text.UCharacterIterator,int) -> convertToUnicode
    791:791:java.lang.StringBuffer convertIDNToUnicode(com.ibm.icu.text.UCharacterIterator,int) -> convertIDNToUnicode
    823:823:java.lang.StringBuffer convertIDNToUnicode(java.lang.StringBuffer,int) -> convertIDNToUnicode
    855:855:java.lang.StringBuffer convertIDNToUnicode(java.lang.String,int) -> convertIDNToUnicode
    888:891:int compare(java.lang.StringBuffer,java.lang.StringBuffer,int) -> compare
    923:926:int compare(java.lang.String,java.lang.String,int) -> compare
    958:961:int compare(com.ibm.icu.text.UCharacterIterator,com.ibm.icu.text.UCharacterIterator,int) -> compare
com.ibm.icu.text.IDNA$Error -> com.ibm.icu.text.IDNA$Error:
    com.ibm.icu.text.IDNA$Error EMPTY_LABEL -> EMPTY_LABEL
    com.ibm.icu.text.IDNA$Error LABEL_TOO_LONG -> LABEL_TOO_LONG
    com.ibm.icu.text.IDNA$Error DOMAIN_NAME_TOO_LONG -> DOMAIN_NAME_TOO_LONG
    com.ibm.icu.text.IDNA$Error LEADING_HYPHEN -> LEADING_HYPHEN
    com.ibm.icu.text.IDNA$Error TRAILING_HYPHEN -> TRAILING_HYPHEN
    com.ibm.icu.text.IDNA$Error HYPHEN_3_4 -> HYPHEN_3_4
    com.ibm.icu.text.IDNA$Error LEADING_COMBINING_MARK -> LEADING_COMBINING_MARK
    com.ibm.icu.text.IDNA$Error DISALLOWED -> DISALLOWED
    com.ibm.icu.text.IDNA$Error PUNYCODE -> PUNYCODE
    com.ibm.icu.text.IDNA$Error LABEL_HAS_DOT -> LABEL_HAS_DOT
    com.ibm.icu.text.IDNA$Error INVALID_ACE_LABEL -> INVALID_ACE_LABEL
    com.ibm.icu.text.IDNA$Error BIDI -> BIDI
    com.ibm.icu.text.IDNA$Error CONTEXTJ -> CONTEXTJ
    com.ibm.icu.text.IDNA$Error CONTEXTO_PUNCTUATION -> CONTEXTO_PUNCTUATION
    com.ibm.icu.text.IDNA$Error CONTEXTO_DIGITS -> CONTEXTO_DIGITS
    com.ibm.icu.text.IDNA$Error[] $VALUES -> a
    369:369:com.ibm.icu.text.IDNA$Error[] values() -> values
    369:369:com.ibm.icu.text.IDNA$Error valueOf(java.lang.String) -> valueOf
    369:369:void <init>(java.lang.String,int) -> <init>
    369:457:void <clinit>() -> <clinit>
com.ibm.icu.text.IDNA$Info -> com.ibm.icu.text.IDNA$Info:
    java.util.EnumSet errors -> a
    java.util.EnumSet labelErrors -> b
    boolean isTransDiff -> c
    boolean isBiDi -> d
    boolean isOkBiDi -> e
    220:226:void <init>() -> <init>
    232:232:boolean hasErrors() -> hasErrors
    238:238:java.util.Set getErrors() -> getErrors
    252:252:boolean isTransitionalDifferent() -> isTransitionalDifferent
    255:260:void reset() -> a
    215:215:void access$000(com.ibm.icu.text.IDNA$Info) -> a
    215:215:java.util.EnumSet access$100(com.ibm.icu.text.IDNA$Info) -> b
    215:215:java.util.EnumSet access$200(com.ibm.icu.text.IDNA$Info) -> c
    215:215:boolean access$302(com.ibm.icu.text.IDNA$Info,boolean) -> a
    215:215:boolean access$402(com.ibm.icu.text.IDNA$Info,boolean) -> b
    215:215:boolean access$400(com.ibm.icu.text.IDNA$Info) -> d
    215:215:boolean access$502(com.ibm.icu.text.IDNA$Info,boolean) -> c
    215:215:boolean access$500(com.ibm.icu.text.IDNA$Info) -> e
com.ibm.icu.text.IdentifierInfo -> com.ibm.icu.text.IdentifierInfo:
    com.ibm.icu.text.UnicodeSet ASCII -> a
    java.lang.String identifier -> b
    java.util.BitSet requiredScripts -> c
    java.util.Set scriptSetSet -> d
    java.util.BitSet commonAmongAlternates -> e
    com.ibm.icu.text.UnicodeSet numerics -> f
    com.ibm.icu.text.UnicodeSet identifierProfile -> g
    java.util.BitSet JAPANESE -> h
    java.util.BitSet CHINESE -> i
    java.util.BitSet KOREAN -> j
    java.util.BitSet CONFUSABLE_WITH_LATIN -> k
    java.util.Comparator BITSET_COMPARATOR -> BITSET_COMPARATOR
    45:60:void <init>() -> <init>
    63:67:com.ibm.icu.text.IdentifierInfo clear() -> a
    81:82:com.ibm.icu.text.IdentifierInfo setIdentifierProfile(com.ibm.icu.text.UnicodeSet) -> setIdentifierProfile
    95:95:com.ibm.icu.text.UnicodeSet getIdentifierProfile() -> getIdentifierProfile
    108:166:com.ibm.icu.text.IdentifierInfo setIdentifier(java.lang.String) -> setIdentifier
    178:178:java.lang.String getIdentifier() -> getIdentifier
    190:190:java.util.BitSet getScripts() -> getScripts
    203:207:java.util.Set getAlternates() -> getAlternates
    219:219:com.ibm.icu.text.UnicodeSet getNumerics() -> getNumerics
    231:231:java.util.BitSet getCommonAmongAlternates() -> getCommonAmongAlternates
    252:276:com.ibm.icu.text.SpoofChecker$RestrictionLevel getRestrictionLevel() -> getRestrictionLevel
    296:298:int getScriptCount() -> getScriptCount
    310:310:java.lang.String toString() -> toString
    316:324:boolean containsWithAlternates(java.util.BitSet,java.util.BitSet) -> a
    337:350:java.lang.String displayAlternates(java.util.Set) -> displayAlternates
    385:392:java.lang.String displayScripts(java.util.BitSet) -> displayScripts
    405:411:java.util.BitSet parseScripts(java.lang.String) -> parseScripts
    424:430:java.util.Set parseAlternates(java.lang.String) -> parseAlternates
    444:449:boolean contains(java.util.BitSet,java.util.BitSet) -> contains
    463:466:java.util.BitSet set(java.util.BitSet,int[]) -> set
    42:359:void <clinit>() -> <clinit>
com.ibm.icu.text.IdentifierInfo$1 -> com.ibm.icu.text.bm:
    359:359:void <init>() -> <init>
    362:370:int compare(java.util.BitSet,java.util.BitSet) -> a
    359:359:int compare(java.lang.Object,java.lang.Object) -> compare
com.ibm.icu.text.IntegralPartSubstitution -> com.ibm.icu.text.bn:
    1050:1051:void <init>(int,com.ibm.icu.text.NFRuleSet,java.lang.String) -> <init>
    1064:1064:long transformNumber(long) -> a
    1073:1073:double transformNumber(double) -> a
    1091:1091:double composeRuleValue(double,double) -> a
    1101:1101:double calcUpperBound(double) -> b
    1113:1113:char tokenChar() -> a
com.ibm.icu.text.KhmerBreakEngine -> com.ibm.icu.text.bo:
    com.ibm.icu.text.DictionaryMatcher fDictionary -> b
    com.ibm.icu.text.UnicodeSet fKhmerWordSet -> c
    com.ibm.icu.text.UnicodeSet fEndWordSet -> d
    com.ibm.icu.text.UnicodeSet fBeginWordSet -> e
    com.ibm.icu.text.UnicodeSet fMarkSet -> f
    66:70:void <init>() -> <init>
    75:75:boolean equals(java.lang.Object) -> equals
    79:79:int hashCode() -> hashCode
    83:87:boolean handles(int,int) -> a
    93:226:int divideUpDictionaryRange(java.text.CharacterIterator,int,int,com.ibm.icu.text.DictionaryBreakEngine$DequeI) -> a
    40:63:void <clinit>() -> <clinit>
com.ibm.icu.text.LanguageBreakEngine -> com.ibm.icu.text.bp:
    boolean handles(int,int) -> a
    int findBreaks$16561d4c(java.text.CharacterIterator,int,int,boolean,com.ibm.icu.text.DictionaryBreakEngine$DequeI) -> a
com.ibm.icu.text.LaoBreakEngine -> com.ibm.icu.text.bq:
    com.ibm.icu.text.DictionaryMatcher fDictionary -> b
    com.ibm.icu.text.UnicodeSet fLaoWordSet -> c
    com.ibm.icu.text.UnicodeSet fEndWordSet -> d
    com.ibm.icu.text.UnicodeSet fBeginWordSet -> e
    com.ibm.icu.text.UnicodeSet fMarkSet -> f
    65:69:void <init>() -> <init>
    74:74:boolean equals(java.lang.Object) -> equals
    78:78:int hashCode() -> hashCode
    82:86:boolean handles(int,int) -> a
    93:225:int divideUpDictionaryRange(java.text.CharacterIterator,int,int,com.ibm.icu.text.DictionaryBreakEngine$DequeI) -> a
    37:62:void <clinit>() -> <clinit>
com.ibm.icu.text.ListFormatter -> com.ibm.icu.text.ListFormatter:
    com.ibm.icu.impl.SimplePatternFormatter two -> a
    com.ibm.icu.impl.SimplePatternFormatter start -> b
    com.ibm.icu.impl.SimplePatternFormatter middle -> c
    com.ibm.icu.impl.SimplePatternFormatter end -> d
    com.ibm.icu.util.ULocale locale -> e
    com.ibm.icu.text.ListFormatter$Cache cache -> f
    111:118:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    120:126:void <init>(com.ibm.icu.impl.SimplePatternFormatter,com.ibm.icu.impl.SimplePatternFormatter,com.ibm.icu.impl.SimplePatternFormatter,com.ibm.icu.impl.SimplePatternFormatter,com.ibm.icu.util.ULocale) -> <init>
    137:137:com.ibm.icu.text.ListFormatter getInstance(com.ibm.icu.util.ULocale) -> getInstance
    149:149:com.ibm.icu.text.ListFormatter getInstance(java.util.Locale) -> getInstance
    163:163:com.ibm.icu.text.ListFormatter getInstance(com.ibm.icu.util.ULocale,com.ibm.icu.text.ListFormatter$Style) -> getInstance
    173:173:com.ibm.icu.text.ListFormatter getInstance() -> getInstance
    185:185:java.lang.String format(java.lang.Object[]) -> format
    197:197:java.lang.String format(java.util.Collection) -> format
    205:220:com.ibm.icu.text.ListFormatter$FormattedListBuilder format(java.util.Collection,int) -> a
    232:239:java.lang.String getPatternForNumItems(int) -> getPatternForNumItems
    249:249:com.ibm.icu.util.ULocale getLocale() -> getLocale
    31:31:void <init>(com.ibm.icu.impl.SimplePatternFormatter,com.ibm.icu.impl.SimplePatternFormatter,com.ibm.icu.impl.SimplePatternFormatter,com.ibm.icu.impl.SimplePatternFormatter,com.ibm.icu.util.ULocale,byte) -> <init>
    309:341:void <clinit>() -> <clinit>
com.ibm.icu.text.ListFormatter$Cache -> com.ibm.icu.text.br:
    com.ibm.icu.impl.ICUCache cache -> a
    314:315:void <init>() -> <init>
    319:325:com.ibm.icu.text.ListFormatter get(com.ibm.icu.util.ULocale,java.lang.String) -> a
    329:332:com.ibm.icu.text.ListFormatter load(com.ibm.icu.util.ULocale,java.lang.String) -> b
    314:314:void <init>(byte) -> <init>
com.ibm.icu.text.ListFormatter$FormattedListBuilder -> com.ibm.icu.text.bs:
    java.lang.StringBuilder current -> a
    int offset -> b
    259:262:void <init>(java.lang.Object,boolean) -> <init>
    269:286:com.ibm.icu.text.ListFormatter$FormattedListBuilder append(com.ibm.icu.impl.SimplePatternFormatter,java.lang.Object,boolean) -> a
    291:291:java.lang.String toString() -> toString
    296:296:int getOffset() -> a
    300:300:boolean offsetRecorded() -> b
com.ibm.icu.text.ListFormatter$Style -> com.ibm.icu.text.ListFormatter$Style:
    com.ibm.icu.text.ListFormatter$Style STANDARD -> STANDARD
    com.ibm.icu.text.ListFormatter$Style DURATION -> DURATION
    com.ibm.icu.text.ListFormatter$Style DURATION_SHORT -> DURATION_SHORT
    com.ibm.icu.text.ListFormatter$Style DURATION_NARROW -> DURATION_NARROW
    java.lang.String name -> a
    com.ibm.icu.text.ListFormatter$Style[] $VALUES -> b
    43:43:com.ibm.icu.text.ListFormatter$Style[] values() -> values
    43:43:com.ibm.icu.text.ListFormatter$Style valueOf(java.lang.String) -> valueOf
    76:78:void <init>(java.lang.String,int,java.lang.String) -> <init>
    85:85:java.lang.String getName() -> getName
    43:71:void <clinit>() -> <clinit>
com.ibm.icu.text.LocaleDisplayNames -> com.ibm.icu.text.LocaleDisplayNames:
    java.lang.reflect.Method FACTORY_DIALECTHANDLING -> a
    java.lang.reflect.Method FACTORY_DISPLAYCONTEXT -> b
    58:58:com.ibm.icu.text.LocaleDisplayNames getInstance(com.ibm.icu.util.ULocale) -> getInstance
    69:69:com.ibm.icu.text.LocaleDisplayNames getInstance(java.util.Locale) -> getInstance
    81:95:com.ibm.icu.text.LocaleDisplayNames getInstance(com.ibm.icu.util.ULocale,com.ibm.icu.text.LocaleDisplayNames$DialectHandling) -> getInstance
    108:122:com.ibm.icu.text.LocaleDisplayNames getInstance(com.ibm.icu.util.ULocale,com.ibm.icu.text.DisplayContext[]) -> getInstance
    135:135:com.ibm.icu.text.LocaleDisplayNames getInstance(java.util.Locale,com.ibm.icu.text.DisplayContext[]) -> getInstance
    com.ibm.icu.util.ULocale getLocale() -> getLocale
    com.ibm.icu.text.LocaleDisplayNames$DialectHandling getDialectHandling() -> getDialectHandling
    com.ibm.icu.text.DisplayContext getContext(com.ibm.icu.text.DisplayContext$Type) -> getContext
    java.lang.String localeDisplayName(com.ibm.icu.util.ULocale) -> localeDisplayName
    java.lang.String localeDisplayName(java.util.Locale) -> localeDisplayName
    java.lang.String localeDisplayName(java.lang.String) -> localeDisplayName
    java.lang.String languageDisplayName(java.lang.String) -> languageDisplayName
    java.lang.String scriptDisplayName(java.lang.String) -> scriptDisplayName
    214:214:java.lang.String scriptDisplayNameInContext(java.lang.String) -> scriptDisplayNameInContext
    java.lang.String scriptDisplayName(int) -> scriptDisplayName
    java.lang.String regionDisplayName(java.lang.String) -> regionDisplayName
    java.lang.String variantDisplayName(java.lang.String) -> variantDisplayName
    java.lang.String keyDisplayName(java.lang.String) -> keyDisplayName
    java.lang.String keyValueDisplayName(java.lang.String,java.lang.String) -> keyValueDisplayName
    273:273:java.util.List getUiList(java.util.Set,boolean,java.util.Comparator) -> getUiList
    java.util.List getUiListCompareWholeItems(java.util.Set,java.util.Comparator) -> getUiListCompareWholeItems
    406:407:void <init>() -> <init>
    413:437:void <clinit>() -> <clinit>
com.ibm.icu.text.LocaleDisplayNames$DialectHandling -> com.ibm.icu.text.LocaleDisplayNames$DialectHandling:
    com.ibm.icu.text.LocaleDisplayNames$DialectHandling STANDARD_NAMES -> STANDARD_NAMES
    com.ibm.icu.text.LocaleDisplayNames$DialectHandling DIALECT_NAMES -> DIALECT_NAMES
    com.ibm.icu.text.LocaleDisplayNames$DialectHandling[] $VALUES -> a
    34:34:com.ibm.icu.text.LocaleDisplayNames$DialectHandling[] values() -> values
    34:34:com.ibm.icu.text.LocaleDisplayNames$DialectHandling valueOf(java.lang.String) -> valueOf
    34:34:void <init>(java.lang.String,int) -> <init>
    34:46:void <clinit>() -> <clinit>
com.ibm.icu.text.LocaleDisplayNames$LastResortLocaleDisplayNames -> com.ibm.icu.text.bt:
    com.ibm.icu.util.ULocale locale -> a
    com.ibm.icu.text.DisplayContext[] contexts -> b
    447:452:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.LocaleDisplayNames$DialectHandling) -> <init>
    454:458:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.DisplayContext[]) -> <init>
    462:462:com.ibm.icu.util.ULocale getLocale() -> getLocale
    467:476:com.ibm.icu.text.LocaleDisplayNames$DialectHandling getDialectHandling() -> getDialectHandling
    481:488:com.ibm.icu.text.DisplayContext getContext(com.ibm.icu.text.DisplayContext$Type) -> getContext
    493:493:java.lang.String localeDisplayName(com.ibm.icu.util.ULocale) -> localeDisplayName
    498:498:java.lang.String localeDisplayName(java.util.Locale) -> localeDisplayName
    503:503:java.lang.String localeDisplayName(java.lang.String) -> localeDisplayName
    508:508:java.lang.String languageDisplayName(java.lang.String) -> languageDisplayName
    513:513:java.lang.String scriptDisplayName(java.lang.String) -> scriptDisplayName
    518:518:java.lang.String scriptDisplayName(int) -> scriptDisplayName
    523:523:java.lang.String regionDisplayName(java.lang.String) -> regionDisplayName
    528:528:java.lang.String variantDisplayName(java.lang.String) -> variantDisplayName
    533:533:java.lang.String keyDisplayName(java.lang.String) -> keyDisplayName
    538:538:java.lang.String keyValueDisplayName(java.lang.String,java.lang.String) -> keyValueDisplayName
    543:543:java.util.List getUiListCompareWholeItems(java.util.Set,java.util.Comparator) -> getUiListCompareWholeItems
    442:442:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.LocaleDisplayNames$DialectHandling,byte) -> <init>
    442:442:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.DisplayContext[],byte) -> <init>
com.ibm.icu.text.LocaleDisplayNames$UiListItem -> com.ibm.icu.text.LocaleDisplayNames$UiListItem:
    com.ibm.icu.util.ULocale minimized -> minimized
    com.ibm.icu.util.ULocale modified -> modified
    java.lang.String nameInDisplayLocale -> nameInDisplayLocale
    java.lang.String nameInSelf -> nameInSelf
    328:333:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale,java.lang.String,java.lang.String) -> <init>
    343:344:boolean equals(java.lang.Object) -> equals
    358:358:int hashCode() -> hashCode
    369:369:java.lang.String toString() -> toString
    382:382:java.util.Comparator getComparator(java.util.Comparator,boolean) -> getComparator
com.ibm.icu.text.LocaleDisplayNames$UiListItem$UiListItemComparator -> com.ibm.icu.text.bu:
    java.util.Comparator collator -> a
    boolean useSelf -> b
    388:391:void <init>(java.util.Comparator,boolean) -> <init>
    393:395:int compare(com.ibm.icu.text.LocaleDisplayNames$UiListItem,com.ibm.icu.text.LocaleDisplayNames$UiListItem) -> a
    385:385:int compare(java.lang.Object,java.lang.Object) -> compare
com.ibm.icu.text.LowercaseTransliterator -> com.ibm.icu.text.bv:
    com.ibm.icu.util.ULocale locale -> a
    com.ibm.icu.impl.UCaseProps csp -> b
    com.ibm.icu.text.ReplaceableContextIterator iter -> c
    java.lang.StringBuilder result -> d
    int[] locCache -> e
    com.ibm.icu.text.SourceTargetUtility sourceTargetUtility -> f
    30:37:void register() -> a
    51:115:void <init>(com.ibm.icu.util.ULocale) -> <init>
    65:112:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    122:132:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
    17:17:com.ibm.icu.util.ULocale access$000(com.ibm.icu.text.LowercaseTransliterator) -> a
com.ibm.icu.text.LowercaseTransliterator$1 -> com.ibm.icu.text.bw:
    30:30:void <init>() -> <init>
    32:32:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.LowercaseTransliterator$2 -> com.ibm.icu.text.bx:
    com.ibm.icu.text.LowercaseTransliterator this$0 -> a
    124:124:void <init>(com.ibm.icu.text.LowercaseTransliterator) -> <init>
    126:126:java.lang.String transform(java.lang.String) -> a
    124:124:java.lang.Object transform(java.lang.Object) -> transform
com.ibm.icu.text.MeasureFormat -> com.ibm.icu.text.MeasureFormat:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.text.MeasureFormat$ImmutableNumberFormat numberFormat -> a
    com.ibm.icu.text.MeasureFormat$FormatWidth formatWidth -> b
    com.ibm.icu.text.PluralRules rules -> c
    java.util.Map unitToStyleToCountToFormat -> d
    com.ibm.icu.text.MeasureFormat$NumericFormatters numericFormatters -> e
    com.ibm.icu.text.MeasureFormat$ImmutableNumberFormat currencyFormat -> f
    com.ibm.icu.text.MeasureFormat$ImmutableNumberFormat integerFormat -> g
    java.util.Map unitToStyleToPerUnitPattern -> h
    java.util.EnumMap styleToPerPattern -> i
    com.ibm.icu.impl.SimpleCache localeMeasureFormatData -> j
    com.ibm.icu.impl.SimpleCache localeToNumericDurationFormatters -> k
    java.util.Map hmsTo012 -> l
    java.util.Map localeIdToRangeFormat -> m
    226:226:com.ibm.icu.text.MeasureFormat getInstance(com.ibm.icu.util.ULocale,com.ibm.icu.text.MeasureFormat$FormatWidth) -> getInstance
    238:238:com.ibm.icu.text.MeasureFormat getInstance(java.util.Locale,com.ibm.icu.text.MeasureFormat$FormatWidth) -> getInstance
    251:269:com.ibm.icu.text.MeasureFormat getInstance(com.ibm.icu.util.ULocale,com.ibm.icu.text.MeasureFormat$FormatWidth,com.ibm.icu.text.NumberFormat) -> getInstance
    292:292:com.ibm.icu.text.MeasureFormat getInstance(java.util.Locale,com.ibm.icu.text.MeasureFormat$FormatWidth,com.ibm.icu.text.NumberFormat) -> getInstance
    315:340:java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    352:352:com.ibm.icu.util.Measure parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    369:369:java.lang.String formatMeasures(com.ibm.icu.util.Measure[]) -> formatMeasures
    391:460:java.lang.String formatMeasureRange(com.ibm.icu.util.Measure,com.ibm.icu.util.Measure) -> formatMeasureRange
    465:487:void appendReplacingCurrency(java.lang.String,com.ibm.icu.util.Currency,com.ibm.icu.text.PluralRules$StandardPluralCategories,java.lang.StringBuilder) -> a
    507:523:java.lang.StringBuilder formatMeasurePerUnit(com.ibm.icu.util.Measure,com.ibm.icu.util.MeasureUnit,java.lang.StringBuilder,java.text.FieldPosition) -> formatMeasurePerUnit
    543:571:java.lang.StringBuilder formatMeasures(java.lang.StringBuilder,java.text.FieldPosition,com.ibm.icu.util.Measure[]) -> formatMeasures
    582:590:boolean equals(java.lang.Object) -> equals
    602:602:int hashCode() -> hashCode
    611:611:com.ibm.icu.text.MeasureFormat$FormatWidth getWidth() -> getWidth
    619:619:com.ibm.icu.util.ULocale getLocale() -> getLocale
    627:627:com.ibm.icu.text.NumberFormat getNumberFormat() -> getNumberFormat
    638:638:com.ibm.icu.text.MeasureFormat getCurrencyFormat(com.ibm.icu.util.ULocale) -> getCurrencyFormat
    649:649:com.ibm.icu.text.MeasureFormat getCurrencyFormat(java.util.Locale) -> getCurrencyFormat
    660:660:com.ibm.icu.text.MeasureFormat getCurrencyFormat() -> getCurrencyFormat
    665:665:com.ibm.icu.text.MeasureFormat withLocale(com.ibm.icu.util.ULocale) -> a
    669:669:com.ibm.icu.text.MeasureFormat withNumberFormat(com.ibm.icu.text.NumberFormat) -> a
    692:703:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.MeasureFormat$FormatWidth,com.ibm.icu.text.MeasureFormat$ImmutableNumberFormat,com.ibm.icu.text.PluralRules,java.util.Map,com.ibm.icu.text.MeasureFormat$NumericFormatters,com.ibm.icu.text.MeasureFormat$ImmutableNumberFormat,com.ibm.icu.text.MeasureFormat$ImmutableNumberFormat,java.util.Map,java.util.EnumMap) -> <init>
    705:716:void <init>() -> <init>
    739:741:com.ibm.icu.text.MeasureFormat$NumericFormatters loadNumericFormatters(com.ibm.icu.util.ULocale) -> b
    752:822:com.ibm.icu.text.MeasureFormat$MeasureFormatData loadLocaleData(com.ibm.icu.util.ULocale) -> c
    826:839:boolean fillInStyleMap(java.util.Map) -> a
    844:857:int withPerUnitAndAppend(java.lang.CharSequence,com.ibm.icu.util.MeasureUnit,java.lang.StringBuilder) -> a
    861:861:java.lang.String formatMeasure(com.ibm.icu.util.Measure,com.ibm.icu.text.MeasureFormat$ImmutableNumberFormat) -> a
    871:897:java.lang.StringBuilder formatMeasure(com.ibm.icu.util.Measure,com.ibm.icu.text.MeasureFormat$ImmutableNumberFormat,java.lang.StringBuilder,java.text.FieldPosition) -> a
    969:969:java.lang.Object toTimeUnitProxy() -> a
    973:973:java.lang.Object toCurrencyProxy() -> b
    981:1007:java.lang.StringBuilder formatMeasuresSlowTrack(com.ibm.icu.text.ListFormatter,java.lang.StringBuilder,java.text.FieldPosition,com.ibm.icu.util.Measure[]) -> a
    1013:1017:com.ibm.icu.text.DateFormat loadNumericDurationFormat(com.ibm.icu.impl.ICUResourceBundle,java.lang.String) -> a
    1026:1044:java.lang.Number[] toHMS(com.ibm.icu.util.Measure[]) -> a
    1053:1098:java.lang.StringBuilder formatNumeric(java.lang.Number[],java.lang.StringBuilder) -> a
    1123:1162:java.lang.StringBuilder formatNumeric(java.util.Date,com.ibm.icu.text.DateFormat,com.ibm.icu.text.DateFormat$Field,java.lang.Number,java.lang.StringBuilder) -> a
    1166:1166:java.lang.Object writeReplace() -> writeReplace
    1252:1256:com.ibm.icu.text.MeasureFormat$FormatWidth fromFormatWidthOrdinal(int) -> b
    1274:1305:com.ibm.icu.impl.SimplePatternFormatter getRangeFormat(com.ibm.icu.util.ULocale,com.ibm.icu.text.MeasureFormat$FormatWidth) -> getRangeFormat
    1318:1318:java.lang.String getRangePattern(com.ibm.icu.util.ULocale,com.ibm.icu.text.MeasureFormat$FormatWidth) -> getRangePattern
    110:110:java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    110:110:com.ibm.icu.text.MeasureFormat$FormatWidth access$100(int) -> a
    136:1259:void <clinit>() -> <clinit>
com.ibm.icu.text.MeasureFormat$FormatWidth -> com.ibm.icu.text.MeasureFormat$FormatWidth:
    com.ibm.icu.text.MeasureFormat$FormatWidth WIDE -> WIDE
    com.ibm.icu.text.MeasureFormat$FormatWidth SHORT -> SHORT
    com.ibm.icu.text.MeasureFormat$FormatWidth NARROW -> NARROW
    com.ibm.icu.text.MeasureFormat$FormatWidth NUMERIC -> NUMERIC
    java.lang.String resourceKey -> a
    com.ibm.icu.text.ListFormatter$Style listFormatterStyle -> b
    int currencyStyle -> c
    com.ibm.icu.text.MeasureFormat$FormatWidth[] $VALUES -> d
    163:163:com.ibm.icu.text.MeasureFormat$FormatWidth[] values() -> values
    163:163:com.ibm.icu.text.MeasureFormat$FormatWidth valueOf(java.lang.String) -> valueOf
    202:206:void <init>(java.lang.String,int,java.lang.String,com.ibm.icu.text.ListFormatter$Style,int) -> <init>
    209:209:com.ibm.icu.text.ListFormatter$Style getListFormatterStyle() -> a
    213:213:int getCurrencyStyle() -> b
    163:193:void <clinit>() -> <clinit>
com.ibm.icu.text.MeasureFormat$ImmutableNumberFormat -> com.ibm.icu.text.by:
    com.ibm.icu.text.NumberFormat nf -> a
    918:920:void <init>(com.ibm.icu.text.NumberFormat) -> <init>
    923:923:com.ibm.icu.text.NumberFormat get() -> a
    928:928:java.lang.StringBuffer format(java.lang.Number,java.lang.StringBuffer,java.text.FieldPosition) -> a
    933:933:java.lang.StringBuffer format(com.ibm.icu.util.CurrencyAmount,java.lang.StringBuffer,java.text.FieldPosition) -> a
    938:938:java.lang.String format(java.lang.Number) -> a
    942:942:java.lang.String getPrefix(boolean) -> a
    945:945:java.lang.String getSuffix(boolean) -> b
    915:915:com.ibm.icu.text.NumberFormat access$000(com.ibm.icu.text.MeasureFormat$ImmutableNumberFormat) -> a
com.ibm.icu.text.MeasureFormat$MeasureFormatData -> com.ibm.icu.text.bz:
    java.util.Map unitToStyleToCountToFormat -> a
    java.util.Map unitToStyleToPerUnitPattern -> b
    java.util.EnumMap styleToPerPattern -> c
    904:908:void <init>(java.util.Map,java.util.Map,java.util.EnumMap) -> <init>
com.ibm.icu.text.MeasureFormat$MeasureProxy -> com.ibm.icu.text.bA:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.util.ULocale locale -> a
    com.ibm.icu.text.MeasureFormat$FormatWidth formatWidth -> b
    com.ibm.icu.text.NumberFormat numberFormat -> c
    int subClass -> d
    java.util.HashMap keyValues -> e
    1183:1189:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.MeasureFormat$FormatWidth,com.ibm.icu.text.NumberFormat,int) -> <init>
    1192:1193:void <init>() -> <init>
    1196:1202:void writeExternal(java.io.ObjectOutput) -> writeExternal
    1206:1221:void readExternal(java.io.ObjectInput) -> readExternal
    1225:1234:com.ibm.icu.text.TimeUnitFormat createTimeUnitFormat() -> a
    1238:1246:java.lang.Object readResolve() -> readResolve
com.ibm.icu.text.MeasureFormat$NumericFormatters -> com.ibm.icu.text.bB:
    com.ibm.icu.text.DateFormat hourMinute -> a
    com.ibm.icu.text.DateFormat minuteSecond -> b
    com.ibm.icu.text.DateFormat hourMinuteSecond -> c
    726:730:void <init>(com.ibm.icu.text.DateFormat,com.ibm.icu.text.DateFormat,com.ibm.icu.text.DateFormat) -> <init>
    732:732:com.ibm.icu.text.DateFormat getHourMinute() -> a
    733:733:com.ibm.icu.text.DateFormat getMinuteSecond() -> b
    734:734:com.ibm.icu.text.DateFormat getHourMinuteSecond() -> c
com.ibm.icu.text.MessageFormat -> com.ibm.icu.text.MessageFormat:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.util.ULocale ulocale -> a
    com.ibm.icu.text.MessagePattern msgPattern -> b
    java.util.Map cachedFormatters -> c
    java.util.Set customFormatArgStarts -> d
    com.ibm.icu.text.DateFormat stockDateFormatter -> e
    com.ibm.icu.text.NumberFormat stockNumberFormatter -> f
    com.ibm.icu.text.MessageFormat$PluralSelectorProvider pluralProvider -> g
    com.ibm.icu.text.MessageFormat$PluralSelectorProvider ordinalProvider -> h
    java.lang.String[] typeList -> i
    java.lang.String[] modifierList -> j
    java.lang.String[] dateModifierList -> k
    java.util.Locale rootLocale -> l
    boolean $assertionsDisabled -> m
    349:352:void <init>(java.lang.String) -> <init>
    365:366:void <init>(java.lang.String,java.util.Locale) -> <init>
    378:381:void <init>(java.lang.String,com.ibm.icu.util.ULocale) -> <init>
    393:394:void setLocale(java.util.Locale) -> setLocale
    409:418:void setLocale(com.ibm.icu.util.ULocale) -> setLocale
    427:427:java.util.Locale getLocale() -> getLocale
    437:437:com.ibm.icu.util.ULocale getULocale() -> getULocale
    452:463:void applyPattern(java.lang.String) -> applyPattern
    481:487:void applyPattern(java.lang.String,com.ibm.icu.text.MessagePattern$ApostropheMode) -> applyPattern
    495:498:com.ibm.icu.text.MessagePattern$ApostropheMode getApostropheMode() -> getApostropheMode
    515:524:java.lang.String toPattern() -> toPattern
    532:543:int nextTopLevelArgStart(int) -> a
    547:548:boolean argNameMatches(int,java.lang.String,int) -> a
    554:558:java.lang.String getArgName(int) -> b
    590:601:void setFormatsByArgumentIndex(java.text.Format[]) -> setFormatsByArgumentIndex
    625:631:void setFormatsByArgumentName(java.util.Map) -> setFormatsByArgumentName
    657:664:void setFormats(java.text.Format[]) -> setFormats
    689:699:void setFormatByArgumentIndex(int,java.text.Format) -> setFormatByArgumentIndex
    721:730:void setFormatByArgumentName(java.lang.String,java.text.Format) -> setFormatByArgumentName
    751:759:void setFormat(int,java.text.Format) -> setFormat
    787:800:java.text.Format[] getFormatsByArgumentIndex() -> getFormatsByArgumentIndex
    825:829:java.text.Format[] getFormats() -> getFormats
    839:843:java.util.Set getArgumentNames() -> getArgumentNames
    854:866:java.text.Format getFormatByArgumentName(java.lang.String) -> getFormatByArgumentName
    942:943:java.lang.StringBuffer format(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition) -> format
    976:977:java.lang.StringBuffer format(java.util.Map,java.lang.StringBuffer,java.text.FieldPosition) -> format
    997:998:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    1015:1016:java.lang.String format(java.lang.String,java.util.Map) -> format
    1027:1027:boolean usesNamedArguments() -> usesNamedArguments
    1058:1059:java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    1099:1111:java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object) -> formatToCharacterIterator
    1145:1167:java.lang.Object[] parse(java.lang.String,java.text.ParsePosition) -> parse
    1184:1190:java.util.Map parseToMap(java.lang.String,java.text.ParsePosition) -> parseToMap
    1208:1214:java.lang.Object[] parse(java.lang.String) -> parse
    1234:1351:void parse(int,java.lang.String,java.text.ParsePosition,java.lang.Object[],java.util.Map) -> a
    1370:1377:java.util.Map parseToMap(java.lang.String) -> parseToMap
    1408:1411:java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    1421:1451:java.lang.Object clone() -> clone
    1460:1465:boolean equals(java.lang.Object) -> equals
    1479:1479:int hashCode() -> hashCode
    1573:1577:com.ibm.icu.text.DateFormat getStockDateFormatter() -> a
    1580:1583:com.ibm.icu.text.NumberFormat getStockNumberFormatter() -> b
    1607:1754:void format(int,com.ibm.icu.text.MessageFormat$PluralSelectorContext,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition) -> a
    1762:1819:void formatComplexSubMessage(int,com.ibm.icu.text.MessageFormat$PluralSelectorContext,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper) -> a
    1829:1842:java.lang.String getLiteralStringUntilNextArgument(int) -> c
    1848:1856:java.text.FieldPosition updateMetaData(com.ibm.icu.text.MessageFormat$AppendableWrapper,int,java.text.FieldPosition,java.lang.Object) -> a
    1868:1904:int findChoiceSubMessage(com.ibm.icu.text.MessagePattern,int,double) -> a
    1912:1938:double parseChoiceArgument(com.ibm.icu.text.MessagePattern,int,java.lang.String,java.text.ParsePosition) -> a
    1952:1969:int matchStringUntilLimitPart(com.ibm.icu.text.MessagePattern,int,int,java.lang.String,int) -> a
    1978:2001:int findOtherSubMessage(int) -> d
    2010:2027:int findFirstPluralNumberArg(int,java.lang.String) -> a
    2118:2123:void format(java.lang.Object,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition) -> a
    2134:2140:void format(java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition) -> a
    2143:2150:void resetPattern() -> c
    2184:2302:java.text.Format createAppropriateFormat(java.lang.String,java.lang.String) -> a
    2308:2313:int findKeyword(java.lang.String,java.lang.String[]) -> a
    2331:2358:void writeObject(java.io.ObjectOutputStream) -> writeObject
    2365:2388:void readObject(java.io.ObjectInputStream) -> readObject
    2391:2420:void cacheExplicitFormats() -> d
    2426:2430:void setArgStartFormat(int,java.text.Format) -> a
    2437:2442:void setCustomArgStartFormat(int,java.text.Format) -> b
    2482:2544:java.lang.String autoQuoteApostrophe(java.lang.String) -> autoQuoteApostrophe
    334:334:com.ibm.icu.util.ULocale access$700(com.ibm.icu.text.MessageFormat) -> a
    334:334:int access$800(com.ibm.icu.text.MessageFormat,int) -> a
    334:334:int access$900(com.ibm.icu.text.MessageFormat,int,java.lang.String) -> a
    334:334:java.util.Map access$1000(com.ibm.icu.text.MessageFormat) -> b
    334:334:com.ibm.icu.text.NumberFormat access$1100(com.ibm.icu.text.MessageFormat) -> c
    334:2305:void <clinit>() -> <clinit>
com.ibm.icu.text.MessageFormat$AppendableWrapper -> com.ibm.icu.text.bC:
    java.lang.Appendable app -> a
    int length -> b
    java.util.List attributes -> c
    2553:2557:void <init>(java.lang.StringBuilder) -> <init>
    2559:2563:void <init>(java.lang.StringBuffer) -> <init>
    2566:2567:void useAttributes() -> a
    2571:2576:void append(java.lang.CharSequence) -> a
    2580:2585:void append(java.lang.CharSequence,int,int) -> a
    2588:2589:void append(java.text.CharacterIterator) -> a
    2593:2604:int append(java.lang.Appendable,java.text.CharacterIterator) -> a
    2609:2635:void formatAndAppend(java.text.Format,java.lang.Object) -> a
    2638:2643:void formatAndAppend(java.text.Format,java.lang.Object,java.lang.String) -> a
    2552:2552:java.util.List access$000(com.ibm.icu.text.MessageFormat$AppendableWrapper) -> a
    2552:2552:int access$500(com.ibm.icu.text.MessageFormat$AppendableWrapper) -> b
com.ibm.icu.text.MessageFormat$AttributeAndPosition -> com.ibm.icu.text.bD:
    java.text.AttributedCharacterIterator$Attribute key -> a
    java.lang.Object value -> b
    int start -> c
    int limit -> d
    2654:2656:void <init>(java.lang.Object,int,int) -> <init>
    2658:2660:void <init>(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int) -> <init>
    2663:2667:void init(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int) -> a
    2650:2650:java.text.AttributedCharacterIterator$Attribute access$100(com.ibm.icu.text.MessageFormat$AttributeAndPosition) -> a
    2650:2650:java.lang.Object access$200(com.ibm.icu.text.MessageFormat$AttributeAndPosition) -> b
    2650:2650:int access$300(com.ibm.icu.text.MessageFormat$AttributeAndPosition) -> c
    2650:2650:int access$400(com.ibm.icu.text.MessageFormat$AttributeAndPosition) -> d
com.ibm.icu.text.MessageFormat$Field -> com.ibm.icu.text.MessageFormat$Field:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.text.MessageFormat$Field ARGUMENT -> ARGUMENT
    1501:1502:void <init>(java.lang.String) -> <init>
    1513:1520:java.lang.Object readResolve() -> readResolve
    1533:1533:void <clinit>() -> <clinit>
com.ibm.icu.text.MessageFormat$PluralSelectorContext -> com.ibm.icu.text.bE:
    int startIndex -> a
    java.lang.String argName -> b
    java.lang.Number number -> c
    double offset -> d
    int numberArgIndex -> e
    java.text.Format formatter -> f
    java.lang.String numberString -> g
    boolean forReplaceNumber -> h
    2037:2049:void <init>(int,java.lang.String,java.lang.Number,double) -> <init>
    2052:2052:java.lang.String toString() -> toString
    2036:2036:void <init>(int,java.lang.String,java.lang.Number,double,byte) -> <init>
com.ibm.icu.text.MessageFormat$PluralSelectorProvider -> com.ibm.icu.text.bF:
    com.ibm.icu.text.MessageFormat msgFormat -> a
    com.ibm.icu.text.PluralRules rules -> b
    com.ibm.icu.text.PluralRules$PluralType type -> c
    boolean $assertionsDisabled -> d
    2078:2081:void <init>(com.ibm.icu.text.MessageFormat,com.ibm.icu.text.PluralRules$PluralType) -> <init>
    2083:2108:java.lang.String select(java.lang.Object,double) -> a
    2077:2077:void <clinit>() -> <clinit>
com.ibm.icu.text.MessagePattern -> com.ibm.icu.text.MessagePattern:
    int ARG_NAME_NOT_NUMBER -> ARG_NAME_NOT_NUMBER
    int ARG_NAME_NOT_VALID -> ARG_NAME_NOT_VALID
    double NO_NUMERIC_VALUE -> NO_NUMERIC_VALUE
    com.ibm.icu.text.MessagePattern$ApostropheMode aposMode -> a
    java.lang.String msg -> b
    java.util.ArrayList parts -> c
    java.util.ArrayList numericValues -> d
    boolean hasArgNames -> e
    boolean hasArgNumbers -> f
    boolean needsAutoQuoting -> g
    boolean frozen -> h
    com.ibm.icu.text.MessagePattern$ApostropheMode defaultAposMode -> i
    com.ibm.icu.text.MessagePattern$ArgType[] argTypes -> j
    boolean $assertionsDisabled -> k
    143:1601:void <init>() -> <init>
    152:1601:void <init>(com.ibm.icu.text.MessagePattern$ApostropheMode) -> <init>
    166:1601:void <init>(java.lang.String) -> <init>
    182:185:com.ibm.icu.text.MessagePattern parse(java.lang.String) -> parse
    199:202:com.ibm.icu.text.MessagePattern parseChoiceStyle(java.lang.String) -> parseChoiceStyle
    216:219:com.ibm.icu.text.MessagePattern parsePluralStyle(java.lang.String) -> parsePluralStyle
    233:236:com.ibm.icu.text.MessagePattern parseSelectStyle(java.lang.String) -> parseSelectStyle
    246:257:void clear() -> clear
    266:268:void clearPatternAndSetApostropheMode(com.ibm.icu.text.MessagePattern$ApostropheMode) -> clearPatternAndSetApostropheMode
    277:284:boolean equals(java.lang.Object) -> equals
    297:297:int hashCode() -> hashCode
    305:305:com.ibm.icu.text.MessagePattern$ApostropheMode getApostropheMode() -> getApostropheMode
    313:313:boolean jdkAposMode() -> a
    321:321:java.lang.String getPatternString() -> getPatternString
    330:330:boolean hasNamedArguments() -> hasNamedArguments
    339:339:boolean hasNumberedArguments() -> hasNumberedArguments
    348:348:java.lang.String toString() -> toString
    363:366:int validateArgumentName(java.lang.String) -> validateArgumentName
    396:414:java.lang.String autoQuoteApostropheDeep() -> autoQuoteApostropheDeep
    425:425:int countParts() -> countParts
    436:436:com.ibm.icu.text.MessagePattern$Part getPart(int) -> getPart
    448:448:com.ibm.icu.text.MessagePattern$Part$Type getPartType(int) -> getPartType
    460:460:int getPatternIndex(int) -> getPatternIndex
    471:472:java.lang.String getSubstring(com.ibm.icu.text.MessagePattern$Part) -> getSubstring
    483:483:boolean partSubstringMatches(com.ibm.icu.text.MessagePattern$Part,java.lang.String) -> partSubstringMatches
    493:499:double getNumericValue(com.ibm.icu.text.MessagePattern$Part) -> getNumericValue
    519:523:double getPluralOffset(int) -> getPluralOffset
    537:541:int getLimitPartIndex(int) -> getLimitPartIndex
    862:865:java.lang.Object clone() -> clone
    878:887:com.ibm.icu.text.MessagePattern cloneAsThawed() -> cloneAsThawed
    896:897:com.ibm.icu.text.MessagePattern freeze() -> freeze
    906:906:boolean isFrozen() -> isFrozen
    910:921:void preParse(java.lang.String) -> a
    928:1010:int parseMessage(int,int,int,com.ibm.icu.text.MessagePattern$ArgType) -> a
    1014:1112:int parseArg(int,int,int) -> a
    1116:1147:int parseSimpleStyle(int) -> a
    1152:1198:int parseChoiceStyle(int,int) -> a
    1202:1299:int parsePluralOrSelectStyle(com.ibm.icu.text.MessagePattern$ArgType,int,int) -> a
    1314:1349:int parseArgNumber(java.lang.CharSequence,int,int) -> a
    1354:1354:int parseArgNumber(int,int) -> b
    1364:1411:void parseDouble(int,int,boolean) -> a
    1422:1440:void appendReducedApostrophes(java.lang.String,int,int,java.lang.StringBuilder) -> a
    1443:1443:int skipWhiteSpace(int) -> b
    1447:1447:int skipIdentifier(int) -> c
    1455:1463:int skipDouble(int) -> d
    1467:1467:boolean isArgTypeChar(int) -> e
    1472:1472:boolean isChoice(int) -> f
    1483:1483:boolean isPlural(int) -> g
    1494:1494:boolean isSelect(int) -> h
    1505:1505:boolean isOrdinal(int) -> i
    1520:1520:boolean inMessageFormatPattern(int) -> j
    1528:1528:boolean inTopLevelChoiceMessage(int,com.ibm.icu.text.MessagePattern$ArgType) -> a
    1535:1536:void addPart(com.ibm.icu.text.MessagePattern$Part$Type,int,int,int) -> a
    1539:1541:void addLimitPart(int,com.ibm.icu.text.MessagePattern$Part$Type,int,int,int) -> a
    1545:1556:void addArgDoublePart(double,int,int) -> a
    1567:1584:java.lang.String prefix(java.lang.String,int) -> a
    1588:1588:java.lang.String prefix(java.lang.String) -> b
    1592:1592:java.lang.String prefix(int) -> k
    1596:1596:java.lang.String prefix() -> c
    79:79:java.lang.Object cloneAsThawed() -> cloneAsThawed
    79:79:java.lang.Object freeze() -> freeze
    79:79:com.ibm.icu.text.MessagePattern$ArgType[] access$500() -> b
    79:1612:void <clinit>() -> <clinit>
com.ibm.icu.text.MessagePattern$ApostropheMode -> com.ibm.icu.text.MessagePattern$ApostropheMode:
    com.ibm.icu.text.MessagePattern$ApostropheMode DOUBLE_OPTIONAL -> DOUBLE_OPTIONAL
    com.ibm.icu.text.MessagePattern$ApostropheMode DOUBLE_REQUIRED -> DOUBLE_REQUIRED
    com.ibm.icu.text.MessagePattern$ApostropheMode[] $VALUES -> a
    115:115:com.ibm.icu.text.MessagePattern$ApostropheMode[] values() -> values
    115:115:com.ibm.icu.text.MessagePattern$ApostropheMode valueOf(java.lang.String) -> valueOf
    115:115:void <init>(java.lang.String,int) -> <init>
    115:136:void <clinit>() -> <clinit>
com.ibm.icu.text.MessagePattern$ArgType -> com.ibm.icu.text.MessagePattern$ArgType:
    com.ibm.icu.text.MessagePattern$ArgType NONE -> NONE
    com.ibm.icu.text.MessagePattern$ArgType SIMPLE -> SIMPLE
    com.ibm.icu.text.MessagePattern$ArgType CHOICE -> CHOICE
    com.ibm.icu.text.MessagePattern$ArgType PLURAL -> PLURAL
    com.ibm.icu.text.MessagePattern$ArgType SELECT -> SELECT
    com.ibm.icu.text.MessagePattern$ArgType SELECTORDINAL -> SELECTORDINAL
    com.ibm.icu.text.MessagePattern$ArgType[] $VALUES -> a
    805:805:com.ibm.icu.text.MessagePattern$ArgType[] values() -> values
    805:805:com.ibm.icu.text.MessagePattern$ArgType valueOf(java.lang.String) -> valueOf
    805:805:void <init>(java.lang.String,int) -> <init>
    851:851:boolean hasPluralStyle() -> hasPluralStyle
    805:843:void <clinit>() -> <clinit>
com.ibm.icu.text.MessagePattern$Part -> com.ibm.icu.text.MessagePattern$Part:
    com.ibm.icu.text.MessagePattern$Part$Type type -> a
    int index -> b
    char length -> c
    short value -> d
    int limitPartIndex -> e
    552:557:void <init>(com.ibm.icu.text.MessagePattern$Part$Type,int,int,int) -> <init>
    565:565:com.ibm.icu.text.MessagePattern$Part$Type getType() -> getType
    574:574:int getIndex() -> getIndex
    584:584:int getLength() -> getLength
    594:594:int getLimit() -> getLimit
    604:604:int getValue() -> getValue
    614:618:com.ibm.icu.text.MessagePattern$ArgType getArgType() -> getArgType
    749:751:java.lang.String toString() -> toString
    761:768:boolean equals(java.lang.Object) -> equals
    782:782:int hashCode() -> hashCode
    551:551:int access$000(com.ibm.icu.text.MessagePattern$Part) -> a
    551:551:short access$100(com.ibm.icu.text.MessagePattern$Part) -> b
    551:551:com.ibm.icu.text.MessagePattern$Part$Type access$200(com.ibm.icu.text.MessagePattern$Part) -> c
    551:551:char access$300(com.ibm.icu.text.MessagePattern$Part) -> d
    551:551:int access$400(com.ibm.icu.text.MessagePattern$Part) -> e
    551:551:short access$102(com.ibm.icu.text.MessagePattern$Part,short) -> a
    551:551:void <init>(com.ibm.icu.text.MessagePattern$Part$Type,int,int,int,byte) -> <init>
    551:551:int access$402(com.ibm.icu.text.MessagePattern$Part,int) -> a
com.ibm.icu.text.MessagePattern$Part$Type -> com.ibm.icu.text.MessagePattern$Part$Type:
    com.ibm.icu.text.MessagePattern$Part$Type MSG_START -> MSG_START
    com.ibm.icu.text.MessagePattern$Part$Type MSG_LIMIT -> MSG_LIMIT
    com.ibm.icu.text.MessagePattern$Part$Type SKIP_SYNTAX -> SKIP_SYNTAX
    com.ibm.icu.text.MessagePattern$Part$Type INSERT_CHAR -> INSERT_CHAR
    com.ibm.icu.text.MessagePattern$Part$Type REPLACE_NUMBER -> REPLACE_NUMBER
    com.ibm.icu.text.MessagePattern$Part$Type ARG_START -> ARG_START
    com.ibm.icu.text.MessagePattern$Part$Type ARG_LIMIT -> ARG_LIMIT
    com.ibm.icu.text.MessagePattern$Part$Type ARG_NUMBER -> ARG_NUMBER
    com.ibm.icu.text.MessagePattern$Part$Type ARG_NAME -> ARG_NAME
    com.ibm.icu.text.MessagePattern$Part$Type ARG_TYPE -> ARG_TYPE
    com.ibm.icu.text.MessagePattern$Part$Type ARG_STYLE -> ARG_STYLE
    com.ibm.icu.text.MessagePattern$Part$Type ARG_SELECTOR -> ARG_SELECTOR
    com.ibm.icu.text.MessagePattern$Part$Type ARG_INT -> ARG_INT
    com.ibm.icu.text.MessagePattern$Part$Type ARG_DOUBLE -> ARG_DOUBLE
    com.ibm.icu.text.MessagePattern$Part$Type[] $VALUES -> a
    626:626:com.ibm.icu.text.MessagePattern$Part$Type[] values() -> values
    626:626:com.ibm.icu.text.MessagePattern$Part$Type valueOf(java.lang.String) -> valueOf
    626:626:void <init>(java.lang.String,int) -> <init>
    739:739:boolean hasNumericValue() -> hasNumericValue
    626:730:void <clinit>() -> <clinit>
com.ibm.icu.text.MessagePatternUtil -> com.ibm.icu.text.MessagePatternUtil:
    31:32:void <init>() -> <init>
    43:43:com.ibm.icu.text.MessagePatternUtil$MessageNode buildMessageNode(java.lang.String) -> buildMessageNode
    55:62:com.ibm.icu.text.MessagePatternUtil$MessageNode buildMessageNode(com.ibm.icu.text.MessagePattern) -> buildMessageNode
    459:484:com.ibm.icu.text.MessagePatternUtil$MessageNode buildMessageNode(com.ibm.icu.text.MessagePattern,int,int) -> a
    488:526:com.ibm.icu.text.MessagePatternUtil$ArgNode buildArgNode(com.ibm.icu.text.MessagePattern,int,int) -> b
    531:545:com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode buildChoiceStyleNode(com.ibm.icu.text.MessagePattern,int,int) -> c
    551:574:com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode buildPluralStyleNode(com.ibm.icu.text.MessagePattern,int,int,com.ibm.icu.text.MessagePattern$ArgType) -> a
    579:589:com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode buildSelectStyleNode(com.ibm.icu.text.MessagePattern,int,int) -> d
com.ibm.icu.text.MessagePatternUtil$1 -> com.ibm.icu.text.bG:
    int[] $SwitchMap$com$ibm$icu$text$MessagePattern$ArgType -> a
    497:497:void <clinit>() -> <clinit>
com.ibm.icu.text.MessagePatternUtil$ArgNode -> com.ibm.icu.text.MessagePatternUtil$ArgNode:
    com.ibm.icu.text.MessagePattern$ArgType argType -> a
    java.lang.String name -> b
    int number -> c
    java.lang.String typeName -> d
    java.lang.String style -> e
    com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode complexStyle -> f
    218:218:com.ibm.icu.text.MessagePattern$ArgType getArgType() -> getArgType
    225:225:java.lang.String getName() -> getName
    232:232:int getNumber() -> getNumber
    239:239:java.lang.String getTypeName() -> getTypeName
    247:247:java.lang.String getSimpleStyle() -> getSimpleStyle
    255:255:com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode getComplexStyle() -> getComplexStyle
    263:275:java.lang.String toString() -> toString
    279:287:void <init>() -> <init>
    282:282:com.ibm.icu.text.MessagePatternUtil$ArgNode createArgNode() -> c
    212:212:com.ibm.icu.text.MessagePatternUtil$ArgNode access$800() -> a
    212:212:com.ibm.icu.text.MessagePattern$ArgType access$902(com.ibm.icu.text.MessagePatternUtil$ArgNode,com.ibm.icu.text.MessagePattern$ArgType) -> a
    212:212:java.lang.String access$1002(com.ibm.icu.text.MessagePatternUtil$ArgNode,java.lang.String) -> a
    212:212:int access$1102(com.ibm.icu.text.MessagePatternUtil$ArgNode,int) -> a
    212:212:java.lang.String access$1202(com.ibm.icu.text.MessagePatternUtil$ArgNode,java.lang.String) -> b
    212:212:java.lang.String access$1302(com.ibm.icu.text.MessagePatternUtil$ArgNode,java.lang.String) -> c
    212:212:com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode access$1402(com.ibm.icu.text.MessagePatternUtil$ArgNode,com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode) -> a
com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode -> com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode:
    com.ibm.icu.text.MessagePattern$ArgType argType -> a
    double offset -> b
    boolean explicitOffset -> c
    java.util.List list -> d
    304:304:com.ibm.icu.text.MessagePattern$ArgType getArgType() -> getArgType
    311:311:boolean hasExplicitOffset() -> hasExplicitOffset
    319:319:double getOffset() -> getOffset
    326:326:java.util.List getVariants() -> getVariants
    346:363:com.ibm.icu.text.MessagePatternUtil$VariantNode getVariantsByType(java.util.List,java.util.List) -> getVariantsByType
    371:376:java.lang.String toString() -> toString
    380:394:void <init>(com.ibm.icu.text.MessagePattern$ArgType) -> <init>
    384:385:void addVariant(com.ibm.icu.text.MessagePatternUtil$VariantNode) -> a
    387:388:com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode freeze() -> a
    298:298:void <init>(com.ibm.icu.text.MessagePattern$ArgType,byte) -> <init>
    298:298:void access$2000(com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode,com.ibm.icu.text.MessagePatternUtil$VariantNode) -> a
    298:298:com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode access$2100(com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode) -> a
    298:298:boolean access$2202(com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode,boolean) -> a
    298:298:double access$2302(com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode,double) -> a
com.ibm.icu.text.MessagePatternUtil$MessageContentsNode -> com.ibm.icu.text.MessagePatternUtil$MessageContentsNode:
    com.ibm.icu.text.MessagePatternUtil$MessageContentsNode$Type type -> a
    153:153:com.ibm.icu.text.MessagePatternUtil$MessageContentsNode$Type getType() -> getType
    165:165:java.lang.String toString() -> toString
    169:171:void <init>(com.ibm.icu.text.MessagePatternUtil$MessageContentsNode$Type) -> <init>
    173:173:com.ibm.icu.text.MessagePatternUtil$MessageContentsNode createReplaceNumberNode() -> a
    124:124:void <init>(com.ibm.icu.text.MessagePatternUtil$MessageContentsNode$Type,byte) -> <init>
    124:124:com.ibm.icu.text.MessagePatternUtil$MessageContentsNode access$600() -> b
com.ibm.icu.text.MessagePatternUtil$MessageContentsNode$Type -> com.ibm.icu.text.MessagePatternUtil$MessageContentsNode$Type:
    com.ibm.icu.text.MessagePatternUtil$MessageContentsNode$Type TEXT -> TEXT
    com.ibm.icu.text.MessagePatternUtil$MessageContentsNode$Type ARG -> ARG
    com.ibm.icu.text.MessagePatternUtil$MessageContentsNode$Type REPLACE_NUMBER -> REPLACE_NUMBER
    com.ibm.icu.text.MessagePatternUtil$MessageContentsNode$Type[] $VALUES -> a
    129:129:com.ibm.icu.text.MessagePatternUtil$MessageContentsNode$Type[] values() -> values
    129:129:com.ibm.icu.text.MessagePatternUtil$MessageContentsNode$Type valueOf(java.lang.String) -> valueOf
    129:129:void <init>(java.lang.String,int) -> <init>
    129:146:void <clinit>() -> <clinit>
com.ibm.icu.text.MessagePatternUtil$MessageNode -> com.ibm.icu.text.MessagePatternUtil$MessageNode:
    java.util.List list -> a
    85:85:java.util.List getContents() -> getContents
    93:93:java.lang.String toString() -> toString
    97:116:void <init>() -> <init>
    100:110:void addContentsNode(com.ibm.icu.text.MessagePatternUtil$MessageContentsNode) -> a
    112:113:com.ibm.icu.text.MessagePatternUtil$MessageNode freeze() -> a
    79:79:void <init>(byte) -> <init>
    79:79:void access$500(com.ibm.icu.text.MessagePatternUtil$MessageNode,com.ibm.icu.text.MessagePatternUtil$MessageContentsNode) -> a
    79:79:com.ibm.icu.text.MessagePatternUtil$MessageNode access$700(com.ibm.icu.text.MessagePatternUtil$MessageNode) -> a
com.ibm.icu.text.MessagePatternUtil$Node -> com.ibm.icu.text.MessagePatternUtil$Node:
    72:72:void <init>() -> <init>
    71:71:void <init>(byte) -> <init>
com.ibm.icu.text.MessagePatternUtil$TextNode -> com.ibm.icu.text.MessagePatternUtil$TextNode:
    java.lang.String text -> a
    189:189:java.lang.String getText() -> getText
    197:197:java.lang.String toString() -> toString
    201:203:void <init>(java.lang.String) -> <init>
    183:183:java.lang.String access$102(com.ibm.icu.text.MessagePatternUtil$TextNode,java.lang.String) -> a
    183:183:java.lang.String access$100(com.ibm.icu.text.MessagePatternUtil$TextNode) -> a
    183:183:void <init>(java.lang.String,byte) -> <init>
com.ibm.icu.text.MessagePatternUtil$VariantNode -> com.ibm.icu.text.MessagePatternUtil$VariantNode:
    java.lang.String selector -> a
    double numericValue -> b
    com.ibm.icu.text.MessagePatternUtil$MessageNode msgNode -> c
    411:411:java.lang.String getSelector() -> getSelector
    418:418:boolean isSelectorNumeric() -> isSelectorNumeric
    425:425:double getSelectorValue() -> getSelectorValue
    432:432:com.ibm.icu.text.MessagePatternUtil$MessageNode getMessage() -> getMessage
    440:446:java.lang.String toString() -> toString
    450:454:void <init>() -> <init>
    402:402:void <init>(byte) -> <init>
    402:402:java.lang.String access$1702(com.ibm.icu.text.MessagePatternUtil$VariantNode,java.lang.String) -> a
    402:402:double access$1802(com.ibm.icu.text.MessagePatternUtil$VariantNode,double) -> a
    402:402:com.ibm.icu.text.MessagePatternUtil$MessageNode access$1902(com.ibm.icu.text.MessagePatternUtil$VariantNode,com.ibm.icu.text.MessagePatternUtil$MessageNode) -> a
com.ibm.icu.text.ModulusSubstitution -> com.ibm.icu.text.bH:
    double divisor -> d
    com.ibm.icu.text.NFRule ruleToUse -> e
    814:836:void <init>(int,double,com.ibm.icu.text.NFRule,com.ibm.icu.text.NFRuleSet,java.lang.String) -> <init>
    845:850:void setDivisor(int,int) -> a
    863:868:boolean equals(java.lang.Object) -> equals
    888:897:void doSubstitution(long,java.lang.StringBuffer,int,int) -> a
    911:921:void doSubstitution(double,java.lang.StringBuffer,int,int) -> a
    930:930:long transformNumber(long) -> a
    940:940:double transformNumber(double) -> a
    960:979:java.lang.Number doParse(java.lang.String,java.text.ParsePosition,double,double,boolean) -> a
    997:997:double composeRuleValue(double,double) -> a
    1006:1006:double calcUpperBound(double) -> b
    1018:1018:boolean isModulusSubstitution() -> b
    1026:1026:char tokenChar() -> a
com.ibm.icu.text.MultiplierSubstitution -> com.ibm.icu.text.bI:
    double divisor -> d
    659:670:void <init>(int,double,com.ibm.icu.text.NFRuleSet,java.lang.String) -> <init>
    678:683:void setDivisor(int,int) -> a
    695:695:boolean equals(java.lang.Object) -> equals
    708:708:long transformNumber(long) -> a
    721:724:double transformNumber(double) -> a
    742:742:double composeRuleValue(double,double) -> a
    751:751:double calcUpperBound(double) -> b
    763:763:char tokenChar() -> a
com.ibm.icu.text.NFRule -> com.ibm.icu.text.bJ:
    java.lang.Long ZERO -> a
    long baseValue -> b
    int radix -> c
    short exponent -> d
    char decimalPoint -> e
    java.lang.String ruleText -> f
    com.ibm.icu.text.PluralFormat rulePatternFormat -> g
    com.ibm.icu.text.NFSubstitution sub1 -> h
    com.ibm.icu.text.NFSubstitution sub2 -> i
    com.ibm.icu.text.RuleBasedNumberFormat formatter -> j
    java.lang.String[] RULE_PREFIXES -> k
    boolean $assertionsDisabled -> l
    138:244:void makeRules(java.lang.String,com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule,com.ibm.icu.text.RuleBasedNumberFormat,java.util.List) -> a
    71:253:void <init>(com.ibm.icu.text.RuleBasedNumberFormat,java.lang.String) -> <init>
    273:401:java.lang.String parseRuleDescriptor(java.lang.String) -> a
    415:446:void extractSubstitutions(com.ibm.icu.text.NFRuleSet,java.lang.String,com.ibm.icu.text.NFRule) -> a
    467:510:com.ibm.icu.text.NFSubstitution extractSubstitution(com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.NFRule) -> a
    522:549:void setBaseValue(long) -> a
    560:571:short expectedExponent() -> d
    589:599:int indexOfAnyRulePrefix(java.lang.String) -> b
    612:622:boolean equals(java.lang.Object) -> equals
    626:627:int hashCode() -> hashCode
    637:696:java.lang.String toString() -> toString
    708:708:char getDecimalPoint() -> a
    716:716:long getBaseValue() -> b
    725:725:double getDivisor() -> c
    747:771:void doFormat(long,java.lang.StringBuffer,int,int) -> a
    789:822:void doFormat(double,java.lang.StringBuffer,int,int) -> a
    849:849:boolean shouldRollBack(double) -> a
    880:1024:java.lang.Number doParse(java.lang.String,java.text.ParsePosition,boolean,double) -> a
    1046:1062:java.lang.String stripPrefix(java.lang.String,java.lang.String,java.text.ParsePosition) -> a
    1099:1183:java.lang.Number matchToDelimiter(java.lang.String,int,double,java.lang.String,com.ibm.icu.text.PluralFormat,java.text.ParsePosition,com.ibm.icu.text.NFSubstitution,double) -> a
    1204:1218:int prefixLength(java.lang.String,java.lang.String) -> a
    1237:1265:int[] findText(java.lang.String,java.lang.String,com.ibm.icu.text.PluralFormat,int) -> a
    1278:1282:boolean allIgnorable(java.lang.String) -> c
    1286:1292:void setDecimalFormatSymbols(com.ibm.icu.text.DecimalFormatSymbols) -> a
    21:575:void <clinit>() -> <clinit>
com.ibm.icu.text.NFRuleSet -> com.ibm.icu.text.bK:
    java.lang.String name -> b
    com.ibm.icu.text.NFRule[] rules -> c
    com.ibm.icu.text.NFRule[] nonNumericalRules -> d
    java.util.LinkedList fractionRules -> e
    com.ibm.icu.text.RuleBasedNumberFormat owner -> a
    boolean isFractionRuleSet -> f
    boolean isParseable -> g
    boolean $assertionsDisabled -> h
    43:147:void <init>(com.ibm.icu.text.RuleBasedNumberFormat,java.lang.String[],int) -> <init>
    161:227:void parseRules(java.lang.String) -> a
    234:253:void setNonNumericalRule(com.ibm.icu.text.NFRule) -> a
    263:281:void setBestFractionRule(int,com.ibm.icu.text.NFRule,boolean) -> a
    292:293:void makeIntoFractionRuleSet() -> a
    306:334:boolean equals(java.lang.Object) -> equals
    339:340:int hashCode() -> hashCode
    351:380:java.lang.String toString() -> toString
    392:392:boolean isFractionSet() -> b
    400:400:java.lang.String getName() -> c
    408:408:boolean isPublic() -> d
    416:416:boolean isParseable() -> e
    432:437:void format(long,java.lang.StringBuffer,int,int) -> a
    448:453:void format(double,java.lang.StringBuffer,int,int) -> a
    462:513:com.ibm.icu.text.NFRule findRule(double) -> a
    537:599:com.ibm.icu.text.NFRule findNormalRule(long) -> a
    627:681:com.ibm.icu.text.NFRule findFractionRuleSetRule(double) -> b
    690:721:long lcm(long,long) -> a
    754:814:java.lang.Number parse(java.lang.String,java.text.ParsePosition,double) -> a
    818:839:void setDecimalFormatSymbols(com.ibm.icu.text.DecimalFormatSymbols) -> a
    25:25:void <clinit>() -> <clinit>
com.ibm.icu.text.NFSubstitution -> com.ibm.icu.text.bL:
    int pos -> a
    com.ibm.icu.text.NFRuleSet ruleSet -> b
    com.ibm.icu.text.DecimalFormat numberFormat -> c
    boolean $assertionsDisabled -> d
    72:143:com.ibm.icu.text.NFSubstitution makeSubstitution(int,com.ibm.icu.text.NFRule,com.ibm.icu.text.NFRule,com.ibm.icu.text.NFRuleSet,com.ibm.icu.text.RuleBasedNumberFormat,java.lang.String) -> a
    159:211:void <init>(int,com.ibm.icu.text.NFRuleSet,java.lang.String) -> <init>
    222:222:void setDivisor(int,int) -> a
    236:249:boolean equals(java.lang.Object) -> equals
    253:254:int hashCode() -> hashCode
    268:271:java.lang.String toString() -> toString
    290:309:void doSubstitution(long,java.lang.StringBuffer,int,int) -> a
    324:348:void doSubstitution(double,java.lang.StringBuffer,int,int) -> a
    long transformNumber(long) -> a
    double transformNumber(double) -> a
    415:472:java.lang.Number doParse(java.lang.String,java.text.ParsePosition,double,double,boolean) -> a
    double composeRuleValue(double,double) -> a
    double calcUpperBound(double) -> b
    508:508:int getPos() -> c
    char tokenChar() -> a
    525:525:boolean isModulusSubstitution() -> b
    530:533:void setDecimalFormatSymbols(com.ibm.icu.text.DecimalFormatSymbols) -> a
    21:21:void <clinit>() -> <clinit>
com.ibm.icu.text.NameUnicodeTransliterator -> com.ibm.icu.text.bM:
    29:34:void register() -> a
    40:41:void <init>(com.ibm.icu.text.UnicodeFilter) -> <init>
    49:167:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    174:194:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
com.ibm.icu.text.NameUnicodeTransliterator$1 -> com.ibm.icu.text.bN:
    29:29:void <init>() -> <init>
    31:31:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.NormalizationTransliterator -> com.ibm.icu.text.bO:
    com.ibm.icu.text.Normalizer2 norm2 -> a
    java.util.Map SOURCE_CACHE -> b
    28:62:void register() -> a
    68:70:void <init>(java.lang.String,com.ibm.icu.text.Normalizer2) -> <init>
    78:128:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    149:158:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
    21:21:void <init>(java.lang.String,com.ibm.icu.text.Normalizer2,byte) -> <init>
    130:130:void <clinit>() -> <clinit>
com.ibm.icu.text.NormalizationTransliterator$1 -> com.ibm.icu.text.bP:
    28:28:void <init>() -> <init>
    30:30:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.NormalizationTransliterator$2 -> com.ibm.icu.text.bQ:
    33:33:void <init>() -> <init>
    35:35:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.NormalizationTransliterator$3 -> com.ibm.icu.text.bR:
    38:38:void <init>() -> <init>
    40:40:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.NormalizationTransliterator$4 -> com.ibm.icu.text.bS:
    43:43:void <init>() -> <init>
    45:45:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.NormalizationTransliterator$5 -> com.ibm.icu.text.bT:
    48:48:void <init>() -> <init>
    50:50:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.NormalizationTransliterator$6 -> com.ibm.icu.text.bU:
    53:53:void <init>() -> <init>
    55:55:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.NormalizationTransliterator$NormalizingTransform -> com.ibm.icu.text.bV:
    com.ibm.icu.text.Normalizer2 norm2 -> a
    135:137:void <init>(com.ibm.icu.text.Normalizer2) -> <init>
    139:139:java.lang.String transform(java.lang.String) -> a
    133:133:java.lang.Object transform(java.lang.Object) -> transform
com.ibm.icu.text.Normalizer -> com.ibm.icu.text.Normalizer:
    com.ibm.icu.text.UCharacterIterator text -> a
    com.ibm.icu.text.Normalizer2 norm2 -> b
    com.ibm.icu.text.Normalizer$Mode mode -> c
    int options -> d
    int currentIndex -> e
    int nextIndex -> f
    java.lang.StringBuilder buffer -> g
    int bufferPos -> h
    int UNICODE_3_2 -> UNICODE_3_2
    int DONE -> DONE
    com.ibm.icu.text.Normalizer$Mode NONE -> NONE
    com.ibm.icu.text.Normalizer$Mode NFD -> NFD
    com.ibm.icu.text.Normalizer$Mode NFKD -> NFKD
    com.ibm.icu.text.Normalizer$Mode NFC -> NFC
    com.ibm.icu.text.Normalizer$Mode DEFAULT -> DEFAULT
    com.ibm.icu.text.Normalizer$Mode NFKC -> NFKC
    com.ibm.icu.text.Normalizer$Mode FCD -> FCD
    com.ibm.icu.text.Normalizer$Mode NO_OP -> NO_OP
    com.ibm.icu.text.Normalizer$Mode COMPOSE -> COMPOSE
    com.ibm.icu.text.Normalizer$Mode COMPOSE_COMPAT -> COMPOSE_COMPAT
    com.ibm.icu.text.Normalizer$Mode DECOMP -> DECOMP
    com.ibm.icu.text.Normalizer$Mode DECOMP_COMPAT -> DECOMP_COMPAT
    int IGNORE_HANGUL -> IGNORE_HANGUL
    com.ibm.icu.text.Normalizer$QuickCheckResult NO -> NO
    com.ibm.icu.text.Normalizer$QuickCheckResult YES -> YES
    com.ibm.icu.text.Normalizer$QuickCheckResult MAYBE -> MAYBE
    int FOLD_CASE_DEFAULT -> FOLD_CASE_DEFAULT
    int INPUT_IS_FCD -> INPUT_IS_FCD
    int COMPARE_IGNORE_CASE -> COMPARE_IGNORE_CASE
    int COMPARE_CODE_POINT_ORDER -> COMPARE_CODE_POINT_ORDER
    int FOLD_CASE_EXCLUDE_SPECIAL_I -> FOLD_CASE_EXCLUDE_SPECIAL_I
    int COMPARE_NORM_OPTIONS_SHIFT -> COMPARE_NORM_OPTIONS_SHIFT
    558:564:void <init>(java.lang.String,com.ibm.icu.text.Normalizer$Mode,int) -> <init>
    582:588:void <init>(java.text.CharacterIterator,com.ibm.icu.text.Normalizer$Mode,int) -> <init>
    602:612:void <init>(com.ibm.icu.text.UCharacterIterator,com.ibm.icu.text.Normalizer$Mode,int) -> <init>
    629:641:java.lang.Object clone() -> clone
    650:650:com.ibm.icu.text.Normalizer2 getComposeNormalizer2(boolean,int) -> a
    653:653:com.ibm.icu.text.Normalizer2 getDecomposeNormalizer2(boolean,int) -> b
    668:668:java.lang.String compose(java.lang.String,boolean) -> compose
    684:684:java.lang.String compose(java.lang.String,boolean,int) -> compose
    704:704:int compose(char[],char[],boolean,int) -> compose
    730:733:int compose(char[],int,int,char[],int,int,boolean,int) -> compose
    748:748:java.lang.String decompose(java.lang.String,boolean) -> decompose
    764:764:java.lang.String decompose(java.lang.String,boolean,int) -> decompose
    784:784:int decompose(char[],char[],boolean,int) -> decompose
    810:813:int decompose(char[],int,int,char[],int,int,boolean,int) -> decompose
    833:833:java.lang.String normalize(java.lang.String,com.ibm.icu.text.Normalizer$Mode,int) -> normalize
    849:849:java.lang.String normalize(java.lang.String,com.ibm.icu.text.Normalizer$Mode) -> normalize
    869:869:int normalize(char[],char[],com.ibm.icu.text.Normalizer$Mode,int) -> normalize
    896:899:int normalize(char[],int,int,char[],int,int,com.ibm.icu.text.Normalizer$Mode,int) -> normalize
    914:921:java.lang.String normalize(int,com.ibm.icu.text.Normalizer$Mode,int) -> normalize
    933:933:java.lang.String normalize(int,com.ibm.icu.text.Normalizer$Mode) -> normalize
    948:948:com.ibm.icu.text.Normalizer$QuickCheckResult quickCheck(java.lang.String,com.ibm.icu.text.Normalizer$Mode) -> quickCheck
    973:973:com.ibm.icu.text.Normalizer$QuickCheckResult quickCheck(java.lang.String,com.ibm.icu.text.Normalizer$Mode,int) -> quickCheck
    991:991:com.ibm.icu.text.Normalizer$QuickCheckResult quickCheck(char[],com.ibm.icu.text.Normalizer$Mode,int) -> quickCheck
    1020:1021:com.ibm.icu.text.Normalizer$QuickCheckResult quickCheck(char[],int,int,com.ibm.icu.text.Normalizer$Mode,int) -> quickCheck
    1048:1049:boolean isNormalized(char[],int,int,com.ibm.icu.text.Normalizer$Mode,int) -> isNormalized
    1071:1071:boolean isNormalized(java.lang.String,com.ibm.icu.text.Normalizer$Mode,int) -> isNormalized
    1087:1087:boolean isNormalized(int,com.ibm.icu.text.Normalizer$Mode,int) -> isNormalized
    1146:1152:int compare(char[],int,int,char[],int,int,int) -> compare
    1205:1205:int compare(java.lang.String,java.lang.String,int) -> compare
    1242:1242:int compare(char[],char[],int) -> compare
    1254:1254:int compare(int,int,int) -> compare
    1266:1266:int compare(int,java.lang.String,int) -> compare
    1318:1337:int concatenate(char[],int,int,char[],int,int,char[],int,int,com.ibm.icu.text.Normalizer$Mode,int) -> concatenate
    1370:1371:java.lang.String concatenate(char[],char[],com.ibm.icu.text.Normalizer$Mode,int) -> concatenate
    1407:1408:java.lang.String concatenate(java.lang.String,java.lang.String,com.ibm.icu.text.Normalizer$Mode,int) -> concatenate
    1420:1425:int getFC_NFKC_Closure(int,char[]) -> getFC_NFKC_Closure
    1441:1464:java.lang.String getFC_NFKC_Closure(int) -> getFC_NFKC_Closure
    1479:1482:int current() -> current
    1495:1500:int next() -> next
    1514:1519:int previous() -> previous
    1530:1533:void reset() -> reset
    1546:1549:void setIndexOnly(int) -> setIndexOnly
    1575:1576:int setIndex(int) -> setIndex
    1589:1589:int getBeginIndex() -> getBeginIndex
    1602:1602:int getEndIndex() -> getEndIndex
    1612:1613:int first() -> first
    1625:1628:int last() -> last
    1648:1651:int getIndex() -> getIndex
    1664:1664:int startIndex() -> startIndex
    1676:1676:int endIndex() -> endIndex
    1710:1712:void setMode(com.ibm.icu.text.Normalizer$Mode) -> setMode
    1721:1721:com.ibm.icu.text.Normalizer$Mode getMode() -> getMode
    1743:1749:void setOption(int,boolean) -> setOption
    1759:1762:int getOption(int) -> getOption
    1777:1777:int getText(char[]) -> getText
    1787:1787:int getLength() -> getLength
    1797:1797:java.lang.String getText() -> getText
    1808:1814:void setText(java.lang.StringBuffer) -> setText
    1824:1830:void setText(char[]) -> setText
    1840:1846:void setText(java.lang.String) -> setText
    1856:1862:void setText(java.text.CharacterIterator) -> setText
    1873:1882:void setText(com.ibm.icu.text.UCharacterIterator) -> setText
    1885:1887:void clearBuffer() -> a
    1890:1908:boolean nextNormalize() -> b
    1912:1930:boolean previousNormalize() -> c
    1937:1992:int internalCompare(java.lang.CharSequence,java.lang.CharSequence,int) -> b
    2091:2091:com.ibm.icu.text.Normalizer$CmpEquivLevel[] createCmpEquivLevelStack() -> d
    2114:2492:int cmpEquivFold(java.lang.CharSequence,java.lang.CharSequence,int) -> a
    286:478:void <clinit>() -> <clinit>
com.ibm.icu.text.Normalizer$CharsAppendable -> com.ibm.icu.text.bW:
    char[] chars -> a
    int start -> b
    int limit -> c
    int offset -> d
    2505:2509:void <init>(char[],int,int) -> <init>
    2511:2515:int length() -> a
    2519:2523:java.lang.Appendable append(char) -> append
    2526:2526:java.lang.Appendable append(java.lang.CharSequence) -> append
    2529:2537:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
com.ibm.icu.text.Normalizer$CmpEquivLevel -> com.ibm.icu.text.bX:
    java.lang.CharSequence cs -> a
    int s -> b
    2086:2086:void <init>() -> <init>
    2086:2086:void <init>(byte) -> <init>
com.ibm.icu.text.Normalizer$FCD32ModeImpl -> com.ibm.icu.text.bY:
    com.ibm.icu.text.Normalizer$ModeImpl INSTANCE -> a
    193:193:com.ibm.icu.text.Normalizer$ModeImpl access$1100() -> a
    194:194:void <clinit>() -> <clinit>
com.ibm.icu.text.Normalizer$FCDMode -> com.ibm.icu.text.bZ:
    273:273:void <init>() -> <init>
    275:275:com.ibm.icu.text.Normalizer2 getNormalizer2(int) -> getNormalizer2
    273:273:void <init>(byte) -> <init>
com.ibm.icu.text.Normalizer$FCDModeImpl -> com.ibm.icu.text.ca:
    com.ibm.icu.text.Normalizer$ModeImpl INSTANCE -> a
    166:166:com.ibm.icu.text.Normalizer$ModeImpl access$1200() -> a
    167:167:void <clinit>() -> <clinit>
com.ibm.icu.text.Normalizer$Mode -> com.ibm.icu.text.Normalizer$Mode:
    235:236:void <init>() -> <init>
    com.ibm.icu.text.Normalizer2 getNormalizer2(int) -> getNormalizer2
com.ibm.icu.text.Normalizer$ModeImpl -> com.ibm.icu.text.cb:
    com.ibm.icu.text.Normalizer2 normalizer2 -> a
    149:151:void <init>(com.ibm.icu.text.Normalizer2) -> <init>
    148:148:void <init>(com.ibm.icu.text.Normalizer2,byte) -> <init>
    148:148:com.ibm.icu.text.Normalizer2 access$300(com.ibm.icu.text.Normalizer$ModeImpl) -> a
com.ibm.icu.text.Normalizer$NFC32ModeImpl -> com.ibm.icu.text.cc:
    com.ibm.icu.text.Normalizer$ModeImpl INSTANCE -> a
    183:183:com.ibm.icu.text.Normalizer$ModeImpl access$700() -> a
    184:184:void <clinit>() -> <clinit>
com.ibm.icu.text.Normalizer$NFCMode -> com.ibm.icu.text.cd:
    261:261:void <init>() -> <init>
    263:263:com.ibm.icu.text.Normalizer2 getNormalizer2(int) -> getNormalizer2
    261:261:void <init>(byte) -> <init>
com.ibm.icu.text.Normalizer$NFCModeImpl -> com.ibm.icu.text.ce:
    com.ibm.icu.text.Normalizer$ModeImpl INSTANCE -> a
    160:160:com.ibm.icu.text.Normalizer$ModeImpl access$800() -> a
    161:161:void <clinit>() -> <clinit>
com.ibm.icu.text.Normalizer$NFD32ModeImpl -> com.ibm.icu.text.cf:
    com.ibm.icu.text.Normalizer$ModeImpl INSTANCE -> a
    173:173:com.ibm.icu.text.Normalizer$ModeImpl access$200() -> a
    174:174:void <clinit>() -> <clinit>
com.ibm.icu.text.Normalizer$NFDMode -> com.ibm.icu.text.cg:
    249:249:void <init>() -> <init>
    251:251:com.ibm.icu.text.Normalizer2 getNormalizer2(int) -> getNormalizer2
    249:249:void <init>(byte) -> <init>
com.ibm.icu.text.Normalizer$NFDModeImpl -> com.ibm.icu.text.ch:
    com.ibm.icu.text.Normalizer$ModeImpl INSTANCE -> a
    154:154:com.ibm.icu.text.Normalizer$ModeImpl access$400() -> a
    155:155:void <clinit>() -> <clinit>
com.ibm.icu.text.Normalizer$NFKC32ModeImpl -> com.ibm.icu.text.ci:
    com.ibm.icu.text.Normalizer$ModeImpl INSTANCE -> a
    188:188:com.ibm.icu.text.Normalizer$ModeImpl access$900() -> a
    189:189:void <clinit>() -> <clinit>
com.ibm.icu.text.Normalizer$NFKCMode -> com.ibm.icu.text.cj:
    267:267:void <init>() -> <init>
    269:269:com.ibm.icu.text.Normalizer2 getNormalizer2(int) -> getNormalizer2
    267:267:void <init>(byte) -> <init>
com.ibm.icu.text.Normalizer$NFKCModeImpl -> com.ibm.icu.text.ck:
    com.ibm.icu.text.Normalizer$ModeImpl INSTANCE -> a
    163:163:com.ibm.icu.text.Normalizer$ModeImpl access$1000() -> a
    164:164:void <clinit>() -> <clinit>
com.ibm.icu.text.Normalizer$NFKD32ModeImpl -> com.ibm.icu.text.cl:
    com.ibm.icu.text.Normalizer$ModeImpl INSTANCE -> a
    178:178:com.ibm.icu.text.Normalizer$ModeImpl access$500() -> a
    179:179:void <clinit>() -> <clinit>
com.ibm.icu.text.Normalizer$NFKDMode -> com.ibm.icu.text.cm:
    255:255:void <init>() -> <init>
    257:257:com.ibm.icu.text.Normalizer2 getNormalizer2(int) -> getNormalizer2
    255:255:void <init>(byte) -> <init>
com.ibm.icu.text.Normalizer$NFKDModeImpl -> com.ibm.icu.text.cn:
    com.ibm.icu.text.Normalizer$ModeImpl INSTANCE -> a
    157:157:com.ibm.icu.text.Normalizer$ModeImpl access$600() -> a
    158:158:void <clinit>() -> <clinit>
com.ibm.icu.text.Normalizer$NONEMode -> com.ibm.icu.text.co:
    246:246:void <init>() -> <init>
    247:247:com.ibm.icu.text.Normalizer2 getNormalizer2(int) -> getNormalizer2
    246:246:void <init>(byte) -> <init>
com.ibm.icu.text.Normalizer$QuickCheckResult -> com.ibm.icu.text.Normalizer$QuickCheckResult:
    457:459:void <init>() -> <init>
    455:455:void <init>(int) -> <init>
com.ibm.icu.text.Normalizer$Unicode32 -> com.ibm.icu.text.cp:
    com.ibm.icu.text.UnicodeSet INSTANCE -> a
    170:170:com.ibm.icu.text.UnicodeSet access$100() -> a
    171:171:void <clinit>() -> <clinit>
com.ibm.icu.text.Normalizer2 -> com.ibm.icu.text.Normalizer2:
    121:121:com.ibm.icu.text.Normalizer2 getNFCInstance() -> getNFCInstance
    132:132:com.ibm.icu.text.Normalizer2 getNFDInstance() -> getNFDInstance
    143:143:com.ibm.icu.text.Normalizer2 getNFKCInstance() -> getNFKCInstance
    154:154:com.ibm.icu.text.Normalizer2 getNFKDInstance() -> getNFKDInstance
    165:165:com.ibm.icu.text.Normalizer2 getNFKCCasefoldInstance() -> getNFKCCasefoldInstance
    192:206:com.ibm.icu.text.Normalizer2 getInstance(java.io.InputStream,java.lang.String,com.ibm.icu.text.Normalizer2$Mode) -> getInstance
    217:227:java.lang.String normalize(java.lang.CharSequence) -> normalize
    java.lang.StringBuilder normalize(java.lang.CharSequence,java.lang.StringBuilder) -> normalize
    java.lang.Appendable normalize(java.lang.CharSequence,java.lang.Appendable) -> normalize
    java.lang.StringBuilder normalizeSecondAndAppend(java.lang.StringBuilder,java.lang.CharSequence) -> normalizeSecondAndAppend
    java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.CharSequence) -> append
    java.lang.String getDecomposition(int) -> getDecomposition
    314:314:java.lang.String getRawDecomposition(int) -> getRawDecomposition
    331:331:int composePair(int,int) -> composePair
    341:341:int getCombiningClass(int) -> getCombiningClass
    boolean isNormalized(java.lang.CharSequence) -> isNormalized
    com.ibm.icu.text.Normalizer$QuickCheckResult quickCheck(java.lang.CharSequence) -> quickCheck
    int spanQuickCheckYes(java.lang.CharSequence) -> spanQuickCheckYes
    boolean hasBoundaryBefore(int) -> hasBoundaryBefore
    boolean hasBoundaryAfter(int) -> hasBoundaryAfter
    boolean isInert(int) -> isInert
    443:444:void <init>() -> <init>
com.ibm.icu.text.Normalizer2$1 -> com.ibm.icu.text.cq:
    int[] $SwitchMap$com$ibm$icu$text$Normalizer2$Mode -> a
    201:201:void <clinit>() -> <clinit>
com.ibm.icu.text.Normalizer2$Mode -> com.ibm.icu.text.Normalizer2$Mode:
    com.ibm.icu.text.Normalizer2$Mode COMPOSE -> COMPOSE
    com.ibm.icu.text.Normalizer2$Mode DECOMPOSE -> DECOMPOSE
    com.ibm.icu.text.Normalizer2$Mode FCD -> FCD
    com.ibm.icu.text.Normalizer2$Mode COMPOSE_CONTIGUOUS -> COMPOSE_CONTIGUOUS
    com.ibm.icu.text.Normalizer2$Mode[] $VALUES -> a
    69:69:com.ibm.icu.text.Normalizer2$Mode[] values() -> values
    69:69:com.ibm.icu.text.Normalizer2$Mode valueOf(java.lang.String) -> valueOf
    69:69:void <init>(java.lang.String,int) -> <init>
    69:110:void <clinit>() -> <clinit>
com.ibm.icu.text.NullTransliterator -> com.ibm.icu.text.cr:
    java.lang.String SHORT_ID -> a
    java.lang.String _ID -> b
    23:24:void <init>() -> <init>
    31:32:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    40:40:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
    16:17:void <clinit>() -> <clinit>
com.ibm.icu.text.NumberFormat -> com.ibm.icu.text.NumberFormat:
    int NUMBERSTYLE -> NUMBERSTYLE
    int CURRENCYSTYLE -> CURRENCYSTYLE
    int PERCENTSTYLE -> PERCENTSTYLE
    int SCIENTIFICSTYLE -> SCIENTIFICSTYLE
    int INTEGERSTYLE -> INTEGERSTYLE
    int ISOCURRENCYSTYLE -> ISOCURRENCYSTYLE
    int PLURALCURRENCYSTYLE -> PLURALCURRENCYSTYLE
    int ACCOUNTINGCURRENCYSTYLE -> ACCOUNTINGCURRENCYSTYLE
    int CASHCURRENCYSTYLE -> CASHCURRENCYSTYLE
    int STANDARDCURRENCYSTYLE -> STANDARDCURRENCYSTYLE
    int INTEGER_FIELD -> INTEGER_FIELD
    int FRACTION_FIELD -> FRACTION_FIELD
    com.ibm.icu.text.NumberFormat$NumberFormatShim shim -> a
    char[] doubleCurrencySign -> b
    java.lang.String doubleCurrencyStr -> c
    boolean groupingUsed -> d
    byte maxIntegerDigits -> e
    byte minIntegerDigits -> f
    byte maxFractionDigits -> g
    byte minFractionDigits -> h
    boolean parseIntegerOnly -> i
    int maximumIntegerDigits -> j
    int minimumIntegerDigits -> k
    int maximumFractionDigits -> l
    int minimumFractionDigits -> m
    com.ibm.icu.util.Currency currency -> n
    int serialVersionOnStream -> o
    long serialVersionUID -> serialVersionUID
    boolean parseStrict -> p
    com.ibm.icu.text.DisplayContext capitalizationSetting -> q
    boolean $assertionsDisabled -> r
    264:277:java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    292:292:java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    301:301:java.lang.String format(double) -> format
    311:314:java.lang.String format(long) -> format
    322:322:java.lang.String format(java.math.BigInteger) -> format
    331:331:java.lang.String format(java.math.BigDecimal) -> format
    340:340:java.lang.String format(com.ibm.icu.math.BigDecimal) -> format
    349:349:java.lang.String format(com.ibm.icu.util.CurrencyAmount) -> format
    java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.StringBuffer format(com.ibm.icu.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition) -> format
    403:408:java.lang.StringBuffer format(com.ibm.icu.util.CurrencyAmount,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.lang.Number parse(java.lang.String,java.text.ParsePosition) -> parse
    438:444:java.lang.Number parse(java.lang.String) -> parse
    467:468:com.ibm.icu.util.CurrencyAmount parseCurrency(java.lang.CharSequence,java.text.ParsePosition) -> parseCurrency
    483:483:boolean isParseIntegerOnly() -> isParseIntegerOnly
    493:494:void setParseIntegerOnly(boolean) -> setParseIntegerOnly
    514:515:void setParseStrict(boolean) -> setParseStrict
    524:524:boolean isParseStrict() -> isParseStrict
    535:538:void setContext(com.ibm.icu.text.DisplayContext) -> setContext
    549:549:com.ibm.icu.text.DisplayContext getContext(com.ibm.icu.text.DisplayContext$Type) -> getContext
    566:566:com.ibm.icu.text.NumberFormat getInstance() -> getInstance
    577:577:com.ibm.icu.text.NumberFormat getInstance(java.util.Locale) -> getInstance
    588:588:com.ibm.icu.text.NumberFormat getInstance(com.ibm.icu.util.ULocale) -> getInstance
    598:598:com.ibm.icu.text.NumberFormat getInstance(int) -> getInstance
    608:608:com.ibm.icu.text.NumberFormat getInstance(java.util.Locale,int) -> getInstance
    618:618:com.ibm.icu.text.NumberFormat getNumberInstance() -> getNumberInstance
    626:626:com.ibm.icu.text.NumberFormat getNumberInstance(java.util.Locale) -> getNumberInstance
    634:634:com.ibm.icu.text.NumberFormat getNumberInstance(com.ibm.icu.util.ULocale) -> getNumberInstance
    651:651:com.ibm.icu.text.NumberFormat getIntegerInstance() -> getIntegerInstance
    668:668:com.ibm.icu.text.NumberFormat getIntegerInstance(java.util.Locale) -> getIntegerInstance
    684:684:com.ibm.icu.text.NumberFormat getIntegerInstance(com.ibm.icu.util.ULocale) -> getIntegerInstance
    694:694:com.ibm.icu.text.NumberFormat getCurrencyInstance() -> getCurrencyInstance
    703:703:com.ibm.icu.text.NumberFormat getCurrencyInstance(java.util.Locale) -> getCurrencyInstance
    712:712:com.ibm.icu.text.NumberFormat getCurrencyInstance(com.ibm.icu.util.ULocale) -> getCurrencyInstance
    722:722:com.ibm.icu.text.NumberFormat getPercentInstance() -> getPercentInstance
    731:731:com.ibm.icu.text.NumberFormat getPercentInstance(java.util.Locale) -> getPercentInstance
    740:740:com.ibm.icu.text.NumberFormat getPercentInstance(com.ibm.icu.util.ULocale) -> getPercentInstance
    750:750:com.ibm.icu.text.NumberFormat getScientificInstance() -> getScientificInstance
    759:759:com.ibm.icu.text.NumberFormat getScientificInstance(java.util.Locale) -> getScientificInstance
    768:768:com.ibm.icu.text.NumberFormat getScientificInstance(com.ibm.icu.util.ULocale) -> getScientificInstance
    954:969:com.ibm.icu.text.NumberFormat$NumberFormatShim getShim() -> a
    978:981:java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    991:994:com.ibm.icu.util.ULocale[] getAvailableULocales() -> getAvailableULocales
    1011:1014:java.lang.Object registerFactory(com.ibm.icu.text.NumberFormat$NumberFormatFactory) -> registerFactory
    1025:1033:boolean unregister(java.lang.Object) -> unregister
    1044:1044:int hashCode() -> hashCode
    1059:1065:boolean equals(java.lang.Object) -> equals
    1081:1082:java.lang.Object clone() -> clone
    1096:1096:boolean isGroupingUsed() -> isGroupingUsed
    1107:1108:void setGroupingUsed(boolean) -> setGroupingUsed
    1120:1120:int getMaximumIntegerDigits() -> getMaximumIntegerDigits
    1136:1139:void setMaximumIntegerDigits(int) -> setMaximumIntegerDigits
    1152:1152:int getMinimumIntegerDigits() -> getMinimumIntegerDigits
    1168:1171:void setMinimumIntegerDigits(int) -> setMinimumIntegerDigits
    1184:1184:int getMaximumFractionDigits() -> getMaximumFractionDigits
    1200:1203:void setMaximumFractionDigits(int) -> setMaximumFractionDigits
    1216:1216:int getMinimumFractionDigits() -> getMinimumFractionDigits
    1232:1235:void setMinimumFractionDigits(int) -> setMinimumFractionDigits
    1248:1249:void setCurrency(com.ibm.icu.util.Currency) -> setCurrency
    1257:1257:com.ibm.icu.util.Currency getCurrency() -> getCurrency
    1270:1278:com.ibm.icu.util.Currency getEffectiveCurrency() -> getEffectiveCurrency
    1290:1290:int getRoundingMode() -> getRoundingMode
    1304:1304:void setRoundingMode(int) -> setRoundingMode
    1322:1332:com.ibm.icu.text.NumberFormat getInstance(com.ibm.icu.util.ULocale,int) -> getInstance
    1343:1428:com.ibm.icu.text.NumberFormat createInstance(com.ibm.icu.util.ULocale,int) -> a
    1440:1440:java.lang.String getPattern(java.util.Locale,int) -> getPattern
    1495:1537:java.lang.String getPattern(com.ibm.icu.util.ULocale,int) -> getPattern
    1554:1578:void readObject(java.io.ObjectInputStream) -> readObject
    1590:1599:void writeObject(java.io.ObjectOutputStream) -> writeObject
    1622:1800:void <init>() -> <init>
    170:1608:void <clinit>() -> <clinit>
com.ibm.icu.text.NumberFormat$Field -> com.ibm.icu.text.NumberFormat$Field:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.text.NumberFormat$Field SIGN -> SIGN
    com.ibm.icu.text.NumberFormat$Field INTEGER -> INTEGER
    com.ibm.icu.text.NumberFormat$Field FRACTION -> FRACTION
    com.ibm.icu.text.NumberFormat$Field EXPONENT -> EXPONENT
    com.ibm.icu.text.NumberFormat$Field EXPONENT_SIGN -> EXPONENT_SIGN
    com.ibm.icu.text.NumberFormat$Field EXPONENT_SYMBOL -> EXPONENT_SYMBOL
    com.ibm.icu.text.NumberFormat$Field DECIMAL_SEPARATOR -> DECIMAL_SEPARATOR
    com.ibm.icu.text.NumberFormat$Field GROUPING_SEPARATOR -> GROUPING_SEPARATOR
    com.ibm.icu.text.NumberFormat$Field PERCENT -> PERCENT
    com.ibm.icu.text.NumberFormat$Field PERMILLE -> PERMILLE
    com.ibm.icu.text.NumberFormat$Field CURRENCY -> CURRENCY
    1876:1877:void <init>(java.lang.String) -> <init>
    1886:1909:java.lang.Object readResolve() -> readResolve
    1819:1868:void <clinit>() -> <clinit>
com.ibm.icu.text.NumberFormat$NumberFormatFactory -> com.ibm.icu.text.NumberFormat$NumberFormatFactory:
    int FORMAT_NUMBER -> FORMAT_NUMBER
    int FORMAT_CURRENCY -> FORMAT_CURRENCY
    int FORMAT_PERCENT -> FORMAT_PERCENT
    int FORMAT_SCIENTIFIC -> FORMAT_SCIENTIFIC
    int FORMAT_INTEGER -> FORMAT_INTEGER
    825:825:boolean visible() -> visible
    java.util.Set getSupportedLocaleNames() -> getSupportedLocaleNames
    849:849:com.ibm.icu.text.NumberFormat createFormat(com.ibm.icu.util.ULocale,int) -> createFormat
    866:866:com.ibm.icu.text.NumberFormat createFormat(java.util.Locale,int) -> createFormat
    872:873:void <init>() -> <init>
com.ibm.icu.text.NumberFormat$NumberFormatShim -> com.ibm.icu.text.cs:
    940:940:void <init>() -> <init>
    java.util.Locale[] getAvailableLocales() -> a
    com.ibm.icu.util.ULocale[] getAvailableULocales() -> b
    java.lang.Object registerFactory(com.ibm.icu.text.NumberFormat$NumberFormatFactory) -> a
    boolean unregister(java.lang.Object) -> a
    com.ibm.icu.text.NumberFormat createInstance(com.ibm.icu.util.ULocale,int) -> a
com.ibm.icu.text.NumberFormat$SimpleNumberFormatFactory -> com.ibm.icu.text.NumberFormat$SimpleNumberFormatFactory:
    java.util.Set localeNames -> a
    boolean visible -> b
    889:890:void <init>(java.util.Locale) -> <init>
    897:900:void <init>(java.util.Locale,boolean) -> <init>
    907:908:void <init>(com.ibm.icu.util.ULocale) -> <init>
    915:918:void <init>(com.ibm.icu.util.ULocale,boolean) -> <init>
    926:926:boolean visible() -> visible
    935:935:java.util.Set getSupportedLocaleNames() -> getSupportedLocaleNames
com.ibm.icu.text.NumberFormatServiceShim -> com.ibm.icu.text.ct:
    com.ibm.icu.impl.ICULocaleService service -> a
    25:104:void <init>() -> <init>
    28:31:java.util.Locale[] getAvailableLocales() -> a
    35:38:com.ibm.icu.util.ULocale[] getAvailableULocales() -> b
    69:69:java.lang.Object registerFactory(com.ibm.icu.text.NumberFormat$NumberFormatFactory) -> a
    73:73:boolean unregister(java.lang.Object) -> a
    83:101:com.ibm.icu.text.NumberFormat createInstance(com.ibm.icu.util.ULocale,int) -> a
    118:118:void <clinit>() -> <clinit>
com.ibm.icu.text.NumberFormatServiceShim$NFFactory -> com.ibm.icu.text.cu:
    com.ibm.icu.text.NumberFormat$NumberFormatFactory delegate -> a
    45:48:void <init>(com.ibm.icu.text.NumberFormat$NumberFormatFactory) -> <init>
    51:60:java.lang.Object create(com.ibm.icu.impl.ICUService$Key,com.ibm.icu.impl.ICUService) -> create
    64:64:java.util.Set getSupportedIDs() -> getSupportedIDs
com.ibm.icu.text.NumberFormatServiceShim$NFService -> com.ibm.icu.text.cv:
    106:116:void <init>() -> <init>
com.ibm.icu.text.NumberFormatServiceShim$NFService$1RBNumberFormatFactory -> com.ibm.icu.text.cw:
    108:108:void <init>(com.ibm.icu.text.NumberFormatServiceShim$NFService) -> <init>
    110:110:java.lang.Object handleCreate(com.ibm.icu.util.ULocale,int,com.ibm.icu.impl.ICUService) -> handleCreate
com.ibm.icu.text.NumberingSystem -> com.ibm.icu.text.NumberingSystem:
    java.lang.String desc -> a
    int radix -> b
    boolean algorithmic -> c
    java.lang.String name -> d
    com.ibm.icu.impl.ICUCache cachedLocaleData -> e
    com.ibm.icu.impl.ICUCache cachedStringData -> f
    41:46:void <init>() -> <init>
    63:63:com.ibm.icu.text.NumberingSystem getInstance(int,boolean,java.lang.String) -> getInstance
    83:97:com.ibm.icu.text.NumberingSystem getInstance(java.lang.String,int,boolean,java.lang.String) -> a
    105:105:com.ibm.icu.text.NumberingSystem getInstance(java.util.Locale) -> getInstance
    114:180:com.ibm.icu.text.NumberingSystem getInstance(com.ibm.icu.util.ULocale) -> getInstance
    190:190:com.ibm.icu.text.NumberingSystem getInstance() -> getInstance
    209:233:com.ibm.icu.text.NumberingSystem getInstanceByName(java.lang.String) -> getInstanceByName
    243:255:java.lang.String[] getAvailableNames() -> getAvailableNames
    268:281:boolean isValidDigitString(java.lang.String) -> isValidDigitString
    289:289:int getRadix() -> getRadix
    303:303:java.lang.String getDescription() -> getDescription
    311:311:java.lang.String getName() -> getName
    321:321:boolean isAlgorithmic() -> isAlgorithmic
    332:337:void <clinit>() -> <clinit>
com.ibm.icu.text.NumeratorSubstitution -> com.ibm.icu.text.cx:
    double denominator -> d
    boolean withZeros -> e
    1456:1464:void <init>(int,double,com.ibm.icu.text.NFRuleSet,java.lang.String) -> <init>
    1467:1467:java.lang.String fixdesc(java.lang.String) -> a
    1482:1486:boolean equals(java.lang.Object) -> equals
    1508:1536:void doSubstitution(double,java.lang.StringBuffer,int,int) -> a
    1544:1544:long transformNumber(long) -> a
    1553:1553:double transformNumber(double) -> a
    1572:1622:java.lang.Number doParse(java.lang.String,java.text.ParsePosition,double,double,boolean) -> a
    1633:1633:double composeRuleValue(double,double) -> a
    1642:1642:double calcUpperBound(double) -> b
    1654:1654:char tokenChar() -> a
com.ibm.icu.text.PluralFormat -> com.ibm.icu.text.PluralFormat:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.util.ULocale ulocale -> a
    com.ibm.icu.text.PluralRules pluralRules -> b
    java.lang.String pattern -> c
    com.ibm.icu.text.MessagePattern msgPattern -> d
    java.util.Map parsedValues -> e
    com.ibm.icu.text.NumberFormat numberFormat -> f
    double offset -> g
    com.ibm.icu.text.PluralFormat$PluralSelectorAdapter pluralRulesWrapper -> h
    boolean $assertionsDisabled -> i
    141:561:void <init>() -> <init>
    141:561:void <init>(com.ibm.icu.util.ULocale) -> <init>
    211:212:void <init>(java.util.Locale) -> <init>
    141:561:void <init>(com.ibm.icu.text.PluralRules) -> <init>
    141:561:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.PluralRules) -> <init>
    249:250:void <init>(java.util.Locale,com.ibm.icu.text.PluralRules) -> <init>
    141:561:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.PluralRules$PluralType) -> <init>
    273:274:void <init>(java.util.Locale,com.ibm.icu.text.PluralRules$PluralType) -> <init>
    141:561:void <init>(java.lang.String) -> <init>
    141:561:void <init>(com.ibm.icu.util.ULocale,java.lang.String) -> <init>
    141:561:void <init>(com.ibm.icu.text.PluralRules,java.lang.String) -> <init>
    141:561:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.PluralRules,java.lang.String) -> <init>
    141:561:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.PluralRules$PluralType,java.lang.String) -> <init>
    141:561:void <init>(com.ibm.icu.util.ULocale,com.ibm.icu.text.PluralRules$PluralType,java.lang.String,com.ibm.icu.text.NumberFormat) -> <init>
    387:392:void init(com.ibm.icu.text.PluralRules,com.ibm.icu.text.PluralRules$PluralType,com.ibm.icu.util.ULocale,com.ibm.icu.text.NumberFormat) -> a
    395:400:void resetPattern() -> a
    413:424:void applyPattern(java.lang.String) -> applyPattern
    433:433:java.lang.String toPattern() -> toPattern
    449:528:int findSubMessage(com.ibm.icu.text.MessagePattern,int,com.ibm.icu.text.PluralFormat$PluralSelector,java.lang.Object,double) -> a
    574:574:java.lang.String format(double) -> format
    596:601:java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    606:662:java.lang.String format(java.lang.Number,double) -> a
    677:677:java.lang.Number parse(java.lang.String,java.text.ParsePosition) -> parse
    691:691:java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    704:769:java.lang.String parseType(java.lang.String,com.ibm.icu.text.RbnfLenientScanner,java.text.FieldPosition) -> a
    790:794:void setLocale(com.ibm.icu.util.ULocale) -> setLocale
    804:805:void setNumberFormat(com.ibm.icu.text.NumberFormat) -> setNumberFormat
    813:820:boolean equals(java.lang.Object) -> equals
    834:834:boolean equals(com.ibm.icu.text.PluralFormat) -> equals
    843:843:int hashCode() -> hashCode
    852:857:java.lang.String toString() -> toString
    861:869:void readObject(java.io.ObjectInputStream) -> readObject
    133:133:com.ibm.icu.text.PluralRules access$000(com.ibm.icu.text.PluralFormat) -> a
    133:133:void <clinit>() -> <clinit>
com.ibm.icu.text.PluralFormat$PluralSelector -> com.ibm.icu.text.cy:
    java.lang.String select(java.lang.Object,double) -> a
com.ibm.icu.text.PluralFormat$PluralSelectorAdapter -> com.ibm.icu.text.cz:
    boolean $assertionsDisabled -> a
    com.ibm.icu.text.PluralFormat this$0 -> b
    554:554:void <init>(com.ibm.icu.text.PluralFormat) -> <init>
    556:558:java.lang.String select(java.lang.Object,double) -> a
    554:554:void <init>(com.ibm.icu.text.PluralFormat,byte) -> <init>
    554:554:void <clinit>() -> <clinit>
com.ibm.icu.text.PluralRanges -> com.ibm.icu.text.PluralRanges:
    boolean isFrozen -> a
    com.ibm.icu.text.PluralRanges$Matrix matrix -> b
    boolean[] explicit -> c
    28:39:void <init>() -> <init>
    200:225:void add(com.ibm.icu.text.PluralRules$StandardPluralCategories,com.ibm.icu.text.PluralRules$StandardPluralCategories,com.ibm.icu.text.PluralRules$StandardPluralCategories) -> add
    241:242:com.ibm.icu.text.PluralRules$StandardPluralCategories get(com.ibm.icu.text.PluralRules$StandardPluralCategories,com.ibm.icu.text.PluralRules$StandardPluralCategories) -> get
    259:259:boolean isExplicit(com.ibm.icu.text.PluralRules$StandardPluralCategories,com.ibm.icu.text.PluralRules$StandardPluralCategories) -> isExplicit
    273:273:boolean isExplicitlySet(com.ibm.icu.text.PluralRules$StandardPluralCategories) -> isExplicitlySet
    284:291:boolean equals(java.lang.Object) -> equals
    302:302:int hashCode() -> hashCode
    312:312:int compareTo(com.ibm.icu.text.PluralRanges) -> compareTo
    322:322:boolean isFrozen() -> isFrozen
    332:333:com.ibm.icu.text.PluralRanges freeze() -> freeze
    343:346:com.ibm.icu.text.PluralRanges cloneAsThawed() -> cloneAsThawed
    357:357:java.lang.String toString() -> toString
    24:24:java.lang.Object cloneAsThawed() -> cloneAsThawed
    24:24:java.lang.Object freeze() -> freeze
    24:24:int compareTo(java.lang.Object) -> compareTo
com.ibm.icu.text.PluralRanges$Matrix -> com.ibm.icu.text.cA:
    byte[] data -> a
    45:53:void <init>() -> <init>
    69:76:void setIfNew(com.ibm.icu.text.PluralRules$StandardPluralCategories,com.ibm.icu.text.PluralRules$StandardPluralCategories,com.ibm.icu.text.PluralRules$StandardPluralCategories) -> a
    82:83:com.ibm.icu.text.PluralRules$StandardPluralCategories get(com.ibm.icu.text.PluralRules$StandardPluralCategories,com.ibm.icu.text.PluralRules$StandardPluralCategories) -> a
    138:142:int hashCode() -> hashCode
    147:150:boolean equals(java.lang.Object) -> equals
    154:160:int compareTo(com.ibm.icu.text.PluralRanges$Matrix) -> a
    165:167:com.ibm.icu.text.PluralRanges$Matrix clone() -> a
    172:181:java.lang.String toString() -> toString
    44:44:java.lang.Object clone() -> clone
    44:44:int compareTo(java.lang.Object) -> compareTo
com.ibm.icu.text.PluralRules -> com.ibm.icu.text.PluralRules:
    com.ibm.icu.text.UnicodeSet ALLOWED_ID -> c
    java.lang.String CATEGORY_SEPARATOR -> CATEGORY_SEPARATOR
    java.lang.String KEYWORD_RULE_SEPARATOR -> KEYWORD_RULE_SEPARATOR
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.text.PluralRules$RuleList rules -> d
    java.util.Set keywords -> e
    java.lang.String KEYWORD_ZERO -> KEYWORD_ZERO
    java.lang.String KEYWORD_ONE -> KEYWORD_ONE
    java.lang.String KEYWORD_TWO -> KEYWORD_TWO
    java.lang.String KEYWORD_FEW -> KEYWORD_FEW
    java.lang.String KEYWORD_MANY -> KEYWORD_MANY
    java.lang.String KEYWORD_OTHER -> KEYWORD_OTHER
    double NO_UNIQUE_VALUE -> NO_UNIQUE_VALUE
    com.ibm.icu.text.PluralRules$Constraint NO_CONSTRAINT -> f
    com.ibm.icu.text.PluralRules$Rule DEFAULT_RULE -> g
    com.ibm.icu.text.PluralRules DEFAULT -> DEFAULT
    java.util.regex.Pattern AT_SEPARATED -> h
    java.util.regex.Pattern OR_SEPARATED -> i
    java.util.regex.Pattern AND_SEPARATED -> j
    java.util.regex.Pattern COMMA_SEPARATED -> a
    java.util.regex.Pattern TILDE_SEPARATED -> b
    java.util.regex.Pattern SEMI_SEPARATED -> k
    385:386:com.ibm.icu.text.PluralRules parseDescription(java.lang.String) -> parseDescription
    398:400:com.ibm.icu.text.PluralRules createRules(java.lang.String) -> createRules
    1171:1316:com.ibm.icu.text.PluralRules$Constraint parseConstraint(java.lang.String) -> b
    1330:1330:java.text.ParseException unexpected(java.lang.String,java.lang.String) -> a
    1339:1342:java.lang.String nextToken(java.lang.String[],int,java.lang.String) -> a
    1351:1408:com.ibm.icu.text.PluralRules$Rule parseRule(java.lang.String) -> c
    1419:1430:com.ibm.icu.text.PluralRules$RuleList parseRuleChain(java.lang.String) -> d
    1524:1532:void addRange(java.lang.StringBuilder,double,double,boolean) -> b
    1535:1536:java.lang.String format(double) -> a
    1889:1889:com.ibm.icu.text.PluralRules forLocale(com.ibm.icu.util.ULocale) -> forLocale
    1911:1911:com.ibm.icu.text.PluralRules forLocale(java.util.Locale) -> forLocale
    1933:1933:com.ibm.icu.text.PluralRules forLocale(com.ibm.icu.util.ULocale,com.ibm.icu.text.PluralRules$PluralType) -> forLocale
    1955:1955:com.ibm.icu.text.PluralRules forLocale(java.util.Locale,com.ibm.icu.text.PluralRules$PluralType) -> forLocale
    1965:1965:boolean isValidKeyword(java.lang.String) -> e
    1971:1974:void <init>(com.ibm.icu.text.PluralRules$RuleList) -> <init>
    1983:1983:int hashCode() -> hashCode
    1994:1994:java.lang.String select(double) -> select
    2008:2008:java.lang.String select(double,int,long) -> select
    2022:2022:java.lang.String select(com.ibm.icu.text.PluralRules$FixedDecimal) -> select
    2036:2036:boolean matches(com.ibm.icu.text.PluralRules$FixedDecimal,java.lang.String) -> matches
    2047:2047:java.util.Set getKeywords() -> getKeywords
    2059:2063:double getUniqueKeywordValue(java.lang.String) -> getUniqueKeywordValue
    2076:2076:java.util.Collection getAllKeywordValues(java.lang.String) -> getAllKeywordValues
    2093:2097:java.util.Collection getAllKeywordValues(java.lang.String,com.ibm.icu.text.PluralRules$SampleType) -> getAllKeywordValues
    2111:2111:java.util.Collection getSamples(java.lang.String) -> getSamples
    2130:2162:java.util.Collection getSamples(java.lang.String,com.ibm.icu.text.PluralRules$SampleType) -> getSamples
    2171:2178:boolean addSample(java.lang.String,java.lang.Number,int,java.util.Set) -> addSample
    2196:2196:com.ibm.icu.text.PluralRules$FixedDecimalSamples getDecimalSamples(java.lang.String,com.ibm.icu.text.PluralRules$SampleType) -> getDecimalSamples
    2206:2206:com.ibm.icu.util.ULocale[] getAvailableULocales() -> getAvailableULocales
    2227:2227:com.ibm.icu.util.ULocale getFunctionalEquivalent(com.ibm.icu.util.ULocale,boolean[]) -> getFunctionalEquivalent
    2235:2235:java.lang.String toString() -> toString
    2243:2243:boolean equals(java.lang.Object) -> equals
    2254:2254:boolean equals(com.ibm.icu.text.PluralRules) -> equals
    2319:2319:com.ibm.icu.text.PluralRules$KeywordStatus getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output) -> getKeywordStatus
    2342:2388:com.ibm.icu.text.PluralRules$KeywordStatus getKeywordStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output,com.ibm.icu.text.PluralRules$SampleType) -> getKeywordStatus
    2397:2397:java.lang.String getRules(java.lang.String) -> getRules
    2403:2403:void writeObject(java.io.ObjectOutputStream) -> writeObject
    2408:2408:void readObject(java.io.ObjectInputStream) -> readObject
    2412:2412:java.lang.Object writeReplace() -> writeReplace
    2421:2421:int compareTo(com.ibm.icu.text.PluralRules) -> compareTo
    2430:2430:java.lang.Boolean isLimited(java.lang.String) -> isLimited
    2439:2439:boolean isLimited(java.lang.String,com.ibm.icu.text.PluralRules$SampleType) -> isLimited
    2448:2448:boolean computeLimited(java.lang.String,com.ibm.icu.text.PluralRules$SampleType) -> computeLimited
    169:169:void access$500(java.lang.StringBuilder,double,double,boolean) -> a
    169:169:com.ibm.icu.text.PluralRules$Rule access$600(java.lang.String) -> a
    171:1325:void <clinit>() -> <clinit>
com.ibm.icu.text.PluralRules$1 -> com.ibm.icu.text.cB:
    long serialVersionUID -> serialVersionUID
    354:354:void <init>() -> <init>
    358:358:boolean isFulfilled(com.ibm.icu.text.PluralRules$FixedDecimal) -> a
    362:362:boolean isLimited(com.ibm.icu.text.PluralRules$SampleType) -> a
    366:366:java.lang.String toString() -> toString
com.ibm.icu.text.PluralRules$2 -> com.ibm.icu.text.cC:
    int[] $SwitchMap$com$ibm$icu$text$PluralRules$Operand -> a
    int[] $SwitchMap$com$ibm$icu$text$PluralRules$SampleType -> b
    727:1484:void <clinit>() -> <clinit>
com.ibm.icu.text.PluralRules$AndConstraint -> com.ibm.icu.text.cD:
    long serialVersionUID -> serialVersionUID
    1557:1558:void <init>(com.ibm.icu.text.PluralRules$Constraint,com.ibm.icu.text.PluralRules$Constraint) -> <init>
    1561:1561:boolean isFulfilled(com.ibm.icu.text.PluralRules$FixedDecimal) -> a
    1568:1568:boolean isLimited(com.ibm.icu.text.PluralRules$SampleType) -> a
    1573:1573:java.lang.String toString() -> toString
com.ibm.icu.text.PluralRules$BinaryConstraint -> com.ibm.icu.text.cE:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.text.PluralRules$Constraint a -> a
    com.ibm.icu.text.PluralRules$Constraint b -> b
    1546:1549:void <init>(com.ibm.icu.text.PluralRules$Constraint,com.ibm.icu.text.PluralRules$Constraint) -> <init>
com.ibm.icu.text.PluralRules$Constraint -> com.ibm.icu.text.cF:
    boolean isFulfilled(com.ibm.icu.text.PluralRules$FixedDecimal) -> a
    boolean isLimited(com.ibm.icu.text.PluralRules$SampleType) -> a
com.ibm.icu.text.PluralRules$Factory -> com.ibm.icu.text.PluralRules$Factory:
    206:207:void <init>() -> <init>
    com.ibm.icu.text.PluralRules forLocale(com.ibm.icu.util.ULocale,com.ibm.icu.text.PluralRules$PluralType) -> forLocale
    238:238:com.ibm.icu.text.PluralRules forLocale(com.ibm.icu.util.ULocale) -> forLocale
    com.ibm.icu.util.ULocale[] getAvailableULocales() -> getAvailableULocales
    com.ibm.icu.util.ULocale getFunctionalEquivalent(com.ibm.icu.util.ULocale,boolean[]) -> getFunctionalEquivalent
    276:276:com.ibm.icu.impl.PluralRulesLoader getDefaultFactory() -> getDefaultFactory
    boolean hasOverride(com.ibm.icu.util.ULocale) -> hasOverride
com.ibm.icu.text.PluralRules$FixedDecimal -> com.ibm.icu.text.PluralRules$FixedDecimal:
    long serialVersionUID -> serialVersionUID
    double source -> source
    int visibleDecimalDigitCount -> visibleDecimalDigitCount
    int visibleDecimalDigitCountWithoutTrailingZeros -> visibleDecimalDigitCountWithoutTrailingZeros
    long decimalDigits -> decimalDigits
    long decimalDigitsWithoutTrailingZeros -> decimalDigitsWithoutTrailingZeros
    long integerValue -> integerValue
    boolean hasIntegerValue -> hasIntegerValue
    boolean isNegative -> isNegative
    int baseFactor -> a
    485:485:double getSource() -> getSource
    494:494:int getVisibleDecimalDigitCount() -> getVisibleDecimalDigitCount
    503:503:int getVisibleDecimalDigitCountWithoutTrailingZeros() -> getVisibleDecimalDigitCountWithoutTrailingZeros
    512:512:long getDecimalDigits() -> getDecimalDigits
    521:521:long getDecimalDigitsWithoutTrailingZeros() -> getDecimalDigitsWithoutTrailingZeros
    530:530:long getIntegerValue() -> getIntegerValue
    539:539:boolean isHasIntegerValue() -> isHasIntegerValue
    548:548:boolean isNegative() -> isNegative
    557:557:int getBaseFactor() -> getBaseFactor
    571:607:void <init>(double,int,long) -> <init>
    615:616:void <init>(double,int) -> <init>
    619:627:int getFractionalDigits(double,int) -> a
    637:638:void <init>(double) -> <init>
    646:647:void <init>(long) -> <init>
    661:697:int decimals(double) -> decimals
    708:709:void <init>(java.lang.String) -> <init>
    712:717:int getVisibleFractionCount(java.lang.String) -> a
    727:733:double get(com.ibm.icu.text.PluralRules$Operand) -> get
    743:743:com.ibm.icu.text.PluralRules$Operand getOperand(java.lang.String) -> getOperand
    753:766:int compareTo(com.ibm.icu.text.PluralRules$FixedDecimal) -> compareTo
    776:786:boolean equals(java.lang.Object) -> equals
    797:797:int hashCode() -> hashCode
    807:807:java.lang.String toString() -> toString
    816:816:boolean hasIntegerValue() -> hasIntegerValue
    827:827:int intValue() -> intValue
    837:837:long longValue() -> longValue
    847:847:float floatValue() -> floatValue
    857:857:double doubleValue() -> doubleValue
    866:866:long getShiftedValue() -> getShiftedValue
    872:872:void writeObject(java.io.ObjectOutputStream) -> writeObject
    877:877:void readObject(java.io.ObjectInputStream) -> readObject
    426:426:int compareTo(java.lang.Object) -> compareTo
    427:427:int access$100(com.ibm.icu.text.PluralRules$FixedDecimal) -> a
com.ibm.icu.text.PluralRules$FixedDecimalRange -> com.ibm.icu.text.PluralRules$FixedDecimalRange:
    com.ibm.icu.text.PluralRules$FixedDecimal start -> start
    com.ibm.icu.text.PluralRules$FixedDecimal end -> end
    926:932:void <init>(com.ibm.icu.text.PluralRules$FixedDecimal,com.ibm.icu.text.PluralRules$FixedDecimal) -> <init>
    940:940:java.lang.String toString() -> toString
com.ibm.icu.text.PluralRules$FixedDecimalSamples -> com.ibm.icu.text.PluralRules$FixedDecimalSamples:
    com.ibm.icu.text.PluralRules$SampleType sampleType -> sampleType
    java.util.Set samples -> samples
    boolean bounded -> bounded
    975:979:void <init>(com.ibm.icu.text.PluralRules$SampleType,java.util.Set,boolean) -> <init>
    985:1024:com.ibm.icu.text.PluralRules$FixedDecimalSamples parse(java.lang.String) -> a
    1028:1031:void checkDecimal(com.ibm.icu.text.PluralRules$SampleType,com.ibm.icu.text.PluralRules$FixedDecimal) -> a
    1039:1048:java.util.Set addSamples(java.util.Set) -> addSamples
    1058:1071:java.lang.String toString() -> toString
    1080:1080:java.util.Set getSamples() -> getSamples
    1089:1093:void getStartEndSamples(java.util.Set) -> getStartEndSamples
com.ibm.icu.text.PluralRules$KeywordStatus -> com.ibm.icu.text.PluralRules$KeywordStatus:
    com.ibm.icu.text.PluralRules$KeywordStatus INVALID -> INVALID
    com.ibm.icu.text.PluralRules$KeywordStatus SUPPRESSED -> SUPPRESSED
    com.ibm.icu.text.PluralRules$KeywordStatus UNIQUE -> UNIQUE
    com.ibm.icu.text.PluralRules$KeywordStatus BOUNDED -> BOUNDED
    com.ibm.icu.text.PluralRules$KeywordStatus UNBOUNDED -> UNBOUNDED
    com.ibm.icu.text.PluralRules$KeywordStatus[] $VALUES -> a
    2263:2263:com.ibm.icu.text.PluralRules$KeywordStatus[] values() -> values
    2263:2263:com.ibm.icu.text.PluralRules$KeywordStatus valueOf(java.lang.String) -> valueOf
    2263:2263:void <init>(java.lang.String,int) -> <init>
    2263:2298:void <clinit>() -> <clinit>
com.ibm.icu.text.PluralRules$Operand -> com.ibm.icu.text.cG:
    com.ibm.icu.text.PluralRules$Operand n -> a
    com.ibm.icu.text.PluralRules$Operand i -> b
    com.ibm.icu.text.PluralRules$Operand f -> c
    com.ibm.icu.text.PluralRules$Operand t -> d
    com.ibm.icu.text.PluralRules$Operand v -> e
    com.ibm.icu.text.PluralRules$Operand w -> f
    com.ibm.icu.text.PluralRules$Operand j -> g
    com.ibm.icu.text.PluralRules$Operand[] $VALUES -> h
    411:411:com.ibm.icu.text.PluralRules$Operand[] values() -> values
    411:411:com.ibm.icu.text.PluralRules$Operand valueOf(java.lang.String) -> valueOf
    411:411:void <init>(java.lang.String,int) -> <init>
    411:419:void <clinit>() -> <clinit>
com.ibm.icu.text.PluralRules$OrConstraint -> com.ibm.icu.text.cH:
    long serialVersionUID -> serialVersionUID
    1582:1583:void <init>(com.ibm.icu.text.PluralRules$Constraint,com.ibm.icu.text.PluralRules$Constraint) -> <init>
    1586:1586:boolean isFulfilled(com.ibm.icu.text.PluralRules$FixedDecimal) -> a
    1591:1591:boolean isLimited(com.ibm.icu.text.PluralRules$SampleType) -> a
    1596:1596:java.lang.String toString() -> toString
com.ibm.icu.text.PluralRules$PluralType -> com.ibm.icu.text.PluralRules$PluralType:
    com.ibm.icu.text.PluralRules$PluralType CARDINAL -> CARDINAL
    com.ibm.icu.text.PluralRules$PluralType ORDINAL -> ORDINAL
    com.ibm.icu.text.PluralRules$PluralType[] $VALUES -> a
    338:338:com.ibm.icu.text.PluralRules$PluralType[] values() -> values
    338:338:com.ibm.icu.text.PluralRules$PluralType valueOf(java.lang.String) -> valueOf
    338:338:void <init>(java.lang.String,int) -> <init>
    338:348:void <clinit>() -> <clinit>
com.ibm.icu.text.PluralRules$RangeConstraint -> com.ibm.icu.text.cI:
    long serialVersionUID -> serialVersionUID
    int mod -> a
    boolean inRange -> b
    boolean integersOnly -> c
    double lowerBound -> d
    double upperBound -> e
    long[] range_list -> f
    com.ibm.icu.text.PluralRules$Operand operand -> g
    1450:1458:void <init>(int,boolean,com.ibm.icu.text.PluralRules$Operand,boolean,double,double,long[]) -> <init>
    1461:1476:boolean isFulfilled(com.ibm.icu.text.PluralRules$FixedDecimal) -> a
    1480:1497:boolean isLimited(com.ibm.icu.text.PluralRules$SampleType) -> a
    1501:1519:java.lang.String toString() -> toString
com.ibm.icu.text.PluralRules$Rule -> com.ibm.icu.text.cJ:
    long serialVersionUID -> serialVersionUID
    java.lang.String keyword -> a
    com.ibm.icu.text.PluralRules$Constraint constraint -> b
    com.ibm.icu.text.PluralRules$FixedDecimalSamples integerSamples -> c
    com.ibm.icu.text.PluralRules$FixedDecimalSamples decimalSamples -> d
    1611:1616:void <init>(java.lang.String,com.ibm.icu.text.PluralRules$Constraint,com.ibm.icu.text.PluralRules$FixedDecimalSamples,com.ibm.icu.text.PluralRules$FixedDecimalSamples) -> <init>
    1629:1629:java.lang.String getKeyword() -> a
    1633:1633:boolean appliesTo(com.ibm.icu.text.PluralRules$FixedDecimal) -> a
    1637:1637:boolean isLimited(com.ibm.icu.text.PluralRules$SampleType) -> a
    1641:1641:java.lang.String toString() -> toString
    1653:1653:int hashCode() -> hashCode
    1657:1657:java.lang.String getConstraint() -> b
    1604:1604:com.ibm.icu.text.PluralRules$FixedDecimalSamples access$300(com.ibm.icu.text.PluralRules$Rule) -> a
    1604:1604:com.ibm.icu.text.PluralRules$FixedDecimalSamples access$400(com.ibm.icu.text.PluralRules$Rule) -> b
com.ibm.icu.text.PluralRules$RuleList -> com.ibm.icu.text.cK:
    boolean hasExplicitBoundingInfo -> a
    long serialVersionUID -> serialVersionUID
    java.util.List rules -> b
    1661:1664:void <init>() -> <init>
    1667:1674:com.ibm.icu.text.PluralRules$RuleList addRule(com.ibm.icu.text.PluralRules$Rule) -> a
    1679:1691:com.ibm.icu.text.PluralRules$RuleList finish() -> a
    1695:1700:com.ibm.icu.text.PluralRules$Rule selectRule(com.ibm.icu.text.PluralRules$FixedDecimal) -> b
    1704:1708:java.lang.String select(com.ibm.icu.text.PluralRules$FixedDecimal) -> a
    1712:1718:java.util.Set getKeywords() -> b
    1722:1727:boolean isLimited(java.lang.String,com.ibm.icu.text.PluralRules$SampleType) -> a
    1733:1742:boolean computeLimited(java.lang.String,com.ibm.icu.text.PluralRules$SampleType) -> b
    1746:1753:java.lang.String toString() -> toString
    1757:1762:java.lang.String getRules(java.lang.String) -> a
    1766:1771:boolean select(com.ibm.icu.text.PluralRules$FixedDecimal,java.lang.String) -> a
    1775:1780:com.ibm.icu.text.PluralRules$FixedDecimalSamples getDecimalSamples(java.lang.String,com.ibm.icu.text.PluralRules$SampleType) -> c
    1661:1661:void <init>(byte) -> <init>
    1661:1661:boolean access$276(com.ibm.icu.text.PluralRules$RuleList,int) -> a
    1661:1661:boolean access$200(com.ibm.icu.text.PluralRules$RuleList) -> a
com.ibm.icu.text.PluralRules$SampleType -> com.ibm.icu.text.PluralRules$SampleType:
    com.ibm.icu.text.PluralRules$SampleType INTEGER -> INTEGER
    com.ibm.icu.text.PluralRules$SampleType DECIMAL -> DECIMAL
    com.ibm.icu.text.PluralRules$SampleType[] $VALUES -> a
    886:886:com.ibm.icu.text.PluralRules$SampleType[] values() -> values
    886:886:com.ibm.icu.text.PluralRules$SampleType valueOf(java.lang.String) -> valueOf
    887:887:void <init>(java.lang.String,int) -> <init>
    886:898:void <clinit>() -> <clinit>
com.ibm.icu.text.PluralRules$SimpleTokenizer -> com.ibm.icu.text.cL:
    com.ibm.icu.text.UnicodeSet BREAK_AND_IGNORE -> a
    com.ibm.icu.text.UnicodeSet BREAK_AND_KEEP -> b
    1117:1139:java.lang.String[] split(java.lang.String) -> a
    1114:1115:void <clinit>() -> <clinit>
com.ibm.icu.text.PluralRules$StandardPluralCategories -> com.ibm.icu.text.PluralRules$StandardPluralCategories:
    com.ibm.icu.text.PluralRules$StandardPluralCategories zero -> zero
    com.ibm.icu.text.PluralRules$StandardPluralCategories one -> one
    com.ibm.icu.text.PluralRules$StandardPluralCategories two -> two
    com.ibm.icu.text.PluralRules$StandardPluralCategories few -> few
    com.ibm.icu.text.PluralRules$StandardPluralCategories many -> many
    com.ibm.icu.text.PluralRules$StandardPluralCategories other -> other
    java.util.List VALUES -> VALUES
    int COUNT -> COUNT
    com.ibm.icu.text.PluralRules$StandardPluralCategories[] $VALUES -> a
    1788:1788:com.ibm.icu.text.PluralRules$StandardPluralCategories[] values() -> values
    1788:1788:com.ibm.icu.text.PluralRules$StandardPluralCategories valueOf(java.lang.String) -> valueOf
    1789:1789:void <init>(java.lang.String,int) -> <init>
    1843:1847:com.ibm.icu.text.PluralRules$StandardPluralCategories forString(java.lang.String) -> a
    1788:1838:void <clinit>() -> <clinit>
com.ibm.icu.text.PluralRulesSerialProxy -> com.ibm.icu.text.cM:
    long serialVersionUID -> serialVersionUID
    java.lang.String data -> a
    19:21:void <init>(java.lang.String) -> <init>
    23:23:java.lang.Object readResolve() -> readResolve
com.ibm.icu.text.PluralSamples -> com.ibm.icu.text.PluralSamples:
    com.ibm.icu.text.PluralRules pluralRules -> a
    java.util.Map _keyLimitedMap -> _keyLimitedMap
    int[] TENS -> b
    54:141:void <init>(com.ibm.icu.text.PluralRules) -> <init>
    145:160:int addSimpleSamples(com.ibm.icu.text.PluralRules,int,java.util.Map,int,double) -> a
    164:169:void addRelation(java.util.Map,java.lang.String,com.ibm.icu.text.PluralRules$FixedDecimal) -> a
    172:183:boolean addIfNotPresent(double,java.util.Set,java.util.Map) -> a
    192:226:java.util.Set fractions(java.util.Set) -> a
    230:237:java.lang.Integer getDifferentCategory(java.util.List,java.lang.String) -> a
    257:300:com.ibm.icu.text.PluralRules$KeywordStatus getStatus(java.lang.String,int,java.util.Set,com.ibm.icu.util.Output) -> getStatus
    186:241:void <clinit>() -> <clinit>
com.ibm.icu.text.PluralSamples$1 -> com.ibm.icu.text.cN:
    241:241:void <init>() -> <init>
    243:245:int compare(java.lang.String,java.lang.String) -> a
    241:241:int compare(java.lang.Object,java.lang.Object) -> compare
com.ibm.icu.text.Quantifier -> com.ibm.icu.text.cO:
    com.ibm.icu.text.UnicodeMatcher matcher -> a
    int minCount -> b
    int maxCount -> c
    24:31:void <init>(com.ibm.icu.text.UnicodeMatcher,int,int) -> <init>
    40:65:int matches(com.ibm.icu.text.Replaceable,int[],int,boolean) -> matches
    72:91:java.lang.String toPattern(boolean) -> toPattern
    98:98:boolean matchesIndexValue(int) -> matchesIndexValue
    109:112:void addMatchSetTo(com.ibm.icu.text.UnicodeSet) -> addMatchSetTo
com.ibm.icu.text.QuantityFormatter -> com.ibm.icu.text.cP:
    java.util.Map INDEX_MAP -> a
    int MAX_INDEX -> b
    com.ibm.icu.impl.SimplePatternFormatter[] templates -> c
    107:109:void <init>(com.ibm.icu.impl.SimplePatternFormatter[]) -> <init>
    120:122:java.lang.String format(double,com.ibm.icu.text.NumberFormat,com.ibm.icu.text.PluralRules) -> a
    131:133:com.ibm.icu.impl.SimplePatternFormatter getByVariant(java.lang.String) -> a
    137:140:java.lang.String computeVariant(double,com.ibm.icu.text.NumberFormat,com.ibm.icu.text.PluralRules) -> b
    22:22:java.util.Map access$000() -> a
    22:22:void <init>(com.ibm.icu.impl.SimplePatternFormatter[],byte) -> <init>
    22:22:int access$200() -> b
    24:38:void <clinit>() -> <clinit>
com.ibm.icu.text.QuantityFormatter$Builder -> com.ibm.icu.text.cQ:
    com.ibm.icu.impl.SimplePatternFormatter[] templates -> a
    45:45:void <init>() -> <init>
    60:71:com.ibm.icu.text.QuantityFormatter$Builder add(java.lang.String,java.lang.String) -> a
    81:86:com.ibm.icu.text.QuantityFormatter build() -> a
    93:94:com.ibm.icu.text.QuantityFormatter$Builder reset() -> b
    98:101:void ensureCapacity() -> c
com.ibm.icu.text.RBBIDataWrapper -> com.ibm.icu.text.cR:
    com.ibm.icu.text.RBBIDataWrapper$RBBIDataHeader fHeader -> a
    short[] fFTable -> b
    short[] fRTable -> c
    short[] fSFTable -> d
    short[] fSRTable -> e
    com.ibm.icu.impl.CharTrie fTrie -> f
    java.lang.String fRuleSource -> g
    int[] fStatusTable -> h
    boolean isBigEndian -> i
    com.ibm.icu.text.RBBIDataWrapper$IsAcceptable IS_ACCEPTABLE -> j
    com.ibm.icu.text.RBBIDataWrapper$TrieFoldingFunc fTrieFoldingFunc -> k
    144:144:int getRowIndex(int) -> a
    159:160:void <init>() -> <init>
    167:320:com.ibm.icu.text.RBBIDataWrapper get(java.nio.ByteBuffer) -> a
    327:330:int getStateTableNumStates(short[]) -> b
    337:337:int getStateTableFlags(short[]) -> a
    343:361:void dump() -> a
    367:372:java.lang.String intToString(int,int) -> a
    379:384:java.lang.String intToHexString(int,int) -> b
    391:410:void dumpTable(short[]) -> c
    420:440:void dumpRow(short[],int) -> a
    445:494:void dumpCharCategories() -> b
    49:156:void <clinit>() -> <clinit>
com.ibm.icu.text.RBBIDataWrapper$IsAcceptable -> com.ibm.icu.text.cS:
    43:43:void <init>() -> <init>
    46:46:boolean isDataVersionAcceptable(byte[]) -> isDataVersionAcceptable
    43:43:void <init>(byte) -> <init>
com.ibm.icu.text.RBBIDataWrapper$RBBIDataHeader -> com.ibm.icu.text.cT:
    int fMagic -> a
    int fVersion -> b
    byte[] fFormatVersion -> c
    int fLength -> d
    int fCatCount -> e
    int fFTable -> f
    int fFTableLen -> g
    int fRTable -> h
    int fRTableLen -> i
    int fSFTable -> j
    int fSFTableLen -> k
    int fSRTable -> l
    int fSRTableLen -> m
    int fTrie -> n
    int fRuleSource -> o
    int fRuleSourceLen -> p
    int fStatusTable -> q
    int fStatusTableLen -> r
    131:134:void <init>() -> <init>
com.ibm.icu.text.RBBIDataWrapper$TrieFoldingFunc -> com.ibm.icu.text.cU:
    147:147:void <init>() -> <init>
    149:152:int getFoldingOffset(int) -> getFoldingOffset
com.ibm.icu.text.RBBINode -> com.ibm.icu.text.cV:
    java.lang.String[] nodeTypeNames -> q
    int fType -> a
    com.ibm.icu.text.RBBINode fParent -> b
    com.ibm.icu.text.RBBINode fLeftChild -> c
    com.ibm.icu.text.RBBINode fRightChild -> d
    com.ibm.icu.text.UnicodeSet fInputSet -> e
    int fPrecedence -> f
    java.lang.String fText -> g
    int fFirstPos -> h
    int fLastPos -> i
    boolean fNullable -> j
    int fVal -> k
    boolean fLookAheadEnd -> l
    java.util.Set fFirstPosSet -> m
    java.util.Set fLastPosSet -> n
    java.util.Set fFollowPos -> o
    int fSerialNum -> p
    int gLastSerial -> r
    71:120:void <init>(int) -> <init>
    71:135:void <init>(com.ibm.icu.text.RBBINode) -> <init>
    149:166:com.ibm.icu.text.RBBINode cloneTree() -> c
    190:204:com.ibm.icu.text.RBBINode flattenVariables() -> a
    216:242:void flattenSets() -> b
    251:260:void findNodes(java.util.List,int) -> a
    272:288:void printNode(com.ibm.icu.text.RBBINode) -> a
    296:304:void printString(java.lang.String,int) -> a
    313:315:void printInt(int,int) -> a
    320:325:void printHex(int,int) -> b
    336:352:void printTree(boolean) -> a
    40:40:void <clinit>() -> <clinit>
com.ibm.icu.text.RBBIRuleBuilder -> com.ibm.icu.text.cW:
    java.lang.String fDebugEnv -> a
    java.lang.String fRules -> b
    com.ibm.icu.text.RBBIRuleScanner fScanner -> l
    com.ibm.icu.text.RBBINode[] fTreeRoots -> c
    int fDefaultTree -> d
    boolean fChainRules -> e
    boolean fLBCMNoChain -> f
    boolean fLookAheadHardBreak -> g
    com.ibm.icu.text.RBBISetBuilder fSetBuilder -> h
    java.util.List fUSetNodes -> i
    com.ibm.icu.text.RBBITableBuilder fForwardTables -> m
    com.ibm.icu.text.RBBITableBuilder fReverseTables -> n
    com.ibm.icu.text.RBBITableBuilder fSafeFwdTables -> o
    com.ibm.icu.text.RBBITableBuilder fSafeRevTables -> p
    java.util.Map fStatusSets -> j
    java.util.List fRuleStatusVals -> k
    37:147:void <init>(java.lang.String) -> <init>
    159:159:int align8(int) -> a
    163:284:void flattenData(java.io.OutputStream) -> a
    298:330:void compileRules(java.lang.String,java.io.OutputStream) -> a
com.ibm.icu.text.RBBIRuleParseTable -> com.ibm.icu.text.cX:
    com.ibm.icu.text.RBBIRuleParseTable$RBBIRuleTableElement[] gRuleParseStateTable -> a
    78:78:void <clinit>() -> <clinit>
com.ibm.icu.text.RBBIRuleParseTable$RBBIRuleTableElement -> com.ibm.icu.text.cY:
    short fAction -> a
    short fCharClass -> b
    short fNextState -> c
    short fPushState -> d
    boolean fNextChar -> e
    java.lang.String fStateName -> f
    68:75:void <init>(short,int,int,int,boolean,java.lang.String) -> <init>
com.ibm.icu.text.RBBIRuleScanner -> com.ibm.icu.text.cZ:
    com.ibm.icu.text.RBBIRuleBuilder fRB -> a
    int fScanIndex -> b
    int fNextIndex -> c
    boolean fQuoteMode -> d
    int fLineNum -> e
    int fCharNum -> f
    int fLastChar -> g
    com.ibm.icu.text.RBBIRuleScanner$RBBIRuleChar fC -> h
    short[] fStack -> i
    int fStackPtr -> j
    com.ibm.icu.text.RBBINode[] fNodeStack -> k
    int fNodeStackPtr -> l
    boolean fReverseRule -> m
    boolean fLookAheadRule -> n
    com.ibm.icu.text.RBBISymbolTable fSymbolTable -> o
    java.util.HashMap fSetTable -> p
    com.ibm.icu.text.UnicodeSet[] fRuleSets -> q
    int fRuleNum -> r
    int fOptionStart -> s
    java.lang.String gRuleSet_rule_char_pattern -> t
    java.lang.String gRuleSet_name_char_pattern -> u
    java.lang.String gRuleSet_digit_char_pattern -> v
    java.lang.String gRuleSet_name_start_char_pattern -> w
    java.lang.String gRuleSet_white_space_pattern -> x
    java.lang.String kAny -> y
    47:120:void <init>(com.ibm.icu.text.RBBIRuleBuilder) -> <init>
    131:486:boolean doParseActions(int) -> b
    496:499:void error(int) -> a
    523:561:void fixOpStack(int) -> c
    604:648:void findSetFor(java.lang.String,com.ibm.icu.text.RBBINode,com.ibm.icu.text.UnicodeSet) -> a
    667:681:java.lang.String stripRules(java.lang.String) -> a
    694:720:int nextCharLL() -> b
    735:807:void nextChar(com.ibm.icu.text.RBBIRuleScanner$RBBIRuleChar) -> a
    821:973:void parse() -> a
    983:987:void printNodeStack(java.lang.String) -> b
    997:1003:com.ibm.icu.text.RBBINode pushNewNode(int) -> d
    1021:1069:void scanSet() -> c
    90:95:void <clinit>() -> <clinit>
com.ibm.icu.text.RBBIRuleScanner$RBBIRuleChar -> com.ibm.icu.text.da:
    int fChar -> a
    boolean fEscaped -> b
    28:28:void <init>() -> <init>
com.ibm.icu.text.RBBIRuleScanner$RBBISetTableEl -> com.ibm.icu.text.db:
    java.lang.String key -> a
    com.ibm.icu.text.RBBINode val -> b
    574:574:void <init>() -> <init>
com.ibm.icu.text.RBBISetBuilder -> com.ibm.icu.text.dc:
    com.ibm.icu.text.RBBIRuleBuilder fRB -> b
    com.ibm.icu.text.RBBISetBuilder$RangeDescriptor fRangeList -> c
    com.ibm.icu.impl.IntTrieBuilder fTrie -> a
    int fGroupCount -> d
    boolean fSawBOF -> e
    com.ibm.icu.text.RBBISetBuilder$RBBIDataManipulate dm -> f
    144:324:void <init>(com.ibm.icu.text.RBBIRuleBuilder) -> <init>
    158:294:void build() -> a
    332:340:int getTrieSize() -> b
    350:351:void serializeTrie(java.io.OutputStream) -> a
    368:371:void addValToSets(java.util.List,int) -> a
    374:391:void addValToSet(com.ibm.icu.text.RBBINode,int) -> a
    400:400:int getNumCharCategories() -> c
    410:410:boolean sawBOF() -> d
    422:429:int getFirstChar(int) -> a
    445:463:void printRanges() -> e
    478:518:void printRangeGroups() -> f
    531:559:void printSets() -> g
com.ibm.icu.text.RBBISetBuilder$RBBIDataManipulate -> com.ibm.icu.text.dd:
    com.ibm.icu.text.RBBISetBuilder this$0 -> a
    304:304:void <init>(com.ibm.icu.text.RBBISetBuilder) -> <init>
    308:321:int getFoldedValue(int,int) -> getFoldedValue
com.ibm.icu.text.RBBISetBuilder$RangeDescriptor -> com.ibm.icu.text.de:
    int fStartChar -> a
    int fEndChar -> b
    int fNum -> c
    java.util.List fIncludesSets -> d
    com.ibm.icu.text.RBBISetBuilder$RangeDescriptor fNext -> e
    47:49:void <init>() -> <init>
    51:56:void <init>(com.ibm.icu.text.RBBISetBuilder$RangeDescriptor) -> <init>
    64:77:void split(int) -> a
    101:117:void setDictionaryFlag() -> a
com.ibm.icu.text.RBBISymbolTable -> com.ibm.icu.text.df:
    java.util.HashMap fHashTable -> a
    com.ibm.icu.text.RBBIRuleScanner fRuleScanner -> b
    java.lang.String ffffString -> c
    com.ibm.icu.text.UnicodeSet fCachedSetLookup -> d
    34:39:void <init>(com.ibm.icu.text.RBBIRuleScanner,java.lang.String) -> <init>
    56:84:char[] lookup(java.lang.String) -> lookup
    99:104:com.ibm.icu.text.UnicodeMatcher lookupMatcher(int) -> lookupMatcher
    114:130:java.lang.String parseReference(java.lang.String,java.text.ParsePosition,int) -> parseReference
    140:147:com.ibm.icu.text.RBBINode lookupNode(java.lang.String) -> a
    158:168:void addEntry(java.lang.String,com.ibm.icu.text.RBBINode) -> a
    175:198:void rbbiSymtablePrint() -> a
com.ibm.icu.text.RBBISymbolTable$RBBISymbolTableEntry -> com.ibm.icu.text.dg:
    java.lang.String key -> a
    com.ibm.icu.text.RBBINode val -> b
    28:28:void <init>() -> <init>
com.ibm.icu.text.RBBITableBuilder -> com.ibm.icu.text.dh:
    com.ibm.icu.text.RBBIRuleBuilder fRB -> a
    int fRootIx -> b
    java.util.List fDStates -> c
    79:83:void <init>(com.ibm.icu.text.RBBIRuleBuilder,int) -> <init>
    97:196:void build() -> a
    206:242:void calcNullable(com.ibm.icu.text.RBBINode) -> a
    253:286:void calcFirstPos(com.ibm.icu.text.RBBINode) -> b
    296:329:void calcLastPos(com.ibm.icu.text.RBBINode) -> c
    339:362:void calcFollowPos(com.ibm.icu.text.RBBINode) -> d
    373:447:void calcChainedFollowPos(com.ibm.icu.text.RBBINode) -> e
    472:496:void bofFixup() -> e
    510:585:void buildStateTable() -> f
    599:643:void flagAcceptingStates() -> g
    652:668:void flagLookAheadStates() -> h
    679:695:void flagTaggedStates() -> i
    738:773:void mergeRuleStatusVals() -> j
    789:806:void printPosSets(com.ibm.icu.text.RBBINode) -> f
    821:845:int getTableSize() -> b
    868:921:short[] exportTable() -> c
    933:937:void printSet(java.util.Collection) -> a
    951:978:void printStates() -> k
    990:1009:void printRuleStatusTable() -> d
com.ibm.icu.text.RBBITableBuilder$RBBIStateDescriptor -> com.ibm.icu.text.di:
    boolean fMarked -> a
    int fAccepting -> b
    int fLookAhead -> c
    java.util.SortedSet fTagVals -> d
    int fTagsIdx -> e
    java.util.Set fPositions -> f
    int[] fDtran -> g
    52:59:void <init>(int) -> <init>
com.ibm.icu.text.RBNFPostProcessor -> com.ibm.icu.text.dj:
com.ibm.icu.text.RawCollationKey -> com.ibm.icu.text.RawCollationKey:
    51:52:void <init>() -> <init>
    61:63:void <init>(int) -> <init>
    72:74:void <init>(byte[]) -> <init>
    86:87:void <init>(byte[],int) -> <init>
    99:100:int compareTo(com.ibm.icu.text.RawCollationKey) -> compareTo
com.ibm.icu.text.RbnfLenientScanner -> com.ibm.icu.text.RbnfLenientScanner:
    boolean allIgnorable(java.lang.String) -> allIgnorable
    int prefixLength(java.lang.String,java.lang.String) -> prefixLength
    int[] findText(java.lang.String,java.lang.String,int) -> findText
com.ibm.icu.text.RbnfLenientScannerProvider -> com.ibm.icu.text.RbnfLenientScannerProvider:
    com.ibm.icu.text.RbnfLenientScanner get(com.ibm.icu.util.ULocale,java.lang.String) -> get
com.ibm.icu.text.RelativeDateTimeFormatter -> com.ibm.icu.text.RelativeDateTimeFormatter:
    java.util.EnumMap qualitativeUnitMap -> a
    java.util.EnumMap quantitativeUnitMap -> b
    com.ibm.icu.text.MessageFormat combinedDateAndTime -> c
    com.ibm.icu.text.PluralRules pluralRules -> d
    com.ibm.icu.text.NumberFormat numberFormat -> e
    com.ibm.icu.text.RelativeDateTimeFormatter$Style style -> f
    com.ibm.icu.text.DisplayContext capitalizationContext -> g
    com.ibm.icu.text.BreakIterator breakIterator -> h
    com.ibm.icu.util.ULocale locale -> i
    com.ibm.icu.text.RelativeDateTimeFormatter$Cache cache -> j
    272:272:com.ibm.icu.text.RelativeDateTimeFormatter getInstance() -> getInstance
    283:283:com.ibm.icu.text.RelativeDateTimeFormatter getInstance(com.ibm.icu.util.ULocale) -> getInstance
    294:294:com.ibm.icu.text.RelativeDateTimeFormatter getInstance(java.util.Locale) -> getInstance
    308:308:com.ibm.icu.text.RelativeDateTimeFormatter getInstance(com.ibm.icu.util.ULocale,com.ibm.icu.text.NumberFormat) -> getInstance
    327:333:com.ibm.icu.text.RelativeDateTimeFormatter getInstance(com.ibm.icu.util.ULocale,com.ibm.icu.text.NumberFormat,com.ibm.icu.text.RelativeDateTimeFormatter$Style,com.ibm.icu.text.DisplayContext) -> getInstance
    358:358:com.ibm.icu.text.RelativeDateTimeFormatter getInstance(java.util.Locale,com.ibm.icu.text.NumberFormat) -> getInstance
    375:386:java.lang.String format(double,com.ibm.icu.text.RelativeDateTimeFormatter$Direction,com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit) -> format
    402:406:java.lang.String format(com.ibm.icu.text.RelativeDateTimeFormatter$Direction,com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit) -> format
    420:420:java.lang.String combineDateAndTime(java.lang.String,java.lang.String) -> combineDateAndTime
    432:434:com.ibm.icu.text.NumberFormat getNumberFormat() -> getNumberFormat
    443:443:com.ibm.icu.text.DisplayContext getCapitalizationContext() -> getCapitalizationContext
    452:452:com.ibm.icu.text.RelativeDateTimeFormatter$Style getFormatStyle() -> getFormatStyle
    456:466:java.lang.String adjustForContext(java.lang.String) -> a
    473:477:void addQualitativeUnit(java.util.EnumMap,com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit,java.lang.String) -> b
    482:491:void addQualitativeUnit(java.util.EnumMap,com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit,com.ibm.icu.impl.ICUResourceBundle,java.lang.String) -> b
    498:502:void addOptionalDirection(java.util.EnumMap,com.ibm.icu.text.RelativeDateTimeFormatter$Direction,com.ibm.icu.impl.ICUResourceBundle,java.lang.String) -> a
    513:526:void <init>(java.util.EnumMap,java.util.EnumMap,com.ibm.icu.text.MessageFormat,com.ibm.icu.text.PluralRules,com.ibm.icu.text.NumberFormat,com.ibm.icu.text.RelativeDateTimeFormatter$Style,com.ibm.icu.text.DisplayContext,com.ibm.icu.text.BreakIterator,com.ibm.icu.util.ULocale) -> <init>
    529:530:com.ibm.icu.text.QuantityFormatter getQuantity(com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit,boolean) -> a
    66:66:void access$000(java.util.EnumMap,com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit,java.lang.String) -> a
    66:66:void access$100(java.util.EnumMap,com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit,com.ibm.icu.impl.ICUResourceBundle,java.lang.String) -> a
    861:861:void <clinit>() -> <clinit>
com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit -> com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit:
    com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit SUNDAY -> SUNDAY
    com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit MONDAY -> MONDAY
    com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit TUESDAY -> TUESDAY
    com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit WEDNESDAY -> WEDNESDAY
    com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit THURSDAY -> THURSDAY
    com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit FRIDAY -> FRIDAY
    com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit SATURDAY -> SATURDAY
    com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit DAY -> DAY
    com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit WEEK -> WEEK
    com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit MONTH -> MONTH
    com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit YEAR -> YEAR
    com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit NOW -> NOW
    com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit[] $VALUES -> a
    148:148:com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit[] values() -> values
    148:148:com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit valueOf(java.lang.String) -> valueOf
    148:148:void <init>(java.lang.String,int) -> <init>
    148:220:void <clinit>() -> <clinit>
com.ibm.icu.text.RelativeDateTimeFormatter$Cache -> com.ibm.icu.text.dk:
    com.ibm.icu.impl.ICUCache cache -> a
    558:559:void <init>() -> <init>
    563:569:com.ibm.icu.text.RelativeDateTimeFormatter$RelativeDateTimeFormatterData get(com.ibm.icu.util.ULocale) -> a
    558:558:void <init>(byte) -> <init>
com.ibm.icu.text.RelativeDateTimeFormatter$Direction -> com.ibm.icu.text.RelativeDateTimeFormatter$Direction:
    com.ibm.icu.text.RelativeDateTimeFormatter$Direction LAST_2 -> LAST_2
    com.ibm.icu.text.RelativeDateTimeFormatter$Direction LAST -> LAST
    com.ibm.icu.text.RelativeDateTimeFormatter$Direction THIS -> THIS
    com.ibm.icu.text.RelativeDateTimeFormatter$Direction NEXT -> NEXT
    com.ibm.icu.text.RelativeDateTimeFormatter$Direction NEXT_2 -> NEXT_2
    com.ibm.icu.text.RelativeDateTimeFormatter$Direction PLAIN -> PLAIN
    com.ibm.icu.text.RelativeDateTimeFormatter$Direction[] $VALUES -> a
    228:228:com.ibm.icu.text.RelativeDateTimeFormatter$Direction[] values() -> values
    228:228:com.ibm.icu.text.RelativeDateTimeFormatter$Direction valueOf(java.lang.String) -> valueOf
    228:228:void <init>(java.lang.String,int) -> <init>
    228:264:void <clinit>() -> <clinit>
com.ibm.icu.text.RelativeDateTimeFormatter$Loader -> com.ibm.icu.text.dl:
    com.ibm.icu.util.ULocale ulocale -> a
    576:578:void <init>(com.ibm.icu.util.ULocale) -> <init>
    581:718:com.ibm.icu.text.RelativeDateTimeFormatter$RelativeDateTimeFormatterData load() -> a
    729:748:void addTimeUnits(com.ibm.icu.impl.ICUResourceBundle,java.lang.String,java.lang.String,java.lang.String,com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit,com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit,java.util.EnumMap,java.util.EnumMap) -> a
    756:768:void addTimeUnit(com.ibm.icu.impl.ICUResourceBundle,com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit,com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit,java.util.EnumMap,java.util.EnumMap) -> a
    777:789:void initRelativeUnits(com.ibm.icu.impl.ICUResourceBundle,java.lang.String,java.lang.String,java.lang.String,com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit,java.util.EnumMap) -> a
    795:806:void addTimeUnit(com.ibm.icu.impl.ICUResourceBundle,com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit,java.util.EnumMap) -> a
    810:815:void addTimeUnit(com.ibm.icu.impl.ICUResourceBundle,com.ibm.icu.text.QuantityFormatter$Builder) -> a
    825:841:void addWeekDays(com.ibm.icu.impl.ICUResourceBundle,java.lang.String,java.lang.String,java.lang.String,java.util.EnumMap,com.ibm.icu.text.RelativeDateTimeFormatter$AbsoluteUnit,java.util.EnumMap) -> a
    844:857:java.util.EnumMap readDaysOfWeek(com.ibm.icu.impl.ICUResourceBundle) -> a
com.ibm.icu.text.RelativeDateTimeFormatter$RelativeDateTimeFormatterData -> com.ibm.icu.text.dm:
    java.util.EnumMap qualitativeUnitMap -> a
    java.util.EnumMap quantitativeUnitMap -> b
    java.lang.String dateTimePattern -> c
    547:551:void <init>(java.util.EnumMap,java.util.EnumMap,java.lang.String) -> <init>
com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit -> com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit:
    com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit SECONDS -> SECONDS
    com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit MINUTES -> MINUTES
    com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit HOURS -> HOURS
    com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit DAYS -> DAYS
    com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit WEEKS -> WEEKS
    com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit MONTHS -> MONTHS
    com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit YEARS -> YEARS
    com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit[] $VALUES -> a
    99:99:com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit[] values() -> values
    99:99:com.ibm.icu.text.RelativeDateTimeFormatter$RelativeUnit valueOf(java.lang.String) -> valueOf
    99:99:void <init>(java.lang.String,int) -> <init>
    99:141:void <clinit>() -> <clinit>
com.ibm.icu.text.RelativeDateTimeFormatter$Style -> com.ibm.icu.text.RelativeDateTimeFormatter$Style:
    com.ibm.icu.text.RelativeDateTimeFormatter$Style LONG -> LONG
    com.ibm.icu.text.RelativeDateTimeFormatter$Style SHORT -> SHORT
    com.ibm.icu.text.RelativeDateTimeFormatter$Style NARROW -> NARROW
    com.ibm.icu.text.RelativeDateTimeFormatter$Style[] $VALUES -> a
    73:73:com.ibm.icu.text.RelativeDateTimeFormatter$Style[] values() -> values
    73:73:com.ibm.icu.text.RelativeDateTimeFormatter$Style valueOf(java.lang.String) -> valueOf
    73:73:void <init>(java.lang.String,int) -> <init>
    73:91:void <clinit>() -> <clinit>
com.ibm.icu.text.RemoveTransliterator -> com.ibm.icu.text.dn:
    25:31:void register() -> a
    37:38:void <init>() -> <init>
    47:51:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    59:62:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
com.ibm.icu.text.RemoveTransliterator$1 -> com.ibm.icu.text.do:
    25:25:void <init>() -> <init>
    27:27:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.Replaceable -> com.ibm.icu.text.Replaceable:
    int length() -> length
    char charAt(int) -> charAt
    int char32At(int) -> char32At
    void getChars(int,int,char[],int) -> getChars
    void replace(int,int,java.lang.String) -> replace
    void replace(int,int,char[],int,int) -> replace
    void copy(int,int,int) -> copy
    boolean hasMetaData() -> hasMetaData
com.ibm.icu.text.ReplaceableContextIterator -> com.ibm.icu.text.dp:
    com.ibm.icu.text.Replaceable rep -> a
    int index -> b
    int limit -> c
    int cpStart -> d
    int cpLimit -> e
    int contextStart -> f
    int contextLimit -> g
    int dir -> h
    boolean reachedLimit -> i
    34:39:void <init>() -> <init>
    46:51:void setText(com.ibm.icu.text.Replaceable) -> a
    58:62:void setIndex(int) -> a
    69:69:int getCaseMapCPStart() -> a
    80:86:void setLimit(int) -> b
    94:109:void setContextLimits(int,int) -> a
    119:125:int nextCaseMapCP() -> b
    137:142:int replace(java.lang.String) -> a
    150:150:boolean didReachLimit() -> c
    155:169:void reset(int) -> reset
    174:188:int next() -> next
com.ibm.icu.text.ReplaceableString -> com.ibm.icu.text.ReplaceableString:
    java.lang.StringBuffer buf -> a
    31:33:void <init>(java.lang.String) -> <init>
    44:46:void <init>(java.lang.StringBuffer) -> <init>
    52:54:void <init>() -> <init>
    62:62:java.lang.String toString() -> toString
    70:70:java.lang.String substring(int,int) -> substring
    79:79:int length() -> length
    90:90:char charAt(int) -> charAt
    105:105:int char32At(int) -> char32At
    127:130:void getChars(int,int,char[],int) -> getChars
    144:145:void replace(int,int,java.lang.String) -> replace
    162:164:void replace(int,int,char[],int,int) -> replace
    182:188:void copy(int,int,int) -> copy
    195:195:boolean hasMetaData() -> hasMetaData
com.ibm.icu.text.RuleBasedBreakIterator -> com.ibm.icu.text.RuleBasedBreakIterator:
    java.text.CharacterIterator fText -> b
    com.ibm.icu.text.RBBIDataWrapper fRData -> c
    int fLastRuleStatusIndex -> d
    boolean fLastStatusIndexValid -> e
    int fDictionaryCharCount -> f
    boolean TRACE -> g
    int fBreakType -> h
    com.ibm.icu.text.UnhandledBreakEngine fUnhandledBreakEngine -> i
    int[] fCachedBreakPositions -> j
    int fPositionInCache -> k
    java.util.concurrent.ConcurrentHashMap fBreakEngines -> l
    java.lang.String fDebugEnv -> a
    boolean $assertionsDisabled -> m
    46:275:void <init>() -> <init>
    68:70:com.ibm.icu.text.RuleBasedBreakIterator getInstanceFromCompiledRules(java.io.InputStream) -> getInstanceFromCompiledRules
    91:93:com.ibm.icu.text.RuleBasedBreakIterator getInstanceFromCompiledRules(java.nio.ByteBuffer) -> getInstanceFromCompiledRules
    102:116:void <init>(java.lang.String) -> <init>
    130:134:java.lang.Object clone() -> clone
    143:167:boolean equals(java.lang.Object) -> equals
    177:181:java.lang.String toString() -> toString
    191:191:int hashCode() -> hashCode
    282:287:void reset() -> a
    296:297:void dump() -> dump
    315:316:void compileRules(java.lang.String,java.io.OutputStream) -> compileRules
    329:338:int first() -> first
    348:365:int last() -> last
    379:388:int next(int) -> next
    399:417:int next() -> next
    429:575:int checkDictionary(int,int,boolean) -> a
    589:673:int previous() -> previous
    684:705:int following(int) -> following
    713:788:int rulesFollowing(int) -> b
    798:820:int preceding(int) -> preceding
    829:884:int rulesPreceding(int) -> c
    892:895:void checkOffset(int,java.text.CharacterIterator) -> checkOffset
    907:931:boolean isBoundary(int) -> isBoundary
    940:940:int current() -> current
    944:964:void makeRuleStatusValid() -> b
    990:1001:int getRuleStatus() -> getRuleStatus
    1027:1035:int getRuleStatusVec(int[]) -> getRuleStatusVec
    1047:1047:java.text.CharacterIterator getText() -> getText
    1057:1060:void setText(java.text.CharacterIterator) -> setText
    1066:1067:void setBreakType(int) -> a
    1073:1073:int getBreakType() -> c
    1088:1158:com.ibm.icu.text.LanguageBreakEngine getLanguageBreakEngine(int) -> d
    1179:1361:int handleNext(short[]) -> a
    1365:1554:int handlePrevious(short[]) -> b
    38:1080:void <clinit>() -> <clinit>
com.ibm.icu.text.RuleBasedCollator -> com.ibm.icu.text.RuleBasedCollator:
    java.util.concurrent.locks.Lock frozenLock -> d
    com.ibm.icu.text.RuleBasedCollator$CollationBuffer collationBuffer -> e
    com.ibm.icu.impl.coll.CollationData data -> a
    com.ibm.icu.impl.coll.SharedObject$Reference settings -> b
    com.ibm.icu.impl.coll.CollationTailoring tailoring -> c
    com.ibm.icu.util.ULocale validLocale -> f
    boolean actualLocaleIsSameAsValid -> g
    boolean $assertionsDisabled -> h
    218:224:void <init>(java.lang.String) -> <init>
    232:249:void internalBuildTailoring(java.lang.String) -> a
    261:264:java.lang.Object clone() -> clone
    268:273:void initMaxExpansions() -> a
    282:283:com.ibm.icu.text.CollationElementIterator getCollationElementIterator(java.lang.String) -> getCollationElementIterator
    294:296:com.ibm.icu.text.CollationElementIterator getCollationElementIterator(java.text.CharacterIterator) -> getCollationElementIterator
    307:308:com.ibm.icu.text.CollationElementIterator getCollationElementIterator(com.ibm.icu.text.UCharacterIterator) -> getCollationElementIterator
    323:323:boolean isFrozen() -> isFrozen
    333:339:com.ibm.icu.text.Collator freeze() -> freeze
    349:359:com.ibm.icu.text.RuleBasedCollator cloneAsThawed() -> cloneAsThawed
    366:369:void checkNotFrozen() -> b
    372:372:com.ibm.icu.impl.coll.CollationSettings getOwnedSettings() -> c
    376:376:com.ibm.icu.impl.coll.CollationSettings getDefaultSettings() -> d
    397:398:void setHiraganaQuaternary(boolean) -> setHiraganaQuaternary
    415:416:void setHiraganaQuaternaryDefault() -> setHiraganaQuaternaryDefault
    433:438:void setUpperCaseFirst(boolean) -> setUpperCaseFirst
    455:460:void setLowerCaseFirst(boolean) -> setLowerCaseFirst
    473:479:void setCaseFirstDefault() -> setCaseFirstDefault
    490:496:void setAlternateHandlingDefault() -> setAlternateHandlingDefault
    507:513:void setCaseLevelDefault() -> setCaseLevelDefault
    524:530:void setDecompositionDefault() -> setDecompositionDefault
    541:547:void setFrenchCollationDefault() -> setFrenchCollationDefault
    558:564:void setStrengthDefault() -> setStrengthDefault
    574:580:void setNumericCollationDefault() -> setNumericCollationDefault
    595:600:void setFrenchCollation(boolean) -> setFrenchCollation
    618:623:void setAlternateHandlingShifted(boolean) -> setAlternateHandlingShifted
    646:651:void setCaseLevel(boolean) -> setCaseLevel
    686:702:void setDecomposition(int) -> setDecomposition
    725:730:void setStrength(int) -> setStrength
    748:775:com.ibm.icu.text.RuleBasedCollator setMaxVariable(int) -> setMaxVariable
    787:787:int getMaxVariable() -> getMaxVariable
    817:836:int setVariableTop(java.lang.String) -> setVariableTop
    855:857:void setVariableTop(int) -> setVariableTop
    860:879:void internalSetVariableTop(long) -> a
    904:910:void setNumericCollation(boolean) -> setNumericCollation
    926:952:void setReorderCodes(int[]) -> setReorderCodes
    955:957:void setFastLatinOptions(com.ibm.icu.impl.coll.CollationSettings) -> a
    970:970:java.lang.String getRules() -> getRules
    992:995:java.lang.String getRules(boolean) -> getRules
    1007:1011:com.ibm.icu.text.UnicodeSet getTailoredSet() -> getTailoredSet
    1029:1036:void getContractionsAndExpansions(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,boolean) -> getContractionsAndExpansions
    1045:1046:void internalAddContractions(int,com.ibm.icu.text.UnicodeSet) -> a
    1074:1082:com.ibm.icu.text.CollationKey getCollationKey(java.lang.String) -> getCollationKey
    1087:1088:com.ibm.icu.text.CollationKey getCollationKey(java.lang.String,com.ibm.icu.text.RuleBasedCollator$CollationBuffer) -> a
    1107:1115:com.ibm.icu.text.RawCollationKey getRawCollationKey(java.lang.String,com.ibm.icu.text.RawCollationKey) -> getRawCollationKey
    1156:1164:com.ibm.icu.text.RawCollationKey getRawCollationKey(java.lang.CharSequence,com.ibm.icu.text.RawCollationKey,com.ibm.icu.text.RuleBasedCollator$CollationBuffer) -> a
    1168:1168:int simpleKeyLengthEstimate(java.lang.CharSequence) -> a
    1172:1190:void writeSortKey(java.lang.CharSequence,com.ibm.icu.text.RuleBasedCollator$CollationKeyByteSink,com.ibm.icu.text.RuleBasedCollator$CollationBuffer) -> a
    1194:1211:void writeIdenticalLevel(java.lang.CharSequence,com.ibm.icu.text.RuleBasedCollator$CollationKeyByteSink) -> a
    1221:1239:long[] internalGetCEs(java.lang.CharSequence) -> internalGetCEs
    1263:1263:int getStrength() -> getStrength
    1280:1280:int getDecomposition() -> getDecomposition
    1296:1296:boolean isUpperCaseFirst() -> isUpperCaseFirst
    1311:1311:boolean isLowerCaseFirst() -> isLowerCaseFirst
    1326:1326:boolean isAlternateHandlingShifted() -> isAlternateHandlingShifted
    1339:1339:boolean isCaseLevel() -> isCaseLevel
    1351:1351:boolean isFrenchCollation() -> isFrenchCollation
    1369:1369:boolean isHiraganaQuaternary() -> isHiraganaQuaternary
    1381:1381:int getVariableTop() -> getVariableTop
    1394:1394:boolean getNumericCollation() -> getNumericCollation
    1408:1408:int[] getReorderCodes() -> getReorderCodes
    1419:1450:boolean equals(java.lang.Object) -> equals
    1461:1469:int hashCode() -> hashCode
    1501:1501:int compare(java.lang.String,java.lang.String) -> compare
    1612:1636:int compareNFDIter(com.ibm.icu.impl.Normalizer2Impl,com.ibm.icu.text.RuleBasedCollator$NFDIterator,com.ibm.icu.text.RuleBasedCollator$NFDIterator) -> a
    1647:1737:int doCompare(java.lang.CharSequence,java.lang.CharSequence) -> doCompare
    1743:1749:void <init>(com.ibm.icu.impl.coll.CollationTailoring,com.ibm.icu.util.ULocale) -> <init>
    1752:1758:void adoptTailoring(com.ibm.icu.impl.coll.CollationTailoring) -> a
    1770:1770:boolean isUnsafe(int) -> a
    1811:1813:com.ibm.icu.util.VersionInfo getVersion() -> getVersion
    1826:1834:com.ibm.icu.util.VersionInfo getUCAVersion() -> getUCAVersion
    1840:1845:com.ibm.icu.text.RuleBasedCollator$CollationBuffer getCollationBuffer() -> e
    1849:1852:void releaseCollationBuffer$84d1495() -> f
    1861:1866:com.ibm.icu.util.ULocale getLocale(com.ibm.icu.util.ULocale$Type) -> getLocale
    1878:1891:void setLocale(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> a
    197:197:com.ibm.icu.text.Collator cloneAsThawed() -> cloneAsThawed
    197:197:com.ibm.icu.text.Collator setMaxVariable(int) -> setMaxVariable
    197:197:java.lang.Object cloneAsThawed() -> cloneAsThawed
    197:197:java.lang.Object freeze() -> freeze
    197:197:void <clinit>() -> <clinit>
com.ibm.icu.text.RuleBasedCollator$CollationBuffer -> com.ibm.icu.text.dq:
    com.ibm.icu.impl.coll.UTF16CollationIterator leftUTF16CollIter -> a
    com.ibm.icu.impl.coll.UTF16CollationIterator rightUTF16CollIter -> b
    com.ibm.icu.impl.coll.FCDUTF16CollationIterator leftFCDUTF16Iter -> c
    com.ibm.icu.impl.coll.FCDUTF16CollationIterator rightFCDUTF16Iter -> d
    com.ibm.icu.text.RuleBasedCollator$UTF16NFDIterator leftUTF16NFDIter -> e
    com.ibm.icu.text.RuleBasedCollator$UTF16NFDIterator rightUTF16NFDIter -> f
    com.ibm.icu.text.RuleBasedCollator$FCDUTF16NFDIterator leftFCDUTF16NFDIter -> g
    com.ibm.icu.text.RuleBasedCollator$FCDUTF16NFDIterator rightFCDUTF16NFDIter -> h
    com.ibm.icu.text.RawCollationKey rawCollationKey -> i
    1779:1788:void <init>(com.ibm.icu.impl.coll.CollationData) -> <init>
    1778:1778:void <init>(com.ibm.icu.impl.coll.CollationData,byte) -> <init>
com.ibm.icu.text.RuleBasedCollator$CollationKeyByteSink -> com.ibm.icu.text.dr:
    com.ibm.icu.text.RawCollationKey key_ -> a
    1121:1123:void <init>(com.ibm.icu.text.RawCollationKey) -> <init>
    1128:1131:void AppendBeyondCapacity(byte[],int,int,int) -> AppendBeyondCapacity
    1135:1149:boolean Resize(int,int) -> Resize
    1119:1119:com.ibm.icu.text.RawCollationKey access$100(com.ibm.icu.text.RuleBasedCollator$CollationKeyByteSink) -> a
com.ibm.icu.text.RuleBasedCollator$FCDUTF16NFDIterator -> com.ibm.icu.text.ds:
    java.lang.StringBuilder str -> c
    1585:1585:void <init>() -> <init>
    1587:1604:void setText(com.ibm.icu.impl.Normalizer2Impl,java.lang.CharSequence,int) -> a
com.ibm.icu.text.RuleBasedCollator$NFDIterator -> com.ibm.icu.text.dt:
    java.lang.String decomp -> a
    int index -> b
    1517:1517:void <init>() -> <init>
    1519:1520:void reset() -> a
    1528:1537:int nextCodePoint() -> b
    1546:1551:int nextDecomposedCodePoint(com.ibm.icu.impl.Normalizer2Impl,int) -> a
    int nextRawCodePoint() -> c
com.ibm.icu.text.RuleBasedCollator$UTF16NFDIterator -> com.ibm.icu.text.du:
    java.lang.CharSequence s -> a
    int pos -> b
    1565:1565:void <init>() -> <init>
    1567:1570:void setText(java.lang.CharSequence,int) -> a
    1574:1577:int nextRawCodePoint() -> c
com.ibm.icu.text.RuleBasedNumberFormat -> com.ibm.icu.text.RuleBasedNumberFormat:
    long serialVersionUID -> serialVersionUID
    int SPELLOUT -> SPELLOUT
    int ORDINAL -> ORDINAL
    int DURATION -> DURATION
    int NUMBERING_SYSTEM -> NUMBERING_SYSTEM
    com.ibm.icu.text.NFRuleSet[] ruleSets -> a
    java.util.Map ruleSetsMap -> b
    com.ibm.icu.text.NFRuleSet defaultRuleSet -> c
    com.ibm.icu.util.ULocale locale -> d
    int roundingMode -> e
    com.ibm.icu.text.RbnfLenientScannerProvider scannerProvider -> f
    boolean lookedForScanner -> g
    com.ibm.icu.text.DecimalFormatSymbols decimalFormatSymbols -> h
    com.ibm.icu.text.DecimalFormat decimalFormat -> i
    com.ibm.icu.text.NFRule defaultInfinityRule -> j
    com.ibm.icu.text.NFRule defaultNaNRule -> k
    boolean lenientParse -> l
    java.lang.String lenientParseRules -> m
    java.lang.String postProcessRules -> n
    com.ibm.icu.text.RBNFPostProcessor postProcessor -> o
    java.util.Map ruleSetDisplayNames -> p
    java.lang.String[] publicRuleSetNames -> q
    boolean capitalizationInfoIsSet -> r
    boolean capitalizationForListOrMenu -> s
    boolean capitalizationForStandAlone -> t
    com.ibm.icu.text.BreakIterator capitalizationBrkIter -> u
    boolean DEBUG -> v
    java.lang.String[] rulenames -> w
    java.lang.String[] locnames -> x
    577:701:void <init>(java.lang.String) -> <init>
    577:728:void <init>(java.lang.String,java.lang.String[][]) -> <init>
    744:745:void <init>(java.lang.String,java.util.Locale) -> <init>
    577:763:void <init>(java.lang.String,com.ibm.icu.util.ULocale) -> <init>
    577:793:void <init>(java.lang.String,java.lang.String[][],com.ibm.icu.util.ULocale) -> <init>
    808:809:void <init>(java.util.Locale,int) -> <init>
    577:862:void <init>(com.ibm.icu.util.ULocale,int) -> <init>
    884:885:void <init>(int) -> <init>
    897:897:java.lang.Object clone() -> clone
    912:934:boolean equals(java.lang.Object) -> equals
    946:946:int hashCode() -> hashCode
    961:965:java.lang.String toString() -> toString
    976:979:void writeObject(java.io.ObjectOutputStream) -> writeObject
    989:1016:void readObject(java.io.ObjectInputStream) -> readObject
    1029:1029:java.lang.String[] getRuleSetNames() -> getRuleSetNames
    1039:1049:com.ibm.icu.util.ULocale[] getRuleSetDisplayNameLocales() -> getRuleSetDisplayNameLocales
    1053:1065:java.lang.String[] getNameListForLocale(com.ibm.icu.util.ULocale) -> a
    1079:1087:java.lang.String[] getRuleSetDisplayNames(com.ibm.icu.util.ULocale) -> getRuleSetDisplayNames
    1098:1098:java.lang.String[] getRuleSetDisplayNames() -> getRuleSetDisplayNames
    1111:1121:java.lang.String getRuleSetDisplayName(java.lang.String,com.ibm.icu.util.ULocale) -> getRuleSetDisplayName
    1132:1132:java.lang.String getRuleSetDisplayName(java.lang.String) -> getRuleSetDisplayName
    1144:1147:java.lang.String format(double,java.lang.String) -> format
    1163:1166:java.lang.String format(long,java.lang.String) -> format
    1185:1191:java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition) -> format
    1213:1219:java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition) -> format
    1231:1231:java.lang.StringBuffer format(java.math.BigInteger,java.lang.StringBuffer,java.text.FieldPosition) -> format
    1243:1243:java.lang.StringBuffer format(java.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition) -> format
    1256:1256:java.lang.StringBuffer format(com.ibm.icu.math.BigDecimal,java.lang.StringBuffer,java.text.FieldPosition) -> format
    1281:1330:java.lang.Number parse(java.lang.String,java.text.ParsePosition) -> parse
    1348:1349:void setLenientParseMode(boolean) -> setLenientParseMode
    1359:1359:boolean lenientParseEnabled() -> lenientParseEnabled
    1372:1373:void setLenientScannerProvider(com.ibm.icu.text.RbnfLenientScannerProvider) -> setLenientScannerProvider
    1387:1399:com.ibm.icu.text.RbnfLenientScannerProvider getLenientScannerProvider() -> getLenientScannerProvider
    1410:1440:void setDefaultRuleSet(java.lang.String) -> setDefaultRuleSet
    1448:1451:java.lang.String getDefaultRuleSetName() -> getDefaultRuleSetName
    1463:1482:void setDecimalFormatSymbols(com.ibm.icu.text.DecimalFormatSymbols) -> setDecimalFormatSymbols
    1495:1506:void setContext(com.ibm.icu.text.DisplayContext) -> setContext
    1519:1519:int getRoundingMode() -> getRoundingMode
    1535:1540:void setRoundingMode(int) -> setRoundingMode
    1554:1554:com.ibm.icu.text.NFRuleSet getDefaultRuleSet() -> a
    1564:1570:com.ibm.icu.text.RbnfLenientScanner getLenientScanner() -> b
    1584:1587:com.ibm.icu.text.DecimalFormatSymbols getDecimalFormatSymbols() -> c
    1591:1596:com.ibm.icu.text.DecimalFormat getDecimalFormat() -> d
    1600:1600:com.ibm.icu.text.PluralFormat createPluralFormat(com.ibm.icu.text.PluralRules$PluralType,java.lang.String) -> a
    1608:1611:com.ibm.icu.text.NFRule getDefaultInfinityRule() -> e
    1619:1622:com.ibm.icu.text.NFRule getDefaultNaNRule() -> f
    1641:1669:java.lang.String extractSpecial(java.lang.StringBuilder,java.lang.String) -> a
    1681:1813:void init(java.lang.String,java.lang.String[][]) -> a
    1820:1840:void initLocalizations(java.lang.String[][]) -> a
    1846:1857:void initCapitalizationContextInfo(com.ibm.icu.util.ULocale) -> b
    1869:1909:java.lang.StringBuilder stripWhitespace(java.lang.String) -> b
    1930:1937:java.lang.String format(double,com.ibm.icu.text.NFRuleSet) -> a
    1959:1962:java.lang.String format(long,com.ibm.icu.text.NFRuleSet) -> a
    1969:1993:void postProcess(java.lang.StringBuffer,com.ibm.icu.text.NFRuleSet) -> a
    1999:2012:java.lang.String adjustForContext(java.lang.String) -> c
    2022:2026:com.ibm.icu.text.NFRuleSet findRuleSet(java.lang.String) -> a
    683:867:void <clinit>() -> <clinit>
com.ibm.icu.text.RuleBasedTransliterator -> com.ibm.icu.text.RuleBasedTransliterator:
    com.ibm.icu.text.RuleBasedTransliterator$Data data -> a
    318:321:void <init>(java.lang.String,com.ibm.icu.text.RuleBasedTransliterator$Data,com.ibm.icu.text.UnicodeFilter) -> <init>
    355:368:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    447:447:java.lang.String toRules(boolean) -> toRules
    473:474:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
    483:487:com.ibm.icu.text.Transliterator safeClone() -> safeClone
com.ibm.icu.text.RuleBasedTransliterator$Data -> com.ibm.icu.text.dv:
    com.ibm.icu.text.TransliterationRuleSet ruleSet -> a
    java.util.Map variableNames -> b
    java.lang.Object[] variables -> c
    char variablesBase -> d
    372:375:void <init>() -> <init>
    416:417:com.ibm.icu.text.UnicodeMatcher lookupMatcher(int) -> a
    426:427:com.ibm.icu.text.UnicodeReplacer lookupReplacer(int) -> b
com.ibm.icu.text.SCSU -> com.ibm.icu.text.dw:
    int[] sOffsetTable -> a
    int[] sOffsets -> b
    136:172:void <clinit>() -> <clinit>
com.ibm.icu.text.SameValueSubstitution -> com.ibm.icu.text.dx:
    558:562:void <init>(int,com.ibm.icu.text.NFRuleSet,java.lang.String) -> <init>
    573:573:long transformNumber(long) -> a
    581:581:double transformNumber(double) -> a
    598:598:double composeRuleValue(double,double) -> a
    607:607:double calcUpperBound(double) -> b
    619:619:char tokenChar() -> a
com.ibm.icu.text.ScientificNumberFormatter -> com.ibm.icu.text.ScientificNumberFormatter:
    java.lang.String preExponent -> a
    com.ibm.icu.text.DecimalFormat fmt -> b
    com.ibm.icu.text.ScientificNumberFormatter$Style style -> c
    com.ibm.icu.text.ScientificNumberFormatter$Style SUPER_SCRIPT -> d
    52:52:com.ibm.icu.text.ScientificNumberFormatter getSuperscriptInstance(com.ibm.icu.util.ULocale) -> getSuperscriptInstance
    68:68:com.ibm.icu.text.ScientificNumberFormatter getSuperscriptInstance(com.ibm.icu.text.DecimalFormat) -> getSuperscriptInstance
    86:86:com.ibm.icu.text.ScientificNumberFormatter getMarkupInstance(com.ibm.icu.util.ULocale,java.lang.String,java.lang.String) -> getMarkupInstance
    107:107:com.ibm.icu.text.ScientificNumberFormatter getMarkupInstance(com.ibm.icu.text.DecimalFormat,java.lang.String,java.lang.String) -> getMarkupInstance
    121:125:java.lang.String format(java.lang.Object) -> format
    305:309:java.lang.String getPreExponent(com.ibm.icu.text.DecimalFormatSymbols) -> a
    314:315:com.ibm.icu.text.ScientificNumberFormatter getInstance(com.ibm.icu.text.DecimalFormat,com.ibm.icu.text.ScientificNumberFormatter$Style) -> a
    321:323:com.ibm.icu.text.ScientificNumberFormatter getInstanceForLocale(com.ibm.icu.util.ULocale,com.ibm.icu.text.ScientificNumberFormatter$Style) -> a
    332:336:void <init>(com.ibm.icu.text.DecimalFormat,java.lang.String,com.ibm.icu.text.ScientificNumberFormatter$Style) -> <init>
    329:329:void <clinit>() -> <clinit>
com.ibm.icu.text.ScientificNumberFormatter$MarkupStyle -> com.ibm.icu.text.dy:
    java.lang.String beginMarkup -> a
    java.lang.String endMarkup -> b
    157:160:void <init>(java.lang.String,java.lang.String) -> <init>
    166:198:java.lang.String format(java.text.AttributedCharacterIterator,java.lang.String) -> a
com.ibm.icu.text.ScientificNumberFormatter$Style -> com.ibm.icu.text.dz:
    132:132:void <init>() -> <init>
    java.lang.String format(java.text.AttributedCharacterIterator,java.lang.String) -> a
    142:149:void append(java.text.AttributedCharacterIterator,int,int,java.lang.StringBuilder) -> a
    132:132:void <init>(byte) -> <init>
com.ibm.icu.text.ScientificNumberFormatter$SuperscriptStyle -> com.ibm.icu.text.dA:
    char[] SUPERSCRIPT_DIGITS -> a
    202:202:void <init>() -> <init>
    215:270:java.lang.String format(java.text.AttributedCharacterIterator,java.lang.String) -> a
    275:286:void copyAsSuperscript(java.text.AttributedCharacterIterator,int,int,java.lang.StringBuilder) -> b
    289:299:int char32AtAndAdvance(java.text.AttributedCharacterIterator) -> a
    202:202:void <init>(byte) -> <init>
    204:204:void <clinit>() -> <clinit>
com.ibm.icu.text.SearchIterator -> com.ibm.icu.text.SearchIterator:
    com.ibm.icu.text.BreakIterator breakIterator -> breakIterator
    java.text.CharacterIterator targetText -> targetText
    int matchLength -> matchLength
    com.ibm.icu.text.SearchIterator$Search search_ -> a
    int DONE -> DONE
    187:196:void setIndex(int) -> setIndex
    209:210:void setOverlapping(boolean) -> setOverlapping
    227:235:void setBreakIterator(com.ibm.icu.text.BreakIterator) -> setBreakIterator
    250:268:void setTarget(java.text.CharacterIterator) -> setTarget
    293:293:int getMatchStart() -> getMatchStart
    int getIndex() -> getIndex
    323:323:int getMatchLength() -> getMatchLength
    339:339:com.ibm.icu.text.BreakIterator getBreakIterator() -> getBreakIterator
    348:348:java.text.CharacterIterator getTarget() -> getTarget
    367:379:java.lang.String getMatchedText() -> getMatchedText
    399:434:int next() -> next
    452:489:int previous() -> previous
    501:501:boolean isOverlapping() -> isOverlapping
    517:524:void reset() -> reset
    541:543:int first() -> first
    563:564:int following(int) -> following
    581:583:int last() -> last
    609:610:int preceding(int) -> preceding
    158:651:void <init>(java.text.CharacterIterator,com.ibm.icu.text.BreakIterator) -> <init>
    668:669:void setMatchLength(int) -> setMatchLength
    int handleNext(int) -> handleNext
    int handlePrevious(int) -> handlePrevious
    718:720:void setMatchNotFound() -> setMatchNotFound
    787:788:void setElementComparisonType(com.ibm.icu.text.SearchIterator$ElementComparisonType) -> setElementComparisonType
    798:798:com.ibm.icu.text.SearchIterator$ElementComparisonType getElementComparisonType() -> getElementComparisonType
com.ibm.icu.text.SearchIterator$ElementComparisonType -> com.ibm.icu.text.SearchIterator$ElementComparisonType:
    com.ibm.icu.text.SearchIterator$ElementComparisonType STANDARD_ELEMENT_COMPARISON -> STANDARD_ELEMENT_COMPARISON
    com.ibm.icu.text.SearchIterator$ElementComparisonType PATTERN_BASE_WEIGHT_IS_WILDCARD -> PATTERN_BASE_WEIGHT_IS_WILDCARD
    com.ibm.icu.text.SearchIterator$ElementComparisonType ANY_BASE_WEIGHT_IS_WILDCARD -> ANY_BASE_WEIGHT_IS_WILDCARD
    com.ibm.icu.text.SearchIterator$ElementComparisonType[] $VALUES -> a
    737:737:com.ibm.icu.text.SearchIterator$ElementComparisonType[] values() -> values
    737:737:com.ibm.icu.text.SearchIterator$ElementComparisonType valueOf(java.lang.String) -> valueOf
    737:737:void <init>(java.lang.String,int) -> <init>
    737:774:void <clinit>() -> <clinit>
com.ibm.icu.text.SearchIterator$Search -> com.ibm.icu.text.dB:
    boolean isOverlap_ -> a
    boolean isCanonicalMatch_ -> b
    com.ibm.icu.text.SearchIterator$ElementComparisonType elementComparisonType_ -> c
    com.ibm.icu.text.BreakIterator internalBreakIter_ -> d
    int matchedIndex_ -> e
    boolean isForwardSearching_ -> f
    boolean reset_ -> g
    com.ibm.icu.text.SearchIterator this$0 -> h
    96:96:void <init>(com.ibm.icu.text.SearchIterator) -> <init>
    99:99:java.text.CharacterIterator text() -> a
    103:104:void setTarget(java.text.CharacterIterator) -> a
    117:117:com.ibm.icu.text.BreakIterator breakIter() -> b
    121:122:void setBreakIter(com.ibm.icu.text.BreakIterator) -> a
    127:127:int matchedLength() -> c
    131:132:void setMatchedLength(int) -> a
    144:147:int beginIndex() -> d
    151:154:int endIndex() -> e
com.ibm.icu.text.SelectFormat -> com.ibm.icu.text.SelectFormat:
    long serialVersionUID -> serialVersionUID
    java.lang.String pattern -> a
    com.ibm.icu.text.MessagePattern msgPattern -> b
    boolean $assertionsDisabled -> c
    158:172:void <init>(java.lang.String) -> <init>
    178:182:void reset() -> a
    193:203:void applyPattern(java.lang.String) -> applyPattern
    212:212:java.lang.String toPattern() -> toPattern
    223:242:int findSubMessage(com.ibm.icu.text.MessagePattern,int,java.lang.String) -> a
    255:300:java.lang.String format(java.lang.String) -> format
    318:323:java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    337:337:java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    346:353:boolean equals(java.lang.Object) -> equals
    362:365:int hashCode() -> hashCode
    374:374:java.lang.String toString() -> toString
    379:383:void readObject(java.io.ObjectInputStream) -> readObject
    151:151:void <clinit>() -> <clinit>
com.ibm.icu.text.SimpleDateFormat -> com.ibm.icu.text.SimpleDateFormat:
    long serialVersionUID -> serialVersionUID
    boolean DelayedHebrewMonthCheck -> a
    int[] CALENDAR_FIELD_TO_LEVEL -> b
    int[] PATTERN_CHAR_TO_LEVEL -> c
    boolean[] PATTERN_CHAR_IS_SYNTAX -> d
    int serialVersionOnStream -> e
    java.lang.String pattern -> f
    java.lang.String override -> g
    java.util.HashMap numberFormatters -> h
    java.util.HashMap overrideMap -> i
    com.ibm.icu.text.DateFormatSymbols formatData -> j
    com.ibm.icu.util.ULocale locale -> k
    java.util.Date defaultCenturyStart -> l
    int defaultCenturyStartYear -> m
    long defaultCenturyBase -> n
    boolean useFastFormat -> o
    com.ibm.icu.text.TimeZoneFormat tzFormat -> p
    com.ibm.icu.text.BreakIterator capitalizationBrkIter -> q
    com.ibm.icu.util.ULocale cachedDefaultLocale -> r
    java.lang.String cachedDefaultPattern -> s
    int[] PATTERN_CHAR_TO_INDEX -> t
    int[] PATTERN_INDEX_TO_CALENDAR_FIELD -> u
    int[] PATTERN_INDEX_TO_DATE_FORMAT_FIELD -> v
    com.ibm.icu.text.DateFormat$Field[] PATTERN_INDEX_TO_DATE_FORMAT_ATTRIBUTE -> w
    com.ibm.icu.impl.ICUCache PARSED_PATTERN_CACHE -> x
    java.lang.Object[] patternItems -> y
    boolean useLocalZeroPaddingNumberFormat -> z
    char[] decDigits -> A
    char[] decimalBuf -> B
    com.ibm.icu.text.UnicodeSet DATE_PATTERN_TYPE -> C
    779:779:int getLevelFromChar(char) -> a
    822:822:boolean isSyntaxChar(char) -> b
    962:963:void <init>() -> <init>
    974:975:void <init>(java.lang.String) -> <init>
    985:986:void <init>(java.lang.String,java.util.Locale) -> <init>
    996:997:void <init>(java.lang.String,com.ibm.icu.util.ULocale) -> <init>
    1014:1015:void <init>(java.lang.String,java.lang.String,com.ibm.icu.util.ULocale) -> <init>
    1025:1026:void <init>(java.lang.String,com.ibm.icu.text.DateFormatSymbols) -> <init>
    1035:1036:void <init>(java.lang.String,com.ibm.icu.text.DateFormatSymbols,com.ibm.icu.util.ULocale) -> <init>
    1046:1047:void <init>(java.lang.String,com.ibm.icu.text.DateFormatSymbols,com.ibm.icu.util.Calendar,com.ibm.icu.util.ULocale,boolean,java.lang.String) -> <init>
    845:1062:void <init>(java.lang.String,com.ibm.icu.text.DateFormatSymbols,com.ibm.icu.util.Calendar,com.ibm.icu.text.NumberFormat,com.ibm.icu.util.ULocale,boolean,java.lang.String) -> <init>
    1074:1077:com.ibm.icu.text.SimpleDateFormat getInstance(com.ibm.icu.util.Calendar$FormatConfiguration) -> getInstance
    1090:1120:void initialize() -> b
    1129:1149:void initializeTimeZoneFormat(boolean) -> a
    1156:1159:com.ibm.icu.text.TimeZoneFormat tzFormat() -> c
    1172:1190:java.lang.String getDefaultPattern() -> d
    1197:1200:void parseAmbiguousDatesAsAfter(java.util.Date) -> a
    1206:1214:void initializeDefaultCenturyStart(long) -> a
    1218:1222:java.util.Date getDefaultCenturyStart() -> e
    1227:1231:int getDefaultCenturyStartYear() -> f
    1242:1243:void set2DigitYearStart(java.util.Date) -> set2DigitYearStart
    1253:1253:java.util.Date get2DigitYearStart() -> get2DigitYearStart
    1266:1272:void setContext(com.ibm.icu.text.DisplayContext) -> setContext
    1289:1304:java.lang.StringBuffer format(com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition) -> format
    1312:1351:java.lang.StringBuffer format(com.ibm.icu.util.Calendar,com.ibm.icu.text.DisplayContext,java.lang.StringBuffer,java.text.FieldPosition,java.util.List) -> a
    1376:1376:int getIndexFromChar(char) -> c
    1456:1460:com.ibm.icu.text.DateFormat$Field patternCharToDateFormatField(char) -> patternCharToDateFormatField
    1481:1481:java.lang.String subFormat(char,int,int,java.text.FieldPosition,com.ibm.icu.text.DateFormatSymbols,com.ibm.icu.util.Calendar) -> subFormat
    1497:1499:java.lang.String subFormat(char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar) -> subFormat
    1522:1909:void subFormat(java.lang.StringBuffer,char,int,int,int,com.ibm.icu.text.DisplayContext,java.text.FieldPosition,com.ibm.icu.util.Calendar) -> subFormat
    1912:1915:void safeAppend(java.lang.String[],int,java.lang.StringBuffer) -> a
    1918:1925:void safeAppendWithMonthPattern(java.lang.String[],int,java.lang.StringBuffer,java.lang.String) -> a
    1951:2028:java.lang.Object[] getPatternItems() -> g
    2043:2050:void zeroPaddingNumber(com.ibm.icu.text.NumberFormat,java.lang.StringBuffer,int,int,int) -> zeroPaddingNumber
    2061:2071:void setNumberFormat(com.ibm.icu.text.NumberFormat) -> setNumberFormat
    2078:2091:void initLocalZeroPaddingNumberFormat() -> h
    2111:2133:void fastZeroPaddingNumber(java.lang.StringBuffer,int,int,int) -> a
    2141:2143:java.lang.String zeroPaddingNumber(long,int,int) -> zeroPaddingNumber
    2162:2162:boolean isNumeric(char,int) -> b
    2173:2530:void parse(java.lang.String,com.ibm.icu.util.Calendar,java.text.ParsePosition) -> parse
    2542:2610:int matchLiteral(java.lang.String,int,java.lang.Object[],int,boolean[]) -> a
    2635:2635:int matchString(java.lang.String,int,int,java.lang.String[],com.ibm.icu.util.Calendar) -> matchString
    2661:2711:int matchString(java.lang.String,int,int,java.lang.String[],java.lang.String,com.ibm.icu.util.Calendar) -> a
    2715:2724:int regionMatchesWithOptionalDot(java.lang.String,int,java.lang.String,int) -> a
    2746:2772:int matchQuarterString(java.lang.String,int,int,java.lang.String[],com.ibm.icu.util.Calendar) -> matchQuarterString
    2799:2799:int subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],com.ibm.icu.util.Calendar) -> subParse
    2833:3382:int subParse(java.lang.String,int,char,int,boolean,boolean,boolean[],com.ibm.icu.util.Calendar,com.ibm.icu.text.MessageFormat,com.ibm.icu.util.Output) -> a
    3391:3399:boolean allowNumericFallback(int) -> b
    3410:3410:java.lang.Number parseInt(java.lang.String,java.text.ParsePosition,boolean,com.ibm.icu.text.NumberFormat) -> a
    3422:3458:java.lang.Number parseInt(java.lang.String,int,java.text.ParsePosition,boolean,com.ibm.icu.text.NumberFormat) -> a
    3467:3491:java.lang.String translatePattern(java.lang.String,java.lang.String,java.lang.String) -> a
    3499:3499:java.lang.String toPattern() -> toPattern
    3507:3507:java.lang.String toLocalizedPattern() -> toLocalizedPattern
    3518:3522:void applyPattern(java.lang.String) -> applyPattern
    3529:3533:void applyLocalizedPattern(java.lang.String) -> applyLocalizedPattern
    3543:3543:com.ibm.icu.text.DateFormatSymbols getDateFormatSymbols() -> getDateFormatSymbols
    3553:3554:void setDateFormatSymbols(com.ibm.icu.text.DateFormatSymbols) -> setDateFormatSymbols
    3561:3561:com.ibm.icu.text.DateFormatSymbols getSymbols() -> getSymbols
    3573:3573:com.ibm.icu.text.TimeZoneFormat getTimeZoneFormat() -> getTimeZoneFormat
    3583:3590:void setTimeZoneFormat(com.ibm.icu.text.TimeZoneFormat) -> setTimeZoneFormat
    3597:3604:java.lang.Object clone() -> clone
    3614:3614:int hashCode() -> hashCode
    3624:3626:boolean equals(java.lang.Object) -> equals
    3635:3643:void writeObject(java.io.ObjectOutputStream) -> writeObject
    3651:3689:void readObject(java.io.ObjectInputStream) -> readObject
    3701:3725:java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object) -> formatToCharacterIterator
    3736:3736:com.ibm.icu.util.ULocale getLocale() -> a
    3752:3752:boolean isFieldUnitIgnored(int) -> a
    3767:3801:boolean isFieldUnitIgnored(java.lang.String,int) -> a
    3831:3965:java.lang.StringBuffer intervalFormatByAlgorithm(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,java.lang.StringBuffer,java.text.FieldPosition) -> intervalFormatByAlgorithm
    3988:4008:boolean diffCalFieldValue(com.ibm.icu.util.Calendar,com.ibm.icu.util.Calendar,java.lang.Object[],int) -> a
    4028:4043:boolean lowerLevel(java.lang.Object[],int,int) -> a
    4060:4084:void setNumberFormat(java.lang.String,com.ibm.icu.text.NumberFormat) -> setNumberFormat
    4095:4101:com.ibm.icu.text.NumberFormat getNumberFormat(char) -> getNumberFormat
    4107:4111:void initNumberFormatters(com.ibm.icu.util.ULocale) -> a
    4115:4164:void processOverrideString(com.ibm.icu.util.ULocale,java.lang.String) -> a
    715:715:boolean access$000(char,int) -> a
    727:2613:void <clinit>() -> <clinit>
com.ibm.icu.text.SimpleDateFormat$1 -> com.ibm.icu.text.dC:
    int[] $SwitchMap$com$ibm$icu$text$DisplayContext -> a
    1871:1871:void <clinit>() -> <clinit>
com.ibm.icu.text.SimpleDateFormat$PatternItem -> com.ibm.icu.text.dD:
    char type -> a
    int length -> b
    boolean isNumeric -> c
    1935:1939:void <init>(char,int) -> <init>
com.ibm.icu.text.SourceTargetUtility -> com.ibm.icu.text.dE:
    com.ibm.icu.text.Transform transform -> a
    com.ibm.icu.text.UnicodeSet sourceCache -> b
    java.util.Set sourceStrings -> c
    com.ibm.icu.text.Normalizer2 NFC -> d
    26:27:void <init>(com.ibm.icu.text.Transform) -> <init>
    29:112:void <init>(com.ibm.icu.text.Transform,com.ibm.icu.text.Normalizer2) -> <init>
    116:131:void addSourceTargetSet(com.ibm.icu.text.Transliterator,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> a
    21:22:void <clinit>() -> <clinit>
com.ibm.icu.text.SpoofChecker -> com.ibm.icu.text.SpoofChecker:
    com.ibm.icu.text.UnicodeSet INCLUSION -> INCLUSION
    com.ibm.icu.text.UnicodeSet RECOMMENDED -> RECOMMENDED
    int SINGLE_SCRIPT_CONFUSABLE -> SINGLE_SCRIPT_CONFUSABLE
    int MIXED_SCRIPT_CONFUSABLE -> MIXED_SCRIPT_CONFUSABLE
    int WHOLE_SCRIPT_CONFUSABLE -> WHOLE_SCRIPT_CONFUSABLE
    int ANY_CASE -> ANY_CASE
    int RESTRICTION_LEVEL -> RESTRICTION_LEVEL
    int SINGLE_SCRIPT -> SINGLE_SCRIPT
    int INVISIBLE -> INVISIBLE
    int CHAR_LIMIT -> CHAR_LIMIT
    int MIXED_NUMBERS -> MIXED_NUMBERS
    int ALL_CHECKS -> ALL_CHECKS
    com.ibm.icu.text.IdentifierInfo fCachedIdentifierInfo -> a
    int fChecks -> b
    com.ibm.icu.text.SpoofChecker$SpoofData fSpoofData -> c
    java.util.Set fAllowedLocales -> d
    com.ibm.icu.text.UnicodeSet fAllowedCharsSet -> e
    com.ibm.icu.text.SpoofChecker$RestrictionLevel fRestrictionLevel -> f
    com.ibm.icu.text.Normalizer2 nfdNormalizer -> g
    boolean $assertionsDisabled -> h
    391:2115:void <init>() -> <init>
    1466:1466:com.ibm.icu.text.SpoofChecker$RestrictionLevel getRestrictionLevel() -> getRestrictionLevel
    1476:1476:int getChecks() -> getChecks
    1493:1493:java.util.Set getAllowedLocales() -> getAllowedLocales
    1504:1508:java.util.Set getAllowedJavaLocales() -> getAllowedJavaLocales
    1522:1522:com.ibm.icu.text.UnicodeSet getAllowedChars() -> getAllowedChars
    1631:1761:boolean failsChecks(java.lang.String,com.ibm.icu.text.SpoofChecker$CheckResult) -> failsChecks
    1774:1774:boolean failsChecks(java.lang.String) -> failsChecks
    1805:1859:int areConfusable(java.lang.String,java.lang.String) -> areConfusable
    1889:1921:java.lang.String getSkeleton(int,java.lang.String) -> getSkeleton
    1938:1959:boolean equals(java.lang.Object) -> equals
    1970:1971:int hashCode() -> hashCode
    1984:2075:void confusableLookup(int,int,java.lang.StringBuilder) -> a
    2085:2108:void wholeScriptCheck(java.lang.CharSequence,com.ibm.icu.text.SpoofChecker$ScriptSet) -> a
    2118:2126:com.ibm.icu.text.IdentifierInfo getIdentifierInfo() -> a
    2131:2138:void releaseIdentifierInfo(com.ibm.icu.text.IdentifierInfo) -> a
    2204:2204:int getKeyLength(int) -> a
    147:147:int access$000(com.ibm.icu.text.SpoofChecker) -> a
    147:147:com.ibm.icu.text.SpoofChecker$SpoofData access$100(com.ibm.icu.text.SpoofChecker) -> b
    147:147:com.ibm.icu.text.UnicodeSet access$200(com.ibm.icu.text.SpoofChecker) -> c
    147:147:java.util.Set access$300(com.ibm.icu.text.SpoofChecker) -> d
    147:147:com.ibm.icu.text.SpoofChecker$RestrictionLevel access$400(com.ibm.icu.text.SpoofChecker) -> e
    147:147:void <init>(byte) -> <init>
    147:147:int access$002(com.ibm.icu.text.SpoofChecker,int) -> a
    147:147:com.ibm.icu.text.SpoofChecker$SpoofData access$102(com.ibm.icu.text.SpoofChecker,com.ibm.icu.text.SpoofChecker$SpoofData) -> a
    147:147:com.ibm.icu.text.UnicodeSet access$202(com.ibm.icu.text.SpoofChecker,com.ibm.icu.text.UnicodeSet) -> a
    147:147:java.util.Set access$302(com.ibm.icu.text.SpoofChecker,java.util.Set) -> a
    147:147:com.ibm.icu.text.SpoofChecker$RestrictionLevel access$402(com.ibm.icu.text.SpoofChecker,com.ibm.icu.text.SpoofChecker$RestrictionLevel) -> a
    147:2147:void <clinit>() -> <clinit>
com.ibm.icu.text.SpoofChecker$Builder -> com.ibm.icu.text.SpoofChecker$Builder:
    int fChecks -> a
    com.ibm.icu.text.SpoofChecker$SpoofData fSpoofData -> b
    com.ibm.icu.text.UnicodeSet fAllowedCharsSet -> c
    java.util.Set fAllowedLocales -> d
    com.ibm.icu.text.SpoofChecker$RestrictionLevel fRestrictionLevel -> e
    403:419:void <init>() -> <init>
    403:437:void <init>(com.ibm.icu.text.SpoofChecker) -> <init>
    446:467:com.ibm.icu.text.SpoofChecker build() -> build
    492:495:com.ibm.icu.text.SpoofChecker$Builder setData(java.io.Reader,java.io.Reader) -> setData
    510:514:com.ibm.icu.text.SpoofChecker$Builder setChecks(int) -> setChecks
    546:575:com.ibm.icu.text.SpoofChecker$Builder setAllowedLocales(java.util.Set) -> setAllowedLocales
    590:594:com.ibm.icu.text.SpoofChecker$Builder setAllowedJavaLocales(java.util.Set) -> setAllowedJavaLocales
    601:608:void addScriptChars(com.ibm.icu.util.ULocale,com.ibm.icu.text.UnicodeSet) -> a
    625:628:com.ibm.icu.text.SpoofChecker$Builder setAllowedChars(com.ibm.icu.text.UnicodeSet) -> setAllowedChars
    642:644:com.ibm.icu.text.SpoofChecker$Builder setRestrictionLevel(com.ibm.icu.text.SpoofChecker$RestrictionLevel) -> setRestrictionLevel
com.ibm.icu.text.SpoofChecker$Builder$ConfusabledataBuilder -> com.ibm.icu.text.dF:
    java.util.Hashtable fSLTable -> a
    java.util.Hashtable fSATable -> b
    java.util.Hashtable fMLTable -> c
    java.util.Hashtable fMATable -> d
    com.ibm.icu.text.UnicodeSet fKeySet -> e
    java.lang.StringBuffer fStringTable -> f
    java.util.ArrayList fKeyVec -> g
    java.util.ArrayList fValueVec -> h
    java.util.ArrayList fStringLengthsTable -> i
    com.ibm.icu.text.SpoofChecker$Builder$ConfusabledataBuilder$SPUStringPool stringPool -> j
    java.util.regex.Pattern fParseLine -> k
    java.util.regex.Pattern fParseHexNum -> l
    int fLineNum -> m
    boolean $assertionsDisabled -> n
    1004:1013:void <init>() -> <init>
    1016:1248:void build(java.io.Reader,com.ibm.icu.text.SpoofChecker$SpoofData) -> b
    1262:1326:void addKeyEntry(int,java.util.Hashtable,int) -> a
    1331:1357:java.lang.String getMapping(int) -> a
    1366:1368:void buildConfusableData(java.io.Reader,com.ibm.icu.text.SpoofChecker$SpoofData) -> a
    984:984:void <clinit>() -> <clinit>
com.ibm.icu.text.SpoofChecker$Builder$ConfusabledataBuilder$SPUString -> com.ibm.icu.text.dG:
    java.lang.String fStr -> a
    int fStrTableIndex -> b
    1386:1389:void <init>(java.lang.String) -> <init>
com.ibm.icu.text.SpoofChecker$Builder$ConfusabledataBuilder$SPUStringComparator -> com.ibm.icu.text.dH:
    1396:1396:void <init>() -> <init>
    1398:1405:int compare(com.ibm.icu.text.SpoofChecker$Builder$ConfusabledataBuilder$SPUString,com.ibm.icu.text.SpoofChecker$Builder$ConfusabledataBuilder$SPUString) -> a
    1396:1396:int compare(java.lang.Object,java.lang.Object) -> compare
    1396:1396:void <init>(byte) -> <init>
com.ibm.icu.text.SpoofChecker$Builder$ConfusabledataBuilder$SPUStringPool -> com.ibm.icu.text.dI:
    java.util.Vector fVec -> a
    java.util.Hashtable fHash -> b
    1417:1420:void <init>() -> <init>
    1423:1423:int size() -> a
    1428:1429:com.ibm.icu.text.SpoofChecker$Builder$ConfusabledataBuilder$SPUString getByIndex(int) -> a
    1436:1442:com.ibm.icu.text.SpoofChecker$Builder$ConfusabledataBuilder$SPUString addString(java.lang.String) -> a
    1447:1448:void sort() -> b
com.ibm.icu.text.SpoofChecker$Builder$WSConfusableDataBuilder -> com.ibm.icu.text.dJ:
    java.lang.String parseExp -> a
    boolean $assertionsDisabled -> b
    699:708:void readWholeFileToString(java.io.Reader,java.lang.StringBuffer) -> a
    714:919:void buildWSConfusableData(java.io.Reader,com.ibm.icu.text.SpoofChecker$SpoofData) -> a
    666:681:void <clinit>() -> <clinit>
com.ibm.icu.text.SpoofChecker$Builder$WSConfusableDataBuilder$BuilderScriptSet -> com.ibm.icu.text.dK:
    int codePoint -> a
    com.ibm.icu.impl.Trie2Writable trie -> b
    com.ibm.icu.text.SpoofChecker$ScriptSet sset -> c
    int index -> d
    int rindex -> e
    941:947:void <init>() -> <init>
com.ibm.icu.text.SpoofChecker$CheckResult -> com.ibm.icu.text.SpoofChecker$CheckResult:
    int checks -> checks
    int position -> position
    com.ibm.icu.text.UnicodeSet numerics -> numerics
    com.ibm.icu.text.SpoofChecker$RestrictionLevel restrictionLevel -> restrictionLevel
    1568:1571:void <init>() -> <init>
    1579:1614:java.lang.String toString() -> toString
com.ibm.icu.text.SpoofChecker$RestrictionLevel -> com.ibm.icu.text.SpoofChecker$RestrictionLevel:
    com.ibm.icu.text.SpoofChecker$RestrictionLevel ASCII -> ASCII
    com.ibm.icu.text.SpoofChecker$RestrictionLevel SINGLE_SCRIPT_RESTRICTIVE -> SINGLE_SCRIPT_RESTRICTIVE
    com.ibm.icu.text.SpoofChecker$RestrictionLevel HIGHLY_RESTRICTIVE -> HIGHLY_RESTRICTIVE
    com.ibm.icu.text.SpoofChecker$RestrictionLevel MODERATELY_RESTRICTIVE -> MODERATELY_RESTRICTIVE
    com.ibm.icu.text.SpoofChecker$RestrictionLevel MINIMALLY_RESTRICTIVE -> MINIMALLY_RESTRICTIVE
    com.ibm.icu.text.SpoofChecker$RestrictionLevel UNRESTRICTIVE -> UNRESTRICTIVE
    com.ibm.icu.text.SpoofChecker$RestrictionLevel[] $VALUES -> a
    153:153:com.ibm.icu.text.SpoofChecker$RestrictionLevel[] values() -> values
    153:153:com.ibm.icu.text.SpoofChecker$RestrictionLevel valueOf(java.lang.String) -> valueOf
    153:153:void <init>(java.lang.String,int) -> <init>
    153:192:void <clinit>() -> <clinit>
com.ibm.icu.text.SpoofChecker$ScriptSet -> com.ibm.icu.text.dL:
    int[] bits -> a
    boolean $assertionsDisabled -> b
    2406:2492:void <init>() -> <init>
    2409:2492:void <init>(java.nio.ByteBuffer) -> <init>
    2422:2426:boolean equals(java.lang.Object) -> equals
    2430:2434:void Union(int) -> a
    2444:2447:void intersect(com.ibm.icu.text.SpoofChecker$ScriptSet) -> a
    2450:2461:void intersect(int) -> b
    2464:2467:void setAll() -> a
    2479:2489:int countMembers() -> b
    2405:2405:void <clinit>() -> <clinit>
com.ibm.icu.text.SpoofChecker$SpoofData -> com.ibm.icu.text.dM:
    int[] fCFUKeys -> a
    short[] fCFUValues -> b
    com.ibm.icu.text.SpoofChecker$SpoofData$SpoofStringLengthsElement[] fCFUStringLengths -> c
    java.lang.String fCFUStrings -> d
    com.ibm.icu.impl.Trie2 fAnyCaseTrie -> e
    com.ibm.icu.impl.Trie2 fLowerCaseTrie -> f
    com.ibm.icu.text.SpoofChecker$ScriptSet[] fScriptSets -> g
    com.ibm.icu.text.SpoofChecker$SpoofData$IsAcceptable IS_ACCEPTABLE -> h
    2275:2275:com.ibm.icu.text.SpoofChecker$SpoofData getDefault() -> a
    2280:2281:void <init>() -> <init>
    2285:2289:void <init>(java.nio.ByteBuffer) -> <init>
    2292:2309:boolean equals(java.lang.Object) -> equals
    2316:2393:void readData(java.nio.ByteBuffer) -> a
    2258:2258:void <clinit>() -> <clinit>
com.ibm.icu.text.SpoofChecker$SpoofData$DefaultData -> com.ibm.icu.text.dN:
    com.ibm.icu.text.SpoofChecker$SpoofData INSTANCE -> a
    2260:2260:com.ibm.icu.text.SpoofChecker$SpoofData access$800() -> a
    2261:2268:void <clinit>() -> <clinit>
com.ibm.icu.text.SpoofChecker$SpoofData$IsAcceptable -> com.ibm.icu.text.dO:
    2252:2252:void <init>() -> <init>
    2255:2255:boolean isDataVersionAcceptable(byte[]) -> isDataVersionAcceptable
    2252:2252:void <init>(byte) -> <init>
com.ibm.icu.text.SpoofChecker$SpoofData$SpoofStringLengthsElement -> com.ibm.icu.text.dP:
    int fLastString -> a
    int fStrLength -> b
    2237:2237:void <init>() -> <init>
    2241:2245:boolean equals(java.lang.Object) -> equals
com.ibm.icu.text.StringCharacterIterator -> com.ibm.icu.text.StringCharacterIterator:
    java.lang.String text -> a
    int begin -> b
    int end -> c
    int pos -> d
    46:47:void <init>(java.lang.String) -> <init>
    59:60:void <init>(java.lang.String,int) -> <init>
    73:90:void <init>(java.lang.String,int,int,int) -> <init>
    103:110:void setText(java.lang.String) -> setText
    120:121:char first() -> first
    132:137:char last() -> last
    148:152:char setIndex(int) -> setIndex
    163:167:char current() -> current
    179:185:char next() -> next
    197:202:char previous() -> previous
    214:214:int getBeginIndex() -> getBeginIndex
    225:225:int getEndIndex() -> getEndIndex
    236:236:int getIndex() -> getIndex
    249:267:boolean equals(java.lang.Object) -> equals
    278:278:int hashCode() -> hashCode
    290:295:java.lang.Object clone() -> clone
com.ibm.icu.text.StringMatcher -> com.ibm.icu.text.dQ:
    java.lang.String pattern -> a
    int matchStart -> b
    int matchLimit -> c
    int segmentNumber -> d
    com.ibm.icu.text.RuleBasedTransliterator$Data data -> e
    68:73:void <init>(java.lang.String,int,com.ibm.icu.text.RuleBasedTransliterator$Data) -> <init>
    93:94:void <init>(java.lang.String,int,int,int,com.ibm.icu.text.RuleBasedTransliterator$Data) -> <init>
    108:169:int matches(com.ibm.icu.text.Replaceable,int[],int,boolean) -> matches
    176:197:java.lang.String toPattern(boolean) -> toPattern
    204:209:boolean matchesIndexValue(int) -> matchesIndexValue
    220:229:void addMatchSetTo(com.ibm.icu.text.UnicodeSet) -> addMatchSetTo
    239:254:int replace(com.ibm.icu.text.Replaceable,int,int,int[]) -> a
    262:264:java.lang.String toReplacerPattern(boolean) -> a
    272:273:void resetMatch() -> a
    286:286:void addReplacementSetTo(com.ibm.icu.text.UnicodeSet) -> a
com.ibm.icu.text.StringPrep -> com.ibm.icu.text.StringPrep:
    int DEFAULT -> DEFAULT
    int ALLOW_UNASSIGNED -> ALLOW_UNASSIGNED
    int RFC3491_NAMEPREP -> RFC3491_NAMEPREP
    int RFC3530_NFS4_CS_PREP -> RFC3530_NFS4_CS_PREP
    int RFC3530_NFS4_CS_PREP_CI -> RFC3530_NFS4_CS_PREP_CI
    int RFC3530_NFS4_CIS_PREP -> RFC3530_NFS4_CIS_PREP
    int RFC3530_NFS4_MIXED_PREP_PREFIX -> RFC3530_NFS4_MIXED_PREP_PREFIX
    int RFC3530_NFS4_MIXED_PREP_SUFFIX -> RFC3530_NFS4_MIXED_PREP_SUFFIX
    int RFC3722_ISCSI -> RFC3722_ISCSI
    int RFC3920_NODEPREP -> RFC3920_NODEPREP
    int RFC3920_RESOURCEPREP -> RFC3920_RESOURCEPREP
    int RFC4011_MIB -> RFC4011_MIB
    int RFC4013_SASLPREP -> RFC4013_SASLPREP
    int RFC4505_TRACE -> RFC4505_TRACE
    int RFC4518_LDAP -> RFC4518_LDAP
    int RFC4518_LDAP_CI -> RFC4518_LDAP_CI
    java.lang.String[] PROFILE_NAMES -> a
    java.lang.ref.WeakReference[] CACHE -> b
    com.ibm.icu.impl.CharTrie sprepTrie -> c
    int[] indexes -> d
    char[] mappingData -> e
    com.ibm.icu.util.VersionInfo sprepUniVer -> f
    com.ibm.icu.util.VersionInfo normCorrVer -> g
    boolean doNFKC -> h
    boolean checkBiDi -> i
    com.ibm.icu.impl.UBiDiProps bdp -> j
    244:244:char getCodePointValue(int) -> a
    248:252:com.ibm.icu.util.VersionInfo getVersionInfo(int) -> b
    256:259:com.ibm.icu.util.VersionInfo getVersionInfo(byte[]) -> a
    273:274:void <init>(java.io.InputStream) -> <init>
    276:307:void <init>(java.nio.ByteBuffer) -> <init>
    316:344:com.ibm.icu.text.StringPrep getInstance(int) -> getInstance
    359:390:void getValues(char,com.ibm.icu.text.StringPrep$Values) -> a
    397:445:java.lang.StringBuffer map(com.ibm.icu.text.UCharacterIterator,int) -> a
    450:450:java.lang.StringBuffer normalize(java.lang.StringBuffer) -> a
    523:582:java.lang.StringBuffer prepare(com.ibm.icu.text.UCharacterIterator,int) -> prepare
    604:605:java.lang.String prepare(java.lang.String,int) -> prepare
    177:195:void <clinit>() -> <clinit>
com.ibm.icu.text.StringPrep$Values -> com.ibm.icu.text.dR:
    boolean isIndex -> a
    int value -> b
    int type -> c
    347:347:void <init>() -> <init>
    352:355:void reset() -> a
    347:347:void <init>(byte) -> <init>
com.ibm.icu.text.StringPrepParseException -> com.ibm.icu.text.StringPrepParseException:
    long serialVersionUID -> serialVersionUID
    int INVALID_CHAR_FOUND -> INVALID_CHAR_FOUND
    int ILLEGAL_CHAR_FOUND -> ILLEGAL_CHAR_FOUND
    int PROHIBITED_ERROR -> PROHIBITED_ERROR
    int UNASSIGNED_ERROR -> UNASSIGNED_ERROR
    int CHECK_BIDI_ERROR -> CHECK_BIDI_ERROR
    int STD3_ASCII_RULES_ERROR -> STD3_ASCII_RULES_ERROR
    int ACE_PREFIX_ERROR -> ACE_PREFIX_ERROR
    int VERIFICATION_ERROR -> VERIFICATION_ERROR
    int LABEL_TOO_LONG_ERROR -> LABEL_TOO_LONG_ERROR
    int BUFFER_OVERFLOW_ERROR -> BUFFER_OVERFLOW_ERROR
    int ZERO_LENGTH_LABEL -> ZERO_LENGTH_LABEL
    int DOMAIN_NAME_TOO_LONG_ERROR -> DOMAIN_NAME_TOO_LONG_ERROR
    int error -> a
    int line -> b
    java.lang.StringBuffer preContext -> c
    java.lang.StringBuffer postContext -> d
    boolean $assertionsDisabled -> e
    82:193:void <init>(java.lang.String,int) -> <init>
    98:193:void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    118:193:void <init>(java.lang.String,int,java.lang.String,int,int) -> <init>
    133:136:boolean equals(java.lang.Object) -> equals
    148:149:int hashCode() -> hashCode
    159:168:java.lang.String toString() -> toString
    198:199:void setPreContext(java.lang.String,int) -> a
    202:206:void setPreContext(char[],int) -> a
    209:210:void setPostContext(java.lang.String,int) -> b
    213:217:void setPostContext(char[],int) -> b
    220:222:void setContext(java.lang.String,int) -> c
    231:231:int getError() -> getError
    18:18:void <clinit>() -> <clinit>
com.ibm.icu.text.StringReplacer -> com.ibm.icu.text.dS:
    java.lang.String output -> a
    int cursorPos -> b
    boolean hasCursor -> c
    boolean isComplex -> d
    com.ibm.icu.text.RuleBasedTransliterator$Data data -> e
    69:75:void <init>(java.lang.String,int,com.ibm.icu.text.RuleBasedTransliterator$Data) -> <init>
    87:93:void <init>(java.lang.String,com.ibm.icu.text.RuleBasedTransliterator$Data) -> <init>
    116:259:int replace(com.ibm.icu.text.Replaceable,int,int,int[]) -> a
    266:311:java.lang.String toReplacerPattern(boolean) -> a
    321:330:void addReplacementSetTo(com.ibm.icu.text.UnicodeSet) -> a
com.ibm.icu.text.StringSearch -> com.ibm.icu.text.StringSearch:
    com.ibm.icu.text.StringSearch$Pattern pattern_ -> b
    com.ibm.icu.text.RuleBasedCollator collator_ -> c
    com.ibm.icu.text.CollationElementIterator textIter_ -> d
    com.ibm.icu.text.StringSearch$CollationPCE textProcessedIter_ -> e
    com.ibm.icu.text.CollationElementIterator utilIter_ -> f
    com.ibm.icu.text.Normalizer2 nfd_ -> g
    int strength_ -> h
    int ceMask_ -> i
    int variableTop_ -> j
    boolean toShift_ -> k
    int CE_LEVEL2_BASE -> l
    int CE_LEVEL3_BASE -> m
    179:217:void <init>(java.lang.String,java.text.CharacterIterator,com.ibm.icu.text.RuleBasedCollator,com.ibm.icu.text.BreakIterator) -> <init>
    232:233:void <init>(java.lang.String,java.text.CharacterIterator,com.ibm.icu.text.RuleBasedCollator) -> <init>
    248:249:void <init>(java.lang.String,java.text.CharacterIterator,java.util.Locale) -> <init>
    269:270:void <init>(java.lang.String,java.text.CharacterIterator,com.ibm.icu.util.ULocale) -> <init>
    284:286:void <init>(java.lang.String,java.lang.String) -> <init>
    302:302:com.ibm.icu.text.RuleBasedCollator getCollator() -> getCollator
    315:332:void setCollator(com.ibm.icu.text.RuleBasedCollator) -> setCollator
    340:340:java.lang.String getPattern() -> getPattern
    353:359:void setPattern(java.lang.String) -> setPattern
    371:371:boolean isCanonical() -> isCanonical
    383:384:void setCanonical(boolean) -> setCanonical
    392:394:void setTarget(java.text.CharacterIterator) -> setTarget
    402:406:int getIndex() -> getIndex
    419:421:void setIndex(int) -> setIndex
    433:477:void reset() -> reset
    485:526:int handleNext(int) -> handleNext
    535:556:int handlePrevious(int) -> handlePrevious
    578:584:int getMask(int) -> a
    624:643:int getCE(int) -> b
    660:668:int[] addToIntArray(int[],int,int,int,int) -> a
    685:693:long[] addToLongArray(long[],int,int,long,int) -> a
    706:737:int initializePatternCETable() -> a
    749:780:int initializePatternPCETable() -> b
    799:802:int initializePattern() -> c
    820:834:void initialize() -> d
    842:851:void setMatchNotFound() -> setMatchNotFound
    861:861:boolean isOutOfBounds(int,int,int) -> a
    871:884:boolean checkIdentical(int,int) -> a
    888:893:boolean initTextProcessedIter() -> e
    902:912:int nextBoundaryAfter(int) -> c
    921:927:boolean isBreakBoundary(int) -> d
    941:991:int compareCE64s(long,long,com.ibm.icu.text.SearchIterator$ElementComparisonType) -> a
    1005:1245:boolean search(int,com.ibm.icu.text.StringSearch$Match) -> a
    1249:1259:int codePointAt(java.text.CharacterIterator,int) -> a
    1263:1274:int codePointBefore(java.text.CharacterIterator,int) -> b
    1281:1504:boolean searchBackwards(int,com.ibm.icu.text.StringSearch$Match) -> b
    1513:1513:boolean handleNextExact() -> f
    1517:1517:boolean handleNextCanonical() -> g
    1521:1530:boolean handleNextCommonImpl() -> h
    1540:1540:boolean handlePreviousExact() -> i
    1544:1544:boolean handlePreviousCanonical() -> j
    1550:1580:boolean handlePreviousCommonImpl() -> k
    1595:1603:java.lang.String getString(java.text.CharacterIterator,int,int) -> a
    131:131:com.ibm.icu.text.StringSearch$Pattern access$500(com.ibm.icu.text.StringSearch) -> a
    131:131:boolean access$600(com.ibm.icu.text.StringSearch) -> b
    131:131:com.ibm.icu.text.StringSearch$CollationPCE access$800(com.ibm.icu.text.StringSearch) -> c
    937:938:void <clinit>() -> <clinit>
com.ibm.icu.text.StringSearch$CEBuffer -> com.ibm.icu.text.dT:
    com.ibm.icu.text.StringSearch$CEI[] buf_ -> a
    int bufSize_ -> b
    int firstIx_ -> c
    int limitIx_ -> d
    com.ibm.icu.text.StringSearch strSearch_ -> e
    boolean $assertionsDisabled -> f
    1958:1987:void <init>(com.ibm.icu.text.StringSearch) -> <init>
    1996:2028:com.ibm.icu.text.StringSearch$CEI get(int) -> a
    2038:2070:com.ibm.icu.text.StringSearch$CEI getPrevious(int) -> b
    2074:2074:boolean MIGHT_BE_JAMO_L(char) -> a
    1940:1940:void <clinit>() -> <clinit>
com.ibm.icu.text.StringSearch$CEI -> com.ibm.icu.text.dU:
    long ce_ -> a
    int lowIndex_ -> b
    int highIndex_ -> c
    1931:1931:void <init>() -> <init>
    1931:1931:void <init>(byte) -> <init>
com.ibm.icu.text.StringSearch$CollationPCE -> com.ibm.icu.text.StringSearch$CollationPCE:
    com.ibm.icu.text.StringSearch$CollationPCE$PCEBuffer pceBuffer_ -> a
    com.ibm.icu.text.CollationElementIterator cei_ -> b
    int strength_ -> c
    boolean toShift_ -> d
    boolean isShifted_ -> e
    int variableTop_ -> f
    1646:1655:void <init>(com.ibm.icu.text.CollationElementIterator) -> <init>
    1658:1660:void init(com.ibm.icu.text.CollationElementIterator) -> a
    1663:1667:void init(com.ibm.icu.text.RuleBasedCollator) -> a
    1671:1717:long processCE(int) -> a
    1732:1755:long nextProcessed(com.ibm.icu.text.StringSearch$CollationPCE$Range) -> a
    1771:1833:long previousProcessed(com.ibm.icu.text.StringSearch$CollationPCE$Range) -> b
    1837:1837:boolean isContinuation(int) -> b
com.ibm.icu.text.StringSearch$CollationPCE$PCEBuffer -> com.ibm.icu.text.dV:
    com.ibm.icu.text.StringSearch$CollationPCE$PCEI[] buffer_ -> a
    int bufferIndex_ -> b
    1852:1854:void <init>() -> <init>
    1857:1858:void reset() -> a
    1861:1861:boolean empty() -> b
    1866:1877:void put(long,int,int) -> a
    1880:1883:com.ibm.icu.text.StringSearch$CollationPCE$PCEI get() -> c
    1852:1852:void <init>(byte) -> <init>
com.ibm.icu.text.StringSearch$CollationPCE$PCEI -> com.ibm.icu.text.dW:
    long ce_ -> a
    int low_ -> b
    int high_ -> c
    1846:1846:void <init>() -> <init>
    1846:1846:void <init>(byte) -> <init>
com.ibm.icu.text.StringSearch$CollationPCE$RCEBuffer -> com.ibm.icu.text.dX:
    com.ibm.icu.text.StringSearch$CollationPCE$RCEI[] buffer_ -> a
    int bufferIndex_ -> b
    1894:1896:void <init>() -> <init>
    1899:1899:boolean empty() -> a
    1903:1914:void put(int,int,int) -> a
    1917:1920:com.ibm.icu.text.StringSearch$CollationPCE$RCEI get() -> b
    1894:1894:void <init>(byte) -> <init>
com.ibm.icu.text.StringSearch$CollationPCE$RCEI -> com.ibm.icu.text.dY:
    int ce_ -> a
    int low_ -> b
    int high_ -> c
    1888:1888:void <init>() -> <init>
    1888:1888:void <init>(byte) -> <init>
com.ibm.icu.text.StringSearch$CollationPCE$Range -> com.ibm.icu.text.StringSearch$CollationPCE$Range:
    int ixLow_ -> a
    int ixHigh_ -> b
    1840:1840:void <init>() -> <init>
com.ibm.icu.text.StringSearch$Match -> com.ibm.icu.text.dZ:
    int start_ -> a
    int limit_ -> b
    998:1000:void <init>() -> <init>
    998:998:void <init>(byte) -> <init>
com.ibm.icu.text.StringSearch$Pattern -> com.ibm.icu.text.ea:
    java.lang.String text_ -> a
    long[] PCE_ -> b
    int PCELength_ -> c
    int CELength_ -> d
    1614:1630:void <init>(java.lang.String) -> <init>
com.ibm.icu.text.StringTransform -> com.ibm.icu.text.StringTransform:
    java.lang.String transform(java.lang.String) -> transform
com.ibm.icu.text.SymbolTable -> com.ibm.icu.text.SymbolTable:
    char SYMBOL_REF -> SYMBOL_REF
    char[] lookup(java.lang.String) -> lookup
    com.ibm.icu.text.UnicodeMatcher lookupMatcher(int) -> lookupMatcher
    java.lang.String parseReference(java.lang.String,java.text.ParsePosition,int) -> parseReference
com.ibm.icu.text.ThaiBreakEngine -> com.ibm.icu.text.eb:
    com.ibm.icu.text.DictionaryMatcher fDictionary -> b
    com.ibm.icu.text.UnicodeSet fThaiWordSet -> c
    com.ibm.icu.text.UnicodeSet fEndWordSet -> d
    com.ibm.icu.text.UnicodeSet fBeginWordSet -> e
    com.ibm.icu.text.UnicodeSet fSuffixSet -> f
    com.ibm.icu.text.UnicodeSet fMarkSet -> g
    77:81:void <init>() -> <init>
    86:86:boolean equals(java.lang.Object) -> equals
    90:90:int hashCode() -> hashCode
    94:98:boolean handles(int,int) -> a
    104:270:int divideUpDictionaryRange(java.text.CharacterIterator,int,int,com.ibm.icu.text.DictionaryBreakEngine$DequeI) -> a
    44:74:void <clinit>() -> <clinit>
com.ibm.icu.text.TimeUnitFormat -> com.ibm.icu.text.TimeUnitFormat:
    int FULL_NAME -> FULL_NAME
    int ABBREVIATED_NAME -> ABBREVIATED_NAME
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.text.NumberFormat format -> a
    com.ibm.icu.util.ULocale locale -> b
    int style -> c
    com.ibm.icu.text.MeasureFormat mf -> d
    java.util.Map timeUnitToCountToPatterns -> e
    com.ibm.icu.text.PluralRules pluralRules -> f
    boolean isReady -> g
    116:120:void <init>() -> <init>
    129:130:void <init>(com.ibm.icu.util.ULocale) -> <init>
    139:140:void <init>(java.util.Locale) -> <init>
    151:163:void <init>(com.ibm.icu.util.ULocale,int) -> <init>
    166:170:void <init>(com.ibm.icu.util.ULocale,int,com.ibm.icu.text.NumberFormat) -> <init>
    178:179:void <init>(java.util.Locale,int) -> <init>
    189:197:com.ibm.icu.text.TimeUnitFormat setLocale(com.ibm.icu.util.ULocale) -> setLocale
    208:208:com.ibm.icu.text.TimeUnitFormat setLocale(java.util.Locale) -> setLocale
    220:235:com.ibm.icu.text.TimeUnitFormat setNumberFormat(com.ibm.icu.text.NumberFormat) -> setNumberFormat
    247:247:java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    258:339:com.ibm.icu.util.TimeUnitAmount parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    344:362:void setup() -> c
    368:455:void setup(java.lang.String,java.util.Map,int,java.util.Set) -> a
    467:528:void searchInTree(java.lang.String,int,com.ibm.icu.util.TimeUnit,java.lang.String,java.lang.String,java.util.Map) -> a
    542:542:java.lang.StringBuilder formatMeasures(java.lang.StringBuilder,java.text.FieldPosition,com.ibm.icu.util.Measure[]) -> formatMeasures
    552:552:com.ibm.icu.text.MeasureFormat$FormatWidth getWidth() -> getWidth
    562:562:com.ibm.icu.text.NumberFormat getNumberFormat() -> getNumberFormat
    572:574:java.lang.Object clone() -> clone
    581:581:java.lang.Object writeReplace() -> writeReplace
    586:586:java.lang.Object readResolve() -> readResolve
    63:63:com.ibm.icu.util.Measure parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    63:63:java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
com.ibm.icu.text.TimeZoneFormat -> com.ibm.icu.text.TimeZoneFormat:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.util.ULocale _locale -> a
    com.ibm.icu.text.TimeZoneNames _tznames -> b
    java.lang.String _gmtPattern -> c
    java.lang.String[] _gmtOffsetPatterns -> d
    java.lang.String[] _gmtOffsetDigits -> e
    java.lang.String _gmtZeroFormat -> f
    boolean _parseAllStyles -> g
    boolean _parseTZDBNames -> h
    com.ibm.icu.impl.TimeZoneGenericNames _gnames -> i
    java.lang.String _gmtPatternPrefix -> j
    java.lang.String _gmtPatternSuffix -> k
    java.lang.Object[][] _gmtOffsetPatternItems -> l
    boolean _abuttingOffsetHoursAndMinutes -> m
    java.lang.String _region -> n
    boolean _frozen -> o
    com.ibm.icu.text.TimeZoneNames _tzdbNames -> p
    java.lang.String[] ALT_GMT_STRINGS -> q
    java.lang.String[] DEFAULT_GMT_DIGITS -> r
    com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType[] PARSE_GMT_OFFSET_TYPES -> s
    com.ibm.icu.text.TimeZoneFormat$TimeZoneFormatCache _tzfCache -> t
    java.util.EnumSet ALL_SIMPLE_NAME_TYPES -> u
    java.util.EnumSet ALL_GENERIC_NAME_TYPES -> v
    com.ibm.icu.impl.TextTrieMap ZONE_ID_TRIE -> w
    com.ibm.icu.impl.TextTrieMap SHORT_ZONE_ID_TRIE -> x
    java.io.ObjectStreamField[] serialPersistentFields -> serialPersistentFields
    boolean $assertionsDisabled -> y
    415:473:void <init>(com.ibm.icu.util.ULocale) -> <init>
    486:489:com.ibm.icu.text.TimeZoneFormat getInstance(com.ibm.icu.util.ULocale) -> getInstance
    503:503:com.ibm.icu.text.TimeZoneFormat getInstance(java.util.Locale) -> getInstance
    514:514:com.ibm.icu.text.TimeZoneNames getTimeZoneNames() -> getTimeZoneNames
    527:534:com.ibm.icu.impl.TimeZoneGenericNames getTimeZoneGenericNames() -> a
    544:551:com.ibm.icu.text.TimeZoneNames getTZDBTimeZoneNames() -> b
    564:570:com.ibm.icu.text.TimeZoneFormat setTimeZoneNames(com.ibm.icu.text.TimeZoneNames) -> setTimeZoneNames
    581:581:java.lang.String getGMTPattern() -> getGMTPattern
    596:600:com.ibm.icu.text.TimeZoneFormat setGMTPattern(java.lang.String) -> setGMTPattern
    611:611:java.lang.String getGMTOffsetPattern(com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType) -> getGMTOffsetPattern
    626:639:com.ibm.icu.text.TimeZoneFormat setGMTOffsetPattern(com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType,java.lang.String) -> setGMTOffsetPattern
    651:655:java.lang.String getGMTOffsetDigits() -> getGMTOffsetDigits
    669:680:com.ibm.icu.text.TimeZoneFormat setGMTOffsetDigits(java.lang.String) -> setGMTOffsetDigits
    691:691:java.lang.String getGMTZeroFormat() -> getGMTZeroFormat
    704:714:com.ibm.icu.text.TimeZoneFormat setGMTZeroFormat(java.lang.String) -> setGMTZeroFormat
    729:731:com.ibm.icu.text.TimeZoneFormat setDefaultParseOptions(java.util.EnumSet) -> setDefaultParseOptions
    741:748:java.util.EnumSet getDefaultParseOptions() -> getDefaultParseOptions
    767:767:java.lang.String formatOffsetISO8601Basic(int,boolean,boolean,boolean) -> formatOffsetISO8601Basic
    786:786:java.lang.String formatOffsetISO8601Extended(int,boolean,boolean,boolean) -> formatOffsetISO8601Extended
    809:809:java.lang.String formatOffsetLocalizedGMT(int) -> formatOffsetLocalizedGMT
    832:832:java.lang.String formatOffsetShortLocalizedGMT(int) -> formatOffsetShortLocalizedGMT
    856:856:java.lang.String format(com.ibm.icu.text.TimeZoneFormat$Style,com.ibm.icu.util.TimeZone,long) -> format
    877:996:java.lang.String format(com.ibm.icu.text.TimeZoneFormat$Style,com.ibm.icu.util.TimeZone,long,com.ibm.icu.util.Output) -> format
    1015:1015:int parseOffsetISO8601(java.lang.String,java.text.ParsePosition) -> parseOffsetISO8601
    1032:1032:int parseOffsetLocalizedGMT(java.lang.String,java.text.ParsePosition) -> parseOffsetLocalizedGMT
    1049:1049:int parseOffsetShortLocalizedGMT(java.lang.String,java.text.ParsePosition) -> parseOffsetShortLocalizedGMT
    1068:1503:com.ibm.icu.util.TimeZone parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,java.util.EnumSet,com.ibm.icu.util.Output) -> parse
    1526:1526:com.ibm.icu.util.TimeZone parse(com.ibm.icu.text.TimeZoneFormat$Style,java.lang.String,java.text.ParsePosition,com.ibm.icu.util.Output) -> parse
    1543:1543:com.ibm.icu.util.TimeZone parse(java.lang.String,java.text.ParsePosition) -> parse
    1557:1563:com.ibm.icu.util.TimeZone parse(java.lang.String) -> parse
    1573:1594:java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) -> format
    1604:1612:java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object) -> formatToCharacterIterator
    1622:1622:java.lang.Object parseObject(java.lang.String,java.text.ParsePosition) -> parseObject
    1632:1696:java.lang.String formatOffsetLocalizedGMT(int,boolean) -> a
    1707:1763:java.lang.String formatOffsetISO8601(int,boolean,boolean,boolean,boolean) -> a
    1777:1788:java.lang.String formatSpecific(com.ibm.icu.util.TimeZone,com.ibm.icu.text.TimeZoneNames$NameType,com.ibm.icu.text.TimeZoneNames$NameType,long,com.ibm.icu.util.Output) -> a
    1799:1808:java.lang.String formatExemplarLocation(com.ibm.icu.util.TimeZone) -> a
    1825:1833:java.lang.String getTimeZoneID(java.lang.String,java.lang.String) -> a
    1845:1855:java.lang.String getTargetRegion() -> c
    1864:1874:com.ibm.icu.text.TimeZoneFormat$TimeType getTimeType(com.ibm.icu.text.TimeZoneNames$NameType) -> a
    1888:1895:void initGMTPattern(java.lang.String) -> a
    1904:1925:java.lang.String unquote(java.lang.String) -> b
    1937:1954:void initGMTOffsetPatterns(java.lang.String[]) -> a
    1957:1973:void checkAbuttingHoursAndMinutes() -> d
    2011:2104:java.lang.Object[] parseOffsetPattern(java.lang.String,java.lang.String) -> b
    2115:2124:java.lang.String expandOffsetPattern(java.lang.String) -> c
    2135:2147:java.lang.String truncateOffsetPattern(java.lang.String) -> d
    2160:2169:void appendOffsetDigits(java.lang.StringBuilder,int,int) -> a
    2177:2181:com.ibm.icu.util.TimeZone getTimeZoneForOffset(int) -> a
    2198:2250:int parseOffsetLocalizedGMT(java.lang.String,java.text.ParsePosition,boolean,com.ibm.icu.util.Output) -> a
    2263:2296:int parseOffsetLocalizedGMTPattern$c9a8171(java.lang.String,int,int[]) -> a
    2309:2370:int parseOffsetFields$c9a8171(java.lang.String,int,int[]) -> b
    2384:2430:int parseOffsetFieldsWithPattern(java.lang.String,int,java.lang.Object[],boolean,int[]) -> a
    2441:2501:int parseOffsetDefaultLocalizedGMT(java.lang.String,int,int[]) -> c
    2513:2548:int parseDefaultOffsetFields(java.lang.String,int,char,int[]) -> a
    2559:2623:int parseAbuttingOffsetFields(java.lang.String,int,int[]) -> d
    2643:2672:int parseOffsetFieldWithLocalizedDigits(java.lang.String,int,int,int,int,int,int[]) -> a
    2685:2706:int parseSingleLocalizedDigit(java.lang.String,int,int[]) -> e
    2718:2727:java.lang.String[] toCodePoints(java.lang.String) -> e
    2747:2796:int parseOffsetISO8601(java.lang.String,java.text.ParsePosition,boolean,com.ibm.icu.util.Output) -> b
    2814:2888:int parseAbuttingAsciiOffsetFields$2081793c(java.lang.String,java.text.ParsePosition,int,int,boolean) -> a
    2906:2985:int parseAsciiOffsetFields$58c7f7c3(java.lang.String,java.text.ParsePosition,char,int,int) -> a
    2995:3023:java.lang.String parseZoneID(java.lang.String,java.text.ParsePosition) -> a
    3033:3062:java.lang.String parseShortZoneID(java.lang.String,java.text.ParsePosition) -> b
    3072:3095:java.lang.String parseExemplarLocation(java.lang.String,java.text.ParsePosition) -> c
    3146:3157:void writeObject(java.io.ObjectOutputStream) -> writeObject
    3166:3245:void readObject(java.io.ObjectInputStream) -> readObject
    3256:3256:boolean isFrozen() -> isFrozen
    3264:3265:com.ibm.icu.text.TimeZoneFormat freeze() -> freeze
    3273:3275:com.ibm.icu.text.TimeZoneFormat cloneAsThawed() -> cloneAsThawed
    65:65:java.lang.Object cloneAsThawed() -> cloneAsThawed
    65:65:java.lang.Object freeze() -> freeze
    65:3130:void <clinit>() -> <clinit>
com.ibm.icu.text.TimeZoneFormat$1 -> com.ibm.icu.text.ec:
    int[] $SwitchMap$com$ibm$icu$text$TimeZoneFormat$Style -> a
    int[] $SwitchMap$com$ibm$icu$text$TimeZoneNames$NameType -> b
    885:1864:void <clinit>() -> <clinit>
com.ibm.icu.text.TimeZoneFormat$GMTOffsetField -> com.ibm.icu.text.ed:
    char _type -> a
    1983:1986:void <init>(char,int) -> <init>
    1989:1989:char getType() -> a
    1998:1998:boolean isValid$253385f(int) -> a
com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType -> com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType:
    com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType POSITIVE_HM -> POSITIVE_HM
    com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType POSITIVE_HMS -> POSITIVE_HMS
    com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType NEGATIVE_HM -> NEGATIVE_HM
    com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType NEGATIVE_HMS -> NEGATIVE_HMS
    com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType POSITIVE_H -> POSITIVE_H
    com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType NEGATIVE_H -> NEGATIVE_H
    java.lang.String _defaultPattern -> a
    java.lang.String _required -> b
    boolean _isPositive -> c
    com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType[] $VALUES -> d
    223:223:com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType[] values() -> values
    223:223:com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType valueOf(java.lang.String) -> valueOf
    259:263:void <init>(java.lang.String,int,java.lang.String,java.lang.String,boolean) -> <init>
    266:266:java.lang.String defaultPattern() -> a
    270:270:java.lang.String required() -> b
    274:274:boolean isPositive() -> c
    223:223:java.lang.String access$100(com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType) -> a
    223:223:java.lang.String access$200(com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType) -> b
    223:223:boolean access$300(com.ibm.icu.text.TimeZoneFormat$GMTOffsetPatternType) -> c
    223:253:void <clinit>() -> <clinit>
com.ibm.icu.text.TimeZoneFormat$OffsetFields -> com.ibm.icu.text.ee:
    int H$582b7c54 -> a
    int HM$582b7c54 -> b
    int HMS$582b7c54 -> c
    int[] $VALUES$1a97156f -> d
    1702:1703:void <clinit>() -> <clinit>
com.ibm.icu.text.TimeZoneFormat$ParseOption -> com.ibm.icu.text.TimeZoneFormat$ParseOption:
    com.ibm.icu.text.TimeZoneFormat$ParseOption ALL_STYLES -> ALL_STYLES
    com.ibm.icu.text.TimeZoneFormat$ParseOption TZ_DATABASE_ABBREVIATIONS -> TZ_DATABASE_ABBREVIATIONS
    com.ibm.icu.text.TimeZoneFormat$ParseOption[] $VALUES -> a
    306:306:com.ibm.icu.text.TimeZoneFormat$ParseOption[] values() -> values
    306:306:com.ibm.icu.text.TimeZoneFormat$ParseOption valueOf(java.lang.String) -> valueOf
    306:306:void <init>(java.lang.String,int) -> <init>
    306:321:void <clinit>() -> <clinit>
com.ibm.icu.text.TimeZoneFormat$Style -> com.ibm.icu.text.TimeZoneFormat$Style:
    com.ibm.icu.text.TimeZoneFormat$Style GENERIC_LOCATION -> GENERIC_LOCATION
    com.ibm.icu.text.TimeZoneFormat$Style GENERIC_LONG -> GENERIC_LONG
    com.ibm.icu.text.TimeZoneFormat$Style GENERIC_SHORT -> GENERIC_SHORT
    com.ibm.icu.text.TimeZoneFormat$Style SPECIFIC_LONG -> SPECIFIC_LONG
    com.ibm.icu.text.TimeZoneFormat$Style SPECIFIC_SHORT -> SPECIFIC_SHORT
    com.ibm.icu.text.TimeZoneFormat$Style LOCALIZED_GMT -> LOCALIZED_GMT
    com.ibm.icu.text.TimeZoneFormat$Style LOCALIZED_GMT_SHORT -> LOCALIZED_GMT_SHORT
    com.ibm.icu.text.TimeZoneFormat$Style ISO_BASIC_SHORT -> ISO_BASIC_SHORT
    com.ibm.icu.text.TimeZoneFormat$Style ISO_BASIC_LOCAL_SHORT -> ISO_BASIC_LOCAL_SHORT
    com.ibm.icu.text.TimeZoneFormat$Style ISO_BASIC_FIXED -> ISO_BASIC_FIXED
    com.ibm.icu.text.TimeZoneFormat$Style ISO_BASIC_LOCAL_FIXED -> ISO_BASIC_LOCAL_FIXED
    com.ibm.icu.text.TimeZoneFormat$Style ISO_BASIC_FULL -> ISO_BASIC_FULL
    com.ibm.icu.text.TimeZoneFormat$Style ISO_BASIC_LOCAL_FULL -> ISO_BASIC_LOCAL_FULL
    com.ibm.icu.text.TimeZoneFormat$Style ISO_EXTENDED_FIXED -> ISO_EXTENDED_FIXED
    com.ibm.icu.text.TimeZoneFormat$Style ISO_EXTENDED_LOCAL_FIXED -> ISO_EXTENDED_LOCAL_FIXED
    com.ibm.icu.text.TimeZoneFormat$Style ISO_EXTENDED_FULL -> ISO_EXTENDED_FULL
    com.ibm.icu.text.TimeZoneFormat$Style ISO_EXTENDED_LOCAL_FULL -> ISO_EXTENDED_LOCAL_FULL
    com.ibm.icu.text.TimeZoneFormat$Style ZONE_ID -> ZONE_ID
    com.ibm.icu.text.TimeZoneFormat$Style ZONE_ID_SHORT -> ZONE_ID_SHORT
    com.ibm.icu.text.TimeZoneFormat$Style EXEMPLAR_LOCATION -> EXEMPLAR_LOCATION
    int flag -> a
    com.ibm.icu.text.TimeZoneFormat$Style[] $VALUES -> b
    80:80:com.ibm.icu.text.TimeZoneFormat$Style[] values() -> values
    80:80:com.ibm.icu.text.TimeZoneFormat$Style valueOf(java.lang.String) -> valueOf
    211:213:void <init>(java.lang.String,int,int) -> <init>
    80:207:void <clinit>() -> <clinit>
com.ibm.icu.text.TimeZoneFormat$TimeType -> com.ibm.icu.text.TimeZoneFormat$TimeType:
    com.ibm.icu.text.TimeZoneFormat$TimeType UNKNOWN -> UNKNOWN
    com.ibm.icu.text.TimeZoneFormat$TimeType STANDARD -> STANDARD
    com.ibm.icu.text.TimeZoneFormat$TimeType DAYLIGHT -> DAYLIGHT
    com.ibm.icu.text.TimeZoneFormat$TimeType[] $VALUES -> a
    284:284:com.ibm.icu.text.TimeZoneFormat$TimeType[] values() -> values
    284:284:com.ibm.icu.text.TimeZoneFormat$TimeType valueOf(java.lang.String) -> valueOf
    284:284:void <init>(java.lang.String,int) -> <init>
    284:299:void <clinit>() -> <clinit>
com.ibm.icu.text.TimeZoneFormat$TimeZoneFormatCache -> com.ibm.icu.text.ef:
    3101:3101:void <init>() -> <init>
    3108:3110:com.ibm.icu.text.TimeZoneFormat createInstance$1a8f5fd1(com.ibm.icu.util.ULocale) -> a
    3101:3101:java.lang.Object createInstance(java.lang.Object,java.lang.Object) -> createInstance
    3101:3101:void <init>(byte) -> <init>
com.ibm.icu.text.TimeZoneNames -> com.ibm.icu.text.TimeZoneNames:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.text.TimeZoneNames$Cache TZNAMES_CACHE -> a
    com.ibm.icu.text.TimeZoneNames$Factory TZNAMES_FACTORY -> b
    172:173:com.ibm.icu.text.TimeZoneNames getInstance(com.ibm.icu.util.ULocale) -> getInstance
    185:185:com.ibm.icu.text.TimeZoneNames getInstance(java.util.Locale) -> getInstance
    200:200:com.ibm.icu.text.TimeZoneNames getTZDBInstance(com.ibm.icu.util.ULocale) -> getTZDBInstance
    java.util.Set getAvailableMetaZoneIDs() -> getAvailableMetaZoneIDs
    java.util.Set getAvailableMetaZoneIDs(java.lang.String) -> getAvailableMetaZoneIDs
    java.lang.String getMetaZoneID(java.lang.String,long) -> getMetaZoneID
    java.lang.String getReferenceZoneID(java.lang.String,java.lang.String) -> getReferenceZoneID
    java.lang.String getMetaZoneDisplayName(java.lang.String,com.ibm.icu.text.TimeZoneNames$NameType) -> getMetaZoneDisplayName
    285:290:java.lang.String getDisplayName(java.lang.String,com.ibm.icu.text.TimeZoneNames$NameType,long) -> getDisplayName
    java.lang.String getTimeZoneDisplayName(java.lang.String,com.ibm.icu.text.TimeZoneNames$NameType) -> getTimeZoneDisplayName
    327:327:java.lang.String getExemplarLocationName(java.lang.String) -> getExemplarLocationName
    344:344:java.util.Collection find(java.lang.CharSequence,int,java.util.EnumSet) -> find
    446:446:void loadAllDisplayNames() -> loadAllDisplayNames
    455:470:void getDisplayNames(java.lang.String,com.ibm.icu.text.TimeZoneNames$NameType[],long,java.lang.String[],int) -> getDisplayNames
    478:479:void <init>() -> <init>
    77:77:com.ibm.icu.text.TimeZoneNames$Factory access$100() -> c
    131:161:void <clinit>() -> <clinit>
com.ibm.icu.text.TimeZoneNames$Cache -> com.ibm.icu.text.eg:
    514:514:void <init>() -> <init>
    523:523:com.ibm.icu.text.TimeZoneNames createInstance$75e7eeac(com.ibm.icu.util.ULocale) -> a
    514:514:java.lang.Object createInstance(java.lang.Object,java.lang.Object) -> createInstance
    514:514:void <init>(byte) -> <init>
com.ibm.icu.text.TimeZoneNames$DefaultTimeZoneNames -> com.ibm.icu.text.TimeZoneNames$DefaultTimeZoneNames:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.text.TimeZoneNames$DefaultTimeZoneNames INSTANCE -> a
    533:605:void <init>() -> <init>
    544:544:java.util.Set getAvailableMetaZoneIDs() -> getAvailableMetaZoneIDs
    552:552:java.util.Set getAvailableMetaZoneIDs(java.lang.String) -> getAvailableMetaZoneIDs
    562:562:java.lang.String getMetaZoneID(java.lang.String,long) -> getMetaZoneID
    572:572:java.lang.String getReferenceZoneID(java.lang.String,java.lang.String) -> getReferenceZoneID
    581:581:java.lang.String getMetaZoneDisplayName(java.lang.String,com.ibm.icu.text.TimeZoneNames$NameType) -> getMetaZoneDisplayName
    590:590:java.lang.String getTimeZoneDisplayName(java.lang.String,com.ibm.icu.text.TimeZoneNames$NameType) -> getTimeZoneDisplayName
    598:598:java.util.Collection find(java.lang.CharSequence,int,java.util.EnumSet) -> find
    537:537:void <clinit>() -> <clinit>
com.ibm.icu.text.TimeZoneNames$DefaultTimeZoneNames$FactoryImpl -> com.ibm.icu.text.TimeZoneNames$DefaultTimeZoneNames$FactoryImpl:
    605:605:void <init>() -> <init>
    614:614:com.ibm.icu.text.TimeZoneNames getTimeZoneNames(com.ibm.icu.util.ULocale) -> getTimeZoneNames
com.ibm.icu.text.TimeZoneNames$Factory -> com.ibm.icu.text.TimeZoneNames$Factory:
    com.ibm.icu.text.TimeZoneNames getTimeZoneNames(com.ibm.icu.util.ULocale) -> getTimeZoneNames
    507:508:void <init>() -> <init>
com.ibm.icu.text.TimeZoneNames$MatchInfo -> com.ibm.icu.text.TimeZoneNames$MatchInfo:
    com.ibm.icu.text.TimeZoneNames$NameType _nameType -> a
    java.lang.String _tzID -> b
    java.lang.String _mzID -> c
    int _matchLength -> d
    373:387:void <init>(com.ibm.icu.text.TimeZoneNames$NameType,java.lang.String,java.lang.String,int) -> <init>
    401:401:java.lang.String tzID() -> tzID
    416:416:java.lang.String mzID() -> mzID
    427:427:com.ibm.icu.text.TimeZoneNames$NameType nameType() -> nameType
    437:437:int matchLength() -> matchLength
com.ibm.icu.text.TimeZoneNames$NameType -> com.ibm.icu.text.TimeZoneNames$NameType:
    com.ibm.icu.text.TimeZoneNames$NameType LONG_GENERIC -> LONG_GENERIC
    com.ibm.icu.text.TimeZoneNames$NameType LONG_STANDARD -> LONG_STANDARD
    com.ibm.icu.text.TimeZoneNames$NameType LONG_DAYLIGHT -> LONG_DAYLIGHT
    com.ibm.icu.text.TimeZoneNames$NameType SHORT_GENERIC -> SHORT_GENERIC
    com.ibm.icu.text.TimeZoneNames$NameType SHORT_STANDARD -> SHORT_STANDARD
    com.ibm.icu.text.TimeZoneNames$NameType SHORT_DAYLIGHT -> SHORT_DAYLIGHT
    com.ibm.icu.text.TimeZoneNames$NameType EXEMPLAR_LOCATION -> EXEMPLAR_LOCATION
    com.ibm.icu.text.TimeZoneNames$NameType[] $VALUES -> a
    86:86:com.ibm.icu.text.TimeZoneNames$NameType[] values() -> values
    86:86:com.ibm.icu.text.TimeZoneNames$NameType valueOf(java.lang.String) -> valueOf
    86:86:void <init>(java.lang.String,int) -> <init>
    86:128:void <clinit>() -> <clinit>
com.ibm.icu.text.TitlecaseTransliterator -> com.ibm.icu.text.eh:
    com.ibm.icu.util.ULocale locale -> a
    com.ibm.icu.impl.UCaseProps csp -> b
    com.ibm.icu.text.ReplaceableContextIterator iter -> c
    java.lang.StringBuilder result -> d
    int[] locCache -> e
    com.ibm.icu.text.SourceTargetUtility sourceTargetUtility -> f
    27:34:void register() -> a
    47:153:void <init>(com.ibm.icu.util.ULocale) -> <init>
    70:150:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    160:170:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
    19:19:com.ibm.icu.util.ULocale access$000(com.ibm.icu.text.TitlecaseTransliterator) -> a
com.ibm.icu.text.TitlecaseTransliterator$1 -> com.ibm.icu.text.ei:
    27:27:void <init>() -> <init>
    29:29:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.TitlecaseTransliterator$2 -> com.ibm.icu.text.ej:
    com.ibm.icu.text.TitlecaseTransliterator this$0 -> a
    162:162:void <init>(com.ibm.icu.text.TitlecaseTransliterator) -> <init>
    164:164:java.lang.String transform(java.lang.String) -> a
    162:162:java.lang.Object transform(java.lang.Object) -> transform
com.ibm.icu.text.Transform -> com.ibm.icu.text.Transform:
    java.lang.Object transform(java.lang.Object) -> transform
com.ibm.icu.text.TransliterationRule -> com.ibm.icu.text.ek:
    com.ibm.icu.text.StringMatcher anteContext -> a
    com.ibm.icu.text.StringMatcher key -> b
    com.ibm.icu.text.StringMatcher postContext -> c
    com.ibm.icu.text.UnicodeReplacer output -> d
    java.lang.String pattern -> e
    com.ibm.icu.text.UnicodeMatcher[] segments -> f
    int anteContextLength -> g
    int keyLength -> h
    byte flags -> i
    com.ibm.icu.text.RuleBasedTransliterator$Data data -> j
    158:220:void <init>(java.lang.String,int,int,java.lang.String,int,int,com.ibm.icu.text.UnicodeMatcher[],boolean,boolean,com.ibm.icu.text.RuleBasedTransliterator$Data) -> <init>
    228:228:int getAnteContextLength() -> a
    238:244:int getIndexValue() -> b
    260:261:boolean matchesIndexValue(int) -> a
    309:328:boolean masks(com.ibm.icu.text.TransliterationRule) -> a
    335:335:int posBefore(com.ibm.icu.text.Replaceable,int) -> a
    341:341:int posAfter(com.ibm.icu.text.Replaceable,int) -> b
    379:480:int matchAndReplace(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> a
    490:536:java.lang.String toRule(boolean) -> a
    544:544:java.lang.String toString() -> toString
    557:591:void addSourceTargetSet$47d51b5(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> a
com.ibm.icu.text.TransliterationRuleSet -> com.ibm.icu.text.el:
    java.util.List ruleVector -> a
    int maxContextLength -> b
    com.ibm.icu.text.TransliterationRule[] rules -> c
    int[] index -> d
    57:60:void <init>() -> <init>
    67:67:int getMaximumContextLength() -> a
    76:83:void addRule(com.ibm.icu.text.TransliterationRule) -> a
    107:173:void freeze() -> b
    191:221:boolean transliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> a
    229:238:java.lang.String toRules(boolean) -> a
    244:252:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> a
com.ibm.icu.text.Transliterator -> com.ibm.icu.text.Transliterator:
    int FORWARD -> FORWARD
    int REVERSE -> REVERSE
    java.lang.String ID -> a
    com.ibm.icu.text.UnicodeSet filter -> b
    int maximumContextLength -> c
    com.ibm.icu.text.TransliteratorRegistry registry -> d
    java.util.Map displayNameCache -> e
    433:506:void <init>(java.lang.String,com.ibm.icu.text.UnicodeFilter) -> <init>
    524:532:int transliterate(com.ibm.icu.text.Replaceable,int,int) -> transliterate
    541:542:void transliterate(com.ibm.icu.text.Replaceable) -> transliterate
    552:554:java.lang.String transliterate(java.lang.String) -> transliterate
    607:633:void transliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,java.lang.String) -> transliterate
    653:654:void transliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,int) -> transliterate
    669:670:void transliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position) -> transliterate
    685:687:void finishTransliteration(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position) -> finishTransliteration
    void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    804:1099:void filteredTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean,boolean) -> a
    1115:1116:void filteredTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> filteredTransliterate
    1131:1131:int getMaximumContextLength() -> getMaximumContextLength
    1140:1144:void setMaximumContextLength(int) -> setMaximumContextLength
    1155:1155:java.lang.String getID() -> getID
    1164:1165:void setID(java.lang.String) -> setID
    1175:1175:java.lang.String getDisplayName(java.lang.String) -> getDisplayName
    1198:1198:java.lang.String getDisplayName(java.lang.String,java.util.Locale) -> getDisplayName
    1228:1279:java.lang.String getDisplayName(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayName
    1288:1288:com.ibm.icu.text.UnicodeFilter getFilter() -> getFilter
    1301:1313:void setFilter(com.ibm.icu.text.UnicodeFilter) -> setFilter
    1326:1326:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
    1346:1373:com.ibm.icu.text.Transliterator getInstance(java.lang.String,int) -> getInstance
    1387:1397:com.ibm.icu.text.Transliterator getBasicInstance(java.lang.String,java.lang.String) -> a
    1410:1465:com.ibm.icu.text.Transliterator createFromRules(java.lang.String,java.lang.String,int) -> createFromRules
    1476:1476:java.lang.String toRules(boolean) -> toRules
    1493:1507:java.lang.String baseToRules(boolean) -> baseToRules
    1526:1535:com.ibm.icu.text.Transliterator[] getElements() -> getElements
    1552:1554:com.ibm.icu.text.UnicodeSet getSourceSet() -> getSourceSet
    1571:1571:com.ibm.icu.text.UnicodeSet handleGetSourceSet() -> handleGetSourceSet
    1596:1598:com.ibm.icu.text.UnicodeSet getTargetSet() -> getTargetSet
    1636:1647:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
    1659:1671:com.ibm.icu.text.UnicodeSet getFilterAsUnicodeSet(com.ibm.icu.text.UnicodeSet) -> getFilterAsUnicodeSet
    1693:1693:com.ibm.icu.text.Transliterator getInverse() -> getInverse
    1710:1714:void registerClass(java.lang.String,java.lang.Class,java.lang.String) -> registerClass
    1729:1730:void registerFactory(java.lang.String,com.ibm.icu.text.Transliterator$Factory) -> registerFactory
    1743:1744:void registerInstance(com.ibm.icu.text.Transliterator) -> registerInstance
    1757:1758:void registerInstance(com.ibm.icu.text.Transliterator,boolean) -> a
    1774:1775:void registerAlias(java.lang.String,java.lang.String) -> registerAlias
    1812:1813:void registerSpecialInverse(java.lang.String,java.lang.String,boolean) -> a
    1824:1826:void unregister(java.lang.String) -> unregister
    1841:1841:java.util.Enumeration getAvailableIDs() -> getAvailableIDs
    1852:1852:java.util.Enumeration getAvailableSources() -> getAvailableSources
    1863:1863:java.util.Enumeration getAvailableTargets(java.lang.String) -> getAvailableTargets
    1873:1873:java.util.Enumeration getAvailableVariants(java.lang.String,java.lang.String) -> getAvailableVariants
    1984:1985:void registerAny() -> registerAny
    2012:2012:java.lang.String transform(java.lang.String) -> transform
    227:227:java.lang.Object transform(java.lang.Object) -> transform
    1878:1975:void <clinit>() -> <clinit>
com.ibm.icu.text.Transliterator$Factory -> com.ibm.icu.text.Transliterator$Factory:
    com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.Transliterator$Position -> com.ibm.icu.text.Transliterator$Position:
    int contextStart -> contextStart
    int contextLimit -> contextLimit
    int start -> start
    int limit -> limit
    boolean $assertionsDisabled -> a
    313:314:void <init>() -> <init>
    323:324:void <init>(int,int,int) -> <init>
    332:337:void <init>(int,int,int,int) -> <init>
    343:345:void <init>(com.ibm.icu.text.Transliterator$Position) -> <init>
    352:356:void set(com.ibm.icu.text.Transliterator$Position) -> set
    363:370:boolean equals(java.lang.Object) -> equals
    381:382:int hashCode() -> hashCode
    390:390:java.lang.String toString() -> toString
    405:417:void validate(int) -> validate
    267:267:void <clinit>() -> <clinit>
com.ibm.icu.text.TransliteratorIDParser -> com.ibm.icu.text.em:
    java.util.Map SPECIAL_INVERSES -> a
    150:160:com.ibm.icu.text.TransliteratorIDParser$SingleID parseFilterID(java.lang.String,int[]) -> a
    177:240:com.ibm.icu.text.TransliteratorIDParser$SingleID parseSingleID(java.lang.String,int[],int) -> a
    268:317:com.ibm.icu.text.UnicodeSet parseGlobalFilter(java.lang.String,int[],int,int[],java.lang.StringBuffer) -> a
    346:418:boolean parseCompoundID(java.lang.String,int,java.lang.StringBuffer,java.util.List,com.ibm.icu.text.UnicodeSet[]) -> a
    430:451:java.util.List instantiateList(java.util.List) -> a
    466:503:java.lang.String[] IDtoSTV(java.lang.String) -> a
    515:523:java.lang.String STVtoID(java.lang.String,java.lang.String,java.lang.String) -> a
    561:565:void registerSpecialInverse(java.lang.String,java.lang.String,boolean) -> a
    592:688:com.ibm.icu.text.TransliteratorIDParser$Specs parseFilterID(java.lang.String,int[],boolean) -> a
    699:723:com.ibm.icu.text.TransliteratorIDParser$SingleID specsToID(com.ibm.icu.text.TransliteratorIDParser$Specs,int) -> a
    734:759:com.ibm.icu.text.TransliteratorIDParser$SingleID specsToSpecialInverse(com.ibm.icu.text.TransliteratorIDParser$Specs) -> a
    64:64:void <clinit>() -> <clinit>
com.ibm.icu.text.TransliteratorIDParser$SingleID -> com.ibm.icu.text.en:
    java.lang.String canonID -> a
    java.lang.String basicID -> b
    java.lang.String filter -> c
    115:119:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    121:122:void <init>(java.lang.String,java.lang.String) -> <init>
    125:135:com.ibm.icu.text.Transliterator getInstance() -> a
com.ibm.icu.text.TransliteratorIDParser$Specs -> com.ibm.icu.text.eo:
    java.lang.String source -> a
    java.lang.String target -> b
    java.lang.String variant -> c
    java.lang.String filter -> d
    boolean sawSource -> e
    87:93:void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String) -> <init>
com.ibm.icu.text.TransliteratorParser -> com.ibm.icu.text.ep:
    java.util.List dataVector -> a
    java.util.List idBlockVector -> b
    com.ibm.icu.text.RuleBasedTransliterator$Data curData -> d
    com.ibm.icu.text.UnicodeSet compoundFilter -> c
    int direction -> e
    com.ibm.icu.text.TransliteratorParser$ParseData parseData -> f
    java.util.List variablesVector -> g
    java.util.Map variableNames -> h
    java.lang.StringBuffer segmentStandins -> i
    java.util.List segmentObjects -> j
    char variableNext -> k
    char variableLimit -> l
    java.lang.String undefinedVariableName -> m
    int dotStandIn -> n
    com.ibm.icu.text.UnicodeSet ILLEGAL_TOP -> o
    com.ibm.icu.text.UnicodeSet ILLEGAL_SEG -> p
    com.ibm.icu.text.UnicodeSet ILLEGAL_FUNC -> q
    116:860:void <init>() -> <init>
    867:868:void parse(java.lang.String,int) -> a
    896:1116:void parseRules(com.ibm.icu.text.TransliteratorParser$RuleBody,int) -> a
    1135:1301:int parseRule(java.lang.String,int,int) -> a
    1308:1318:void setVariableRange(int,int) -> a
    1326:1329:void checkVariableRange(int,java.lang.String,int) -> a
    1341:1341:void pragmaMaximumBackup$13462e() -> e
    1355:1355:void pragmaNormalizeRules$1f6aa4f9() -> f
    1367:1367:boolean resemblesPragma(java.lang.String,int,int) -> b
    1380:1416:int parsePragma(java.lang.String,int,int) -> c
    1429:1430:void syntaxError(java.lang.String,java.lang.String,int) -> a
    1435:1439:int ruleEnd(java.lang.String,int,int) -> d
    1447:1452:char parseSet(java.lang.String,java.text.ParsePosition) -> a
    1464:1474:char generateStandInFor(java.lang.Object) -> a
    1481:1496:char getSegmentStandin(int) -> a
    1507:1517:void setSegmentObject(int,com.ibm.icu.text.StringMatcher) -> a
    1524:1527:char getDotStandIn() -> a
    1536:1555:void appendVariableDef(java.lang.String,java.lang.StringBuffer) -> a
    21:21:java.util.Map access$000(com.ibm.icu.text.TransliteratorParser) -> a
    21:21:com.ibm.icu.text.RuleBasedTransliterator$Data access$100(com.ibm.icu.text.TransliteratorParser) -> b
    21:21:java.util.List access$200(com.ibm.icu.text.TransliteratorParser) -> c
    21:21:com.ibm.icu.text.UnicodeSet access$400() -> b
    21:21:char access$500(com.ibm.icu.text.TransliteratorParser,java.lang.String,java.text.ParsePosition) -> a
    21:21:void access$600(com.ibm.icu.text.TransliteratorParser,int,java.lang.String,int) -> a
    21:21:com.ibm.icu.text.UnicodeSet access$700() -> c
    21:21:com.ibm.icu.text.UnicodeSet access$800() -> d
    21:21:com.ibm.icu.text.TransliteratorParser$ParseData access$900(com.ibm.icu.text.TransliteratorParser) -> d
    21:21:void access$1000(com.ibm.icu.text.TransliteratorParser,java.lang.String,java.lang.StringBuffer) -> a
    182:188:void <clinit>() -> <clinit>
com.ibm.icu.text.TransliteratorParser$ParseData -> com.ibm.icu.text.eq:
    com.ibm.icu.text.TransliteratorParser this$0 -> a
    200:200:void <init>(com.ibm.icu.text.TransliteratorParser) -> <init>
    206:206:char[] lookup(java.lang.String) -> lookup
    215:219:com.ibm.icu.text.UnicodeMatcher lookupMatcher(int) -> lookupMatcher
    227:241:java.lang.String parseReference(java.lang.String,java.text.ParsePosition,int) -> parseReference
    251:255:boolean isMatcher(int) -> a
    265:269:boolean isReplacer(int) -> b
    200:200:void <init>(com.ibm.icu.text.TransliteratorParser,byte) -> <init>
com.ibm.icu.text.TransliteratorParser$RuleArray -> com.ibm.icu.text.er:
    java.lang.String[] array -> a
    int i -> b
    329:329:void <init>(java.lang.String[]) -> <init>
    331:331:java.lang.String handleNextLine() -> a
    334:335:void reset() -> b
com.ibm.icu.text.TransliteratorParser$RuleBody -> com.ibm.icu.text.es:
    284:284:void <init>() -> <init>
    293:309:java.lang.String nextLine() -> c
    void reset() -> b
    java.lang.String handleNextLine() -> a
    284:284:void <init>(byte) -> <init>
com.ibm.icu.text.TransliteratorParser$RuleHalf -> com.ibm.icu.text.et:
    java.lang.String text -> a
    int cursor -> b
    int ante -> c
    int post -> d
    int cursorOffset -> e
    int cursorOffsetPos -> h
    boolean anchorStart -> f
    boolean anchorEnd -> g
    int nextSegmentNumber -> i
    364:394:void <init>() -> <init>
    404:413:int parse(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser) -> a
    444:808:int parseSection(java.lang.String,int,int,com.ibm.icu.text.TransliteratorParser,java.lang.StringBuffer,com.ibm.icu.text.UnicodeSet,boolean) -> a
    815:819:void removeContext() -> a
    826:833:boolean isValidOutput(com.ibm.icu.text.TransliteratorParser) -> a
    841:848:boolean isValidInput(com.ibm.icu.text.TransliteratorParser) -> b
    364:364:void <init>(byte) -> <init>
com.ibm.icu.text.TransliteratorRegistry -> com.ibm.icu.text.eu:
    java.util.Map registry -> a
    java.util.Map specDAG -> b
    java.util.List availableIDs -> c
    291:295:void <init>() -> <init>
    309:310:com.ibm.icu.text.Transliterator get(java.lang.String,java.lang.StringBuffer) -> a
    322:323:void put(java.lang.String,java.lang.Class,boolean) -> a
    333:334:void put(java.lang.String,com.ibm.icu.text.Transliterator$Factory,boolean) -> a
    346:347:void put(java.lang.String,java.lang.String,java.lang.String,int,boolean) -> a
    357:358:void put(java.lang.String,java.lang.String,boolean) -> a
    368:369:void put(java.lang.String,com.ibm.icu.text.Transliterator,boolean) -> a
    377:383:void remove(java.lang.String) -> a
    418:418:java.util.Enumeration getAvailableIDs() -> a
    427:427:java.util.Enumeration getAvailableSources() -> b
    437:442:java.util.Enumeration getAvailableTargets(java.lang.String) -> b
    452:462:java.util.Enumeration getAvailableVariants(java.lang.String,java.lang.String) -> a
    477:483:void registerEntry(java.lang.String,java.lang.String,java.lang.String,java.lang.Object,boolean) -> a
    491:495:void registerEntry(java.lang.String,java.lang.Object,boolean) -> a
    507:527:void registerEntry(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,boolean) -> a
    540:563:void registerSTV(java.lang.String,java.lang.String,java.lang.String) -> a
    573:591:void removeSTV(java.lang.String,java.lang.String,java.lang.String) -> b
    602:609:java.lang.Object[] findInDynamicStore(com.ibm.icu.text.TransliteratorRegistry$Spec,com.ibm.icu.text.TransliteratorRegistry$Spec,java.lang.String) -> a
    631:644:java.lang.Object[] findInStaticStore(com.ibm.icu.text.TransliteratorRegistry$Spec,com.ibm.icu.text.TransliteratorRegistry$Spec,java.lang.String) -> b
    662:726:java.lang.Object[] findInBundle(com.ibm.icu.text.TransliteratorRegistry$Spec,com.ibm.icu.text.TransliteratorRegistry$Spec,java.lang.String,int) -> a
    733:734:java.lang.Object[] find(java.lang.String) -> c
    762:806:java.lang.Object[] find(java.lang.String,java.lang.String,java.lang.String) -> c
    834:916:com.ibm.icu.text.Transliterator instantiateEntry(java.lang.String,java.lang.Object[],java.lang.StringBuffer) -> a
com.ibm.icu.text.TransliteratorRegistry$AliasEntry -> com.ibm.icu.text.ev:
    java.lang.String alias -> a
    241:243:void <init>(java.lang.String) -> <init>
com.ibm.icu.text.TransliteratorRegistry$CompoundRBTEntry -> com.ibm.icu.text.ew:
    java.lang.String ID -> a
    java.util.List idBlockVector -> b
    java.util.List dataVector -> c
    com.ibm.icu.text.UnicodeSet compoundFilter -> d
    254:259:void <init>(java.lang.String,java.util.List,java.util.List,com.ibm.icu.text.UnicodeSet) -> <init>
    262:283:com.ibm.icu.text.Transliterator getInstance() -> a
com.ibm.icu.text.TransliteratorRegistry$IDEnumeration -> com.ibm.icu.text.ex:
    java.util.Enumeration en -> a
    396:398:void <init>(java.util.Enumeration) -> <init>
    401:401:boolean hasMoreElements() -> hasMoreElements
    405:405:java.lang.String nextElement() -> a
    393:393:java.lang.Object nextElement() -> nextElement
com.ibm.icu.text.TransliteratorRegistry$LocaleEntry -> com.ibm.icu.text.ey:
    java.lang.String rule -> a
    int direction -> b
    233:236:void <init>(java.lang.String,int) -> <init>
com.ibm.icu.text.TransliteratorRegistry$ResourceEntry -> com.ibm.icu.text.ez:
    java.lang.String resource -> a
    int direction -> b
    222:226:void <init>(java.lang.String,java.lang.String,int) -> <init>
com.ibm.icu.text.TransliteratorRegistry$Spec -> com.ibm.icu.text.eA:
    java.lang.String top -> a
    java.lang.String spec -> b
    java.lang.String nextSpec -> c
    java.lang.String scriptName -> d
    boolean isSpecLocale -> e
    boolean isNextLocale -> f
    com.ibm.icu.impl.ICUResourceBundle res -> g
    99:138:void <init>(java.lang.String) -> <init>
    141:141:boolean hasFallback() -> a
    145:150:void reset() -> b
    153:173:void setupNext() -> h
    180:183:java.lang.String next() -> c
    187:187:java.lang.String get() -> d
    191:191:boolean isLocale() -> e
    202:206:java.util.ResourceBundle getBundle() -> f
    210:210:java.lang.String getTop() -> g
com.ibm.icu.text.UCharacterIterator -> com.ibm.icu.text.UCharacterIterator:
    39:40:void <init>() -> <init>
    53:53:com.ibm.icu.text.UCharacterIterator getInstance(com.ibm.icu.text.Replaceable) -> getInstance
    65:65:com.ibm.icu.text.UCharacterIterator getInstance(java.lang.String) -> getInstance
    77:77:com.ibm.icu.text.UCharacterIterator getInstance(char[]) -> getInstance
    89:89:com.ibm.icu.text.UCharacterIterator getInstance(char[],int,int) -> getInstance
    100:100:com.ibm.icu.text.UCharacterIterator getInstance(java.lang.StringBuffer) -> getInstance
    112:112:com.ibm.icu.text.UCharacterIterator getInstance(java.text.CharacterIterator) -> getInstance
    124:124:java.text.CharacterIterator getCharacterIterator() -> getCharacterIterator
    int current() -> current
    145:164:int currentCodePoint() -> currentCodePoint
    int getLength() -> getLength
    int getIndex() -> getIndex
    int next() -> next
    206:216:int nextCodePoint() -> nextCodePoint
    int previous() -> previous
    243:253:int previousCodePoint() -> previousCodePoint
    void setIndex(int) -> setIndex
    270:271:void setToLimit() -> setToLimit
    278:279:void setToStart() -> setToStart
    int getText(char[],int) -> getText
    329:329:int getText(char[]) -> getText
    338:340:java.lang.String getText() -> getText
    360:362:int moveIndex(int) -> moveIndex
    381:390:int moveCodePointIndex(int) -> moveCodePointIndex
    400:400:java.lang.Object clone() -> clone
com.ibm.icu.text.UFieldPosition -> com.ibm.icu.text.UFieldPosition:
    int countVisibleFractionDigits -> a
    long fractionDigits -> b
    19:29:void <init>() -> <init>
    19:38:void <init>(int) -> <init>
    19:47:void <init>(java.text.Format$Field,int) -> <init>
    19:56:void <init>(java.text.Format$Field) -> <init>
    64:66:void setFractionDigits(int,long) -> setFractionDigits
    74:74:int getCountVisibleFractionDigits() -> getCountVisibleFractionDigits
    83:83:long getFractionDigits() -> getFractionDigits
com.ibm.icu.text.UFormat -> com.ibm.icu.text.UFormat:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.util.ULocale validLocale -> a
    com.ibm.icu.util.ULocale actualLocale -> b
    32:32:void <init>() -> <init>
    61:61:com.ibm.icu.util.ULocale getLocale(com.ibm.icu.util.ULocale$Type) -> getLocale
    83:92:void setLocale(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> a
com.ibm.icu.text.UForwardCharacterIterator -> com.ibm.icu.text.UForwardCharacterIterator:
    int DONE -> DONE
    int next() -> next
    int nextCodePoint() -> nextCodePoint
com.ibm.icu.text.UTF16 -> com.ibm.icu.text.UTF16:
    int SINGLE_CHAR_BOUNDARY -> SINGLE_CHAR_BOUNDARY
    int LEAD_SURROGATE_BOUNDARY -> LEAD_SURROGATE_BOUNDARY
    int TRAIL_SURROGATE_BOUNDARY -> TRAIL_SURROGATE_BOUNDARY
    int CODEPOINT_MIN_VALUE -> CODEPOINT_MIN_VALUE
    int CODEPOINT_MAX_VALUE -> CODEPOINT_MAX_VALUE
    int SUPPLEMENTARY_MIN_VALUE -> SUPPLEMENTARY_MIN_VALUE
    int LEAD_SURROGATE_MIN_VALUE -> LEAD_SURROGATE_MIN_VALUE
    int TRAIL_SURROGATE_MIN_VALUE -> TRAIL_SURROGATE_MIN_VALUE
    int LEAD_SURROGATE_MAX_VALUE -> LEAD_SURROGATE_MAX_VALUE
    int TRAIL_SURROGATE_MAX_VALUE -> TRAIL_SURROGATE_MAX_VALUE
    int SURROGATE_MIN_VALUE -> SURROGATE_MIN_VALUE
    int SURROGATE_MAX_VALUE -> SURROGATE_MAX_VALUE
    194:195:void <init>() -> <init>
    217:221:int charAt(java.lang.String,int) -> charAt
    225:251:int _charAt(java.lang.String,int,char) -> a
    271:275:int charAt(java.lang.CharSequence,int) -> charAt
    279:307:int _charAt(java.lang.CharSequence,int,char) -> a
    327:357:int charAt(java.lang.StringBuffer,int) -> charAt
    379:410:int charAt(char[],int,int,int) -> charAt
    430:460:int charAt(com.ibm.icu.text.Replaceable,int) -> charAt
    473:476:int getCharCount(int) -> getCharCount
    498:512:int bounds(java.lang.String,int) -> bounds
    534:548:int bounds(java.lang.StringBuffer,int) -> bounds
    574:592:int bounds(char[],int,int,int) -> bounds
    603:603:boolean isSurrogate(char) -> isSurrogate
    614:614:boolean isTrailSurrogate(char) -> isTrailSurrogate
    625:625:boolean isLeadSurrogate(char) -> isLeadSurrogate
    639:642:char getLeadSurrogate(int) -> getLeadSurrogate
    656:659:char getTrailSurrogate(int) -> getTrailSurrogate
    673:676:java.lang.String valueOf(int) -> valueOf
    693:699:java.lang.String valueOf(java.lang.String,int) -> valueOf
    717:723:java.lang.String valueOf(java.lang.StringBuffer,int) -> valueOf
    745:751:java.lang.String valueOf(char[],int,int,int) -> valueOf
    766:783:int findOffsetFromCodePoint(java.lang.String,int) -> findOffsetFromCodePoint
    798:815:int findOffsetFromCodePoint(java.lang.StringBuffer,int) -> findOffsetFromCodePoint
    832:849:int findOffsetFromCodePoint(char[],int,int,int) -> findOffsetFromCodePoint
    875:903:int findCodePointOffset(java.lang.String,int) -> findCodePointOffset
    929:957:int findCodePointOffset(java.lang.StringBuffer,int) -> findCodePointOffset
    985:1014:int findCodePointOffset(char[],int,int,int) -> findCodePointOffset
    1030:1041:java.lang.StringBuffer append(java.lang.StringBuffer,int) -> append
    1055:1055:java.lang.StringBuffer appendCodePoint(java.lang.StringBuffer,int) -> appendCodePoint
    1071:1081:int append(char[],int,int) -> append
    1092:1095:int countCodePoint(java.lang.String) -> countCodePoint
    1106:1109:int countCodePoint(java.lang.StringBuffer) -> countCodePoint
    1123:1126:int countCodePoint(char[],int,int) -> countCodePoint
    1139:1158:void setCharAt(java.lang.StringBuffer,int,int) -> setCharAt
    1174:1224:int setCharAt(char[],int,int,int) -> setCharAt
    1238:1278:int moveCodePointOffset(java.lang.String,int,int) -> moveCodePointOffset
    1292:1332:int moveCodePointOffset(java.lang.StringBuffer,int,int) -> moveCodePointOffset
    1350:1396:int moveCodePointOffset(char[],int,int,int,int) -> moveCodePointOffset
    1421:1426:java.lang.StringBuffer insert(java.lang.StringBuffer,int,int) -> insert
    1450:1463:int insert(char[],int,int,int) -> insert
    1477:1488:java.lang.StringBuffer delete(java.lang.StringBuffer,int) -> delete
    1503:1515:int delete(char[],int,int) -> delete
    1542:1567:int indexOf(java.lang.String,int) -> indexOf
    1596:1616:int indexOf(java.lang.String,java.lang.String) -> indexOf
    1643:1668:int indexOf(java.lang.String,int,int) -> indexOf
    1699:1719:int indexOf(java.lang.String,java.lang.String,int) -> indexOf
    1745:1770:int lastIndexOf(java.lang.String,int) -> lastIndexOf
    1799:1818:int lastIndexOf(java.lang.String,java.lang.String) -> lastIndexOf
    1856:1881:int lastIndexOf(java.lang.String,int,int) -> lastIndexOf
    1922:1941:int lastIndexOf(java.lang.String,java.lang.String,int) -> lastIndexOf
    1973:2001:java.lang.String replace(java.lang.String,int,int) -> replace
    2034:2050:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
    2066:2081:java.lang.StringBuffer reverse(java.lang.StringBuffer) -> reverse
    2099:2141:boolean hasMoreCodePointsThan(java.lang.String,int) -> hasMoreCodePointsThan
    2164:2209:boolean hasMoreCodePointsThan(char[],int,int,int) -> hasMoreCodePointsThan
    2229:2271:boolean hasMoreCodePointsThan(java.lang.StringBuffer,int) -> hasMoreCodePointsThan
    2287:2317:java.lang.String newString(int[],int,int) -> newString
    2621:2634:int getSingleCodePoint(java.lang.CharSequence) -> getSingleCodePoint
    2655:2667:int compareCodePoint(int,java.lang.CharSequence) -> compareCodePoint
    2708:2715:java.lang.String toString(int) -> a
com.ibm.icu.text.UTF16$StringComparator -> com.ibm.icu.text.UTF16$StringComparator:
    int FOLD_CASE_DEFAULT -> FOLD_CASE_DEFAULT
    int FOLD_CASE_EXCLUDE_SPECIAL_I -> FOLD_CASE_EXCLUDE_SPECIAL_I
    int m_codePointCompare_ -> a
    int m_foldCase_ -> b
    boolean m_ignoreCase_ -> c
    2351:2352:void <init>() -> <init>
    2368:2375:void <init>(boolean,boolean,int) -> <init>
    2414:2419:void setCodePointCompare(boolean) -> setCodePointCompare
    2434:2439:void setIgnoreCase(boolean,int) -> setIgnoreCase
    2450:2450:boolean getCodePointCompare() -> getCodePointCompare
    2460:2460:boolean getIgnoreCase() -> getIgnoreCase
    2472:2472:int getIgnoreCaseOption() -> getIgnoreCaseOption
    2488:2501:int compare(java.lang.String,java.lang.String) -> compare
    2540:2540:int compareCaseInsensitive(java.lang.String,java.lang.String) -> a
    2557:2609:int compareCaseSensitive(java.lang.String,java.lang.String) -> b
    2342:2342:int compare(java.lang.Object,java.lang.Object) -> compare
com.ibm.icu.text.UnescapeTransliterator -> com.ibm.icu.text.eB:
    char[] spec -> a
    51:125:void register() -> a
    131:133:void <init>(java.lang.String,char[]) -> <init>
    140:251:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    261:285:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
com.ibm.icu.text.UnescapeTransliterator$1 -> com.ibm.icu.text.eC:
    51:51:void <init>() -> <init>
    53:53:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.UnescapeTransliterator$2 -> com.ibm.icu.text.eD:
    61:61:void <init>() -> <init>
    63:63:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.UnescapeTransliterator$3 -> com.ibm.icu.text.eE:
    71:71:void <init>() -> <init>
    73:73:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.UnescapeTransliterator$4 -> com.ibm.icu.text.eF:
    82:82:void <init>() -> <init>
    84:84:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.UnescapeTransliterator$5 -> com.ibm.icu.text.eG:
    92:92:void <init>() -> <init>
    94:94:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.UnescapeTransliterator$6 -> com.ibm.icu.text.eH:
    102:102:void <init>() -> <init>
    104:104:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.UnescapeTransliterator$7 -> com.ibm.icu.text.eI:
    112:112:void <init>() -> <init>
    114:114:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.UnhandledBreakEngine -> com.ibm.icu.text.eJ:
    com.ibm.icu.text.UnicodeSet[] fHandled -> a
    19:24:void <init>() -> <init>
    27:27:boolean handles(int,int) -> a
    33:34:int findBreaks$16561d4c(java.text.CharacterIterator,int,int,boolean,com.ibm.icu.text.DictionaryBreakEngine$DequeI) -> a
    38:44:void handleChar(int,int) -> b
com.ibm.icu.text.UnicodeCompressor -> com.ibm.icu.text.UnicodeCompressor:
    boolean[] sSingleTagTable -> c
    boolean[] sUnicodeTagTable -> d
    int fCurrentWindow -> e
    int[] fOffsets -> f
    int fMode -> g
    int[] fIndexCount -> h
    int[] fTimeStamps -> i
    int fTimeStamp -> j
    265:292:void <init>() -> <init>
    303:303:byte[] compress(java.lang.String) -> compress
    319:334:byte[] compress(char[],int,int) -> compress
    365:816:int compress(char[],int,int,int[],byte[],int,int) -> compress
    828:851:void reset() -> reset
    867:890:int makeIndex(int) -> a
    908:908:boolean inDynamicWindow(int,int) -> a
    922:922:boolean inStaticWindow(int,int) -> b
    937:937:boolean isCompressible(int) -> b
    954:961:int findDynamicWindow(int) -> c
    974:980:int findStaticWindow(int) -> d
    990:1003:int getLRDefinedWindow() -> a
    193:227:void <clinit>() -> <clinit>
com.ibm.icu.text.UnicodeDecompressor -> com.ibm.icu.text.UnicodeDecompressor:
    int fCurrentWindow -> c
    int[] fOffsets -> d
    int fMode -> e
    byte[] fBuffer -> f
    int fBufferLength -> g
    79:105:void <init>() -> <init>
    115:116:java.lang.String decompress(byte[]) -> decompress
    129:142:char[] decompress(byte[],int,int) -> decompress
    174:533:int decompress(byte[],int,int,int[],char[],int,int) -> decompress
    543:556:void reset() -> reset
com.ibm.icu.text.UnicodeFilter -> com.ibm.icu.text.UnicodeFilter:
    boolean contains(int) -> contains
    39:57:int matches(com.ibm.icu.text.Replaceable,int[],int,boolean) -> matches
    70:70:void <init>() -> <init>
com.ibm.icu.text.UnicodeMatcher -> com.ibm.icu.text.UnicodeMatcher:
    int U_MISMATCH -> U_MISMATCH
    int U_PARTIAL_MATCH -> U_PARTIAL_MATCH
    int U_MATCH -> U_MATCH
    char ETHER -> ETHER
    int matches(com.ibm.icu.text.Replaceable,int[],int,boolean) -> matches
    java.lang.String toPattern(boolean) -> toPattern
    boolean matchesIndexValue(int) -> matchesIndexValue
    void addMatchSetTo(com.ibm.icu.text.UnicodeSet) -> addMatchSetTo
com.ibm.icu.text.UnicodeNameTransliterator -> com.ibm.icu.text.eK:
    25:30:void register() -> a
    36:37:void <init>(com.ibm.icu.text.UnicodeFilter) -> <init>
    44:72:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    79:93:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
com.ibm.icu.text.UnicodeNameTransliterator$1 -> com.ibm.icu.text.eL:
    25:25:void <init>() -> <init>
    27:27:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.UnicodeReplacer -> com.ibm.icu.text.eM:
    int replace(com.ibm.icu.text.Replaceable,int,int,int[]) -> a
    java.lang.String toReplacerPattern(boolean) -> a
    void addReplacementSetTo(com.ibm.icu.text.UnicodeSet) -> a
com.ibm.icu.text.UnicodeSet -> com.ibm.icu.text.UnicodeSet:
    com.ibm.icu.text.UnicodeSet EMPTY -> EMPTY
    com.ibm.icu.text.UnicodeSet ALL_CODE_POINTS -> ALL_CODE_POINTS
    com.ibm.icu.text.UnicodeSet$XSymbolTable XSYMBOL_TABLE -> b
    int MIN_VALUE -> MIN_VALUE
    int MAX_VALUE -> MAX_VALUE
    int len -> c
    int[] list -> d
    int[] rangeList -> e
    int[] buffer -> f
    java.util.TreeSet strings -> a
    java.lang.String pat -> g
    com.ibm.icu.text.UnicodeSet[] INCLUSIONS -> h
    com.ibm.icu.impl.BMPSet bmpSet -> i
    com.ibm.icu.impl.UnicodeSetStringSpan stringSpan -> j
    com.ibm.icu.util.VersionInfo NO_VERSION -> k
    int IGNORE_SPACE -> IGNORE_SPACE
    int CASE -> CASE
    int CASE_INSENSITIVE -> CASE_INSENSITIVE
    int ADD_CASE_MAPPINGS -> ADD_CASE_MAPPINGS
    boolean $assertionsDisabled -> l
    326:368:void <init>() -> <init>
    326:376:void <init>(com.ibm.icu.text.UnicodeSet) -> <init>
    387:389:void <init>(int,int) -> <init>
    326:423:void <init>(int[]) -> <init>
    434:436:void <init>(java.lang.String) -> <init>
    448:450:void <init>(java.lang.String,boolean) -> <init>
    463:465:void <init>(java.lang.String,int) -> <init>
    480:482:void <init>(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable) -> <init>
    499:501:void <init>(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable,int) -> <init>
    509:515:java.lang.Object clone() -> clone
    528:531:com.ibm.icu.text.UnicodeSet set(int,int) -> set
    541:546:com.ibm.icu.text.UnicodeSet set(com.ibm.icu.text.UnicodeSet) -> set
    559:560:com.ibm.icu.text.UnicodeSet applyPattern(java.lang.String) -> applyPattern
    574:575:com.ibm.icu.text.UnicodeSet applyPattern(java.lang.String,boolean) -> applyPattern
    590:591:com.ibm.icu.text.UnicodeSet applyPattern(java.lang.String,int) -> applyPattern
    600:600:boolean resemblesPattern(java.lang.String,int) -> resemblesPattern
    611:621:void appendCodePoint(java.lang.Appendable,int) -> a
    629:633:void append(java.lang.Appendable,java.lang.CharSequence) -> a
    641:645:java.lang.Appendable _appendToPat(java.lang.Appendable,java.lang.String,boolean) -> a
    654:685:java.lang.Appendable _appendToPat(java.lang.Appendable,int,boolean) -> b
    696:700:java.lang.String toPattern(boolean) -> toPattern
    710:744:java.lang.Appendable _toPattern(java.lang.Appendable,boolean) -> a
    757:757:java.lang.StringBuffer _generatePattern(java.lang.StringBuffer,boolean) -> _generatePattern
    769:769:java.lang.StringBuffer _generatePattern(java.lang.StringBuffer,boolean,boolean) -> _generatePattern
    775:827:java.lang.Appendable appendNewPattern(java.lang.Appendable,boolean,boolean) -> a
    840:845:int size() -> size
    855:855:boolean isEmpty() -> isEmpty
    874:898:boolean matchesIndexValue(int) -> matchesIndexValue
    911:985:int matches(com.ibm.icu.text.Replaceable,int[],int,boolean) -> matches
    1012:1027:int matchRest(com.ibm.icu.text.Replaceable,int,int,java.lang.String) -> a
    1037:1066:int matchesAt(java.lang.CharSequence,int) -> matchesAt
    1078:1089:int matchesAt(java.lang.CharSequence,int,java.lang.CharSequence) -> a
    1100:1101:void addMatchSetTo(com.ibm.icu.text.UnicodeSet) -> addMatchSetTo
    1112:1127:int indexOf(int) -> indexOf
    1140:1154:int charAt(int) -> charAt
    1170:1171:com.ibm.icu.text.UnicodeSet add(int,int) -> add
    1182:1183:com.ibm.icu.text.UnicodeSet addAll(int,int) -> addAll
    1188:1199:com.ibm.icu.text.UnicodeSet add_unchecked(int,int) -> a
    1228:1229:com.ibm.icu.text.UnicodeSet add(int) -> add
    1234:1317:com.ibm.icu.text.UnicodeSet add_unchecked(int) -> a
    1331:1339:com.ibm.icu.text.UnicodeSet add(java.lang.CharSequence) -> add
    1350:1361:int getSingleCP(java.lang.CharSequence) -> a
    1372:1378:com.ibm.icu.text.UnicodeSet addAll(java.lang.CharSequence) -> addAll
    1389:1389:com.ibm.icu.text.UnicodeSet retainAll(java.lang.CharSequence) -> retainAll
    1400:1400:com.ibm.icu.text.UnicodeSet complementAll(java.lang.CharSequence) -> complementAll
    1411:1411:com.ibm.icu.text.UnicodeSet removeAll(java.lang.CharSequence) -> removeAll
    1420:1425:com.ibm.icu.text.UnicodeSet removeAllStrings() -> removeAllStrings
    1436:1436:com.ibm.icu.text.UnicodeSet from(java.lang.CharSequence) -> from
    1447:1447:com.ibm.icu.text.UnicodeSet fromAll(java.lang.CharSequence) -> fromAll
    1463:1475:com.ibm.icu.text.UnicodeSet retain(int,int) -> retain
    1487:1487:com.ibm.icu.text.UnicodeSet retain(int) -> retain
    1500:1513:com.ibm.icu.text.UnicodeSet retain(java.lang.CharSequence) -> retain
    1529:1539:com.ibm.icu.text.UnicodeSet remove(int,int) -> remove
    1551:1551:com.ibm.icu.text.UnicodeSet remove(int) -> remove
    1563:1570:com.ibm.icu.text.UnicodeSet remove(java.lang.CharSequence) -> remove
    1586:1597:com.ibm.icu.text.UnicodeSet complement(int,int) -> complement
    1607:1607:com.ibm.icu.text.UnicodeSet complement(int) -> complement
    1616:1627:com.ibm.icu.text.UnicodeSet complement() -> complement
    1640:1653:com.ibm.icu.text.UnicodeSet complement(java.lang.CharSequence) -> complement
    1663:1684:boolean contains(int) -> contains
    1709:1725:int findCodePoint(int) -> b
    1852:1863:boolean contains(int,int) -> contains
    1875:1879:boolean contains(java.lang.CharSequence) -> contains
    1895:1941:boolean containsAll(com.ibm.icu.text.UnicodeSet) -> containsAll
    1976:1985:boolean containsAll(java.lang.String) -> containsAll
    1995:2007:boolean containsAll(java.lang.String,int) -> a
    2019:2028:java.lang.String getRegexEquivalent() -> getRegexEquivalent
    2040:2050:boolean containsNone(int,int) -> containsNone
    2065:2108:boolean containsNone(com.ibm.icu.text.UnicodeSet) -> containsNone
    2142:2142:boolean containsNone(java.lang.CharSequence) -> containsNone
    2154:2154:boolean containsSome(int,int) -> containsSome
    2165:2165:boolean containsSome(com.ibm.icu.text.UnicodeSet) -> containsSome
    2176:2176:boolean containsSome(java.lang.CharSequence) -> containsSome
    2191:2194:com.ibm.icu.text.UnicodeSet addAll(com.ibm.icu.text.UnicodeSet) -> addAll
    2208:2211:com.ibm.icu.text.UnicodeSet retainAll(com.ibm.icu.text.UnicodeSet) -> retainAll
    2225:2228:com.ibm.icu.text.UnicodeSet removeAll(com.ibm.icu.text.UnicodeSet) -> removeAll
    2241:2244:com.ibm.icu.text.UnicodeSet complementAll(com.ibm.icu.text.UnicodeSet) -> complementAll
    2253:2258:com.ibm.icu.text.UnicodeSet clear() -> clear
    2269:2269:int getRangeCount() -> getRangeCount
    2282:2282:int getRangeStart(int) -> getRangeStart
    2295:2295:int getRangeEnd(int) -> getRangeEnd
    2304:2312:com.ibm.icu.text.UnicodeSet compact() -> compact
    2327:2343:boolean equals(java.lang.Object) -> equals
    2354:2359:int hashCode() -> hashCode
    2367:2367:java.lang.String toString() -> toString
    2406:2432:com.ibm.icu.text.UnicodeSet applyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable,int) -> applyPattern
    2471:2850:void applyPattern(com.ibm.icu.impl.RuleCharacterIterator,com.ibm.icu.text.SymbolTable,java.lang.Appendable,int) -> a
    2853:2853:void syntaxError(com.ibm.icu.impl.RuleCharacterIterator,java.lang.String) -> a
    2864:2864:java.util.Collection addAllTo(java.util.Collection) -> addAllTo
    2874:2874:java.lang.String[] addAllTo(java.lang.String[]) -> addAllTo
    2882:2882:java.lang.String[] toArray(com.ibm.icu.text.UnicodeSet) -> toArray
    2893:2893:com.ibm.icu.text.UnicodeSet add(java.lang.Iterable) -> add
    2904:2908:com.ibm.icu.text.UnicodeSet addAll(java.lang.Iterable) -> addAll
    2916:2920:void ensureCapacity(int) -> c
    2923:2925:void ensureBufferCapacity(int) -> d
    2931:2937:int[] range(int,int) -> b
    2948:2989:com.ibm.icu.text.UnicodeSet xor(int[],int,int) -> a
    2998:3087:com.ibm.icu.text.UnicodeSet add(int[],int,int) -> b
    3096:3158:com.ibm.icu.text.UnicodeSet retain(int[],int,int) -> c
    3162:3162:int max(int,int) -> c
    3225:3268:com.ibm.icu.text.UnicodeSet getInclusions(int) -> e
    3285:3314:com.ibm.icu.text.UnicodeSet applyFilter(com.ibm.icu.text.UnicodeSet$Filter,int) -> a
    3323:3339:java.lang.String mungeCharName(java.lang.String) -> a
    3370:3378:com.ibm.icu.text.UnicodeSet applyIntPropertyValue(int,int) -> applyIntPropertyValue
    3411:3411:com.ibm.icu.text.UnicodeSet applyPropertyAlias(java.lang.String,java.lang.String) -> applyPropertyAlias
    3427:3573:com.ibm.icu.text.UnicodeSet applyPropertyAlias(java.lang.String,java.lang.String,com.ibm.icu.text.SymbolTable) -> applyPropertyAlias
    3586:3591:boolean resemblesPropertyPattern(java.lang.String,int) -> b
    3606:3616:boolean resemblesPropertyPattern(com.ibm.icu.impl.RuleCharacterIterator,int) -> a
    3624:3704:com.ibm.icu.text.UnicodeSet applyPropertyPattern(java.lang.String,java.text.ParsePosition,com.ibm.icu.text.SymbolTable) -> a
    3719:3727:void applyPropertyPattern(com.ibm.icu.impl.RuleCharacterIterator,java.lang.Appendable,com.ibm.icu.text.SymbolTable) -> a
    3798:3810:void addCaseMapping(com.ibm.icu.text.UnicodeSet,int,java.lang.StringBuilder) -> a
    3837:3902:com.ibm.icu.text.UnicodeSet closeOver(int) -> closeOver
    3975:3975:boolean isFrozen() -> isFrozen
    3985:4017:com.ibm.icu.text.UnicodeSet freeze() -> freeze
    4029:4029:int span(java.lang.CharSequence,com.ibm.icu.text.UnicodeSet$SpanCondition) -> span
    4044:4065:int span(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition) -> span
    4078:4101:int spanAndCount(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition,com.ibm.icu.util.OutputInt) -> spanAndCount
    4107:4122:int spanCodePointsAndCount(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition,com.ibm.icu.util.OutputInt) -> a
    4134:4134:int spanBack(java.lang.CharSequence,com.ibm.icu.text.UnicodeSet$SpanCondition) -> spanBack
    4149:4183:int spanBack(java.lang.CharSequence,int,com.ibm.icu.text.UnicodeSet$SpanCondition) -> spanBack
    4192:4194:com.ibm.icu.text.UnicodeSet cloneAsThawed() -> cloneAsThawed
    4199:4202:void checkFrozen() -> b
    4269:4269:java.lang.Iterable ranges() -> ranges
    4308:4308:java.util.Iterator iterator() -> iterator
    4393:4398:boolean containsAll(java.lang.Iterable) -> containsAll
    4406:4411:boolean containsNone(java.lang.Iterable) -> containsNone
    4419:4419:boolean containsSome(java.lang.Iterable) -> containsSome
    4428:4432:com.ibm.icu.text.UnicodeSet addAll(java.lang.CharSequence[]) -> addAll
    4441:4445:com.ibm.icu.text.UnicodeSet removeAll(java.lang.Iterable) -> removeAll
    4453:4458:com.ibm.icu.text.UnicodeSet retainAll(java.lang.Iterable) -> retainAll
    4487:4487:int compareTo(com.ibm.icu.text.UnicodeSet) -> compareTo
    4495:4522:int compareTo(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet$ComparisonStyle) -> compareTo
    4529:4529:int compareTo(java.lang.Iterable) -> compareTo
    4542:4542:int compare(java.lang.CharSequence,int) -> compare
    4553:4553:int compare(int,java.lang.CharSequence) -> compare
    4566:4566:int compare(java.lang.Iterable,java.lang.Iterable) -> compare
    4581:4592:int compare(java.util.Iterator,java.util.Iterator) -> compare
    4601:4607:int compare(java.util.Collection,java.util.Collection,com.ibm.icu.text.UnicodeSet$ComparisonStyle) -> compare
    4615:4618:java.util.Collection addAllTo(java.lang.Iterable,java.util.Collection) -> addAllTo
    4626:4630:java.lang.Object[] addAllTo(java.lang.Iterable,java.lang.Object[]) -> addAllTo
    4643:4643:java.util.Collection strings() -> strings
    4653:4653:int getSingleCodePoint(java.lang.CharSequence) -> getSingleCodePoint
    4667:4673:com.ibm.icu.text.UnicodeSet addBridges(com.ibm.icu.text.UnicodeSet) -> addBridges
    4687:4693:int findIn(java.lang.CharSequence,int,boolean) -> findIn
    4708:4715:int findLastIn(java.lang.CharSequence,int,boolean) -> findLastIn
    4728:4734:java.lang.String stripFrom(java.lang.CharSequence,boolean) -> stripFrom
    4843:4843:com.ibm.icu.text.UnicodeSet$XSymbolTable getDefaultXSymbolTable() -> getDefaultXSymbolTable
    4861:4863:void setDefaultXSymbolTable(com.ibm.icu.text.UnicodeSet$XSymbolTable) -> setDefaultXSymbolTable
    288:288:int compareTo(java.lang.Object) -> compareTo
    288:288:java.lang.Object cloneAsThawed() -> cloneAsThawed
    288:288:java.lang.Object freeze() -> freeze
    288:288:com.ibm.icu.util.VersionInfo access$000() -> a
    288:288:java.lang.Appendable access$100(java.lang.Appendable,int,boolean) -> a
    288:288:int access$400(com.ibm.icu.text.UnicodeSet) -> a
    288:288:int[] access$500(com.ibm.icu.text.UnicodeSet) -> b
    288:3210:void <clinit>() -> <clinit>
com.ibm.icu.text.UnicodeSet$ComparisonStyle -> com.ibm.icu.text.UnicodeSet$ComparisonStyle:
    com.ibm.icu.text.UnicodeSet$ComparisonStyle SHORTER_FIRST -> SHORTER_FIRST
    com.ibm.icu.text.UnicodeSet$ComparisonStyle LEXICOGRAPHIC -> LEXICOGRAPHIC
    com.ibm.icu.text.UnicodeSet$ComparisonStyle LONGER_FIRST -> LONGER_FIRST
    com.ibm.icu.text.UnicodeSet$ComparisonStyle[] $VALUES -> a
    4465:4465:com.ibm.icu.text.UnicodeSet$ComparisonStyle[] values() -> values
    4465:4465:com.ibm.icu.text.UnicodeSet$ComparisonStyle valueOf(java.lang.String) -> valueOf
    4465:4465:void <init>(java.lang.String,int) -> <init>
    4465:4477:void <clinit>() -> <clinit>
com.ibm.icu.text.UnicodeSet$EntryRange -> com.ibm.icu.text.UnicodeSet$EntryRange:
    int codepoint -> codepoint
    int codepointEnd -> codepointEnd
    4228:4229:void <init>() -> <init>
    4238:4239:java.lang.String toString() -> toString
com.ibm.icu.text.UnicodeSet$EntryRangeIterable -> com.ibm.icu.text.eN:
    com.ibm.icu.text.UnicodeSet this$0 -> a
    4272:4272:void <init>(com.ibm.icu.text.UnicodeSet) -> <init>
    4274:4274:java.util.Iterator iterator() -> iterator
    4272:4272:void <init>(com.ibm.icu.text.UnicodeSet,byte) -> <init>
com.ibm.icu.text.UnicodeSet$EntryRangeIterator -> com.ibm.icu.text.eO:
    int pos -> a
    com.ibm.icu.text.UnicodeSet$EntryRange result -> b
    com.ibm.icu.text.UnicodeSet this$0 -> c
    4278:4280:void <init>(com.ibm.icu.text.UnicodeSet) -> <init>
    4283:4283:boolean hasNext() -> hasNext
    4286:4292:com.ibm.icu.text.UnicodeSet$EntryRange next() -> a
    4295:4295:void remove() -> remove
    4278:4278:java.lang.Object next() -> next
    4278:4278:void <init>(com.ibm.icu.text.UnicodeSet,byte) -> <init>
com.ibm.icu.text.UnicodeSet$Filter -> com.ibm.icu.text.eP:
    boolean contains(int) -> a
com.ibm.icu.text.UnicodeSet$GeneralCategoryMaskFilter -> com.ibm.icu.text.eQ:
    int mask -> a
    3183:3183:void <init>(int) -> <init>
    3185:3185:boolean contains(int) -> a
com.ibm.icu.text.UnicodeSet$IntPropertyFilter -> com.ibm.icu.text.eR:
    int prop -> a
    int value -> b
    3192:3195:void <init>(int,int) -> <init>
    3197:3197:boolean contains(int) -> a
com.ibm.icu.text.UnicodeSet$NumericValueFilter -> com.ibm.icu.text.eS:
    double value -> a
    3175:3175:void <init>(double) -> <init>
    3177:3177:boolean contains(int) -> a
com.ibm.icu.text.UnicodeSet$ScriptExtensionsFilter -> com.ibm.icu.text.eT:
    int script -> a
    3203:3203:void <init>(int) -> <init>
    3205:3205:boolean contains(int) -> a
com.ibm.icu.text.UnicodeSet$SpanCondition -> com.ibm.icu.text.UnicodeSet$SpanCondition:
    com.ibm.icu.text.UnicodeSet$SpanCondition NOT_CONTAINED -> NOT_CONTAINED
    com.ibm.icu.text.UnicodeSet$SpanCondition CONTAINED -> CONTAINED
    com.ibm.icu.text.UnicodeSet$SpanCondition SIMPLE -> SIMPLE
    com.ibm.icu.text.UnicodeSet$SpanCondition CONDITION_COUNT -> CONDITION_COUNT
    com.ibm.icu.text.UnicodeSet$SpanCondition[] $VALUES -> a
    4777:4777:com.ibm.icu.text.UnicodeSet$SpanCondition[] values() -> values
    4777:4777:com.ibm.icu.text.UnicodeSet$SpanCondition valueOf(java.lang.String) -> valueOf
    4777:4777:void <init>(java.lang.String,int) -> <init>
    4777:4832:void <clinit>() -> <clinit>
com.ibm.icu.text.UnicodeSet$UnicodeSetIterator2 -> com.ibm.icu.text.eU:
    int[] sourceList -> a
    int len -> b
    int item -> c
    int current -> d
    int limit -> e
    java.util.TreeSet sourceStrings -> f
    java.util.Iterator stringIterator -> g
    char[] buffer -> h
    4325:4337:void <init>(com.ibm.icu.text.UnicodeSet) -> <init>
    4343:4343:boolean hasNext() -> hasNext
    4350:4377:java.lang.String next() -> a
    4384:4384:void remove() -> remove
    4312:4312:java.lang.Object next() -> next
com.ibm.icu.text.UnicodeSet$VersionFilter -> com.ibm.icu.text.eV:
    com.ibm.icu.util.VersionInfo version -> a
    3214:3214:void <init>(com.ibm.icu.util.VersionInfo) -> <init>
    3216:3219:boolean contains(int) -> a
com.ibm.icu.text.UnicodeSet$XSymbolTable -> com.ibm.icu.text.UnicodeSet$XSymbolTable:
    3918:3918:void <init>() -> <init>
    3925:3925:com.ibm.icu.text.UnicodeMatcher lookupMatcher(int) -> lookupMatcher
    3948:3948:boolean applyPropertyAlias(java.lang.String,java.lang.String,com.ibm.icu.text.UnicodeSet) -> applyPropertyAlias
    3956:3956:char[] lookup(java.lang.String) -> lookup
    3964:3964:java.lang.String parseReference(java.lang.String,java.text.ParsePosition,int) -> parseReference
com.ibm.icu.text.UnicodeSetIterator -> com.ibm.icu.text.UnicodeSetIterator:
    int IS_STRING -> IS_STRING
    int codepoint -> codepoint
    int codepointEnd -> codepointEnd
    java.lang.String string -> string
    com.ibm.icu.text.UnicodeSet set -> a
    int endRange -> b
    int range -> c
    int endElement -> endElement
    int nextElement -> nextElement
    java.util.Iterator stringIterator -> d
    81:258:void <init>(com.ibm.icu.text.UnicodeSet) -> <init>
    91:258:void <init>() -> <init>
    116:136:boolean next() -> next
    160:184:boolean nextRange() -> nextRange
    195:197:void reset(com.ibm.icu.text.UnicodeSet) -> reset
    204:218:void reset() -> reset
    225:228:java.lang.String getString() -> getString
    243:243:com.ibm.icu.text.UnicodeSet getSet() -> getSet
    270:272:void loadRange(int) -> loadRange
    48:48:void <clinit>() -> <clinit>
com.ibm.icu.text.UnicodeSetSpanner -> com.ibm.icu.text.UnicodeSetSpanner:
    com.ibm.icu.text.UnicodeSet unicodeSet -> a
    56:58:void <init>(com.ibm.icu.text.UnicodeSet) -> <init>
    68:68:com.ibm.icu.text.UnicodeSet getUnicodeSet() -> getUnicodeSet
    79:79:boolean equals(java.lang.Object) -> equals
    89:89:int hashCode() -> hashCode
    134:134:int countIn(java.lang.CharSequence) -> countIn
    149:149:int countIn(java.lang.CharSequence,com.ibm.icu.text.UnicodeSetSpanner$CountMethod) -> countIn
    168:190:int countIn(java.lang.CharSequence,com.ibm.icu.text.UnicodeSetSpanner$CountMethod,com.ibm.icu.text.UnicodeSet$SpanCondition) -> countIn
    203:203:java.lang.String deleteFrom(java.lang.CharSequence) -> deleteFrom
    218:218:java.lang.String deleteFrom(java.lang.CharSequence,com.ibm.icu.text.UnicodeSet$SpanCondition) -> deleteFrom
    234:234:java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence) -> replaceFrom
    252:252:java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence,com.ibm.icu.text.UnicodeSetSpanner$CountMethod) -> replaceFrom
    273:307:java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence,com.ibm.icu.text.UnicodeSetSpanner$CountMethod,com.ibm.icu.text.UnicodeSet$SpanCondition) -> replaceFrom
    354:354:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
    378:378:java.lang.CharSequence trim(java.lang.CharSequence,com.ibm.icu.text.UnicodeSetSpanner$TrimOption) -> trim
    405:419:java.lang.CharSequence trim(java.lang.CharSequence,com.ibm.icu.text.UnicodeSetSpanner$TrimOption,com.ibm.icu.text.UnicodeSet$SpanCondition) -> trim
com.ibm.icu.text.UnicodeSetSpanner$CountMethod -> com.ibm.icu.text.UnicodeSetSpanner$CountMethod:
    com.ibm.icu.text.UnicodeSetSpanner$CountMethod WHOLE_SPAN -> WHOLE_SPAN
    com.ibm.icu.text.UnicodeSetSpanner$CountMethod MIN_ELEMENTS -> MIN_ELEMENTS
    com.ibm.icu.text.UnicodeSetSpanner$CountMethod[] $VALUES -> a
    98:98:com.ibm.icu.text.UnicodeSetSpanner$CountMethod[] values() -> values
    98:98:com.ibm.icu.text.UnicodeSetSpanner$CountMethod valueOf(java.lang.String) -> valueOf
    98:98:void <init>(java.lang.String,int) -> <init>
    98:119:void <clinit>() -> <clinit>
com.ibm.icu.text.UnicodeSetSpanner$TrimOption -> com.ibm.icu.text.UnicodeSetSpanner$TrimOption:
    com.ibm.icu.text.UnicodeSetSpanner$TrimOption LEADING -> LEADING
    com.ibm.icu.text.UnicodeSetSpanner$TrimOption BOTH -> BOTH
    com.ibm.icu.text.UnicodeSetSpanner$TrimOption TRAILING -> TRAILING
    com.ibm.icu.text.UnicodeSetSpanner$TrimOption[] $VALUES -> a
    315:315:com.ibm.icu.text.UnicodeSetSpanner$TrimOption[] values() -> values
    315:315:com.ibm.icu.text.UnicodeSetSpanner$TrimOption valueOf(java.lang.String) -> valueOf
    315:315:void <init>(java.lang.String,int) -> <init>
    315:333:void <clinit>() -> <clinit>
com.ibm.icu.text.UppercaseTransliterator -> com.ibm.icu.text.eW:
    com.ibm.icu.util.ULocale locale -> a
    com.ibm.icu.impl.UCaseProps csp -> b
    com.ibm.icu.text.ReplaceableContextIterator iter -> c
    java.lang.StringBuilder result -> d
    int[] locCache -> e
    com.ibm.icu.text.SourceTargetUtility sourceTargetUtility -> f
    29:34:void register() -> a
    47:111:void <init>(com.ibm.icu.util.ULocale) -> <init>
    61:108:void handleTransliterate(com.ibm.icu.text.Replaceable,com.ibm.icu.text.Transliterator$Position,boolean) -> handleTransliterate
    118:128:void addSourceTargetSet(com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet,com.ibm.icu.text.UnicodeSet) -> addSourceTargetSet
    17:17:com.ibm.icu.util.ULocale access$000(com.ibm.icu.text.UppercaseTransliterator) -> a
com.ibm.icu.text.UppercaseTransliterator$1 -> com.ibm.icu.text.eX:
    29:29:void <init>() -> <init>
    31:31:com.ibm.icu.text.Transliterator getInstance(java.lang.String) -> getInstance
com.ibm.icu.text.UppercaseTransliterator$2 -> com.ibm.icu.text.eY:
    com.ibm.icu.text.UppercaseTransliterator this$0 -> a
    120:120:void <init>(com.ibm.icu.text.UppercaseTransliterator) -> <init>
    122:122:java.lang.String transform(java.lang.String) -> a
    120:120:java.lang.Object transform(java.lang.Object) -> transform
com.ibm.icu.util.AnnualTimeZoneRule -> com.ibm.icu.util.AnnualTimeZoneRule:
    long serialVersionUID -> serialVersionUID
    int MAX_YEAR -> MAX_YEAR
    com.ibm.icu.util.DateTimeRule dateTimeRule -> a
    int startYear -> b
    int endYear -> c
    53:57:void <init>(java.lang.String,int,int,com.ibm.icu.util.DateTimeRule,int,int) -> <init>
    68:68:com.ibm.icu.util.DateTimeRule getRule() -> getRule
    80:80:int getStartYear() -> getStartYear
    92:92:int getEndYear() -> getEndYear
    110:162:java.util.Date getStartInYear(int,int,int) -> getStartInYear
    170:170:java.util.Date getFirstStart(int,int) -> getFirstStart
    178:181:java.util.Date getFinalStart(int,int) -> getFinalStart
    189:198:java.util.Date getNextStart(long,int,int,boolean) -> getNextStart
    206:215:java.util.Date getPreviousStart(long,int,int,boolean) -> getPreviousStart
    223:232:boolean isEquivalentTo(com.ibm.icu.util.TimeZoneRule) -> isEquivalentTo
    241:241:boolean isTransitionRule() -> isTransitionRule
    252:262:java.lang.String toString() -> toString
com.ibm.icu.util.BasicTimeZone -> com.ibm.icu.util.BasicTimeZone:
    long serialVersionUID -> serialVersionUID
    int LOCAL_STD -> LOCAL_STD
    int LOCAL_DST -> LOCAL_DST
    int LOCAL_FORMER -> LOCAL_FORMER
    int LOCAL_LATTER -> LOCAL_LATTER
    int STD_DST_MASK -> STD_DST_MASK
    int FORMER_LATTER_MASK -> FORMER_LATTER_MASK
    com.ibm.icu.util.TimeZoneTransition getNextTransition(long,boolean) -> getNextTransition
    com.ibm.icu.util.TimeZoneTransition getPreviousTransition(long,boolean) -> getPreviousTransition
    82:82:boolean hasEquivalentTransitions(com.ibm.icu.util.TimeZone,long,long) -> hasEquivalentTransitions
    108:204:boolean hasEquivalentTransitions(com.ibm.icu.util.TimeZone,long,long,boolean) -> hasEquivalentTransitions
    com.ibm.icu.util.TimeZoneRule[] getTimeZoneRules() -> getTimeZoneRules
    237:365:com.ibm.icu.util.TimeZoneRule[] getTimeZoneRules(long) -> getTimeZoneRules
    391:533:com.ibm.icu.util.TimeZoneRule[] getSimpleTimeZoneRulesNear(long) -> getSimpleTimeZoneRulesNear
    598:598:void getOffsetFromLocal(long,int,int,int[]) -> getOffsetFromLocal
    605:606:void <init>() -> <init>
    616:617:void <init>(java.lang.String) -> <init>
com.ibm.icu.util.BuddhistCalendar -> com.ibm.icu.util.BuddhistCalendar:
    long serialVersionUID -> serialVersionUID
    int BE -> BE
    64:65:void <init>() -> <init>
    75:76:void <init>(com.ibm.icu.util.TimeZone) -> <init>
    86:87:void <init>(java.util.Locale) -> <init>
    97:98:void <init>(com.ibm.icu.util.ULocale) -> <init>
    110:111:void <init>(com.ibm.icu.util.TimeZone,java.util.Locale) -> <init>
    123:124:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    134:136:void <init>(java.util.Date) -> <init>
    151:152:void <init>(int,int,int) -> <init>
    175:176:void <init>(int,int,int,int,int,int) -> <init>
    198:204:int handleGetExtendedYear() -> handleGetExtendedYear
    212:212:int handleComputeMonthStart(int,int,boolean) -> handleComputeMonthStart
    219:223:void handleComputeFields(int) -> handleComputeFields
    232:235:int handleGetLimit(int,int) -> handleGetLimit
    243:243:java.lang.String getType() -> getType
com.ibm.icu.util.ByteArrayWrapper -> com.ibm.icu.util.ByteArrayWrapper:
    byte[] bytes -> bytes
    int size -> size
    50:52:void <init>() -> <init>
    62:68:void <init>(byte[],int) -> <init>
    75:79:void <init>(java.nio.ByteBuffer) -> <init>
    116:121:com.ibm.icu.util.ByteArrayWrapper ensureCapacity(int) -> ensureCapacity
    137:139:com.ibm.icu.util.ByteArrayWrapper set(byte[],int,int) -> set
    164:168:com.ibm.icu.util.ByteArrayWrapper append(byte[],int,int) -> append
    186:189:byte[] releaseBytes() -> releaseBytes
    199:204:java.lang.String toString() -> toString
    214:226:boolean equals(java.lang.Object) -> equals
    235:239:int hashCode() -> hashCode
    251:258:int compareTo(com.ibm.icu.util.ByteArrayWrapper) -> compareTo
    274:282:void copyBytes(byte[],int,byte[],int,int) -> a
    26:26:int compareTo(java.lang.Object) -> compareTo
com.ibm.icu.util.BytesTrie -> com.ibm.icu.util.BytesTrie:
    com.ibm.icu.util.BytesTrie$Result[] valueResults_ -> a
    byte[] bytes_ -> b
    int root_ -> c
    int pos_ -> d
    int remainingMatchLength_ -> e
    boolean $assertionsDisabled -> f
    43:47:void <init>(byte[],int) -> <init>
    57:57:java.lang.Object clone() -> clone
    66:68:com.ibm.icu.util.BytesTrie reset() -> reset
    96:100:com.ibm.icu.util.BytesTrie saveState(com.ibm.icu.util.BytesTrie$State) -> saveState
    114:120:com.ibm.icu.util.BytesTrie resetToState(com.ibm.icu.util.BytesTrie$State) -> resetToState
    194:199:com.ibm.icu.util.BytesTrie$Result current() -> current
    213:217:com.ibm.icu.util.BytesTrie$Result first(int) -> first
    228:249:com.ibm.icu.util.BytesTrie$Result next(int) -> next
    269:341:com.ibm.icu.util.BytesTrie$Result next(byte[],int,int) -> next
    354:357:int getValue() -> getValue
    369:376:long getUniqueValue() -> getUniqueValue
    388:415:int getNextBytes(java.lang.Appendable) -> getNextBytes
    425:425:com.ibm.icu.util.BytesTrie$Iterator iterator() -> iterator
    436:436:com.ibm.icu.util.BytesTrie$Iterator iterator(int) -> iterator
    449:449:com.ibm.icu.util.BytesTrie$Iterator iterator(byte[],int,int) -> iterator
    704:705:void stop() -> a
    711:722:int readValue(byte[],int,int) -> b
    725:735:int skipValue(int,int) -> b
    738:739:int skipValue(byte[],int) -> c
    744:759:int jumpByDelta(byte[],int) -> d
    763:773:int skipDelta(byte[],int) -> e
    781:844:com.ibm.icu.util.BytesTrie$Result branchNext(int,int,int) -> a
    851:877:com.ibm.icu.util.BytesTrie$Result nextImpl(int,int) -> c
    887:919:long findUniqueValueFromBranch(byte[],int,int,long) -> a
    927:955:long findUniqueValue(byte[],int,long) -> a
    961:972:void getNextBranchBytes(byte[],int,int,java.lang.Appendable) -> a
    975:979:void append(java.lang.Appendable,int) -> a
    27:27:java.util.Iterator iterator() -> iterator
    27:27:int access$900(byte[],int,int) -> a
    27:27:int access$1100(int,int) -> a
    27:27:int access$1200(byte[],int) -> a
    27:27:int access$1300(byte[],int) -> b
    27:776:void <clinit>() -> <clinit>
com.ibm.icu.util.BytesTrie$1 -> com.ibm.icu.util.a:
    java.lang.String[] patterns -> a
    java.lang.String[] overrides -> b
    4594:4597:void com.ibm.icu.util.Calendar$PatternData.<init>(java.lang.String[],java.lang.String[]):3594:3597 -> <init>
    4599:4604:java.lang.String com.ibm.icu.util.Calendar$PatternData.getDateTimePattern(int):3599:3604 -> a
    4608:4622:com.ibm.icu.util.Calendar$PatternData com.ibm.icu.util.Calendar$PatternData.make(com.ibm.icu.util.Calendar,com.ibm.icu.util.ULocale):3608:3622 -> b
    5590:5590:com.ibm.icu.util.Calendar$PatternData com.ibm.icu.util.Calendar$PatternData.access$600(com.ibm.icu.util.Calendar,com.ibm.icu.util.ULocale):3590:3590 -> a
    6590:6590:java.lang.String com.ibm.icu.util.Calendar$PatternData.access$700(com.ibm.icu.util.Calendar$PatternData,int):3590:3590 -> a
    7590:7590:java.lang.String[] com.ibm.icu.util.Calendar$PatternData.access$800(com.ibm.icu.util.Calendar$PatternData):3590:3590 -> a
    8590:8590:java.lang.String[] com.ibm.icu.util.Calendar$PatternData.access$900(com.ibm.icu.util.Calendar$PatternData):3590:3590 -> b
com.ibm.icu.util.BytesTrie$Entry -> com.ibm.icu.util.BytesTrie$Entry:
    int value -> value
    byte[] bytes -> a
    int length -> b
    457:459:void <init>(int) -> <init>
    465:465:int bytesLength() -> bytesLength
    472:472:byte byteAt(int) -> byteAt
    480:481:void copyBytesTo(byte[],int) -> copyBytesTo
    487:487:java.nio.ByteBuffer bytesAsByteBuffer() -> bytesAsByteBuffer
    497:502:void ensureCapacity(int) -> a
    504:506:void append(byte) -> a
    508:511:void append(byte[],int,int) -> a
    512:512:void truncateString(int) -> b
    456:456:void <init>(int,byte) -> <init>
    456:456:void access$600(com.ibm.icu.util.BytesTrie$Entry,byte[],int,int) -> a
    456:456:void access$700(com.ibm.icu.util.BytesTrie$Entry,int) -> a
    456:456:void access$800(com.ibm.icu.util.BytesTrie$Entry,byte) -> a
    456:456:int access$1000(com.ibm.icu.util.BytesTrie$Entry) -> a
com.ibm.icu.util.BytesTrie$Iterator -> com.ibm.icu.util.BytesTrie$Iterator:
    byte[] bytes_ -> a
    int pos_ -> b
    int initialPos_ -> c
    int remainingMatchLength_ -> d
    int initialRemainingMatchLength_ -> e
    int maxLength_ -> f
    com.ibm.icu.util.BytesTrie$Entry entry_ -> g
    java.util.ArrayList stack_ -> h
    523:700:void <init>(byte[],int,int,int) -> <init>
    548:558:com.ibm.icu.util.BytesTrie$Iterator reset() -> reset
    565:565:boolean hasNext() -> hasNext
    579:639:com.ibm.icu.util.BytesTrie$Entry next() -> next
    648:648:void remove() -> remove
    652:654:com.ibm.icu.util.BytesTrie$Entry truncateAndStop() -> a
    658:680:int branchNext(int,int) -> a
    522:522:java.lang.Object next() -> next
    522:522:void <init>(byte[],int,int,int,byte) -> <init>
com.ibm.icu.util.BytesTrie$Result -> com.ibm.icu.util.BytesTrie$Result:
    com.ibm.icu.util.BytesTrie$Result NO_MATCH -> NO_MATCH
    com.ibm.icu.util.BytesTrie$Result NO_VALUE -> NO_VALUE
    com.ibm.icu.util.BytesTrie$Result FINAL_VALUE -> FINAL_VALUE
    com.ibm.icu.util.BytesTrie$Result INTERMEDIATE_VALUE -> INTERMEDIATE_VALUE
    com.ibm.icu.util.BytesTrie$Result[] $VALUES -> a
    127:127:com.ibm.icu.util.BytesTrie$Result[] values() -> values
    127:127:com.ibm.icu.util.BytesTrie$Result valueOf(java.lang.String) -> valueOf
    127:127:void <init>(java.lang.String,int) -> <init>
    169:169:boolean matches() -> matches
    177:177:boolean hasValue() -> hasValue
    184:184:boolean hasNext() -> hasNext
    127:158:void <clinit>() -> <clinit>
com.ibm.icu.util.BytesTrie$State -> com.ibm.icu.util.BytesTrie$State:
    byte[] bytes -> a
    int root -> b
    int pos -> c
    int remainingMatchLength -> d
    81:81:void <init>() -> <init>
    76:76:byte[] access$002(com.ibm.icu.util.BytesTrie$State,byte[]) -> a
    76:76:int access$102(com.ibm.icu.util.BytesTrie$State,int) -> a
    76:76:int access$202(com.ibm.icu.util.BytesTrie$State,int) -> b
    76:76:int access$302(com.ibm.icu.util.BytesTrie$State,int) -> c
    76:76:byte[] access$000(com.ibm.icu.util.BytesTrie$State) -> a
    76:76:int access$100(com.ibm.icu.util.BytesTrie$State) -> b
    76:76:int access$200(com.ibm.icu.util.BytesTrie$State) -> c
    76:76:int access$300(com.ibm.icu.util.BytesTrie$State) -> d
com.ibm.icu.util.BytesTrieBuilder -> com.ibm.icu.util.BytesTrieBuilder:
    byte[] intBytes -> a
    byte[] bytes -> b
    int bytesLength -> c
    boolean $assertionsDisabled -> d
    28:212:void <init>() -> <init>
    56:57:com.ibm.icu.util.BytesTrieBuilder add(byte[],int,int) -> add
    76:77:com.ibm.icu.util.BytesTrie build(com.ibm.icu.util.StringTrieBuilder$Option) -> build
    100:101:java.nio.ByteBuffer buildByteBuffer(com.ibm.icu.util.StringTrieBuilder$Option) -> buildByteBuffer
    106:110:void buildBytes(com.ibm.icu.util.StringTrieBuilder$Option) -> a
    119:122:com.ibm.icu.util.BytesTrieBuilder clear() -> clear
    132:132:boolean matchNodesCanHaveValues() -> matchNodesCanHaveValues
    141:141:int getMaxBranchLinearSubNodeLength() -> getMaxBranchLinearSubNodeLength
    149:149:int getMinLinearMatch() -> getMinLinearMatch
    157:157:int getMaxLinearMatchLength() -> getMaxLinearMatchLength
    160:170:void ensureCapacity(int) -> a
    179:183:int write(int) -> write
    193:201:int write(int,int) -> write
    204:208:int write(byte[],int) -> a
    222:251:int writeValueAndFinal(int,boolean) -> writeValueAndFinal
    261:265:int writeValueAndType(boolean,int,int) -> writeValueAndType
    275:302:int writeDeltaTo(int) -> writeDeltaTo
    23:23:void <clinit>() -> <clinit>
com.ibm.icu.util.BytesTrieBuilder$BytesAsCharSequence -> com.ibm.icu.util.b:
    byte[] s -> a
    int len -> b
    32:35:void <init>(byte[],int) -> <init>
    36:36:char charAt(int) -> charAt
    37:37:int length() -> length
    38:38:java.lang.CharSequence subSequence(int,int) -> subSequence
com.ibm.icu.util.CECalendar -> com.ibm.icu.util.c:
    long serialVersionUID -> serialVersionUID
    int[][] LIMITS -> a
    57:58:void <init>() -> <init>
    67:68:void <init>(com.ibm.icu.util.TimeZone) -> <init>
    77:78:void <init>(java.util.Locale) -> <init>
    87:88:void <init>(com.ibm.icu.util.ULocale) -> <init>
    99:101:void <init>(com.ibm.icu.util.TimeZone,java.util.Locale) -> <init>
    112:114:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    128:130:void <init>(int,int,int) -> <init>
    139:141:void <init>(java.util.Date) -> <init>
    158:160:void <init>(int,int,int,int,int,int) -> <init>
    int getJDEpochOffset() -> getJDEpochOffset
    179:179:int handleComputeMonthStart(int,int,boolean) -> handleComputeMonthStart
    186:186:int handleGetLimit(int,int) -> handleGetLimit
    206:214:int handleGetMonthLength(int,int) -> handleGetMonthLength
    238:246:int ceToJD(long,int,int,int) -> ceToJD
    260:273:void jdToCE(int,int,int[]) -> jdToCE
    21:21:void <clinit>() -> <clinit>
com.ibm.icu.util.Calendar -> com.ibm.icu.util.Calendar:
    int ERA -> ERA
    int YEAR -> YEAR
    int MONTH -> MONTH
    int WEEK_OF_YEAR -> WEEK_OF_YEAR
    int WEEK_OF_MONTH -> WEEK_OF_MONTH
    int DATE -> DATE
    int DAY_OF_MONTH -> DAY_OF_MONTH
    int DAY_OF_YEAR -> DAY_OF_YEAR
    int DAY_OF_WEEK -> DAY_OF_WEEK
    int DAY_OF_WEEK_IN_MONTH -> DAY_OF_WEEK_IN_MONTH
    int AM_PM -> AM_PM
    int HOUR -> HOUR
    int HOUR_OF_DAY -> HOUR_OF_DAY
    int MINUTE -> MINUTE
    int SECOND -> SECOND
    int MILLISECOND -> MILLISECOND
    int ZONE_OFFSET -> ZONE_OFFSET
    int DST_OFFSET -> DST_OFFSET
    int YEAR_WOY -> YEAR_WOY
    int DOW_LOCAL -> DOW_LOCAL
    int EXTENDED_YEAR -> EXTENDED_YEAR
    int JULIAN_DAY -> JULIAN_DAY
    int MILLISECONDS_IN_DAY -> MILLISECONDS_IN_DAY
    int IS_LEAP_MONTH -> IS_LEAP_MONTH
    int BASE_FIELD_COUNT -> BASE_FIELD_COUNT
    int MAX_FIELD_COUNT -> MAX_FIELD_COUNT
    int SUNDAY -> SUNDAY
    int MONDAY -> MONDAY
    int TUESDAY -> TUESDAY
    int WEDNESDAY -> WEDNESDAY
    int THURSDAY -> THURSDAY
    int FRIDAY -> FRIDAY
    int SATURDAY -> SATURDAY
    int JANUARY -> JANUARY
    int FEBRUARY -> FEBRUARY
    int MARCH -> MARCH
    int APRIL -> APRIL
    int MAY -> MAY
    int JUNE -> JUNE
    int JULY -> JULY
    int AUGUST -> AUGUST
    int SEPTEMBER -> SEPTEMBER
    int OCTOBER -> OCTOBER
    int NOVEMBER -> NOVEMBER
    int DECEMBER -> DECEMBER
    int UNDECIMBER -> UNDECIMBER
    int AM -> AM
    int PM -> PM
    int WEEKDAY -> WEEKDAY
    int WEEKEND -> WEEKEND
    int WEEKEND_ONSET -> WEEKEND_ONSET
    int WEEKEND_CEASE -> WEEKEND_CEASE
    int WALLTIME_LAST -> WALLTIME_LAST
    int WALLTIME_FIRST -> WALLTIME_FIRST
    int WALLTIME_NEXT_VALID -> WALLTIME_NEXT_VALID
    int ONE_SECOND -> ONE_SECOND
    int ONE_MINUTE -> ONE_MINUTE
    int ONE_HOUR -> ONE_HOUR
    long ONE_DAY -> ONE_DAY
    long ONE_WEEK -> ONE_WEEK
    int JAN_1_1_JULIAN_DAY -> JAN_1_1_JULIAN_DAY
    int EPOCH_JULIAN_DAY -> EPOCH_JULIAN_DAY
    int MIN_JULIAN -> MIN_JULIAN
    long MIN_MILLIS -> MIN_MILLIS
    java.util.Date MIN_DATE -> MIN_DATE
    int MAX_JULIAN -> MAX_JULIAN
    long MAX_MILLIS -> MAX_MILLIS
    java.util.Date MAX_DATE -> MAX_DATE
    int[] fields -> a
    int[] stamp -> b
    long time -> c
    boolean isTimeSet -> d
    boolean areFieldsSet -> e
    boolean areAllFieldsSet -> f
    boolean areFieldsVirtuallySet -> g
    boolean lenient -> h
    com.ibm.icu.util.TimeZone zone -> i
    int firstDayOfWeek -> j
    int minimalDaysInFirstWeek -> k
    int weekendOnset -> l
    int weekendOnsetMillis -> m
    int weekendCease -> n
    int weekendCeaseMillis -> o
    int repeatedWallTime -> p
    int skippedWallTime -> q
    int UNSET -> UNSET
    int INTERNALLY_SET -> INTERNALLY_SET
    int MINIMUM_USER_STAMP -> MINIMUM_USER_STAMP
    int nextStamp -> r
    int STAMP_MAX -> s
    long serialVersionUID -> serialVersionUID
    int internalSetMask -> t
    int gregorianYear -> u
    int gregorianMonth -> v
    int gregorianDayOfYear -> w
    int gregorianDayOfMonth -> x
    com.ibm.icu.impl.ICUCache PATTERN_CACHE -> y
    java.lang.String[] DEFAULT_PATTERNS -> z
    int[][] LIMITS -> A
    int MINIMUM -> MINIMUM
    int GREATEST_MINIMUM -> GREATEST_MINIMUM
    int LEAST_MAXIMUM -> LEAST_MAXIMUM
    int MAXIMUM -> MAXIMUM
    com.ibm.icu.util.Calendar$WeekDataCache WEEK_DATA_CACHE -> B
    int RESOLVE_REMAP -> RESOLVE_REMAP
    int[][][] DATE_PRECEDENCE -> C
    int[][][] DOW_PRECEDENCE -> D
    int[] FIND_ZONE_TRANSITION_TIME_UNITS -> E
    int[][] GREGORIAN_MONTH_COUNT -> F
    java.lang.String[] FIELD_NAME -> G
    com.ibm.icu.util.ULocale validLocale -> H
    com.ibm.icu.util.ULocale actualLocale -> I
    boolean $assertionsDisabled -> J
    1559:1560:void <init>() -> <init>
    1570:1571:void <init>(com.ibm.icu.util.TimeZone,java.util.Locale) -> <init>
    1374:1590:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    1601:1628:void setCalendarLocale(com.ibm.icu.util.ULocale) -> a
    1635:1655:void recalculateStamp() -> c
    1661:1681:void initInternal() -> d
    1690:1690:com.ibm.icu.util.Calendar getInstance() -> getInstance
    1701:1701:com.ibm.icu.util.Calendar getInstance(com.ibm.icu.util.TimeZone) -> getInstance
    1712:1712:com.ibm.icu.util.Calendar getInstance(java.util.Locale) -> getInstance
    1723:1723:com.ibm.icu.util.Calendar getInstance(com.ibm.icu.util.ULocale) -> getInstance
    1734:1734:com.ibm.icu.util.Calendar getInstance(com.ibm.icu.util.TimeZone,java.util.Locale) -> getInstance
    1745:1745:com.ibm.icu.util.Calendar getInstance(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> getInstance
    1753:1763:com.ibm.icu.util.Calendar getInstanceInternal(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> a
    1767:1775:java.lang.String getRegionForCalendar(com.ibm.icu.util.ULocale) -> b
    1809:1818:com.ibm.icu.util.Calendar$CalType getCalendarTypeForLocale(com.ibm.icu.util.ULocale) -> c
    1822:1889:com.ibm.icu.util.Calendar createInstance(com.ibm.icu.util.ULocale) -> d
    1900:1900:java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    1912:1912:com.ibm.icu.util.ULocale[] getAvailableULocales() -> getAvailableULocales
    1933:1971:java.lang.String[] getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean) -> getKeywordValuesForLocale
    1980:1980:java.util.Date getTime() -> getTime
    1993:1994:void setTime(java.util.Date) -> setTime
    2002:2003:long getTimeInMillis() -> getTimeInMillis
    2015:2036:void setTimeInMillis(long) -> setTimeInMillis
    2046:2047:int get(int) -> get
    2059:2059:int internalGet(int) -> internalGet
    2073:2073:int internalGet(int,int) -> internalGet
    2084:2094:void set(int,int) -> set
    2108:2111:void set(int,int,int) -> set
    2127:2132:void set(int,int,int,int,int) -> set
    2150:2156:void set(int,int,int,int,int,int) -> set
    2170:2180:int gregoYearFromIslamicStart(int) -> a
    2189:2230:int getRelatedYear() -> getRelatedYear
    2245:2255:int firstIslamicStartYearFromGrego(int) -> b
    2264:2305:void setRelatedYear(int) -> setRelatedYear
    2313:2317:void clear() -> clear
    2326:2332:void clear(int) -> clear
    2341:2341:boolean isSet(int) -> isSet
    2350:2356:void complete() -> complete
    2369:2381:boolean equals(java.lang.Object) -> equals
    2396:2396:boolean isEquivalentTo(com.ibm.icu.util.Calendar) -> isEquivalentTo
    2416:2416:int hashCode() -> hashCode
    2431:2438:long compare(java.lang.Object) -> a
    2450:2450:boolean before(java.lang.Object) -> before
    2462:2462:boolean after(java.lang.Object) -> after
    2491:2532:int getActualMaximum(int) -> getActualMaximum
    2560:2582:int getActualMinimum(int) -> getActualMinimum
    2607:2651:void prepareGetActual(int,boolean) -> prepareGetActual
    2655:2697:int getActualHelper(int,int,int) -> a
    2760:2761:void roll(int,boolean) -> roll
    2833:3151:void roll(int,int) -> roll
    3212:3382:void add(int,int) -> add
    3389:3389:java.lang.String getDisplayName(java.util.Locale) -> getDisplayName
    3397:3397:java.lang.String getDisplayName(com.ibm.icu.util.ULocale) -> getDisplayName
    3420:3421:int compareTo(com.ibm.icu.util.Calendar) -> compareTo
    3435:3435:com.ibm.icu.text.DateFormat getDateTimeFormat(int,int,java.util.Locale) -> getDateTimeFormat
    3445:3445:com.ibm.icu.text.DateFormat getDateTimeFormat(int,int,com.ibm.icu.util.ULocale) -> getDateTimeFormat
    3460:3460:com.ibm.icu.text.DateFormat handleGetDateFormat(java.lang.String,java.util.Locale) -> handleGetDateFormat
    3482:3482:com.ibm.icu.text.DateFormat handleGetDateFormat(java.lang.String,java.lang.String,java.util.Locale) -> handleGetDateFormat
    3497:3497:com.ibm.icu.text.DateFormat handleGetDateFormat(java.lang.String,com.ibm.icu.util.ULocale) -> handleGetDateFormat
    3513:3520:com.ibm.icu.text.DateFormat handleGetDateFormat(java.lang.String,java.lang.String,com.ibm.icu.util.ULocale) -> handleGetDateFormat
    3545:3587:com.ibm.icu.text.DateFormat formatHelper(com.ibm.icu.util.Calendar,com.ibm.icu.util.ULocale,int,int) -> a
    3632:3633:java.lang.String getDateTimePattern(com.ibm.icu.util.Calendar,com.ibm.icu.util.ULocale,int) -> getDateTimePattern
    3639:3655:java.lang.String mergeOverrideStrings(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    3663:3688:java.lang.String expandOverride(java.lang.String,java.lang.String) -> a
    3797:3805:void pinField(int) -> pinField
    3854:3867:int weekNumber(int,int,int) -> weekNumber
    3902:3902:int weekNumber(int,int) -> weekNumber
    3964:4055:int fieldDifference(java.util.Date,int) -> fieldDifference
    4065:4076:void setTimeZone(com.ibm.icu.util.TimeZone) -> setTimeZone
    4085:4085:com.ibm.icu.util.TimeZone getTimeZone() -> getTimeZone
    4100:4101:void setLenient(boolean) -> setLenient
    4109:4109:boolean isLenient() -> isLenient
    4134:4138:void setRepeatedWallTimeOption(int) -> setRepeatedWallTimeOption
    4154:4154:int getRepeatedWallTimeOption() -> getRepeatedWallTimeOption
    4185:4189:void setSkippedWallTimeOption(int) -> setSkippedWallTimeOption
    4206:4206:int getSkippedWallTimeOption() -> getSkippedWallTimeOption
    4217:4224:void setFirstDayOfWeek(int) -> setFirstDayOfWeek
    4235:4235:int getFirstDayOfWeek() -> getFirstDayOfWeek
    4252:4261:void setMinimalDaysInFirstWeek(int) -> setMinimalDaysInFirstWeek
    4274:4274:int getMinimalDaysInFirstWeek() -> getMinimalDaysInFirstWeek
    int handleGetLimit(int,int) -> handleGetLimit
    4338:4374:int getLimit(int,int) -> getLimit
    4421:4421:int getMinimum(int) -> getMinimum
    4432:4432:int getMaximum(int) -> getMaximum
    4443:4443:int getGreatestMinimum(int) -> getGreatestMinimum
    4454:4454:int getLeastMaximum(int) -> getLeastMaximum
    4490:4513:int getDayOfWeekType(int) -> getDayOfWeekType
    4535:4540:int getWeekendTransition(int) -> getWeekendTransition
    4556:4557:boolean isWeekend(java.util.Date) -> isWeekend
    4571:4587:boolean isWeekend() -> isWeekend
    4605:4617:java.lang.Object clone() -> clone
    4631:4656:java.lang.String toString() -> toString
    4784:4784:com.ibm.icu.util.Calendar$WeekData getWeekDataForRegion(java.lang.String) -> getWeekDataForRegion
    4794:4794:com.ibm.icu.util.Calendar$WeekData getWeekData() -> getWeekData
    4805:4812:com.ibm.icu.util.Calendar setWeekData(com.ibm.icu.util.Calendar$WeekData) -> setWeekData
    4816:4839:com.ibm.icu.util.Calendar$WeekData getWeekDataForRegionInternal(java.lang.String) -> b
    4862:4867:void setWeekData(java.lang.String) -> c
    4875:4882:void updateTime() -> e
    4892:4901:void writeObject(java.io.ObjectOutputStream) -> writeObject
    4909:4917:void readObject(java.io.ObjectInputStream) -> readObject
    4934:4990:void computeFields() -> computeFields
    4999:5010:void computeGregorianAndDOWFields(int) -> c
    5027:5060:void computeGregorianFields(int) -> computeGregorianFields
    5083:5142:void computeWeekFields() -> f
    5214:5252:int resolveFields(int[][][]) -> resolveFields
    5260:5266:int newestStamp(int,int,int) -> newestStamp
    5274:5274:int getStamp(int) -> getStamp
    5283:5286:int newerField(int,int) -> newerField
    5298:5303:void validateFields() -> validateFields
    5315:5334:void validateField(int) -> validateField
    5345:5351:void validateField(int,int,int) -> validateField
    5359:5449:void computeTime() -> computeTime
    5458:5473:java.lang.Long getImmediatePreviousZoneTransition(long) -> a
    5485:5494:java.lang.Long getPreviousZoneTransitionTime(com.ibm.icu.util.TimeZone,long,long) -> a
    5517:5559:java.lang.Long findPreviousZoneTransitionTime(com.ibm.icu.util.TimeZone,int,long,long) -> a
    5572:5604:int computeMillisInDay() -> computeMillisInDay
    5616:5656:int computeZoneOffset(long,int) -> computeZoneOffset
    5673:5686:int computeJulianDay() -> computeJulianDay
    5698:5698:int[][][] getFieldResolutionTable() -> getFieldResolutionTable
    int handleComputeMonthStart(int,int,boolean) -> handleComputeMonthStart
    int handleGetExtendedYear() -> handleGetExtendedYear
    5738:5738:int handleGetMonthLength(int,int) -> handleGetMonthLength
    5751:5751:int handleGetYearLength(int) -> handleGetYearLength
    5764:5764:int[] handleCreateFields() -> handleCreateFields
    5778:5778:int getDefaultMonthInYear(int) -> getDefaultMonthInYear
    5793:5793:int getDefaultDayInMonth(int,int) -> getDefaultDayInMonth
    5805:5917:int handleComputeJulianDay(int) -> handleComputeJulianDay
    5936:5956:int computeGregorianMonthStart(int,int) -> computeGregorianMonthStart
    5992:6004:void handleComputeFields(int) -> handleComputeFields
    6019:6019:int getGregorianYear() -> getGregorianYear
    6029:6029:int getGregorianMonth() -> getGregorianMonth
    6039:6039:int getGregorianDayOfYear() -> getGregorianDayOfYear
    6049:6049:int getGregorianDayOfMonth() -> getGregorianDayOfMonth
    6059:6059:int getFieldCount() -> getFieldCount
    6073:6079:void internalSet(int,int) -> internalSet
    6109:6109:boolean isGregorianLeapYear(int) -> isGregorianLeapYear
    6120:6120:int gregorianMonthLength(int,int) -> gregorianMonthLength
    6131:6131:int gregorianPreviousMonthLength(int,int) -> gregorianPreviousMonthLength
    6148:6148:long floorDivide(long,long) -> floorDivide
    6167:6167:int floorDivide(int,int) -> floorDivide
    6188:6194:int floorDivide(int,int,int[]) -> floorDivide
    6213:6219:int floorDivide(long,int,int[]) -> floorDivide
    6237:6239:java.lang.String fieldName(int) -> fieldName
    6250:6250:int millisToJulianDay(long) -> millisToJulianDay
    6260:6260:long julianDayToMillis(int) -> julianDayToMillis
    6270:6274:int julianDayToDayOfWeek(int) -> julianDayToDayOfWeek
    6282:6282:long internalGetTimeInMillis() -> internalGetTimeInMillis
    6297:6297:java.lang.String getType() -> getType
    6313:6313:boolean haveDefaultCentury() -> haveDefaultCentury
    6343:6343:com.ibm.icu.util.ULocale getLocale(com.ibm.icu.util.ULocale$Type) -> getLocale
    6365:6374:void setLocale(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> a
    640:640:int compareTo(java.lang.Object) -> compareTo
    640:640:com.ibm.icu.impl.ICUCache access$1000() -> a
    640:640:java.lang.String[] access$1100() -> b
    640:640:com.ibm.icu.util.Calendar$WeekData access$1200(java.lang.String) -> a
    640:6222:void <clinit>() -> <clinit>
com.ibm.icu.util.Calendar$1 -> com.ibm.icu.util.d:
    int[] $SwitchMap$com$ibm$icu$util$Calendar$CalType -> a
    1830:1830:void <clinit>() -> <clinit>
com.ibm.icu.util.Calendar$CalType -> com.ibm.icu.util.e:
    com.ibm.icu.util.Calendar$CalType GREGORIAN -> a
    com.ibm.icu.util.Calendar$CalType ISO8601 -> b
    com.ibm.icu.util.Calendar$CalType BUDDHIST -> c
    com.ibm.icu.util.Calendar$CalType CHINESE -> d
    com.ibm.icu.util.Calendar$CalType COPTIC -> e
    com.ibm.icu.util.Calendar$CalType DANGI -> f
    com.ibm.icu.util.Calendar$CalType ETHIOPIC -> g
    com.ibm.icu.util.Calendar$CalType ETHIOPIC_AMETE_ALEM -> h
    com.ibm.icu.util.Calendar$CalType HEBREW -> i
    com.ibm.icu.util.Calendar$CalType INDIAN -> j
    com.ibm.icu.util.Calendar$CalType ISLAMIC -> k
    com.ibm.icu.util.Calendar$CalType ISLAMIC_CIVIL -> l
    com.ibm.icu.util.Calendar$CalType ISLAMIC_RGSA -> m
    com.ibm.icu.util.Calendar$CalType ISLAMIC_TBLA -> n
    com.ibm.icu.util.Calendar$CalType ISLAMIC_UMALQURA -> o
    com.ibm.icu.util.Calendar$CalType JAPANESE -> p
    com.ibm.icu.util.Calendar$CalType PERSIAN -> q
    com.ibm.icu.util.Calendar$CalType ROC -> r
    com.ibm.icu.util.Calendar$CalType UNKNOWN -> s
    java.lang.String id -> t
    com.ibm.icu.util.Calendar$CalType[] $VALUES -> u
    1778:1778:com.ibm.icu.util.Calendar$CalType[] values() -> values
    1778:1778:com.ibm.icu.util.Calendar$CalType valueOf(java.lang.String) -> valueOf
    1803:1805:void <init>(java.lang.String,int,java.lang.String) -> <init>
    1778:1799:void <clinit>() -> <clinit>
com.ibm.icu.util.Calendar$FormatConfiguration -> com.ibm.icu.util.Calendar$FormatConfiguration:
    java.lang.String pattern -> a
    java.lang.String override -> b
    com.ibm.icu.text.DateFormatSymbols formatData -> c
    com.ibm.icu.util.Calendar cal -> d
    com.ibm.icu.util.ULocale loc -> e
    3707:3708:void <init>() -> <init>
    3718:3718:java.lang.String getPatternString() -> getPatternString
    3727:3727:java.lang.String getOverrideString() -> getOverrideString
    3738:3738:com.ibm.icu.util.Calendar getCalendar() -> getCalendar
    3749:3749:com.ibm.icu.util.ULocale getLocale() -> getLocale
    3760:3760:com.ibm.icu.text.DateFormatSymbols getDateFormatSymbols() -> getDateFormatSymbols
    3699:3699:void <init>(byte) -> <init>
    3699:3699:java.lang.String access$102(com.ibm.icu.util.Calendar$FormatConfiguration,java.lang.String) -> a
    3699:3699:java.lang.String access$202(com.ibm.icu.util.Calendar$FormatConfiguration,java.lang.String) -> b
    3699:3699:com.ibm.icu.text.DateFormatSymbols access$302(com.ibm.icu.util.Calendar$FormatConfiguration,com.ibm.icu.text.DateFormatSymbols) -> a
    3699:3699:com.ibm.icu.util.ULocale access$402(com.ibm.icu.util.Calendar$FormatConfiguration,com.ibm.icu.util.ULocale) -> a
    3699:3699:com.ibm.icu.util.Calendar access$502(com.ibm.icu.util.Calendar$FormatConfiguration,com.ibm.icu.util.Calendar) -> a
com.ibm.icu.util.Calendar$WeekData -> com.ibm.icu.util.Calendar$WeekData:
    int firstDayOfWeek -> firstDayOfWeek
    int minimalDaysInFirstWeek -> minimalDaysInFirstWeek
    int weekendOnset -> weekendOnset
    int weekendOnsetMillis -> weekendOnsetMillis
    int weekendCease -> weekendCease
    int weekendCeaseMillis -> weekendCeaseMillis
    4717:4724:void <init>(int,int,int,int,int,int) -> <init>
    4733:4733:int hashCode() -> hashCode
    4744:4751:boolean equals(java.lang.Object) -> equals
    4766:4766:java.lang.String toString() -> toString
com.ibm.icu.util.Calendar$WeekDataCache -> com.ibm.icu.util.f:
    4845:4845:void <init>() -> <init>
    4852:4852:com.ibm.icu.util.Calendar$WeekData createInstance$3212b808(java.lang.String) -> a
    4845:4845:java.lang.Object createInstance(java.lang.Object,java.lang.Object) -> createInstance
    4845:4845:void <init>(byte) -> <init>
com.ibm.icu.util.CaseInsensitiveString -> com.ibm.icu.util.CaseInsensitiveString:
    java.lang.String string -> a
    int hash -> b
    java.lang.String folded -> c
    27:27:java.lang.String foldCase(java.lang.String) -> a
    32:35:void getFolded() -> a
    21:44:void <init>(java.lang.String) -> <init>
    51:51:java.lang.String getString() -> getString
    59:71:boolean equals(java.lang.Object) -> equals
    80:86:int hashCode() -> hashCode
    94:94:java.lang.String toString() -> toString
com.ibm.icu.util.CharsTrie -> com.ibm.icu.util.CharsTrie:
    com.ibm.icu.util.BytesTrie$Result[] valueResults_ -> a
    java.lang.CharSequence chars_ -> b
    int root_ -> c
    int pos_ -> d
    int remainingMatchLength_ -> e
    boolean $assertionsDisabled -> f
    46:50:void <init>(java.lang.CharSequence,int) -> <init>
    60:60:java.lang.Object clone() -> clone
    69:71:com.ibm.icu.util.CharsTrie reset() -> reset
    99:103:com.ibm.icu.util.CharsTrie saveState(com.ibm.icu.util.CharsTrie$State) -> saveState
    117:123:com.ibm.icu.util.CharsTrie resetToState(com.ibm.icu.util.CharsTrie$State) -> resetToState
    133:138:com.ibm.icu.util.BytesTrie$Result current() -> current
    151:152:com.ibm.icu.util.BytesTrie$Result first(int) -> first
    164:164:com.ibm.icu.util.BytesTrie$Result firstForCodePoint(int) -> firstForCodePoint
    178:196:com.ibm.icu.util.BytesTrie$Result next(int) -> next
    207:207:com.ibm.icu.util.BytesTrie$Result nextForCodePoint(int) -> nextForCodePoint
    231:303:com.ibm.icu.util.BytesTrie$Result next(java.lang.CharSequence,int,int) -> next
    316:319:int getValue() -> getValue
    332:339:long getUniqueValue() -> getUniqueValue
    351:377:int getNextChars(java.lang.Appendable) -> getNextChars
    387:387:com.ibm.icu.util.CharsTrie$Iterator iterator() -> iterator
    398:398:com.ibm.icu.util.CharsTrie$Iterator iterator(int) -> iterator
    411:411:com.ibm.icu.util.CharsTrie$Iterator iterator(java.lang.CharSequence,int,int) -> iterator
    642:643:void stop() -> a
    649:656:int readValue(java.lang.CharSequence,int,int) -> c
    659:666:int skipValue(int,int) -> c
    669:670:int skipValue(java.lang.CharSequence,int) -> c
    674:683:int readNodeValue(java.lang.CharSequence,int,int) -> d
    686:694:int skipNodeValue(int,int) -> d
    698:707:int jumpByDelta(java.lang.CharSequence,int) -> d
    711:719:int skipDelta(java.lang.CharSequence,int) -> e
    727:782:com.ibm.icu.util.BytesTrie$Result branchNext(int,int,int) -> a
    788:814:com.ibm.icu.util.BytesTrie$Result nextImpl(int,int) -> e
    824:857:long findUniqueValueFromBranch(java.lang.CharSequence,int,int,long) -> a
    864:900:long findUniqueValue(java.lang.CharSequence,int,long) -> a
    907:918:void getNextBranchChars(java.lang.CharSequence,int,int,java.lang.Appendable) -> a
    921:925:void append(java.lang.Appendable,int) -> a
    30:30:java.util.Iterator iterator() -> iterator
    30:30:int access$500(int,int) -> a
    30:30:int access$600(java.lang.CharSequence,int,int) -> a
    30:30:int access$700(java.lang.CharSequence,int,int) -> b
    30:30:int access$800(java.lang.CharSequence,int) -> a
    30:30:int access$900(java.lang.CharSequence,int) -> b
    30:30:int access$1000(int,int) -> b
    30:722:void <clinit>() -> <clinit>
com.ibm.icu.util.CharsTrie$Entry -> com.ibm.icu.util.CharsTrie$Entry:
    java.lang.CharSequence chars -> chars
    int value -> value
    430:431:void <init>() -> <init>
    418:418:void <init>(byte) -> <init>
com.ibm.icu.util.CharsTrie$Iterator -> com.ibm.icu.util.CharsTrie$Iterator:
    java.lang.CharSequence chars_ -> a
    int pos_ -> b
    int initialPos_ -> c
    int remainingMatchLength_ -> d
    int initialRemainingMatchLength_ -> e
    boolean skipValue_ -> f
    java.lang.StringBuilder str_ -> g
    int maxLength_ -> h
    com.ibm.icu.util.CharsTrie$Entry entry_ -> i
    java.util.ArrayList stack_ -> j
    439:638:void <init>(java.lang.CharSequence,int,int,int) -> <init>
    463:474:com.ibm.icu.util.CharsTrie$Iterator reset() -> reset
    481:481:boolean hasNext() -> hasNext
    495:571:com.ibm.icu.util.CharsTrie$Entry next() -> next
    580:580:void remove() -> remove
    584:589:com.ibm.icu.util.CharsTrie$Entry truncateAndStop() -> a
    593:616:int branchNext(int,int) -> a
    438:438:java.lang.Object next() -> next
    438:438:void <init>(java.lang.CharSequence,int,int,int,byte) -> <init>
com.ibm.icu.util.CharsTrie$State -> com.ibm.icu.util.CharsTrie$State:
    java.lang.CharSequence chars -> a
    int root -> b
    int pos -> c
    int remainingMatchLength -> d
    84:84:void <init>() -> <init>
    79:79:java.lang.CharSequence access$002(com.ibm.icu.util.CharsTrie$State,java.lang.CharSequence) -> a
    79:79:int access$102(com.ibm.icu.util.CharsTrie$State,int) -> a
    79:79:int access$202(com.ibm.icu.util.CharsTrie$State,int) -> b
    79:79:int access$302(com.ibm.icu.util.CharsTrie$State,int) -> c
    79:79:java.lang.CharSequence access$000(com.ibm.icu.util.CharsTrie$State) -> a
    79:79:int access$100(com.ibm.icu.util.CharsTrie$State) -> b
    79:79:int access$200(com.ibm.icu.util.CharsTrie$State) -> c
    79:79:int access$300(com.ibm.icu.util.CharsTrie$State) -> d
com.ibm.icu.util.CharsTrieBuilder -> com.ibm.icu.util.CharsTrieBuilder:
    char[] intUnits -> a
    char[] chars -> b
    int charsLength -> c
    boolean $assertionsDisabled -> d
    28:190:void <init>() -> <init>
    41:42:com.ibm.icu.util.CharsTrieBuilder add(java.lang.CharSequence,int) -> add
    60:60:com.ibm.icu.util.CharsTrie build(com.ibm.icu.util.StringTrieBuilder$Option) -> build
    78:79:java.lang.CharSequence buildCharSequence(com.ibm.icu.util.StringTrieBuilder$Option) -> buildCharSequence
    84:88:void buildChars(com.ibm.icu.util.StringTrieBuilder$Option) -> a
    97:100:com.ibm.icu.util.CharsTrieBuilder clear() -> clear
    110:110:boolean matchNodesCanHaveValues() -> matchNodesCanHaveValues
    119:119:int getMaxBranchLinearSubNodeLength() -> getMaxBranchLinearSubNodeLength
    127:127:int getMinLinearMatch() -> getMinLinearMatch
    135:135:int getMaxLinearMatchLength() -> getMaxLinearMatchLength
    138:148:void ensureCapacity(int) -> a
    157:161:int write(int) -> write
    171:179:int write(int,int) -> write
    182:186:int write(char[],int) -> a
    200:218:int writeValueAndFinal(int,boolean) -> writeValueAndFinal
    228:246:int writeValueAndType(boolean,int,int) -> writeValueAndType
    256:271:int writeDeltaTo(int) -> writeDeltaTo
    23:23:void <clinit>() -> <clinit>
com.ibm.icu.util.ChineseCalendar -> com.ibm.icu.util.ChineseCalendar:
    long serialVersionUID -> serialVersionUID
    int epochYear -> a
    com.ibm.icu.util.TimeZone zoneAstro -> b
    com.ibm.icu.impl.CalendarAstronomer astro -> c
    com.ibm.icu.impl.CalendarCache winterSolsticeCache -> d
    com.ibm.icu.impl.CalendarCache newYearCache -> e
    boolean isLeapYear -> f
    int[][] LIMITS -> g
    int[][][] CHINESE_DATE_PRECEDENCE -> h
    com.ibm.icu.util.TimeZone CHINA_ZONE -> i
    149:150:void <init>() -> <init>
    159:161:void <init>(java.util.Date) -> <init>
    177:178:void <init>(int,int,int,int) -> <init>
    202:218:void <init>(int,int,int,int,int,int,int) -> <init>
    236:237:void <init>(int,int,int,int,int) -> <init>
    262:276:void <init>(int,int,int,int,int,int,int,int) -> <init>
    285:286:void <init>(java.util.Locale) -> <init>
    296:297:void <init>(com.ibm.icu.util.TimeZone) -> <init>
    307:308:void <init>(com.ibm.icu.util.TimeZone,java.util.Locale) -> <init>
    318:319:void <init>(com.ibm.icu.util.ULocale) -> <init>
    329:330:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    119:345:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale,int,com.ibm.icu.util.TimeZone) -> <init>
    432:432:int handleGetLimit(int,int) -> handleGetLimit
    444:451:int handleGetExtendedYear() -> handleGetExtendedYear
    463:466:int handleGetMonthLength(int,int) -> handleGetMonthLength
    481:481:com.ibm.icu.text.DateFormat handleGetDateFormat(java.lang.String,java.lang.String,com.ibm.icu.util.ULocale) -> handleGetDateFormat
    514:514:int[][][] getFieldResolutionTable() -> getFieldResolutionTable
    530:553:void offsetMonth(int,int,int) -> a
    560:573:void add(int,int) -> add
    580:631:void roll(int,int) -> roll
    672:673:long daysToMillis(int) -> a
    682:682:int millisToDays(long) -> a
    699:716:int winterSolstice(int) -> b
    730:733:int newMoonNear(int,boolean) -> a
    744:744:int synodicMonthsBetween(int,int) -> a
    755:762:int majorSolarTerm(int) -> c
    772:775:boolean hasNoMajorSolarTerm(int) -> d
    799:805:boolean isLeapMonthBetween(int,int) -> b
    830:833:void handleComputeFields(int) -> handleComputeFields
    859:923:void computeChineseFields(int,int,int,boolean) -> a
    937:956:int newYear(int) -> e
    976:1010:int handleComputeMonthStart(int,int,boolean) -> handleComputeMonthStart
    1018:1018:java.lang.String getType() -> getType
    1028:1028:boolean haveDefaultCentury() -> haveDefaultCentury
    1037:1046:void readObject(java.io.ObjectInputStream) -> readObject
    399:650:void <clinit>() -> <clinit>
com.ibm.icu.util.CompactByteArray -> com.ibm.icu.util.CompactByteArray:
    int UNICODECOUNT -> UNICODECOUNT
    byte[] values -> a
    char[] indices -> b
    int[] hashes -> c
    boolean isCompact -> d
    52:53:void <init>() -> <init>
    63:78:void <init>(byte) -> <init>
    91:103:void <init>(char[],byte[]) -> <init>
    120:122:void <init>(java.lang.String,java.lang.String) -> <init>
    134:134:byte elementAt(char) -> elementAt
    149:153:void setElementAt(char,byte) -> setElementAt
    168:175:void setElementAt(char,char,byte) -> setElementAt
    183:184:void compact() -> compact
    194:243:void compact(boolean) -> compact
    254:260:boolean arrayRegionMatches(byte[],int,byte[],int,int) -> a
    268:269:void touchBlock(int,int) -> a
    276:276:boolean blockTouched(int) -> a
    288:288:char[] getIndexArray() -> getIndexArray
    300:300:byte[] getValueArray() -> getValueArray
    312:318:java.lang.Object clone() -> clone
    332:343:boolean equals(java.lang.Object) -> equals
    353:358:int hashCode() -> hashCode
    371:387:void expand() -> a
com.ibm.icu.util.CompactCharArray -> com.ibm.icu.util.CompactCharArray:
    int UNICODECOUNT -> UNICODECOUNT
    int BLOCKSHIFT -> BLOCKSHIFT
    char[] values -> a
    char[] indices -> b
    int[] hashes -> c
    boolean isCompact -> d
    char defaultValue -> e
    53:54:void <init>() -> <init>
    64:79:void <init>(char) -> <init>
    92:104:void <init>(char[],char[]) -> <init>
    121:123:void <init>(java.lang.String,java.lang.String) -> <init>
    135:137:char elementAt(char) -> elementAt
    151:155:void setElementAt(char,char) -> setElementAt
    170:177:void setElementAt(char,char,char) -> setElementAt
    185:186:void compact() -> compact
    196:254:void compact(boolean) -> compact
    258:266:int FindOverlappingPosition(int,char[],int) -> a
    278:284:boolean arrayRegionMatches(char[],int,char[],int,int) -> a
    292:293:void touchBlock(int,int) -> a
    300:300:boolean blockTouched(int) -> a
    312:312:char[] getIndexArray() -> getIndexArray
    324:324:char[] getValueArray() -> getValueArray
    336:342:java.lang.Object clone() -> clone
    356:367:boolean equals(java.lang.Object) -> equals
    377:382:int hashCode() -> hashCode
    396:410:void expand() -> a
com.ibm.icu.util.CopticCalendar -> com.ibm.icu.util.CopticCalendar:
    long serialVersionUID -> serialVersionUID
    int TOUT -> TOUT
    int BABA -> BABA
    int HATOR -> HATOR
    int KIAHK -> KIAHK
    int TOBA -> TOBA
    int AMSHIR -> AMSHIR
    int BARAMHAT -> BARAMHAT
    int BARAMOUDA -> BARAMOUDA
    int BASHANS -> BASHANS
    int PAONA -> PAONA
    int EPEP -> EPEP
    int MESRA -> MESRA
    int NASIE -> NASIE
    133:134:void <init>() -> <init>
    144:145:void <init>(com.ibm.icu.util.TimeZone) -> <init>
    155:156:void <init>(java.util.Locale) -> <init>
    166:167:void <init>(com.ibm.icu.util.ULocale) -> <init>
    178:179:void <init>(com.ibm.icu.util.TimeZone,java.util.Locale) -> <init>
    190:191:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    204:205:void <init>(int,int,int) -> <init>
    215:216:void <init>(java.util.Date) -> <init>
    233:234:void <init>(int,int,int,int,int,int) -> <init>
    241:241:java.lang.String getType() -> getType
    252:263:int handleGetExtendedYear() -> handleGetExtendedYear
    274:295:void handleComputeFields(int) -> handleComputeFields
    304:304:int getJDEpochOffset() -> getJDEpochOffset
    321:321:int copticToJD(long,int,int) -> copticToJD
com.ibm.icu.util.Currency -> com.ibm.icu.util.Currency:
    long serialVersionUID -> serialVersionUID
    boolean DEBUG -> a
    com.ibm.icu.impl.ICUCache CURRENCY_NAME_CACHE -> b
    int SYMBOL_NAME -> SYMBOL_NAME
    int LONG_NAME -> LONG_NAME
    int PLURAL_LONG_NAME -> PLURAL_LONG_NAME
    com.ibm.icu.util.Currency$EquivalenceRelation EQUIVALENT_CURRENCY_SYMBOLS -> c
    com.ibm.icu.util.Currency$ServiceShim shim -> d
    com.ibm.icu.impl.ICUCache currencyCodeCache -> e
    com.ibm.icu.util.ULocale UND -> f
    java.lang.String[] EMPTY_STRING_ARRAY -> g
    int[] POW10 -> h
    java.lang.ref.SoftReference ALL_TENDER_CODES -> i
    java.lang.ref.SoftReference ALL_CODES_AS_SET -> j
    java.lang.String isoCode -> k
    129:141:com.ibm.icu.util.Currency$ServiceShim getShim() -> a
    152:152:com.ibm.icu.util.Currency getInstance(java.util.Locale) -> getInstance
    161:170:com.ibm.icu.util.Currency getInstance(com.ibm.icu.util.ULocale) -> getInstance
    184:191:java.lang.String[] getAvailableCurrencyCodes(com.ibm.icu.util.ULocale,java.util.Date) -> getAvailableCurrencyCodes
    205:205:java.lang.String[] getAvailableCurrencyCodes(java.util.Locale,java.util.Date) -> getAvailableCurrencyCodes
    219:225:java.util.Set getAvailableCurrencies() -> getAvailableCurrencies
    236:261:com.ibm.icu.util.Currency createCurrency(com.ibm.icu.util.ULocale) -> a
    274:281:com.ibm.icu.util.Currency getInstance(java.lang.String) -> getInstance
    286:296:boolean isAlpha3Code(java.lang.String) -> a
    314:314:java.lang.Object registerInstance(com.ibm.icu.util.Currency,com.ibm.icu.util.ULocale) -> registerInstance
    325:331:boolean unregister(java.lang.Object) -> unregister
    341:344:java.util.Locale[] getAvailableLocales() -> getAvailableLocales
    355:358:com.ibm.icu.util.ULocale[] getAvailableULocales() -> getAvailableULocales
    396:427:java.lang.String[] getKeywordValuesForLocale(java.lang.String,com.ibm.icu.util.ULocale,boolean) -> getKeywordValuesForLocale
    438:438:java.lang.String getCurrencyCode() -> getCurrencyCode
    449:461:int getNumericCode() -> getNumericCode
    472:472:java.lang.String getSymbol() -> getSymbol
    483:483:java.lang.String getSymbol(java.util.Locale) -> getSymbol
    494:494:java.lang.String getSymbol(com.ibm.icu.util.ULocale) -> getSymbol
    507:507:java.lang.String getName(java.util.Locale,int,boolean[]) -> getName
    534:545:java.lang.String getName(com.ibm.icu.util.ULocale,int,boolean[]) -> getName
    555:555:java.lang.String getName(java.util.Locale,int,java.lang.String,boolean[]) -> getName
    584:594:java.lang.String getName(com.ibm.icu.util.ULocale,int,java.lang.String,boolean[]) -> getName
    611:611:java.lang.String getDisplayName() -> getDisplayName
    629:629:java.lang.String getDisplayName(java.util.Locale) -> getDisplayName
    655:689:java.lang.String parse(com.ibm.icu.util.ULocale,java.lang.String,int,java.text.ParsePosition) -> parse
    695:713:void setupCurrencyTrieVec(com.ibm.icu.util.ULocale,java.util.List) -> a
    772:772:int getDefaultFractionDigits() -> getDefaultFractionDigits
    784:786:int getDefaultFractionDigits(com.ibm.icu.util.Currency$CurrencyUsage) -> getDefaultFractionDigits
    797:797:double getRoundingIncrement() -> getRoundingIncrement
    808:828:double getRoundingIncrement(com.ibm.icu.util.Currency$CurrencyUsage) -> getRoundingIncrement
    836:836:java.lang.String toString() -> toString
    847:852:void <init>(java.lang.String) -> <init>
    866:875:java.util.List getAllTenderCurrencies() -> b
    879:886:java.util.Set getAllCurrenciesAsSet() -> c
    910:930:boolean isAvailable(java.lang.String,java.util.Date,java.util.Date) -> isAvailable
    939:940:java.util.List getTenderCurrencies(com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter) -> a
    972:972:java.lang.Object writeReplace() -> writeReplace
    983:983:java.lang.Object readResolve() -> readResolve
    57:855:void <clinit>() -> <clinit>
com.ibm.icu.util.Currency$CurrencyNameResultHandler -> com.ibm.icu.util.g:
    int bestMatchLength -> a
    java.lang.String bestCurrencyISOCode -> b
    734:734:void <init>() -> <init>
    745:751:boolean handlePrefixMatch(int,java.util.Iterator) -> handlePrefixMatch
    755:755:java.lang.String getBestCurrencyISOCode() -> a
    759:759:int getBestMatchLength() -> b
    734:734:void <init>(byte) -> <init>
com.ibm.icu.util.Currency$CurrencyStringInfo -> com.ibm.icu.util.h:
    java.lang.String isoCode -> a
    719:722:void <init>(java.lang.String,java.lang.String) -> <init>
    725:725:java.lang.String getISOCode() -> a
com.ibm.icu.util.Currency$CurrencyUsage -> com.ibm.icu.util.Currency$CurrencyUsage:
    com.ibm.icu.util.Currency$CurrencyUsage STANDARD -> STANDARD
    com.ibm.icu.util.Currency$CurrencyUsage CASH -> CASH
    com.ibm.icu.util.Currency$CurrencyUsage[] $VALUES -> a
    96:96:com.ibm.icu.util.Currency$CurrencyUsage[] values() -> values
    96:96:com.ibm.icu.util.Currency$CurrencyUsage valueOf(java.lang.String) -> valueOf
    96:96:void <init>(java.lang.String,int) -> <init>
    96:109:void <clinit>() -> <clinit>
com.ibm.icu.util.Currency$EquivalenceRelation -> com.ibm.icu.util.i:
    java.util.Map data -> a
    943:945:void <init>() -> <init>
    949:959:com.ibm.icu.util.Currency$EquivalenceRelation add(java.lang.Object[]) -> a
    963:967:java.util.Set get(java.lang.Object) -> a
    943:943:void <init>(byte) -> <init>
com.ibm.icu.util.Currency$ServiceShim -> com.ibm.icu.util.j:
    115:115:void <init>() -> <init>
    com.ibm.icu.util.ULocale[] getAvailableULocales() -> a
    java.util.Locale[] getAvailableLocales() -> b
    com.ibm.icu.util.Currency createInstance(com.ibm.icu.util.ULocale) -> a
    java.lang.Object registerInstance(com.ibm.icu.util.Currency,com.ibm.icu.util.ULocale) -> a
    boolean unregister(java.lang.Object) -> a
com.ibm.icu.util.CurrencyAmount -> com.ibm.icu.util.CurrencyAmount:
    32:33:void <init>(java.lang.Number,com.ibm.icu.util.Currency) -> <init>
    42:43:void <init>(double,com.ibm.icu.util.Currency) -> <init>
    51:51:com.ibm.icu.util.Currency getCurrency() -> getCurrency
com.ibm.icu.util.CurrencyServiceShim -> com.ibm.icu.util.k:
    com.ibm.icu.impl.ICULocaleService service -> a
    23:57:void <init>() -> <init>
    26:29:java.util.Locale[] getAvailableLocales() -> b
    33:36:com.ibm.icu.util.ULocale[] getAvailableULocales() -> a
    42:46:com.ibm.icu.util.Currency createInstance(com.ibm.icu.util.ULocale) -> a
    50:50:java.lang.Object registerInstance(com.ibm.icu.util.Currency,com.ibm.icu.util.ULocale) -> a
    54:54:boolean unregister(java.lang.Object) -> a
    71:71:void <clinit>() -> <clinit>
com.ibm.icu.util.CurrencyServiceShim$CFService -> com.ibm.icu.util.l:
    59:69:void <init>() -> <init>
com.ibm.icu.util.CurrencyServiceShim$CFService$1CurrencyFactory -> com.ibm.icu.util.m:
    61:61:void <init>(com.ibm.icu.util.CurrencyServiceShim$CFService) -> <init>
    63:63:java.lang.Object handleCreate(com.ibm.icu.util.ULocale,int,com.ibm.icu.impl.ICUService) -> handleCreate
com.ibm.icu.util.DangiCalendar -> com.ibm.icu.util.DangiCalendar:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.util.TimeZone KOREA_ZONE -> a
    89:90:void <init>() -> <init>
    102:104:void <init>(java.util.Date) -> <init>
    117:118:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    128:128:java.lang.String getType() -> getType
    62:79:void <clinit>() -> <clinit>
com.ibm.icu.util.DateInterval -> com.ibm.icu.util.DateInterval:
    long serialVersionUID -> serialVersionUID
    long fromDate -> a
    long toDate -> b
    32:35:void <init>(long,long) -> <init>
    44:44:long getFromDate() -> getFromDate
    54:54:long getToDate() -> getToDate
    62:66:boolean equals(java.lang.Object) -> equals
    74:74:int hashCode() -> hashCode
    82:82:java.lang.String toString() -> toString
com.ibm.icu.util.DateRule -> com.ibm.icu.util.DateRule:
    java.util.Date firstAfter(java.util.Date) -> firstAfter
    java.util.Date firstBetween(java.util.Date,java.util.Date) -> firstBetween
    boolean isOn(java.util.Date) -> isOn
    boolean isBetween(java.util.Date,java.util.Date) -> isBetween
com.ibm.icu.util.DateTimeRule -> com.ibm.icu.util.DateTimeRule:
    long serialVersionUID -> serialVersionUID
    int DOM -> DOM
    int DOW -> DOW
    int DOW_GEQ_DOM -> DOW_GEQ_DOM
    int DOW_LEQ_DOM -> DOW_LEQ_DOM
    int WALL_TIME -> WALL_TIME
    int STANDARD_TIME -> STANDARD_TIME
    int UTC_TIME -> UTC_TIME
    int dateRuleType -> a
    int month -> b
    int dayOfMonth -> c
    int dayOfWeek -> d
    int weekInMonth -> e
    int timeRuleType -> f
    int millisInDay -> g
    java.lang.String[] DOWSTR -> h
    java.lang.String[] MONSTR -> i
    101:112:void <init>(int,int,int,int) -> <init>
    131:142:void <init>(int,int,int,int,int) -> <init>
    161:172:void <init>(int,int,int,boolean,int,int) -> <init>
    182:182:int getDateRuleType() -> getDateRuleType
    193:193:int getRuleMonth() -> getRuleMonth
    205:205:int getRuleDayOfMonth() -> getRuleDayOfMonth
    217:217:int getRuleDayOfWeek() -> getRuleDayOfWeek
    230:230:int getRuleWeekInMonth() -> getRuleWeekInMonth
    242:242:int getTimeRuleType() -> getTimeRuleType
    253:253:int getRuleMillisInDay() -> getRuleMillisInDay
    267:325:java.lang.String toString() -> toString
    256:257:void <clinit>() -> <clinit>
com.ibm.icu.util.EasterHoliday -> com.ibm.icu.util.EasterHoliday:
    com.ibm.icu.util.EasterHoliday SHROVE_TUESDAY -> SHROVE_TUESDAY
    com.ibm.icu.util.EasterHoliday ASH_WEDNESDAY -> ASH_WEDNESDAY
    com.ibm.icu.util.EasterHoliday PALM_SUNDAY -> PALM_SUNDAY
    com.ibm.icu.util.EasterHoliday MAUNDY_THURSDAY -> MAUNDY_THURSDAY
    com.ibm.icu.util.EasterHoliday GOOD_FRIDAY -> GOOD_FRIDAY
    com.ibm.icu.util.EasterHoliday EASTER_SUNDAY -> EASTER_SUNDAY
    com.ibm.icu.util.EasterHoliday EASTER_MONDAY -> EASTER_MONDAY
    com.ibm.icu.util.EasterHoliday ASCENSION -> ASCENSION
    com.ibm.icu.util.EasterHoliday PENTECOST -> PENTECOST
    com.ibm.icu.util.EasterHoliday WHIT_SUNDAY -> WHIT_SUNDAY
    com.ibm.icu.util.EasterHoliday WHIT_MONDAY -> WHIT_MONDAY
    com.ibm.icu.util.EasterHoliday CORPUS_CHRISTI -> CORPUS_CHRISTI
    33:34:void <init>(java.lang.String) -> <init>
    47:48:void <init>(int,java.lang.String) -> <init>
    63:64:void <init>(int,boolean,java.lang.String) -> <init>
    71:148:void <clinit>() -> <clinit>
com.ibm.icu.util.EasterRule -> com.ibm.icu.util.n:
    com.ibm.icu.util.GregorianCalendar gregorian -> a
    com.ibm.icu.util.GregorianCalendar orthodox -> b
    int daysAfterEaster -> c
    com.ibm.icu.util.GregorianCalendar calendar -> d
    152:289:void <init>(int,boolean) -> <init>
    165:165:java.util.Date firstAfter(java.util.Date) -> firstAfter
    174:174:java.util.Date firstBetween(java.util.Date,java.util.Date) -> firstBetween
    182:189:boolean isOn(java.util.Date) -> isOn
    197:197:boolean isBetween(java.util.Date,java.util.Date) -> isBetween
    205:231:java.util.Date doFirstBetween(java.util.Date,java.util.Date) -> a
    245:282:java.util.Date computeInYear(java.util.Date,com.ibm.icu.util.GregorianCalendar) -> a
    285:286:void <clinit>() -> <clinit>
com.ibm.icu.util.EthiopicCalendar -> com.ibm.icu.util.EthiopicCalendar:
    long serialVersionUID -> serialVersionUID
    int MESKEREM -> MESKEREM
    int TEKEMT -> TEKEMT
    int HEDAR -> HEDAR
    int TAHSAS -> TAHSAS
    int TER -> TER
    int YEKATIT -> YEKATIT
    int MEGABIT -> MEGABIT
    int MIAZIA -> MIAZIA
    int GENBOT -> GENBOT
    int SENE -> SENE
    int HAMLE -> HAMLE
    int NEHASSE -> NEHASSE
    int PAGUMEN -> PAGUMEN
    int eraType -> a
    156:157:void <init>() -> <init>
    167:168:void <init>(com.ibm.icu.util.TimeZone) -> <init>
    178:179:void <init>(java.util.Locale) -> <init>
    189:190:void <init>(com.ibm.icu.util.ULocale) -> <init>
    201:202:void <init>(com.ibm.icu.util.TimeZone,java.util.Locale) -> <init>
    148:215:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    148:229:void <init>(int,int,int) -> <init>
    148:240:void <init>(java.util.Date) -> <init>
    148:259:void <init>(int,int,int,int,int,int) -> <init>
    266:269:java.lang.String getType() -> getType
    279:280:void setAmeteAlemEra(boolean) -> setAmeteAlemEra
    289:289:boolean isAmeteAlemEra() -> isAmeteAlemEra
    302:316:int handleGetExtendedYear() -> handleGetExtendedYear
    327:353:void handleComputeFields(int) -> handleComputeFields
    362:365:int handleGetLimit(int,int) -> handleGetLimit
    375:375:int getJDEpochOffset() -> getJDEpochOffset
    393:393:int EthiopicToJD(long,int,int) -> EthiopicToJD
    400:406:void setCalcTypeForLocale(com.ibm.icu.util.ULocale) -> a
com.ibm.icu.util.Freezable -> com.ibm.icu.util.Freezable:
    boolean isFrozen() -> isFrozen
    java.lang.Object freeze() -> freeze
    java.lang.Object cloneAsThawed() -> cloneAsThawed
com.ibm.icu.util.GenderInfo -> com.ibm.icu.util.GenderInfo:
    com.ibm.icu.util.GenderInfo$ListGenderStyle style -> a
    com.ibm.icu.util.GenderInfo neutral -> b
    com.ibm.icu.util.GenderInfo$Cache genderInfoCache -> c
    66:66:com.ibm.icu.util.GenderInfo getInstance(com.ibm.icu.util.ULocale) -> getInstance
    77:77:com.ibm.icu.util.GenderInfo getInstance(java.util.Locale) -> getInstance
    151:151:com.ibm.icu.util.GenderInfo$Gender getListGender(com.ibm.icu.util.GenderInfo$Gender[]) -> getListGender
    163:203:com.ibm.icu.util.GenderInfo$Gender getListGender(java.util.List) -> getListGender
    214:216:void <init>(com.ibm.icu.util.GenderInfo$ListGenderStyle) -> <init>
    27:27:com.ibm.icu.util.GenderInfo access$000() -> a
    218:256:void <clinit>() -> <clinit>
com.ibm.icu.util.GenderInfo$1 -> com.ibm.icu.util.o:
    int[] $SwitchMap$com$ibm$icu$util$GenderInfo$Gender -> a
    int[] $SwitchMap$com$ibm$icu$util$GenderInfo$ListGenderStyle -> b
    169:176:void <clinit>() -> <clinit>
com.ibm.icu.util.GenderInfo$Cache -> com.ibm.icu.util.p:
    com.ibm.icu.impl.ICUCache cache -> a
    220:221:void <init>() -> <init>
    225:238:com.ibm.icu.util.GenderInfo get(com.ibm.icu.util.ULocale) -> a
    242:251:com.ibm.icu.util.GenderInfo load(com.ibm.icu.util.ULocale) -> b
    220:220:void <init>(byte) -> <init>
com.ibm.icu.util.GenderInfo$Gender -> com.ibm.icu.util.GenderInfo$Gender:
    com.ibm.icu.util.GenderInfo$Gender MALE -> MALE
    com.ibm.icu.util.GenderInfo$Gender FEMALE -> FEMALE
    com.ibm.icu.util.GenderInfo$Gender OTHER -> OTHER
    com.ibm.icu.util.GenderInfo$Gender[] $VALUES -> a
    36:36:com.ibm.icu.util.GenderInfo$Gender[] values() -> values
    36:36:com.ibm.icu.util.GenderInfo$Gender valueOf(java.lang.String) -> valueOf
    37:37:void <init>(java.lang.String,int) -> <init>
    36:54:void <clinit>() -> <clinit>
com.ibm.icu.util.GenderInfo$ListGenderStyle -> com.ibm.icu.util.GenderInfo$ListGenderStyle:
    com.ibm.icu.util.GenderInfo$ListGenderStyle NEUTRAL -> NEUTRAL
    com.ibm.icu.util.GenderInfo$ListGenderStyle MIXED_NEUTRAL -> MIXED_NEUTRAL
    com.ibm.icu.util.GenderInfo$ListGenderStyle MALE_TAINTS -> MALE_TAINTS
    java.util.Map fromNameMap -> a
    com.ibm.icu.util.GenderInfo$ListGenderStyle[] $VALUES -> b
    87:87:com.ibm.icu.util.GenderInfo$ListGenderStyle[] values() -> values
    87:87:com.ibm.icu.util.GenderInfo$ListGenderStyle valueOf(java.lang.String) -> valueOf
    88:88:void <init>(java.lang.String,int) -> <init>
    134:138:com.ibm.icu.util.GenderInfo$ListGenderStyle fromName(java.lang.String) -> fromName
    87:126:void <clinit>() -> <clinit>
com.ibm.icu.util.GlobalizationPreferences -> com.ibm.icu.util.GlobalizationPreferences:
    int NF_NUMBER -> NF_NUMBER
    int NF_CURRENCY -> NF_CURRENCY
    int NF_PERCENT -> NF_PERCENT
    int NF_SCIENTIFIC -> NF_SCIENTIFIC
    int NF_INTEGER -> NF_INTEGER
    int DF_FULL -> DF_FULL
    int DF_LONG -> DF_LONG
    int DF_MEDIUM -> DF_MEDIUM
    int DF_SHORT -> DF_SHORT
    int DF_NONE -> DF_NONE
    int ID_LOCALE -> ID_LOCALE
    int ID_LANGUAGE -> ID_LANGUAGE
    int ID_SCRIPT -> ID_SCRIPT
    int ID_TERRITORY -> ID_TERRITORY
    int ID_VARIANT -> ID_VARIANT
    int ID_KEYWORD -> ID_KEYWORD
    int ID_KEYWORD_VALUE -> ID_KEYWORD_VALUE
    int ID_CURRENCY -> ID_CURRENCY
    int ID_CURRENCY_SYMBOL -> ID_CURRENCY_SYMBOL
    int ID_TIMEZONE -> ID_TIMEZONE
    int BI_CHARACTER -> BI_CHARACTER
    int BI_WORD -> BI_WORD
    int BI_LINE -> BI_LINE
    int BI_SENTENCE -> BI_SENTENCE
    int BI_TITLE -> BI_TITLE
    java.util.List locales -> a
    java.lang.String territory -> b
    com.ibm.icu.util.Currency currency -> c
    com.ibm.icu.util.TimeZone timezone -> d
    com.ibm.icu.util.Calendar calendar -> e
    com.ibm.icu.text.Collator collator -> f
    com.ibm.icu.text.BreakIterator[] breakIterators -> g
    com.ibm.icu.text.DateFormat[][] dateFormats -> h
    com.ibm.icu.text.NumberFormat[] numberFormats -> i
    java.util.List implicitLocales -> j
    java.util.HashMap available_locales -> k
    java.util.Map language_territory_hack_map -> l
    java.lang.String[][] language_territory_hack -> m
    java.util.Map territory_tzid_hack_map -> n
    java.lang.String[][] territory_tzid_hack -> o
    boolean frozen -> p
    93:1179:void <init>() -> <init>
    169:173:com.ibm.icu.util.GlobalizationPreferences setLocales(java.util.List) -> setLocales
    185:191:java.util.List getLocales() -> getLocales
    202:209:com.ibm.icu.util.ULocale getLocale(int) -> getLocale
    223:226:com.ibm.icu.util.GlobalizationPreferences setLocales(com.ibm.icu.util.ULocale[]) -> setLocales
    240:243:com.ibm.icu.util.GlobalizationPreferences setLocale(com.ibm.icu.util.ULocale) -> setLocale
    257:267:com.ibm.icu.util.GlobalizationPreferences setLocales(java.lang.String) -> setLocales
    283:283:java.util.ResourceBundle getResourceBundle(java.lang.String) -> getResourceBundle
    300:339:java.util.ResourceBundle getResourceBundle(java.lang.String,java.lang.ClassLoader) -> getResourceBundle
    355:359:com.ibm.icu.util.GlobalizationPreferences setTerritory(java.lang.String) -> setTerritory
    371:374:java.lang.String getTerritory() -> getTerritory
    386:390:com.ibm.icu.util.GlobalizationPreferences setCurrency(com.ibm.icu.util.Currency) -> setCurrency
    401:404:com.ibm.icu.util.Currency getCurrency() -> getCurrency
    416:420:com.ibm.icu.util.GlobalizationPreferences setCalendar(com.ibm.icu.util.Calendar) -> setCalendar
    431:437:com.ibm.icu.util.Calendar getCalendar() -> getCalendar
    449:453:com.ibm.icu.util.GlobalizationPreferences setTimeZone(com.ibm.icu.util.TimeZone) -> setTimeZone
    465:468:com.ibm.icu.util.TimeZone getTimeZone() -> getTimeZone
    479:485:com.ibm.icu.text.Collator getCollator() -> getCollator
    497:505:com.ibm.icu.util.GlobalizationPreferences setCollator(com.ibm.icu.text.Collator) -> setCollator
    518:524:com.ibm.icu.text.BreakIterator getBreakIterator(int) -> getBreakIterator
    537:546:com.ibm.icu.util.GlobalizationPreferences setBreakIterator(int,com.ibm.icu.text.BreakIterator) -> setBreakIterator
    560:647:java.lang.String getDisplayName(java.lang.String,int) -> getDisplayName
    664:671:com.ibm.icu.util.GlobalizationPreferences setDateFormat(int,int,com.ibm.icu.text.DateFormat) -> setDateFormat
    688:704:com.ibm.icu.text.DateFormat getDateFormat(int,int) -> getDateFormat
    718:730:com.ibm.icu.text.NumberFormat getNumberFormat(int) -> getNumberFormat
    743:750:com.ibm.icu.util.GlobalizationPreferences setNumberFormat(int,com.ibm.icu.text.NumberFormat) -> setNumberFormat
    761:774:com.ibm.icu.util.GlobalizationPreferences reset() -> reset
    816:932:java.util.List processLocales(java.util.List) -> processLocales
    948:959:com.ibm.icu.text.DateFormat guessDateFormat(int,int) -> guessDateFormat
    973:997:com.ibm.icu.text.NumberFormat guessNumberFormat(int) -> guessNumberFormat
    1009:1032:java.lang.String guessTerritory() -> guessTerritory
    1042:1042:com.ibm.icu.util.Currency guessCurrency() -> guessCurrency
    1054:1059:java.util.List guessLocales() -> guessLocales
    1071:1075:com.ibm.icu.text.Collator guessCollator() -> guessCollator
    1088:1112:com.ibm.icu.text.BreakIterator guessBreakIterator(int) -> guessBreakIterator
    1131:1146:com.ibm.icu.util.TimeZone guessTimeZone() -> guessTimeZone
    1158:1162:com.ibm.icu.util.Calendar guessCalendar() -> guessCalendar
    1184:1193:com.ibm.icu.util.ULocale getAvailableLocale(int) -> a
    1197:1201:boolean isAvailableLocale(com.ibm.icu.util.ULocale,int) -> a
    1486:1486:boolean isFrozen() -> isFrozen
    1494:1495:com.ibm.icu.util.GlobalizationPreferences freeze() -> freeze
    1504:1509:com.ibm.icu.util.GlobalizationPreferences cloneAsThawed() -> cloneAsThawed
    86:86:java.lang.Object cloneAsThawed() -> cloneAsThawed
    86:86:java.lang.Object freeze() -> freeze
    1207:1475:void <clinit>() -> <clinit>
com.ibm.icu.util.GregorianCalendar -> com.ibm.icu.util.GregorianCalendar:
    long serialVersionUID -> serialVersionUID
    int BC -> BC
    int AD -> AD
    int[][] MONTH_COUNT -> a
    int[][] LIMITS -> b
    long gregorianCutover -> c
    int cutoverJulianDay -> d
    int gregorianCutoverYear -> e
    boolean isGregorian -> isGregorian
    boolean invertGregorian -> invertGregorian
    287:287:int handleGetLimit(int,int) -> handleGetLimit
    338:339:void <init>() -> <init>
    349:350:void <init>(com.ibm.icu.util.TimeZone) -> <init>
    359:360:void <init>(java.util.Locale) -> <init>
    369:370:void <init>(com.ibm.icu.util.ULocale) -> <init>
    302:382:void <init>(com.ibm.icu.util.TimeZone,java.util.Locale) -> <init>
    302:394:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    302:412:void <init>(int,int,int) -> <init>
    302:437:void <init>(int,int,int,int,int) -> <init>
    302:465:void <init>(int,int,int,int,int,int) -> <init>
    484:504:void setGregorianChange(java.util.Date) -> setGregorianChange
    515:515:java.util.Date getGregorianChange() -> getGregorianChange
    526:526:boolean isLeapYear(int) -> isLeapYear
    539:539:boolean isEquivalentTo(com.ibm.icu.util.Calendar) -> isEquivalentTo
    549:549:int hashCode() -> hashCode
    558:606:void roll(int,int) -> roll
    616:616:int getActualMinimum(int) -> getActualMinimum
    646:695:int getActualMaximum(int) -> getActualMaximum
    708:710:boolean inDaylightTime() -> c
    724:730:int handleGetMonthLength(int,int) -> handleGetMonthLength
    737:737:int handleGetYearLength(int) -> handleGetYearLength
    759:803:void handleComputeFields(int) -> handleComputeFields
    814:825:int handleGetExtendedYear() -> handleGetExtendedYear
    833:844:int handleComputeJulianDay(int) -> handleComputeJulianDay
    855:884:int handleComputeMonthStart(int,int,boolean) -> handleComputeMonthStart
    892:892:java.lang.String getType() -> getType
    232:255:void <clinit>() -> <clinit>
com.ibm.icu.util.HebrewCalendar -> com.ibm.icu.util.HebrewCalendar:
    long serialVersionUID -> serialVersionUID
    int TISHRI -> TISHRI
    int HESHVAN -> HESHVAN
    int KISLEV -> KISLEV
    int TEVET -> TEVET
    int SHEVAT -> SHEVAT
    int ADAR_1 -> ADAR_1
    int ADAR -> ADAR
    int NISAN -> NISAN
    int IYAR -> IYAR
    int SIVAN -> SIVAN
    int TAMUZ -> TAMUZ
    int AV -> AV
    int ELUL -> ELUL
    int[][] LIMITS -> a
    int[][] MONTH_LENGTH -> b
    int[][] MONTH_START -> c
    int[][] LEAP_MONTH_START -> d
    com.ibm.icu.impl.CalendarCache cache -> e
    283:284:void <init>() -> <init>
    295:296:void <init>(com.ibm.icu.util.TimeZone) -> <init>
    306:307:void <init>(java.util.Locale) -> <init>
    317:318:void <init>(com.ibm.icu.util.ULocale) -> <init>
    330:332:void <init>(com.ibm.icu.util.TimeZone,java.util.Locale) -> <init>
    344:346:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    362:366:void <init>(int,int,int) -> <init>
    377:379:void <init>(java.util.Date) -> <init>
    403:410:void <init>(int,int,int,int,int,int) -> <init>
    448:498:void add(int,int) -> add
    534:561:void roll(int,int) -> roll
    606:636:long startOfYear(int) -> a
    659:678:int yearType(int) -> b
    692:693:boolean isLeapYear(int) -> isLeapYear
    697:697:int monthsInYear(int) -> c
    708:708:int handleGetLimit(int,int) -> handleGetLimit
    722:738:int handleGetMonthLength(int,int) -> handleGetMonthLength
    747:747:int handleGetYearLength(int) -> handleGetYearLength
    760:765:void validateField(int) -> validateField
    793:823:void handleComputeFields(int) -> handleComputeFields
    834:839:int handleGetExtendedYear() -> handleGetExtendedYear
    854:872:int handleComputeMonthStart(int,int,boolean) -> handleComputeMonthStart
    880:880:java.lang.String getType() -> getType
    171:270:void <clinit>() -> <clinit>
com.ibm.icu.util.HebrewHoliday -> com.ibm.icu.util.HebrewHoliday:
    com.ibm.icu.util.HebrewCalendar gCalendar -> a
    com.ibm.icu.util.HebrewHoliday ROSH_HASHANAH -> ROSH_HASHANAH
    com.ibm.icu.util.HebrewHoliday GEDALIAH -> GEDALIAH
    com.ibm.icu.util.HebrewHoliday YOM_KIPPUR -> YOM_KIPPUR
    com.ibm.icu.util.HebrewHoliday SUKKOT -> SUKKOT
    com.ibm.icu.util.HebrewHoliday HOSHANAH_RABBAH -> HOSHANAH_RABBAH
    com.ibm.icu.util.HebrewHoliday SHEMINI_ATZERET -> SHEMINI_ATZERET
    com.ibm.icu.util.HebrewHoliday SIMCHAT_TORAH -> SIMCHAT_TORAH
    com.ibm.icu.util.HebrewHoliday HANUKKAH -> HANUKKAH
    com.ibm.icu.util.HebrewHoliday TEVET_10 -> TEVET_10
    com.ibm.icu.util.HebrewHoliday TU_BSHEVAT -> TU_BSHEVAT
    com.ibm.icu.util.HebrewHoliday ESTHER -> ESTHER
    com.ibm.icu.util.HebrewHoliday PURIM -> PURIM
    com.ibm.icu.util.HebrewHoliday SHUSHAN_PURIM -> SHUSHAN_PURIM
    com.ibm.icu.util.HebrewHoliday PASSOVER -> PASSOVER
    com.ibm.icu.util.HebrewHoliday YOM_HASHOAH -> YOM_HASHOAH
    com.ibm.icu.util.HebrewHoliday YOM_HAZIKARON -> YOM_HAZIKARON
    com.ibm.icu.util.HebrewHoliday YOM_HAATZMAUT -> YOM_HAATZMAUT
    com.ibm.icu.util.HebrewHoliday PESACH_SHEINI -> PESACH_SHEINI
    com.ibm.icu.util.HebrewHoliday LAG_BOMER -> LAG_BOMER
    com.ibm.icu.util.HebrewHoliday YOM_YERUSHALAYIM -> YOM_YERUSHALAYIM
    com.ibm.icu.util.HebrewHoliday SHAVUOT -> SHAVUOT
    com.ibm.icu.util.HebrewHoliday TAMMUZ_17 -> TAMMUZ_17
    com.ibm.icu.util.HebrewHoliday TISHA_BAV -> TISHA_BAV
    com.ibm.icu.util.HebrewHoliday SELIHOT -> SELIHOT
    30:31:void <init>(int,int,java.lang.String) -> <init>
    39:40:void <init>(int,int,int,java.lang.String) -> <init>
    19:184:void <clinit>() -> <clinit>
com.ibm.icu.util.Holiday -> com.ibm.icu.util.Holiday:
    java.lang.String name -> a
    com.ibm.icu.util.DateRule rule -> b
    com.ibm.icu.util.Holiday[] noHolidays -> c
    33:33:com.ibm.icu.util.Holiday[] getHolidays() -> getHolidays
    42:42:com.ibm.icu.util.Holiday[] getHolidays(java.util.Locale) -> getHolidays
    51:60:com.ibm.icu.util.Holiday[] getHolidays(com.ibm.icu.util.ULocale) -> getHolidays
    76:76:java.util.Date firstAfter(java.util.Date) -> firstAfter
    94:94:java.util.Date firstBetween(java.util.Date,java.util.Date) -> firstBetween
    109:109:boolean isOn(java.util.Date) -> isOn
    119:119:boolean isBetween(java.util.Date,java.util.Date) -> isBetween
    137:140:void <init>(java.lang.String,com.ibm.icu.util.DateRule) -> <init>
    149:149:java.lang.String getDisplayName() -> getDisplayName
    166:166:java.lang.String getDisplayName(java.util.Locale) -> getDisplayName
    183:191:java.lang.String getDisplayName(com.ibm.icu.util.ULocale) -> getDisplayName
    199:199:com.ibm.icu.util.DateRule getRule() -> getRule
    207:208:void setRule(com.ibm.icu.util.DateRule) -> setRule
    213:213:void <clinit>() -> <clinit>
com.ibm.icu.util.ICUCloneNotSupportedException -> com.ibm.icu.util.ICUCloneNotSupportedException:
    long serialVersionUID -> serialVersionUID
    24:25:void <init>() -> <init>
    34:35:void <init>(java.lang.String) -> <init>
    44:45:void <init>(java.lang.Throwable) -> <init>
    55:56:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.ibm.icu.util.ICUException -> com.ibm.icu.util.ICUException:
    long serialVersionUID -> serialVersionUID
    22:23:void <init>() -> <init>
    32:33:void <init>(java.lang.String) -> <init>
    42:43:void <init>(java.lang.Throwable) -> <init>
    53:54:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.ibm.icu.util.ICUUncheckedIOException -> com.ibm.icu.util.ICUUncheckedIOException:
    long serialVersionUID -> serialVersionUID
    28:29:void <init>() -> <init>
    38:39:void <init>(java.lang.String) -> <init>
    48:49:void <init>(java.lang.Throwable) -> <init>
    59:60:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.ibm.icu.util.IllformedLocaleException -> com.ibm.icu.util.IllformedLocaleException:
    long serialVersionUID -> serialVersionUID
    int _errIdx -> a
    20:29:void <init>() -> <init>
    20:40:void <init>(java.lang.String) -> <init>
    20:56:void <init>(java.lang.String,int) -> <init>
    66:66:int getErrorIndex() -> getErrorIndex
com.ibm.icu.util.IndianCalendar -> com.ibm.icu.util.IndianCalendar:
    long serialVersionUID -> serialVersionUID
    int CHAITRA -> CHAITRA
    int VAISAKHA -> VAISAKHA
    int JYAISTHA -> JYAISTHA
    int ASADHA -> ASADHA
    int SRAVANA -> SRAVANA
    int BHADRA -> BHADRA
    int ASVINA -> ASVINA
    int KARTIKA -> KARTIKA
    int AGRAHAYANA -> AGRAHAYANA
    int PAUSA -> PAUSA
    int MAGHA -> MAGHA
    int PHALGUNA -> PHALGUNA
    int IE -> IE
    int[][] LIMITS -> a
    163:164:void <init>() -> <init>
    175:176:void <init>(com.ibm.icu.util.TimeZone) -> <init>
    186:187:void <init>(java.util.Locale) -> <init>
    197:198:void <init>(com.ibm.icu.util.ULocale) -> <init>
    210:212:void <init>(com.ibm.icu.util.TimeZone,java.util.Locale) -> <init>
    224:226:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    237:239:void <init>(java.util.Date) -> <init>
    255:260:void <init>(int,int,int) -> <init>
    284:291:void <init>(int,int,int,int,int,int) -> <init>
    313:320:int handleGetExtendedYear() -> handleGetExtendedYear
    328:328:int handleGetYearLength(int) -> handleGetYearLength
    336:350:int handleGetMonthLength(int,int) -> handleGetMonthLength
    362:398:void handleComputeFields(int) -> handleComputeFields
    433:433:int handleGetLimit(int,int) -> handleGetLimit
    446:459:int handleComputeMonthStart(int,int,boolean) -> handleComputeMonthStart
    474:499:double IndianToJD(int,int,int) -> a
    510:519:double gregorianToJD(int,int,int) -> b
    528:562:int[] jdToGregorian(double) -> a
    572:572:boolean isGregorianLeap(int) -> a
    582:582:java.lang.String getType() -> getType
    400:400:void <clinit>() -> <clinit>
com.ibm.icu.util.InitialTimeZoneRule -> com.ibm.icu.util.InitialTimeZoneRule:
    long serialVersionUID -> serialVersionUID
    34:35:void <init>(java.lang.String,int,int) -> <init>
    43:46:boolean isEquivalentTo(com.ibm.icu.util.TimeZoneRule) -> isEquivalentTo
    57:57:java.util.Date getFinalStart(int,int) -> getFinalStart
    68:68:java.util.Date getFirstStart(int,int) -> getFirstStart
    80:80:java.util.Date getNextStart(long,int,int,boolean) -> getNextStart
    92:92:java.util.Date getPreviousStart(long,int,int,boolean) -> getPreviousStart
    101:101:boolean isTransitionRule() -> isTransitionRule
com.ibm.icu.util.IslamicCalendar -> com.ibm.icu.util.IslamicCalendar:
    long serialVersionUID -> serialVersionUID
    int MUHARRAM -> MUHARRAM
    int SAFAR -> SAFAR
    int RABI_1 -> RABI_1
    int RABI_2 -> RABI_2
    int JUMADA_1 -> JUMADA_1
    int JUMADA_2 -> JUMADA_2
    int RAJAB -> RAJAB
    int SHABAN -> SHABAN
    int RAMADAN -> RAMADAN
    int SHAWWAL -> SHAWWAL
    int DHU_AL_QIDAH -> DHU_AL_QIDAH
    int DHU_AL_HIJJAH -> DHU_AL_HIJJAH
    int[][] LIMITS -> a
    int[] UMALQURA_MONTHLENGTH -> b
    byte[] UMALQURA_YEAR_START_ESTIMATE_FIX -> c
    com.ibm.icu.impl.CalendarAstronomer astro -> d
    com.ibm.icu.impl.CalendarCache cache -> e
    boolean civil -> f
    com.ibm.icu.util.IslamicCalendar$CalculationType cType -> g
    192:193:void <init>() -> <init>
    204:205:void <init>(com.ibm.icu.util.TimeZone) -> <init>
    216:217:void <init>(java.util.Locale) -> <init>
    228:229:void <init>(com.ibm.icu.util.ULocale) -> <init>
    241:242:void <init>(com.ibm.icu.util.TimeZone,java.util.Locale) -> <init>
    254:723:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    268:723:void <init>(java.util.Date) -> <init>
    285:723:void <init>(int,int,int) -> <init>
    311:723:void <init>(int,int,int,int,int,int) -> <init>
    330:347:void setCivil(boolean) -> setCivil
    357:360:boolean isCivil() -> isCivil
    511:511:int handleGetLimit(int,int) -> handleGetLimit
    576:576:boolean civilLeapYear(int) -> a
    584:598:long yearStart(int) -> b
    611:628:long monthStart(int,int) -> a
    641:670:long trueMonthStart(long) -> a
    684:696:double moonAge(long) -> b
    738:758:int handleGetMonthLength(int,int) -> handleGetMonthLength
    766:779:int handleGetYearLength(int) -> handleGetYearLength
    795:795:int handleComputeMonthStart(int,int,boolean) -> handleComputeMonthStart
    807:812:int handleGetExtendedYear() -> handleGetExtendedYear
    832:909:void handleComputeFields(int) -> handleComputeFields
    958:965:void setCalculationType(com.ibm.icu.util.IslamicCalendar$CalculationType) -> setCalculationType
    974:974:com.ibm.icu.util.IslamicCalendar$CalculationType getCalculationType() -> getCalculationType
    981:992:void setCalcTypeForLocale(com.ibm.icu.util.ULocale) -> a
    1000:1006:java.lang.String getType() -> getType
    1011:1021:void readObject(java.io.ObjectInputStream) -> readObject
    370:706:void <clinit>() -> <clinit>
com.ibm.icu.util.IslamicCalendar$CalculationType -> com.ibm.icu.util.IslamicCalendar$CalculationType:
    com.ibm.icu.util.IslamicCalendar$CalculationType ISLAMIC -> ISLAMIC
    com.ibm.icu.util.IslamicCalendar$CalculationType ISLAMIC_CIVIL -> ISLAMIC_CIVIL
    com.ibm.icu.util.IslamicCalendar$CalculationType ISLAMIC_UMALQURA -> ISLAMIC_UMALQURA
    com.ibm.icu.util.IslamicCalendar$CalculationType ISLAMIC_TBLA -> ISLAMIC_TBLA
    java.lang.String bcpType -> a
    com.ibm.icu.util.IslamicCalendar$CalculationType[] $VALUES -> b
    916:916:com.ibm.icu.util.IslamicCalendar$CalculationType[] values() -> values
    916:916:com.ibm.icu.util.IslamicCalendar$CalculationType valueOf(java.lang.String) -> valueOf
    942:944:void <init>(java.lang.String,int,java.lang.String) -> <init>
    947:947:java.lang.String bcpType() -> a
    916:938:void <clinit>() -> <clinit>
com.ibm.icu.util.JapaneseCalendar -> com.ibm.icu.util.JapaneseCalendar:
    long serialVersionUID -> serialVersionUID
    int[] ERAS -> a
    int CURRENT_ERA -> CURRENT_ERA
    int MEIJI -> MEIJI
    int TAISHO -> TAISHO
    int SHOWA -> SHOWA
    int HEISEI -> HEISEI
    62:63:void <init>() -> <init>
    72:73:void <init>(com.ibm.icu.util.TimeZone) -> <init>
    82:83:void <init>(java.util.Locale) -> <init>
    92:93:void <init>(com.ibm.icu.util.ULocale) -> <init>
    105:106:void <init>(com.ibm.icu.util.TimeZone,java.util.Locale) -> <init>
    118:119:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    129:131:void <init>(java.util.Date) -> <init>
    156:158:void <init>(int,int,int,int) -> <init>
    175:177:void <init>(int,int,int) -> <init>
    202:204:void <init>(int,int,int,int,int,int) -> <init>
    218:227:int handleGetExtendedYear() -> handleGetExtendedYear
    241:249:int getDefaultMonthInYear(int) -> getDefaultMonthInYear
    264:272:int getDefaultDayInMonth(int,int) -> getDefaultDayInMonth
    279:321:void handleComputeFields(int) -> handleComputeFields
    607:627:int handleGetLimit(int,int) -> handleGetLimit
    636:636:java.lang.String getType() -> getType
    646:646:boolean haveDefaultCentury() -> haveDefaultCentury
    654:672:int getActualMaximum(int) -> getActualMaximum
    323:597:void <clinit>() -> <clinit>
com.ibm.icu.util.LocaleData -> com.ibm.icu.util.LocaleData:
    boolean noSubstitute -> a
    com.ibm.icu.impl.ICUResourceBundle bundle -> b
    com.ibm.icu.impl.ICUResourceBundle langBundle -> c
    int ES_STANDARD -> ES_STANDARD
    int ES_AUXILIARY -> ES_AUXILIARY
    int ES_INDEX -> ES_INDEX
    int ES_CURRENCY -> ES_CURRENCY
    int ES_PUNCTUATION -> ES_PUNCTUATION
    int ES_COUNT -> ES_COUNT
    int QUOTATION_START -> QUOTATION_START
    int QUOTATION_END -> QUOTATION_END
    int ALT_QUOTATION_START -> ALT_QUOTATION_START
    int ALT_QUOTATION_END -> ALT_QUOTATION_END
    int DELIMITER_COUNT -> DELIMITER_COUNT
    java.lang.String[] DELIMITER_TYPES -> d
    com.ibm.icu.util.VersionInfo gCLDRVersion -> e
    112:112:void <init>() -> <init>
    133:133:com.ibm.icu.text.UnicodeSet getExemplarSet(com.ibm.icu.util.ULocale,int) -> getExemplarSet
    155:155:com.ibm.icu.text.UnicodeSet getExemplarSet(com.ibm.icu.util.ULocale,int,int) -> getExemplarSet
    179:204:com.ibm.icu.text.UnicodeSet getExemplarSet(int,int) -> getExemplarSet
    216:220:com.ibm.icu.util.LocaleData getInstance(com.ibm.icu.util.ULocale) -> getInstance
    231:231:com.ibm.icu.util.LocaleData getInstance() -> getInstance
    244:245:void setNoSubstitute(boolean) -> setNoSubstitute
    257:257:boolean getNoSubstitute() -> getNoSubstitute
    277:284:java.lang.String getDelimiter(int) -> getDelimiter
    292:313:com.ibm.icu.util.UResourceBundle measurementTypeBundleForLocale(com.ibm.icu.util.ULocale,java.lang.String) -> a
    359:373:com.ibm.icu.util.LocaleData$MeasurementSystem getMeasurementSystem(com.ibm.icu.util.ULocale) -> getMeasurementSystem
    415:417:com.ibm.icu.util.LocaleData$PaperSize getPaperSize(com.ibm.icu.util.ULocale) -> getPaperSize
    426:428:java.lang.String getLocaleDisplayPattern() -> getLocaleDisplayPattern
    437:446:java.lang.String getLocaleSeparator() -> getLocaleSeparator
    457:463:com.ibm.icu.util.VersionInfo getCLDRVersion() -> getCLDRVersion
    260:449:void <clinit>() -> <clinit>
com.ibm.icu.util.LocaleData$MeasurementSystem -> com.ibm.icu.util.LocaleData$MeasurementSystem:
    com.ibm.icu.util.LocaleData$MeasurementSystem SI -> SI
    com.ibm.icu.util.LocaleData$MeasurementSystem US -> US
    com.ibm.icu.util.LocaleData$MeasurementSystem UK -> UK
    int systemID -> a
    342:344:void <init>(int) -> <init>
    347:347:boolean equals(int) -> a
    321:321:boolean access$000(com.ibm.icu.util.LocaleData$MeasurementSystem,int) -> a
    327:339:void <clinit>() -> <clinit>
com.ibm.icu.util.LocaleData$PaperSize -> com.ibm.icu.util.LocaleData$PaperSize:
    int height -> a
    int width -> b
    385:388:void <init>(int,int) -> <init>
    395:395:int getHeight() -> getHeight
    403:403:int getWidth() -> getWidth
    381:381:void <init>(int,int,byte) -> <init>
com.ibm.icu.util.LocaleMatcher -> com.ibm.icu.util.LocaleMatcher:
    boolean DEBUG -> DEBUG
    com.ibm.icu.util.ULocale UNKNOWN_LOCALE -> a
    com.ibm.icu.util.ULocale defaultLanguage -> b
    double threshold -> c
    java.util.Set localeToMaxLocaleAndWeight -> d
    java.util.Map desiredLanguageToPossibleLocalesToMaxLocaleToData -> e
    com.ibm.icu.util.LocaleMatcher$LanguageMatcherData matcherData -> f
    com.ibm.icu.util.LocaleMatcher$LanguageMatcherData defaultWritten -> g
    java.util.HashMap canonicalMap -> h
    88:89:void <init>(com.ibm.icu.util.LocalePriorityList) -> <init>
    99:100:void <init>(java.lang.String) -> <init>
    111:112:void <init>(com.ibm.icu.util.LocalePriorityList,com.ibm.icu.util.LocaleMatcher$LanguageMatcherData) -> <init>
    122:343:void <init>(com.ibm.icu.util.LocalePriorityList,com.ibm.icu.util.LocaleMatcher$LanguageMatcherData,double) -> <init>
    147:147:double match(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> match
    161:174:com.ibm.icu.util.ULocale canonicalize(com.ibm.icu.util.ULocale) -> canonicalize
    185:201:com.ibm.icu.util.ULocale getBestMatch(com.ibm.icu.util.LocalePriorityList) -> getBestMatch
    212:212:com.ibm.icu.util.ULocale getBestMatch(java.lang.String) -> getBestMatch
    223:223:com.ibm.icu.util.ULocale getBestMatch(com.ibm.icu.util.ULocale) -> getBestMatch
    232:232:com.ibm.icu.util.ULocale getBestMatch(com.ibm.icu.util.ULocale[]) -> getBestMatch
    241:241:java.lang.String toString() -> toString
    254:289:com.ibm.icu.util.ULocale getBestMatchInternal(com.ibm.icu.util.ULocale,com.ibm.icu.util.LocaleMatcher$OutputDouble) -> a
    302:306:void add(com.ibm.icu.util.ULocale,java.lang.Double) -> a
    312:329:void processMapping() -> a
    332:340:void addFiltered(java.lang.String,com.ibm.icu.impl.Row$R3) -> a
    364:380:com.ibm.icu.util.ULocale addLikelySubtags(com.ibm.icu.util.ULocale) -> a
    838:842:com.ibm.icu.impl.ICUResourceBundle getICUSupplementalData() -> getICUSupplementalData
    851:852:double match(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> match
    59:830:void <clinit>() -> <clinit>
com.ibm.icu.util.LocaleMatcher$1 -> com.ibm.icu.util.q:
    int[] $SwitchMap$com$ibm$icu$util$LocaleMatcher$Level -> a
    726:726:void <clinit>() -> <clinit>
com.ibm.icu.util.LocaleMatcher$LanguageMatcherData -> com.ibm.icu.util.LocaleMatcher$LanguageMatcherData:
    com.ibm.icu.util.LocaleMatcher$ScoreData languageScores -> a
    com.ibm.icu.util.LocaleMatcher$ScoreData scriptScores -> b
    com.ibm.icu.util.LocaleMatcher$ScoreData regionScores -> c
    com.ibm.icu.impl.Relation matchingLanguages -> d
    boolean frozen -> e
    604:617:void <init>() -> <init>
    625:625:com.ibm.icu.impl.Relation matchingLanguages() -> matchingLanguages
    634:634:java.lang.String toString() -> toString
    643:662:double match(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> match
    686:686:com.ibm.icu.util.LocaleMatcher$LanguageMatcherData addDistance(java.lang.String,java.lang.String,int,java.lang.String) -> addDistance
    694:694:com.ibm.icu.util.LocaleMatcher$LanguageMatcherData addDistance(java.lang.String,java.lang.String,int,boolean) -> addDistance
    715:752:com.ibm.icu.util.LocaleMatcher$LanguageMatcherData addDistance$aaec7b9(java.lang.String,java.lang.String,int,boolean) -> a
    764:771:com.ibm.icu.util.LocaleMatcher$LanguageMatcherData cloneAsThawed() -> cloneAsThawed
    782:787:com.ibm.icu.util.LocaleMatcher$LanguageMatcherData freeze() -> freeze
    797:797:boolean isFrozen() -> isFrozen
    602:602:java.lang.Object cloneAsThawed() -> cloneAsThawed
    602:602:java.lang.Object freeze() -> freeze
com.ibm.icu.util.LocaleMatcher$Level -> com.ibm.icu.util.r:
    com.ibm.icu.util.LocaleMatcher$Level language -> a
    com.ibm.icu.util.LocaleMatcher$Level script -> b
    com.ibm.icu.util.LocaleMatcher$Level region -> c
    double worst -> d
    com.ibm.icu.util.LocaleMatcher$Level[] $VALUES -> e
    479:479:com.ibm.icu.util.LocaleMatcher$Level[] values() -> values
    479:479:com.ibm.icu.util.LocaleMatcher$Level valueOf(java.lang.String) -> valueOf
    486:488:void <init>(java.lang.String,int,double) -> <init>
    479:482:void <clinit>() -> <clinit>
com.ibm.icu.util.LocaleMatcher$LocalePatternMatcher -> com.ibm.icu.util.s:
    java.lang.String lang -> a
    java.lang.String script -> b
    java.lang.String region -> c
    com.ibm.icu.util.LocaleMatcher$Level level -> d
    java.util.regex.Pattern pattern -> e
    394:413:void <init>(java.lang.String) -> <init>
    416:425:boolean matches(com.ibm.icu.util.ULocale) -> a
    429:429:com.ibm.icu.util.LocaleMatcher$Level getLevel() -> a
    433:433:java.lang.String getLanguage() -> b
    437:437:java.lang.String getScript() -> c
    441:441:java.lang.String getRegion() -> d
    445:452:java.lang.String toString() -> toString
    460:461:boolean equals(java.lang.Object) -> equals
    472:472:int hashCode() -> hashCode
    383:383:java.lang.String access$100(com.ibm.icu.util.LocaleMatcher$LocalePatternMatcher) -> a
    389:389:void <clinit>() -> <clinit>
com.ibm.icu.util.LocaleMatcher$OutputDouble -> com.ibm.icu.util.t:
    double value -> a
    297:297:void <init>() -> <init>
    297:297:void <init>(byte) -> <init>
com.ibm.icu.util.LocaleMatcher$ScoreData -> com.ibm.icu.util.u:
    java.util.LinkedHashSet scores -> a
    com.ibm.icu.util.LocaleMatcher$Level level -> b
    boolean frozen -> c
    498:573:void <init>(com.ibm.icu.util.LocaleMatcher$Level) -> <init>
    515:519:void addDataToScores$163fee3b(com.ibm.icu.impl.Row$R3) -> a
    523:529:double getScore(com.ibm.icu.util.ULocale,java.lang.String,java.lang.String,com.ibm.icu.util.ULocale,java.lang.String,java.lang.String) -> a
    536:548:double getRawScore(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> a
    552:556:java.lang.String toString() -> toString
    563:568:com.ibm.icu.util.LocaleMatcher$ScoreData cloneAsThawed() -> a
    576:576:com.ibm.icu.util.LocaleMatcher$ScoreData freeze() -> b
    580:580:boolean isFrozen() -> isFrozen
    584:593:com.ibm.icu.impl.Relation getMatchingLanguages() -> c
    491:491:java.lang.Object cloneAsThawed() -> cloneAsThawed
    491:491:java.lang.Object freeze() -> freeze
com.ibm.icu.util.LocalePriorityList -> com.ibm.icu.util.LocalePriorityList:
    java.lang.Double D1 -> a
    java.util.regex.Pattern languageSplitter -> b
    java.util.regex.Pattern weightSplitter -> c
    java.util.Map languagesAndWeights -> d
    java.util.Comparator myDescendingDouble -> e
    85:85:com.ibm.icu.util.LocalePriorityList$Builder add(com.ibm.icu.util.ULocale[]) -> add
    97:97:com.ibm.icu.util.LocalePriorityList$Builder add(com.ibm.icu.util.ULocale,double) -> add
    108:108:com.ibm.icu.util.LocalePriorityList$Builder add(com.ibm.icu.util.LocalePriorityList) -> add
    120:120:com.ibm.icu.util.LocalePriorityList$Builder add(java.lang.String) -> add
    132:132:java.lang.Double getWeight(com.ibm.icu.util.ULocale) -> getWeight
    141:152:java.lang.String toString() -> toString
    160:160:java.util.Iterator iterator() -> iterator
    169:179:boolean equals(java.lang.Object) -> equals
    189:189:int hashCode() -> hashCode
    195:197:void <init>(java.util.Map) -> <init>
    68:68:java.util.Comparator access$100() -> a
    68:68:java.lang.Double access$200() -> b
    68:68:void <init>(java.util.Map,byte) -> <init>
    68:68:java.util.Map access$400(com.ibm.icu.util.LocalePriorityList) -> a
    68:68:java.util.regex.Pattern access$500() -> c
    68:68:java.util.regex.Pattern access$600() -> d
    70:351:void <clinit>() -> <clinit>
com.ibm.icu.util.LocalePriorityList$1 -> com.ibm.icu.util.v:
    351:351:void <init>() -> <init>
    353:353:int compare(java.lang.Double,java.lang.Double) -> a
    351:351:int compare(java.lang.Object,java.lang.Object) -> compare
com.ibm.icu.util.LocalePriorityList$Builder -> com.ibm.icu.util.LocalePriorityList$Builder:
    java.util.Map languageToWeight -> a
    208:215:void <init>() -> <init>
    225:225:com.ibm.icu.util.LocalePriorityList build() -> build
    238:257:com.ibm.icu.util.LocalePriorityList build(boolean) -> build
    269:273:com.ibm.icu.util.LocalePriorityList$Builder add(com.ibm.icu.util.LocalePriorityList) -> add
    284:284:com.ibm.icu.util.LocalePriorityList$Builder add(com.ibm.icu.util.ULocale) -> add
    295:298:com.ibm.icu.util.LocalePriorityList$Builder add(com.ibm.icu.util.ULocale[]) -> add
    312:321:com.ibm.icu.util.LocalePriorityList$Builder add(com.ibm.icu.util.ULocale,double) -> add
    332:347:com.ibm.icu.util.LocalePriorityList$Builder add(java.lang.String) -> add
    203:203:void <init>(byte) -> <init>
com.ibm.icu.util.Measure -> com.ibm.icu.util.Measure:
    java.lang.Number number -> a
    com.ibm.icu.util.MeasureUnit unit -> b
    42:48:void <init>(java.lang.Number,com.ibm.icu.util.MeasureUnit) -> <init>
    56:63:boolean equals(java.lang.Object) -> equals
    74:80:boolean numbersEqual(java.lang.Number,java.lang.Number) -> a
    89:89:int hashCode() -> hashCode
    99:99:java.lang.String toString() -> toString
    108:108:java.lang.Number getNumber() -> getNumber
    117:117:com.ibm.icu.util.MeasureUnit getUnit() -> getUnit
com.ibm.icu.util.MeasureUnit -> com.ibm.icu.util.MeasureUnit:
    long serialVersionUID -> serialVersionUID
    java.lang.String[] unitKeys -> a
    java.util.Map cache -> b
    java.lang.String type -> type
    java.lang.String subType -> subType
    com.ibm.icu.text.UnicodeSet ASCII -> c
    com.ibm.icu.text.UnicodeSet ASCII_HYPHEN_DIGITS -> d
    com.ibm.icu.util.MeasureUnit$Factory UNIT_FACTORY -> e
    com.ibm.icu.util.MeasureUnit$Factory CURRENCY_FACTORY -> f
    com.ibm.icu.util.MeasureUnit$Factory TIMEUNIT_FACTORY -> g
    com.ibm.icu.util.MeasureUnit G_FORCE -> G_FORCE
    com.ibm.icu.util.MeasureUnit METER_PER_SECOND_SQUARED -> METER_PER_SECOND_SQUARED
    com.ibm.icu.util.MeasureUnit ARC_MINUTE -> ARC_MINUTE
    com.ibm.icu.util.MeasureUnit ARC_SECOND -> ARC_SECOND
    com.ibm.icu.util.MeasureUnit DEGREE -> DEGREE
    com.ibm.icu.util.MeasureUnit RADIAN -> RADIAN
    com.ibm.icu.util.MeasureUnit REVOLUTION_ANGLE -> REVOLUTION_ANGLE
    com.ibm.icu.util.MeasureUnit ACRE -> ACRE
    com.ibm.icu.util.MeasureUnit HECTARE -> HECTARE
    com.ibm.icu.util.MeasureUnit SQUARE_CENTIMETER -> SQUARE_CENTIMETER
    com.ibm.icu.util.MeasureUnit SQUARE_FOOT -> SQUARE_FOOT
    com.ibm.icu.util.MeasureUnit SQUARE_INCH -> SQUARE_INCH
    com.ibm.icu.util.MeasureUnit SQUARE_KILOMETER -> SQUARE_KILOMETER
    com.ibm.icu.util.MeasureUnit SQUARE_METER -> SQUARE_METER
    com.ibm.icu.util.MeasureUnit SQUARE_MILE -> SQUARE_MILE
    com.ibm.icu.util.MeasureUnit SQUARE_YARD -> SQUARE_YARD
    com.ibm.icu.util.MeasureUnit LITER_PER_100KILOMETERS -> LITER_PER_100KILOMETERS
    com.ibm.icu.util.MeasureUnit LITER_PER_KILOMETER -> LITER_PER_KILOMETER
    com.ibm.icu.util.MeasureUnit MILE_PER_GALLON -> MILE_PER_GALLON
    com.ibm.icu.util.MeasureUnit BIT -> BIT
    com.ibm.icu.util.MeasureUnit BYTE -> BYTE
    com.ibm.icu.util.MeasureUnit GIGABIT -> GIGABIT
    com.ibm.icu.util.MeasureUnit GIGABYTE -> GIGABYTE
    com.ibm.icu.util.MeasureUnit KILOBIT -> KILOBIT
    com.ibm.icu.util.MeasureUnit KILOBYTE -> KILOBYTE
    com.ibm.icu.util.MeasureUnit MEGABIT -> MEGABIT
    com.ibm.icu.util.MeasureUnit MEGABYTE -> MEGABYTE
    com.ibm.icu.util.MeasureUnit TERABIT -> TERABIT
    com.ibm.icu.util.MeasureUnit TERABYTE -> TERABYTE
    com.ibm.icu.util.MeasureUnit CENTURY -> CENTURY
    com.ibm.icu.util.TimeUnit DAY -> DAY
    com.ibm.icu.util.TimeUnit HOUR -> HOUR
    com.ibm.icu.util.MeasureUnit MICROSECOND -> MICROSECOND
    com.ibm.icu.util.MeasureUnit MILLISECOND -> MILLISECOND
    com.ibm.icu.util.TimeUnit MINUTE -> MINUTE
    com.ibm.icu.util.TimeUnit MONTH -> MONTH
    com.ibm.icu.util.MeasureUnit NANOSECOND -> NANOSECOND
    com.ibm.icu.util.TimeUnit SECOND -> SECOND
    com.ibm.icu.util.TimeUnit WEEK -> WEEK
    com.ibm.icu.util.TimeUnit YEAR -> YEAR
    com.ibm.icu.util.MeasureUnit AMPERE -> AMPERE
    com.ibm.icu.util.MeasureUnit MILLIAMPERE -> MILLIAMPERE
    com.ibm.icu.util.MeasureUnit OHM -> OHM
    com.ibm.icu.util.MeasureUnit VOLT -> VOLT
    com.ibm.icu.util.MeasureUnit CALORIE -> CALORIE
    com.ibm.icu.util.MeasureUnit FOODCALORIE -> FOODCALORIE
    com.ibm.icu.util.MeasureUnit JOULE -> JOULE
    com.ibm.icu.util.MeasureUnit KILOCALORIE -> KILOCALORIE
    com.ibm.icu.util.MeasureUnit KILOJOULE -> KILOJOULE
    com.ibm.icu.util.MeasureUnit KILOWATT_HOUR -> KILOWATT_HOUR
    com.ibm.icu.util.MeasureUnit GIGAHERTZ -> GIGAHERTZ
    com.ibm.icu.util.MeasureUnit HERTZ -> HERTZ
    com.ibm.icu.util.MeasureUnit KILOHERTZ -> KILOHERTZ
    com.ibm.icu.util.MeasureUnit MEGAHERTZ -> MEGAHERTZ
    com.ibm.icu.util.MeasureUnit ASTRONOMICAL_UNIT -> ASTRONOMICAL_UNIT
    com.ibm.icu.util.MeasureUnit CENTIMETER -> CENTIMETER
    com.ibm.icu.util.MeasureUnit DECIMETER -> DECIMETER
    com.ibm.icu.util.MeasureUnit FATHOM -> FATHOM
    com.ibm.icu.util.MeasureUnit FOOT -> FOOT
    com.ibm.icu.util.MeasureUnit FURLONG -> FURLONG
    com.ibm.icu.util.MeasureUnit INCH -> INCH
    com.ibm.icu.util.MeasureUnit KILOMETER -> KILOMETER
    com.ibm.icu.util.MeasureUnit LIGHT_YEAR -> LIGHT_YEAR
    com.ibm.icu.util.MeasureUnit METER -> METER
    com.ibm.icu.util.MeasureUnit MICROMETER -> MICROMETER
    com.ibm.icu.util.MeasureUnit MILE -> MILE
    com.ibm.icu.util.MeasureUnit MILE_SCANDINAVIAN -> MILE_SCANDINAVIAN
    com.ibm.icu.util.MeasureUnit MILLIMETER -> MILLIMETER
    com.ibm.icu.util.MeasureUnit NANOMETER -> NANOMETER
    com.ibm.icu.util.MeasureUnit NAUTICAL_MILE -> NAUTICAL_MILE
    com.ibm.icu.util.MeasureUnit PARSEC -> PARSEC
    com.ibm.icu.util.MeasureUnit PICOMETER -> PICOMETER
    com.ibm.icu.util.MeasureUnit YARD -> YARD
    com.ibm.icu.util.MeasureUnit LUX -> LUX
    com.ibm.icu.util.MeasureUnit CARAT -> CARAT
    com.ibm.icu.util.MeasureUnit GRAM -> GRAM
    com.ibm.icu.util.MeasureUnit KILOGRAM -> KILOGRAM
    com.ibm.icu.util.MeasureUnit METRIC_TON -> METRIC_TON
    com.ibm.icu.util.MeasureUnit MICROGRAM -> MICROGRAM
    com.ibm.icu.util.MeasureUnit MILLIGRAM -> MILLIGRAM
    com.ibm.icu.util.MeasureUnit OUNCE -> OUNCE
    com.ibm.icu.util.MeasureUnit OUNCE_TROY -> OUNCE_TROY
    com.ibm.icu.util.MeasureUnit POUND -> POUND
    com.ibm.icu.util.MeasureUnit STONE -> STONE
    com.ibm.icu.util.MeasureUnit TON -> TON
    com.ibm.icu.util.MeasureUnit GIGAWATT -> GIGAWATT
    com.ibm.icu.util.MeasureUnit HORSEPOWER -> HORSEPOWER
    com.ibm.icu.util.MeasureUnit KILOWATT -> KILOWATT
    com.ibm.icu.util.MeasureUnit MEGAWATT -> MEGAWATT
    com.ibm.icu.util.MeasureUnit MILLIWATT -> MILLIWATT
    com.ibm.icu.util.MeasureUnit WATT -> WATT
    com.ibm.icu.util.MeasureUnit HECTOPASCAL -> HECTOPASCAL
    com.ibm.icu.util.MeasureUnit INCH_HG -> INCH_HG
    com.ibm.icu.util.MeasureUnit MILLIBAR -> MILLIBAR
    com.ibm.icu.util.MeasureUnit MILLIMETER_OF_MERCURY -> MILLIMETER_OF_MERCURY
    com.ibm.icu.util.MeasureUnit POUND_PER_SQUARE_INCH -> POUND_PER_SQUARE_INCH
    com.ibm.icu.util.MeasureUnit KARAT -> KARAT
    com.ibm.icu.util.MeasureUnit KILOMETER_PER_HOUR -> KILOMETER_PER_HOUR
    com.ibm.icu.util.MeasureUnit KNOT -> KNOT
    com.ibm.icu.util.MeasureUnit METER_PER_SECOND -> METER_PER_SECOND
    com.ibm.icu.util.MeasureUnit MILE_PER_HOUR -> MILE_PER_HOUR
    com.ibm.icu.util.MeasureUnit CELSIUS -> CELSIUS
    com.ibm.icu.util.MeasureUnit FAHRENHEIT -> FAHRENHEIT
    com.ibm.icu.util.MeasureUnit GENERIC_TEMPERATURE -> GENERIC_TEMPERATURE
    com.ibm.icu.util.MeasureUnit KELVIN -> KELVIN
    com.ibm.icu.util.MeasureUnit ACRE_FOOT -> ACRE_FOOT
    com.ibm.icu.util.MeasureUnit BUSHEL -> BUSHEL
    com.ibm.icu.util.MeasureUnit CENTILITER -> CENTILITER
    com.ibm.icu.util.MeasureUnit CUBIC_CENTIMETER -> CUBIC_CENTIMETER
    com.ibm.icu.util.MeasureUnit CUBIC_FOOT -> CUBIC_FOOT
    com.ibm.icu.util.MeasureUnit CUBIC_INCH -> CUBIC_INCH
    com.ibm.icu.util.MeasureUnit CUBIC_KILOMETER -> CUBIC_KILOMETER
    com.ibm.icu.util.MeasureUnit CUBIC_METER -> CUBIC_METER
    com.ibm.icu.util.MeasureUnit CUBIC_MILE -> CUBIC_MILE
    com.ibm.icu.util.MeasureUnit CUBIC_YARD -> CUBIC_YARD
    com.ibm.icu.util.MeasureUnit CUP -> CUP
    com.ibm.icu.util.MeasureUnit CUP_METRIC -> CUP_METRIC
    com.ibm.icu.util.MeasureUnit DECILITER -> DECILITER
    com.ibm.icu.util.MeasureUnit FLUID_OUNCE -> FLUID_OUNCE
    com.ibm.icu.util.MeasureUnit GALLON -> GALLON
    com.ibm.icu.util.MeasureUnit HECTOLITER -> HECTOLITER
    com.ibm.icu.util.MeasureUnit LITER -> LITER
    com.ibm.icu.util.MeasureUnit MEGALITER -> MEGALITER
    com.ibm.icu.util.MeasureUnit MILLILITER -> MILLILITER
    com.ibm.icu.util.MeasureUnit PINT -> PINT
    com.ibm.icu.util.MeasureUnit PINT_METRIC -> PINT_METRIC
    com.ibm.icu.util.MeasureUnit QUART -> QUART
    com.ibm.icu.util.MeasureUnit TABLESPOON -> TABLESPOON
    com.ibm.icu.util.MeasureUnit TEASPOON -> TEASPOON
    java.util.HashMap unitPerUnitToSingleUnit -> h
    65:68:void <init>(java.lang.String,java.lang.String) -> <init>
    76:76:java.lang.String getType() -> getType
    86:86:java.lang.String getSubtype() -> getSubtype
    98:98:int hashCode() -> hashCode
    108:115:boolean equals(java.lang.Object) -> equals
    125:125:java.lang.String toString() -> toString
    134:134:java.util.Set getAvailableTypes() -> getAvailableTypes
    144:147:java.util.Set getAvailable(java.lang.String) -> getAvailable
    157:165:java.util.Set getAvailable() -> getAvailable
    180:196:com.ibm.icu.util.MeasureUnit internalGetInstance(java.lang.String,java.lang.String) -> internalGetInstance
    206:206:com.ibm.icu.util.MeasureUnit resolveUnitPerUnit(com.ibm.icu.util.MeasureUnit,com.ibm.icu.util.MeasureUnit) -> resolveUnitPerUnit
    299:310:com.ibm.icu.util.MeasureUnit addUnit(java.lang.String,java.lang.String,com.ibm.icu.util.MeasureUnit$Factory) -> addUnit
    1124:1124:java.lang.Object writeReplace() -> writeReplace
    41:1118:void <clinit>() -> <clinit>
com.ibm.icu.util.MeasureUnit$1 -> com.ibm.icu.util.w:
    226:226:void <init>() -> <init>
    228:228:com.ibm.icu.util.MeasureUnit create(java.lang.String,java.lang.String) -> create
com.ibm.icu.util.MeasureUnit$2 -> com.ibm.icu.util.x:
    232:232:void <init>() -> <init>
    234:234:com.ibm.icu.util.MeasureUnit create(java.lang.String,java.lang.String) -> create
com.ibm.icu.util.MeasureUnit$3 -> com.ibm.icu.util.y:
    238:238:void <init>() -> <init>
    240:240:com.ibm.icu.util.MeasureUnit create(java.lang.String,java.lang.String) -> create
com.ibm.icu.util.MeasureUnit$Factory -> com.ibm.icu.util.MeasureUnit$Factory:
    com.ibm.icu.util.MeasureUnit create(java.lang.String,java.lang.String) -> create
com.ibm.icu.util.MeasureUnit$MeasureUnitProxy -> com.ibm.icu.util.z:
    long serialVersionUID -> serialVersionUID
    java.lang.String type -> a
    java.lang.String subType -> b
    1133:1136:void <init>(java.lang.String,java.lang.String) -> <init>
    1139:1140:void <init>() -> <init>
    1143:1147:void writeExternal(java.io.ObjectOutput) -> writeExternal
    1150:1159:void readExternal(java.io.ObjectInput) -> readExternal
    1162:1162:java.lang.Object readResolve() -> readResolve
com.ibm.icu.util.Output -> com.ibm.icu.util.Output:
    java.lang.Object value -> value
    26:26:java.lang.String toString() -> toString
    33:35:void <init>() -> <init>
    42:44:void <init>(java.lang.Object) -> <init>
com.ibm.icu.util.OutputInt -> com.ibm.icu.util.OutputInt:
    int value -> value
    34:35:void <init>() -> <init>
    45:47:void <init>(int) -> <init>
    56:56:java.lang.String toString() -> toString
com.ibm.icu.util.OverlayBundle -> com.ibm.icu.util.OverlayBundle:
    java.lang.String[] baseNames -> a
    java.util.Locale locale -> b
    java.util.ResourceBundle[] bundles -> c
    95:99:void <init>(java.lang.String[],java.util.Locale) -> <init>
    111:127:java.lang.Object handleGetObject(java.lang.String) -> handleGetObject
    140:142:java.util.Enumeration getKeys() -> getKeys
    151:179:void load(int) -> a
com.ibm.icu.util.PersianCalendar -> com.ibm.icu.util.PersianCalendar:
    long serialVersionUID -> serialVersionUID
    int[][] MONTH_COUNT -> a
    int[][] LIMITS -> b
    109:110:void <init>() -> <init>
    124:125:void <init>(com.ibm.icu.util.TimeZone) -> <init>
    139:140:void <init>(java.util.Locale) -> <init>
    154:155:void <init>(com.ibm.icu.util.ULocale) -> <init>
    170:172:void <init>(com.ibm.icu.util.TimeZone,java.util.Locale) -> <init>
    187:189:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    203:205:void <init>(java.util.Date) -> <init>
    223:227:void <init>(int,int,int) -> <init>
    252:259:void <init>(int,int,int,int,int,int) -> <init>
    298:298:int handleGetLimit(int,int) -> handleGetLimit
    310:312:boolean isLeapYear(int) -> a
    333:339:int handleGetMonthLength(int,int) -> handleGetMonthLength
    350:350:int handleGetYearLength(int) -> handleGetYearLength
    367:377:int handleComputeMonthStart(int,int,boolean) -> handleComputeMonthStart
    391:396:int handleGetExtendedYear() -> handleGetExtendedYear
    420:439:void handleComputeFields(int) -> handleComputeFields
    449:449:java.lang.String getType() -> getType
    73:265:void <clinit>() -> <clinit>
com.ibm.icu.util.Range -> com.ibm.icu.util.A:
    java.util.Date start -> a
    com.ibm.icu.util.DateRule rule -> b
    162:165:void <init>(java.util.Date,com.ibm.icu.util.DateRule) -> <init>
com.ibm.icu.util.RangeDateRule -> com.ibm.icu.util.RangeDateRule:
    java.util.List ranges -> a
    27:154:void <init>() -> <init>
    43:44:void add(com.ibm.icu.util.DateRule) -> add
    53:54:void add(java.util.Date,com.ibm.icu.util.DateRule) -> add
    64:81:java.util.Date firstAfter(java.util.Date) -> firstAfter
    89:110:java.util.Date firstBetween(java.util.Date,java.util.Date) -> firstBetween
    118:119:boolean isOn(java.util.Date) -> isOn
    129:129:boolean isBetween(java.util.Date,java.util.Date) -> isBetween
    137:146:int startIndex(java.util.Date) -> a
    150:150:com.ibm.icu.util.Range rangeAt(int) -> a
com.ibm.icu.util.RangeValueIterator -> com.ibm.icu.util.RangeValueIterator:
    boolean next(com.ibm.icu.util.RangeValueIterator$Element) -> next
    void reset() -> reset
com.ibm.icu.util.RangeValueIterator$Element -> com.ibm.icu.util.RangeValueIterator$Element:
    int start -> start
    int limit -> limit
    int value -> value
    87:88:void <init>() -> <init>
com.ibm.icu.util.Region -> com.ibm.icu.util.Region:
    java.lang.String id -> a
    int code -> b
    com.ibm.icu.util.Region$RegionType type -> c
    com.ibm.icu.util.Region containingRegion -> d
    java.util.Set containedRegions -> e
    java.util.List preferredValues -> f
    boolean regionDataIsLoaded -> g
    java.util.Map regionIDMap -> h
    java.util.Map numericCodeMap -> i
    java.util.Map regionAliases -> j
    java.util.ArrayList regions -> k
    java.util.ArrayList availableRegions -> l
    112:132:void <init>() -> <init>
    145:359:void loadRegionData() -> a
    372:392:com.ibm.icu.util.Region getInstance(java.lang.String) -> getInstance
    405:428:com.ibm.icu.util.Region getInstance(int) -> getInstance
    441:442:java.util.Set getAvailable(com.ibm.icu.util.Region$RegionType) -> getAvailable
    455:456:com.ibm.icu.util.Region getContainingRegion() -> getContainingRegion
    468:475:com.ibm.icu.util.Region getContainingRegion(com.ibm.icu.util.Region$RegionType) -> getContainingRegion
    493:494:java.util.Set getContainedRegions() -> getContainedRegions
    509:521:java.util.Set getContainedRegions(com.ibm.icu.util.Region$RegionType) -> getContainedRegions
    533:538:java.util.List getPreferredValues() -> getPreferredValues
    549:561:boolean contains(com.ibm.icu.util.Region) -> contains
    572:572:java.lang.String toString() -> toString
    585:585:int getNumericCode() -> getNumericCode
    596:596:com.ibm.icu.util.Region$RegionType getType() -> getType
    604:604:int compareTo(com.ibm.icu.util.Region) -> compareTo
    58:58:int compareTo(java.lang.Object) -> compareTo
    116:123:void <clinit>() -> <clinit>
com.ibm.icu.util.Region$RegionType -> com.ibm.icu.util.Region$RegionType:
    com.ibm.icu.util.Region$RegionType UNKNOWN -> UNKNOWN
    com.ibm.icu.util.Region$RegionType TERRITORY -> TERRITORY
    com.ibm.icu.util.Region$RegionType WORLD -> WORLD
    com.ibm.icu.util.Region$RegionType CONTINENT -> CONTINENT
    com.ibm.icu.util.Region$RegionType SUBCONTINENT -> SUBCONTINENT
    com.ibm.icu.util.Region$RegionType GROUPING -> GROUPING
    com.ibm.icu.util.Region$RegionType DEPRECATED -> DEPRECATED
    com.ibm.icu.util.Region$RegionType[] $VALUES -> a
    67:67:com.ibm.icu.util.Region$RegionType[] values() -> values
    67:67:com.ibm.icu.util.Region$RegionType valueOf(java.lang.String) -> valueOf
    67:67:void <init>(java.lang.String,int) -> <init>
    67:106:void <clinit>() -> <clinit>
com.ibm.icu.util.RuleBasedTimeZone -> com.ibm.icu.util.RuleBasedTimeZone:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.util.InitialTimeZoneRule initialRule -> a
    java.util.List historicRules -> b
    com.ibm.icu.util.AnnualTimeZoneRule[] finalRules -> c
    java.util.List historicTransitions -> d
    boolean upToDate -> e
    boolean isFrozen -> f
    44:763:void <init>(java.lang.String,com.ibm.icu.util.InitialTimeZoneRule) -> <init>
    59:87:void addTransitionRule(com.ibm.icu.util.TimeZoneRule) -> addTransitionRule
    97:104:int getOffset(int,int,int,int,int,int) -> getOffset
    114:115:void getOffset(long,boolean,int[]) -> getOffset
    126:127:void getOffsetFromLocal(long,int,int,int[]) -> getOffsetFromLocal
    138:141:int getRawOffset() -> getRawOffset
    151:153:boolean inDaylightTime(java.util.Date) -> inDaylightTime
    165:165:void setRawOffset(int) -> setRawOffset
    179:190:boolean useDaylightTime() -> useDaylightTime
    199:234:boolean observesDaylightTime() -> observesDaylightTime
    244:296:boolean hasSameRules(com.ibm.icu.util.TimeZone) -> hasSameRules
    308:335:com.ibm.icu.util.TimeZoneRule[] getTimeZoneRules() -> getTimeZoneRules
    345:409:com.ibm.icu.util.TimeZoneTransition getNextTransition(long,boolean) -> getNextTransition
    419:475:com.ibm.icu.util.TimeZoneTransition getPreviousTransition(long,boolean) -> getPreviousTransition
    484:487:java.lang.Object clone() -> clone
    497:613:void complete() -> a
    619:656:void getOffset(long,boolean,int,int,int[]) -> a
    662:698:com.ibm.icu.util.TimeZoneRule findRuleInFinal(long,boolean,int,int) -> a
    706:712:long getTransitionTime(com.ibm.icu.util.TimeZoneTransition,boolean,int,int) -> a
    720:759:int getLocalDelta(int,int,int,int,int,int) -> a
    770:770:boolean isFrozen() -> isFrozen
    778:780:com.ibm.icu.util.TimeZone freeze() -> freeze
    788:796:com.ibm.icu.util.TimeZone cloneAsThawed() -> cloneAsThawed
    23:23:java.lang.Object cloneAsThawed() -> cloneAsThawed
    23:23:java.lang.Object freeze() -> freeze
com.ibm.icu.util.STZInfo -> com.ibm.icu.util.B:
    long serialVersionUID -> serialVersionUID
    int sy -> a
    int sm -> b
    int sdwm -> c
    int sdw -> d
    int st -> e
    int sdm -> f
    boolean sa -> g
    int em -> h
    int edwm -> i
    int edw -> j
    int et -> k
    int edm -> l
    boolean ea -> m
    10:82:void <init>() -> <init>
    14:20:void setStart(int,int,int,int,int,boolean) -> a
    23:29:void setEnd(int,int,int,int,int,boolean) -> b
    56:77:void applyTo(com.ibm.icu.util.SimpleTimeZone) -> a
com.ibm.icu.util.SimpleDateRule -> com.ibm.icu.util.SimpleDateRule:
    com.ibm.icu.util.GregorianCalendar gCalendar -> a
    com.ibm.icu.util.Calendar calendar -> b
    int month -> c
    int dayOfMonth -> d
    int dayOfWeek -> e
    31:224:void <init>(int,int) -> <init>
    39:224:void <init>(int,int,com.ibm.icu.util.Calendar) -> <init>
    59:224:void <init>(int,int,int,boolean) -> <init>
    80:80:java.util.Date firstAfter(java.util.Date) -> firstAfter
    101:101:java.util.Date firstBetween(java.util.Date,java.util.Date) -> firstBetween
    118:131:boolean isOn(java.util.Date) -> isOn
    142:142:boolean isBetween(java.util.Date,java.util.Date) -> isBetween
    147:174:java.util.Date doFirstBetween(java.util.Date,java.util.Date) -> a
    179:211:java.util.Date computeInYear(int,com.ibm.icu.util.Calendar) -> a
    222:222:void <clinit>() -> <clinit>
com.ibm.icu.util.SimpleHoliday -> com.ibm.icu.util.SimpleHoliday:
    com.ibm.icu.util.SimpleHoliday NEW_YEARS_DAY -> NEW_YEARS_DAY
    com.ibm.icu.util.SimpleHoliday EPIPHANY -> EPIPHANY
    com.ibm.icu.util.SimpleHoliday MAY_DAY -> MAY_DAY
    com.ibm.icu.util.SimpleHoliday ASSUMPTION -> ASSUMPTION
    com.ibm.icu.util.SimpleHoliday ALL_SAINTS_DAY -> ALL_SAINTS_DAY
    com.ibm.icu.util.SimpleHoliday ALL_SOULS_DAY -> ALL_SOULS_DAY
    com.ibm.icu.util.SimpleHoliday IMMACULATE_CONCEPTION -> IMMACULATE_CONCEPTION
    com.ibm.icu.util.SimpleHoliday CHRISTMAS_EVE -> CHRISTMAS_EVE
    com.ibm.icu.util.SimpleHoliday CHRISTMAS -> CHRISTMAS
    com.ibm.icu.util.SimpleHoliday BOXING_DAY -> BOXING_DAY
    com.ibm.icu.util.SimpleHoliday ST_STEPHENS_DAY -> ST_STEPHENS_DAY
    com.ibm.icu.util.SimpleHoliday NEW_YEARS_EVE -> NEW_YEARS_EVE
    40:41:void <init>(int,int,java.lang.String) -> <init>
    61:62:void <init>(int,int,java.lang.String,int) -> <init>
    82:83:void <init>(int,int,java.lang.String,int,int) -> <init>
    112:115:void <init>(int,int,int,java.lang.String) -> <init>
    124:128:void <init>(int,int,int,java.lang.String,int) -> <init>
    138:142:void <init>(int,int,int,java.lang.String,int,int) -> <init>
    146:163:com.ibm.icu.util.DateRule rangeRule(int,int,com.ibm.icu.util.DateRule) -> a
    174:262:void <clinit>() -> <clinit>
com.ibm.icu.util.SimpleTimeZone -> com.ibm.icu.util.SimpleTimeZone:
    long serialVersionUID -> serialVersionUID
    int WALL_TIME -> WALL_TIME
    int STANDARD_TIME -> STANDARD_TIME
    int UTC_TIME -> UTC_TIME
    byte[] staticMonthLength -> a
    int raw -> b
    int dst -> c
    com.ibm.icu.util.STZInfo xinfo -> d
    int startMonth -> e
    int startDay -> f
    int startDayOfWeek -> g
    int startTime -> h
    int startTimeMode -> i
    int endTimeMode -> j
    int endMonth -> k
    int endDay -> l
    int endDayOfWeek -> m
    int endTime -> n
    int startYear -> o
    boolean useDaylight -> p
    int startMode -> q
    int endMode -> r
    boolean transitionRulesInitialized -> s
    com.ibm.icu.util.InitialTimeZoneRule initialRule -> t
    com.ibm.icu.util.TimeZoneTransition firstTransition -> u
    com.ibm.icu.util.AnnualTimeZoneRule stdRule -> v
    com.ibm.icu.util.AnnualTimeZoneRule dstRule -> w
    boolean isFrozen -> x
    boolean $assertionsDisabled -> y
    65:1413:void <init>(int,java.lang.String) -> <init>
    134:1413:void <init>(int,java.lang.String,int,int,int,int,int,int,int,int) -> <init>
    185:1413:void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int) -> <init>
    228:1413:void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int) -> <init>
    244:249:void setID(java.lang.String) -> setID
    260:266:void setRawOffset(int) -> setRawOffset
    276:276:int getRawOffset() -> getRawOffset
    286:293:void setStartYear(int) -> setStartYear
    318:324:void setStartRule(int,int,int,int) -> setStartRule
    365:375:void setStartRule(int,int,int,int,int) -> a
    390:396:void setStartRule(int,int,int) -> setStartRule
    416:423:void setStartRule(int,int,int,int,boolean) -> setStartRule
    446:452:void setEndRule(int,int,int,int) -> setEndRule
    467:473:void setEndRule(int,int,int) -> setEndRule
    493:499:void setEndRule(int,int,int,int,boolean) -> setEndRule
    503:505:void setEndRule(int,int,int,int,int,boolean) -> a
    525:535:void setEndRule(int,int,int,int,int) -> b
    545:555:void setDSTSavings(int) -> setDSTSavings
    566:566:int getDSTSavings() -> getDSTSavings
    580:606:void readObject(java.io.ObjectInputStream) -> readObject
    615:615:java.lang.String toString() -> toString
    619:622:com.ibm.icu.util.STZInfo getSTZInfo() -> a
    652:656:int getOffset(int,int,int,int,int,int) -> getOffset
    674:678:int getOffset(int,int,int,int,int,int,int) -> getOffset
    690:784:int getOffset(int,int,int,int,int,int,int,int) -> a
    795:827:void getOffsetFromLocal(long,int,int,int[]) -> getOffsetFromLocal
    852:934:int compareToRule(int,int,int,int,int,int,int,int,int,int,int,int) -> a
    958:958:boolean useDaylightTime() -> useDaylightTime
    966:966:boolean observesDaylightTime() -> observesDaylightTime
    976:978:boolean inDaylightTime(java.util.Date) -> inDaylightTime
    996:1017:void construct(int,int,int,int,int,int,int,int,int,int,int,int) -> b
    1019:1021:void decodeRules() -> b
    1048:1086:void decodeStartRule() -> c
    1094:1132:void decodeEndRule() -> d
    1141:1144:boolean equals(java.lang.Object) -> equals
    1166:1172:boolean idEquals(java.lang.String,java.lang.String) -> a
    1181:1200:int hashCode() -> hashCode
    1209:1212:java.lang.Object clone() -> clone
    1223:1230:boolean hasSameRules(com.ibm.icu.util.TimeZone) -> hasSameRules
    1259:1278:com.ibm.icu.util.TimeZoneTransition getNextTransition(long,boolean) -> getNextTransition
    1287:1306:com.ibm.icu.util.TimeZoneTransition getPreviousTransition(long,boolean) -> getPreviousTransition
    1315:1324:com.ibm.icu.util.TimeZoneRule[] getTimeZoneRules() -> getTimeZoneRules
    1334:1410:void initTransitionRules() -> e
    1420:1420:boolean isFrozen() -> isFrozen
    1428:1429:com.ibm.icu.util.TimeZone freeze() -> freeze
    1437:1439:com.ibm.icu.util.TimeZone cloneAsThawed() -> cloneAsThawed
    32:32:java.lang.Object cloneAsThawed() -> cloneAsThawed
    32:32:java.lang.Object freeze() -> freeze
    32:635:void <clinit>() -> <clinit>
com.ibm.icu.util.StringTokenizer -> com.ibm.icu.util.StringTokenizer:
    int m_tokenOffset_ -> a
    int m_tokenSize_ -> b
    int[] m_tokenStart_ -> c
    int[] m_tokenLimit_ -> d
    com.ibm.icu.text.UnicodeSet m_delimiters_ -> e
    java.lang.String m_source_ -> f
    int m_length_ -> g
    int m_nextOffset_ -> h
    boolean m_returnDelimiters_ -> i
    boolean m_coalesceDelimiters_ -> j
    com.ibm.icu.text.UnicodeSet DEFAULT_DELIMITERS_ -> k
    com.ibm.icu.text.UnicodeSet EMPTY_DELIMITER_ -> l
    boolean[] delims -> m
    124:125:void <init>(java.lang.String,com.ibm.icu.text.UnicodeSet,boolean) -> <init>
    151:174:void <init>(java.lang.String,com.ibm.icu.text.UnicodeSet,boolean,boolean) -> <init>
    188:189:void <init>(java.lang.String,com.ibm.icu.text.UnicodeSet) -> <init>
    208:209:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    235:259:void <init>(java.lang.String,java.lang.String,boolean,boolean) -> <init>
    274:275:void <init>(java.lang.String,java.lang.String) -> <init>
    290:291:void <init>(java.lang.String) -> <init>
    307:307:boolean hasMoreTokens() -> hasMoreTokens
    319:385:java.lang.String nextToken() -> nextToken
    404:409:java.lang.String nextToken(java.lang.String) -> nextToken
    428:435:java.lang.String nextToken(com.ibm.icu.text.UnicodeSet) -> nextToken
    449:449:boolean hasMoreElements() -> hasMoreElements
    465:465:java.lang.Object nextElement() -> nextElement
    479:535:int countTokens() -> countTokens
    614:638:int getNextDelimiter(int) -> a
    650:674:int getNextNonDelimiter(int) -> b
    678:691:void checkDelimiters() -> a
    592:601:void <clinit>() -> <clinit>
com.ibm.icu.util.StringTrieBuilder -> com.ibm.icu.util.StringTrieBuilder:
    int state$5e2cbf22 -> a
    java.lang.StringBuilder strings -> strings
    com.ibm.icu.util.StringTrieBuilder$Node root -> b
    java.util.HashMap nodes -> c
    com.ibm.icu.util.StringTrieBuilder$ValueNode lookupFinalValueNode -> d
    boolean $assertionsDisabled -> e
    52:890:void <init>() -> <init>
    60:73:void addImpl(java.lang.CharSequence,int) -> addImpl
    81:118:void buildImpl(com.ibm.icu.util.StringTrieBuilder$Option) -> buildImpl
    126:130:void clearImpl() -> clearImpl
    140:152:com.ibm.icu.util.StringTrieBuilder$Node registerNode(com.ibm.icu.util.StringTrieBuilder$Node) -> a
    165:175:com.ibm.icu.util.StringTrieBuilder$ValueNode registerFinalValue(int) -> a
    808:814:com.ibm.icu.util.StringTrieBuilder$ValueNode createSuffixNode(java.lang.CharSequence,int,int) -> a
    boolean matchNodesCanHaveValues() -> matchNodesCanHaveValues
    int getMaxBranchLinearSubNodeLength() -> getMaxBranchLinearSubNodeLength
    int getMinLinearMatch() -> getMinLinearMatch
    int getMaxLinearMatchLength() -> getMaxLinearMatchLength
    int write(int) -> write
    int write(int,int) -> write
    int writeValueAndFinal(int,boolean) -> writeValueAndFinal
    int writeValueAndType(boolean,int,int) -> writeValueAndType
    int writeDeltaTo(int) -> writeDeltaTo
    23:23:com.ibm.icu.util.StringTrieBuilder$ValueNode access$100(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int) -> a
    23:23:com.ibm.icu.util.StringTrieBuilder$Node access$200(com.ibm.icu.util.StringTrieBuilder,com.ibm.icu.util.StringTrieBuilder$Node) -> a
    23:23:void <clinit>() -> <clinit>
com.ibm.icu.util.StringTrieBuilder$1 -> com.ibm.icu.util.C:
    int[] $SwitchMap$com$ibm$icu$util$StringTrieBuilder$State -> a
    81:81:void <clinit>() -> <clinit>
com.ibm.icu.util.StringTrieBuilder$BranchHeadNode -> com.ibm.icu.util.D:
    int length -> d
    com.ibm.icu.util.StringTrieBuilder$Node next -> e
    766:769:void <init>(int,com.ibm.icu.util.StringTrieBuilder$Node) -> <init>
    772:772:int hashCode() -> hashCode
    776:783:boolean equals(java.lang.Object) -> equals
    787:790:int markRightEdgesFirst(int) -> a
    794:801:void write(com.ibm.icu.util.StringTrieBuilder) -> a
com.ibm.icu.util.StringTrieBuilder$BranchNode -> com.ibm.icu.util.E:
    int hash -> a
    int firstEdgeNumber -> b
    593:593:void <init>() -> <init>
    595:595:int hashCode() -> hashCode
com.ibm.icu.util.StringTrieBuilder$DynamicBranchNode -> com.ibm.icu.util.F:
    java.lang.StringBuilder chars -> d
    java.util.ArrayList equal -> e
    505:589:void <init>() -> <init>
    508:511:void add(char,com.ibm.icu.util.StringTrieBuilder$Node) -> a
    514:530:com.ibm.icu.util.StringTrieBuilder$Node add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int) -> a
    534:544:com.ibm.icu.util.StringTrieBuilder$Node register(com.ibm.icu.util.StringTrieBuilder) -> b
    547:568:com.ibm.icu.util.StringTrieBuilder$Node register(com.ibm.icu.util.StringTrieBuilder,int,int) -> a
    572:585:int find(char) -> a
com.ibm.icu.util.StringTrieBuilder$IntermediateValueNode -> com.ibm.icu.util.G:
    com.ibm.icu.util.StringTrieBuilder$Node next -> d
    316:319:void <init>(int,com.ibm.icu.util.StringTrieBuilder$Node) -> <init>
    322:322:int hashCode() -> hashCode
    326:333:boolean equals(java.lang.Object) -> equals
    337:340:int markRightEdgesFirst(int) -> a
    344:346:void write(com.ibm.icu.util.StringTrieBuilder) -> a
com.ibm.icu.util.StringTrieBuilder$LinearMatchNode -> com.ibm.icu.util.H:
    java.lang.CharSequence strings -> d
    int stringOffset -> e
    int length -> f
    com.ibm.icu.util.StringTrieBuilder$Node next -> g
    int hash -> h
    352:357:void <init>(java.lang.CharSequence,int,int,com.ibm.icu.util.StringTrieBuilder$Node) -> <init>
    359:359:int hashCode() -> hashCode
    362:377:boolean equals(java.lang.Object) -> equals
    381:444:com.ibm.icu.util.StringTrieBuilder$Node add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int) -> a
    448:470:com.ibm.icu.util.StringTrieBuilder$Node register(com.ibm.icu.util.StringTrieBuilder) -> b
    474:477:int markRightEdgesFirst(int) -> a
    481:484:void write(com.ibm.icu.util.StringTrieBuilder) -> a
    488:495:void setHashCode() -> b
com.ibm.icu.util.StringTrieBuilder$ListBranchNode -> com.ibm.icu.util.I:
    com.ibm.icu.util.StringTrieBuilder$Node[] equal -> d
    int length -> e
    int[] values -> f
    char[] units -> g
    boolean $assertionsDisabled -> h
    602:607:void <init>(int) -> <init>
    610:622:boolean equals(java.lang.Object) -> equals
    626:626:int hashCode() -> hashCode
    630:644:int markRightEdgesFirst(int) -> a
    652:687:void write(com.ibm.icu.util.StringTrieBuilder) -> a
    690:695:void add(int,int) -> a
    698:703:void add(int,com.ibm.icu.util.StringTrieBuilder$Node) -> a
    601:601:void <clinit>() -> <clinit>
com.ibm.icu.util.StringTrieBuilder$Node -> com.ibm.icu.util.J:
    int offset -> c
    179:181:void <init>() -> <init>
    int hashCode() -> hashCode
    188:188:boolean equals(java.lang.Object) -> equals
    197:197:com.ibm.icu.util.StringTrieBuilder$Node add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int) -> a
    207:207:com.ibm.icu.util.StringTrieBuilder$Node register(com.ibm.icu.util.StringTrieBuilder) -> b
    236:239:int markRightEdgesFirst(int) -> a
    void write(com.ibm.icu.util.StringTrieBuilder) -> a
    251:254:void writeUnlessInsideRightEdge(int,int,com.ibm.icu.util.StringTrieBuilder) -> a
    255:255:int getOffset() -> a
com.ibm.icu.util.StringTrieBuilder$Option -> com.ibm.icu.util.StringTrieBuilder$Option:
    com.ibm.icu.util.StringTrieBuilder$Option FAST -> FAST
    com.ibm.icu.util.StringTrieBuilder$Option SMALL -> SMALL
    com.ibm.icu.util.StringTrieBuilder$Option[] $VALUES -> a
    28:28:com.ibm.icu.util.StringTrieBuilder$Option[] values() -> values
    28:28:com.ibm.icu.util.StringTrieBuilder$Option valueOf(java.lang.String) -> valueOf
    28:28:void <init>(java.lang.String,int) -> <init>
    28:44:void <clinit>() -> <clinit>
com.ibm.icu.util.StringTrieBuilder$SplitBranchNode -> com.ibm.icu.util.K:
    char unit -> d
    com.ibm.icu.util.StringTrieBuilder$Node lessThan -> e
    com.ibm.icu.util.StringTrieBuilder$Node greaterOrEqual -> f
    boolean $assertionsDisabled -> g
    716:722:void <init>(char,com.ibm.icu.util.StringTrieBuilder$Node,com.ibm.icu.util.StringTrieBuilder$Node) -> <init>
    725:732:boolean equals(java.lang.Object) -> equals
    736:736:int hashCode() -> hashCode
    740:745:int markRightEdgesFirst(int) -> a
    750:757:void write(com.ibm.icu.util.StringTrieBuilder) -> a
    715:715:void <clinit>() -> <clinit>
com.ibm.icu.util.StringTrieBuilder$State -> com.ibm.icu.util.L:
    int ADDING$5e2cbf22 -> a
    int BUILDING_FAST$5e2cbf22 -> b
    int BUILDING_SMALL$5e2cbf22 -> c
    int BUILT$5e2cbf22 -> d
    int[] $VALUES$2390e243 -> e
    874:874:int[] values$3d6a621c() -> a
    874:875:void <clinit>() -> <clinit>
com.ibm.icu.util.StringTrieBuilder$ValueNode -> com.ibm.icu.util.M:
    boolean hasValue -> a
    int value -> b
    boolean $assertionsDisabled -> d
    263:263:void <init>() -> <init>
    264:267:void <init>(int) -> <init>
    269:272:void setValue(int) -> b
    274:276:void setFinalValue(int) -> c
    279:283:int hashCode() -> hashCode
    287:294:boolean equals(java.lang.Object) -> equals
    298:304:com.ibm.icu.util.StringTrieBuilder$Node add(com.ibm.icu.util.StringTrieBuilder,java.lang.CharSequence,int,int) -> a
    308:309:void write(com.ibm.icu.util.StringTrieBuilder) -> a
    262:262:void access$000(com.ibm.icu.util.StringTrieBuilder$ValueNode,int) -> a
    262:262:void <clinit>() -> <clinit>
com.ibm.icu.util.TaiwanCalendar -> com.ibm.icu.util.TaiwanCalendar:
    long serialVersionUID -> serialVersionUID
    int BEFORE_MINGUO -> BEFORE_MINGUO
    int MINGUO -> MINGUO
    69:70:void <init>() -> <init>
    80:81:void <init>(com.ibm.icu.util.TimeZone) -> <init>
    91:92:void <init>(java.util.Locale) -> <init>
    102:103:void <init>(com.ibm.icu.util.ULocale) -> <init>
    114:115:void <init>(com.ibm.icu.util.TimeZone,java.util.Locale) -> <init>
    126:127:void <init>(com.ibm.icu.util.TimeZone,com.ibm.icu.util.ULocale) -> <init>
    137:139:void <init>(java.util.Date) -> <init>
    154:155:void <init>(int,int,int) -> <init>
    174:175:void <init>(int,int,int,int,int,int) -> <init>
    197:209:int handleGetExtendedYear() -> handleGetExtendedYear
    217:226:void handleComputeFields(int) -> handleComputeFields
    235:242:int handleGetLimit(int,int) -> handleGetLimit
    250:250:java.lang.String getType() -> getType
com.ibm.icu.util.TimeArrayTimeZoneRule -> com.ibm.icu.util.TimeArrayTimeZoneRule:
    long serialVersionUID -> serialVersionUID
    long[] startTimes -> a
    int timeType -> b
    43:51:void <init>(java.lang.String,int,int,long[],int) -> <init>
    61:61:long[] getStartTimes() -> getStartTimes
    73:73:int getTimeType() -> getTimeType
    81:81:java.util.Date getFirstStart(int,int) -> getFirstStart
    89:89:java.util.Date getFinalStart(int,int) -> getFinalStart
    97:107:java.util.Date getNextStart(long,int,int,boolean) -> getNextStart
    115:122:java.util.Date getPreviousStart(long,int,int,boolean) -> getPreviousStart
    130:137:boolean isEquivalentTo(com.ibm.icu.util.TimeZoneRule) -> isEquivalentTo
    146:146:boolean isTransitionRule() -> isTransitionRule
    151:157:long getUTC(long,int,int) -> a
    168:180:java.lang.String toString() -> toString
com.ibm.icu.util.TimeUnit -> com.ibm.icu.util.TimeUnit:
    long serialVersionUID -> serialVersionUID
    int index -> a
    29:31:void <init>(java.lang.String,java.lang.String) -> <init>
    38:38:com.ibm.icu.util.TimeUnit[] values() -> values
    42:42:java.lang.Object writeReplace() -> writeReplace
    48:64:java.lang.Object readResolve() -> readResolve
com.ibm.icu.util.TimeUnitAmount -> com.ibm.icu.util.TimeUnitAmount:
    24:25:void <init>(java.lang.Number,com.ibm.icu.util.TimeUnit) -> <init>
    32:33:void <init>(double,com.ibm.icu.util.TimeUnit) -> <init>
    40:40:com.ibm.icu.util.TimeUnit getTimeUnit() -> getTimeUnit
com.ibm.icu.util.TimeZone -> com.ibm.icu.util.TimeZone:
    java.util.logging.Logger LOGGER -> a
    long serialVersionUID -> serialVersionUID
    int TIMEZONE_ICU -> TIMEZONE_ICU
    int TIMEZONE_JDK -> TIMEZONE_JDK
    int SHORT -> SHORT
    int LONG -> LONG
    int SHORT_GENERIC -> SHORT_GENERIC
    int LONG_GENERIC -> LONG_GENERIC
    int SHORT_GMT -> SHORT_GMT
    int LONG_GMT -> LONG_GMT
    int SHORT_COMMONLY_USED -> SHORT_COMMONLY_USED
    int GENERIC_LOCATION -> GENERIC_LOCATION
    java.lang.String UNKNOWN_ZONE_ID -> UNKNOWN_ZONE_ID
    com.ibm.icu.util.TimeZone UNKNOWN_ZONE -> UNKNOWN_ZONE
    com.ibm.icu.util.TimeZone GMT_ZONE -> GMT_ZONE
    java.lang.String ID -> b
    com.ibm.icu.util.TimeZone defaultZone -> c
    int TZ_IMPL -> d
    boolean $assertionsDisabled -> e
    128:129:void <init>() -> <init>
    138:143:void <init>(java.lang.String) -> <init>
    int getOffset(int,int,int,int,int,int) -> getOffset
    319:321:int getOffset(long) -> getOffset
    346:376:void getOffset(long,boolean,int[]) -> getOffset
    void setRawOffset(int) -> setRawOffset
    int getRawOffset() -> getRawOffset
    400:400:java.lang.String getID() -> getID
    410:417:void setID(java.lang.String) -> setID
    430:430:java.lang.String getDisplayName() -> getDisplayName
    445:445:java.lang.String getDisplayName(java.util.Locale) -> getDisplayName
    460:460:java.lang.String getDisplayName(com.ibm.icu.util.ULocale) -> getDisplayName
    479:479:java.lang.String getDisplayName(boolean,int) -> getDisplayName
    500:500:java.lang.String getDisplayName(boolean,int,java.util.Locale) -> getDisplayName
    521:525:java.lang.String getDisplayName(boolean,int,com.ibm.icu.util.ULocale) -> getDisplayName
    534:608:java.lang.String _getDisplayName(int,boolean,com.ibm.icu.util.ULocale) -> a
    627:630:int getDSTSavings() -> getDSTSavings
    boolean useDaylightTime() -> useDaylightTime
    677:677:boolean observesDaylightTime() -> observesDaylightTime
    boolean inDaylightTime(java.util.Date) -> inDaylightTime
    703:703:com.ibm.icu.util.TimeZone getTimeZone(java.lang.String) -> getTimeZone
    722:722:com.ibm.icu.util.TimeZone getFrozenTimeZone(java.lang.String) -> getFrozenTimeZone
    738:738:com.ibm.icu.util.TimeZone getTimeZone(java.lang.String,int) -> getTimeZone
    751:780:com.ibm.icu.util.TimeZone getTimeZone(java.lang.String,int,boolean) -> a
    790:794:void setDefaultTimeZoneType(int) -> setDefaultTimeZoneType
    803:803:int getDefaultTimeZoneType() -> getDefaultTimeZoneType
    822:822:java.util.Set getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer) -> getAvailableIDs
    838:839:java.lang.String[] getAvailableIDs(int) -> getAvailableIDs
    856:857:java.lang.String[] getAvailableIDs(java.lang.String) -> getAvailableIDs
    871:872:java.lang.String[] getAvailableIDs() -> getAvailableIDs
    890:890:int countEquivalentIDs(java.lang.String) -> countEquivalentIDs
    913:913:java.lang.String getEquivalentID(java.lang.String,int) -> getEquivalentID
    924:936:com.ibm.icu.util.TimeZone getDefault() -> getDefault
    948:988:void setDefault(com.ibm.icu.util.TimeZone) -> setDefault
    1000:1000:boolean hasSameRules(com.ibm.icu.util.TimeZone) -> hasSameRules
    1010:1013:java.lang.Object clone() -> clone
    1021:1023:boolean equals(java.lang.Object) -> equals
    1031:1031:int hashCode() -> hashCode
    1045:1045:java.lang.String getTZDataVersion() -> getTZDataVersion
    1059:1059:java.lang.String getCanonicalID(java.lang.String) -> getCanonicalID
    1075:1094:java.lang.String getCanonicalID(java.lang.String,boolean[]) -> getCanonicalID
    1113:1123:java.lang.String getRegion(java.lang.String) -> getRegion
    1148:1180:java.lang.String getWindowsID(java.lang.String) -> getWindowsID
    1208:1237:java.lang.String getIDForWindowsID(java.lang.String,java.lang.String) -> getIDForWindowsID
    1247:1247:boolean isFrozen() -> isFrozen
    1255:1255:com.ibm.icu.util.TimeZone freeze() -> freeze
    1264:1267:com.ibm.icu.util.TimeZone cloneAsThawed() -> cloneAsThawed
    114:114:java.lang.Object cloneAsThawed() -> cloneAsThawed
    114:114:java.lang.Object freeze() -> freeze
    114:1305:void <clinit>() -> <clinit>
com.ibm.icu.util.TimeZone$ConstantZone -> com.ibm.icu.util.N:
    long serialVersionUID -> serialVersionUID
    int rawOffset -> a
    boolean isFrozen -> b
    1323:1355:void <init>(int,java.lang.String) -> <init>
    1329:1329:int getOffset(int,int,int,int,int,int) -> getOffset
    1334:1338:void setRawOffset(int) -> setRawOffset
    1342:1342:int getRawOffset() -> getRawOffset
    1347:1347:boolean useDaylightTime() -> useDaylightTime
    1352:1352:boolean inDaylightTime(java.util.Date) -> inDaylightTime
    1359:1359:boolean isFrozen() -> isFrozen
    1364:1365:com.ibm.icu.util.TimeZone freeze() -> freeze
    1370:1372:com.ibm.icu.util.TimeZone cloneAsThawed() -> cloneAsThawed
    1317:1317:java.lang.Object cloneAsThawed() -> cloneAsThawed
    1317:1317:java.lang.Object freeze() -> freeze
    1317:1317:void <init>(int,java.lang.String,byte) -> <init>
com.ibm.icu.util.TimeZone$SystemTimeZoneType -> com.ibm.icu.util.TimeZone$SystemTimeZoneType:
    com.ibm.icu.util.TimeZone$SystemTimeZoneType ANY -> ANY
    com.ibm.icu.util.TimeZone$SystemTimeZoneType CANONICAL -> CANONICAL
    com.ibm.icu.util.TimeZone$SystemTimeZoneType CANONICAL_LOCATION -> CANONICAL_LOCATION
    com.ibm.icu.util.TimeZone$SystemTimeZoneType[] $VALUES -> a
    264:264:com.ibm.icu.util.TimeZone$SystemTimeZoneType[] values() -> values
    264:264:com.ibm.icu.util.TimeZone$SystemTimeZoneType valueOf(java.lang.String) -> valueOf
    264:264:void <init>(java.lang.String,int) -> <init>
    264:284:void <clinit>() -> <clinit>
com.ibm.icu.util.TimeZoneRule -> com.ibm.icu.util.TimeZoneRule:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> a
    int rawOffset -> b
    int dstSavings -> c
    41:45:void <init>(java.lang.String,int,int) -> <init>
    55:55:java.lang.String getName() -> getName
    66:66:int getRawOffset() -> getRawOffset
    78:78:int getDSTSavings() -> getDSTSavings
    92:95:boolean isEquivalentTo(com.ibm.icu.util.TimeZoneRule) -> isEquivalentTo
    java.util.Date getFirstStart(int,int) -> getFirstStart
    java.util.Date getFinalStart(int,int) -> getFinalStart
    java.util.Date getNextStart(long,int,int,boolean) -> getNextStart
    java.util.Date getPreviousStart(long,int,int,boolean) -> getPreviousStart
    boolean isTransitionRule() -> isTransitionRule
    178:182:java.lang.String toString() -> toString
com.ibm.icu.util.TimeZoneTransition -> com.ibm.icu.util.TimeZoneTransition:
    com.ibm.icu.util.TimeZoneRule from -> a
    com.ibm.icu.util.TimeZoneRule to -> b
    long time -> c
    30:34:void <init>(long,com.ibm.icu.util.TimeZoneRule,com.ibm.icu.util.TimeZoneRule) -> <init>
    44:44:long getTime() -> getTime
    55:55:com.ibm.icu.util.TimeZoneRule getTo() -> getTo
    66:66:com.ibm.icu.util.TimeZoneRule getFrom() -> getFrom
    77:81:java.lang.String toString() -> toString
com.ibm.icu.util.ULocale -> com.ibm.icu.util.ULocale:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.impl.ICUCache nameCache -> a
    com.ibm.icu.util.ULocale ENGLISH -> ENGLISH
    com.ibm.icu.util.ULocale FRENCH -> FRENCH
    com.ibm.icu.util.ULocale GERMAN -> GERMAN
    com.ibm.icu.util.ULocale ITALIAN -> ITALIAN
    com.ibm.icu.util.ULocale JAPANESE -> JAPANESE
    com.ibm.icu.util.ULocale KOREAN -> KOREAN
    com.ibm.icu.util.ULocale CHINESE -> CHINESE
    com.ibm.icu.util.ULocale SIMPLIFIED_CHINESE -> SIMPLIFIED_CHINESE
    com.ibm.icu.util.ULocale TRADITIONAL_CHINESE -> TRADITIONAL_CHINESE
    com.ibm.icu.util.ULocale FRANCE -> FRANCE
    com.ibm.icu.util.ULocale GERMANY -> GERMANY
    com.ibm.icu.util.ULocale ITALY -> ITALY
    com.ibm.icu.util.ULocale JAPAN -> JAPAN
    com.ibm.icu.util.ULocale KOREA -> KOREA
    com.ibm.icu.util.ULocale CHINA -> CHINA
    com.ibm.icu.util.ULocale PRC -> PRC
    com.ibm.icu.util.ULocale TAIWAN -> TAIWAN
    com.ibm.icu.util.ULocale UK -> UK
    com.ibm.icu.util.ULocale US -> US
    com.ibm.icu.util.ULocale CANADA -> CANADA
    com.ibm.icu.util.ULocale CANADA_FRENCH -> CANADA_FRENCH
    java.util.Locale EMPTY_LOCALE -> b
    com.ibm.icu.util.ULocale ROOT -> ROOT
    com.ibm.icu.impl.SimpleCache CACHE -> c
    java.util.Locale locale -> d
    java.lang.String localeID -> e
    com.ibm.icu.impl.locale.BaseLocale baseLocale -> f
    com.ibm.icu.impl.locale.LocaleExtensions extensions -> g
    java.lang.String[][] CANONICALIZE_MAP -> h
    java.lang.String[][] variantsToKeywords -> i
    java.util.Locale defaultLocale -> j
    com.ibm.icu.util.ULocale defaultULocale -> k
    java.util.Locale[] defaultCategoryLocales -> l
    com.ibm.icu.util.ULocale[] defaultCategoryULocales -> m
    com.ibm.icu.util.ULocale$Type ACTUAL_LOCALE -> ACTUAL_LOCALE
    com.ibm.icu.util.ULocale$Type VALID_LOCALE -> VALID_LOCALE
    char PRIVATE_USE_EXTENSION -> PRIVATE_USE_EXTENSION
    char UNICODE_LOCALE_EXTENSION -> UNICODE_LOCALE_EXTENSION
    330:414:void initCANONICALIZE_MAP() -> a
    419:422:void <init>(java.lang.String,java.util.Locale) -> <init>
    428:431:void <init>(java.util.Locale) -> <init>
    440:448:com.ibm.icu.util.ULocale forLocale(java.util.Locale) -> forLocale
    471:473:void <init>(java.lang.String) -> <init>
    482:483:void <init>(java.lang.String,java.lang.String) -> <init>
    505:507:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    516:516:com.ibm.icu.util.ULocale createCanonical(java.lang.String) -> createCanonical
    520:540:java.lang.String lscvToID(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    550:553:java.util.Locale toLocale() -> toLocale
    634:663:com.ibm.icu.util.ULocale getDefault() -> getDefault
    684:691:void setDefault(com.ibm.icu.util.ULocale) -> setDefault
    701:744:com.ibm.icu.util.ULocale getDefault(com.ibm.icu.util.ULocale$Category) -> getDefault
    761:766:void setDefault(com.ibm.icu.util.ULocale$Category,com.ibm.icu.util.ULocale) -> setDefault
    774:774:java.lang.Object clone() -> clone
    782:782:int hashCode() -> hashCode
    795:801:boolean equals(java.lang.Object) -> equals
    816:879:int compareTo(com.ibm.icu.util.ULocale) -> compareTo
    888:888:com.ibm.icu.util.ULocale[] getAvailableLocales() -> getAvailableLocales
    897:897:java.lang.String[] getISOCountries() -> getISOCountries
    909:909:java.lang.String[] getISOLanguages() -> getISOLanguages
    920:920:java.lang.String getLanguage() -> getLanguage
    932:932:java.lang.String getLanguage(java.lang.String) -> getLanguage
    942:942:java.lang.String getScript() -> getScript
    953:953:java.lang.String getScript(java.lang.String) -> getScript
    964:964:java.lang.String getCountry() -> getCountry
    976:976:java.lang.String getCountry(java.lang.String) -> getCountry
    986:986:java.lang.String getVariant() -> getVariant
    996:996:java.lang.String getVariant(java.lang.String) -> getVariant
    1005:1005:java.lang.String getFallback(java.lang.String) -> getFallback
    1014:1017:com.ibm.icu.util.ULocale getFallback() -> getFallback
    1024:1040:java.lang.String getFallbackString(java.lang.String) -> a
    1051:1051:java.lang.String getBaseName() -> getBaseName
    1063:1066:java.lang.String getBaseName(java.lang.String) -> getBaseName
    1076:1076:java.lang.String getName() -> getName
    1086:1106:int getShortestSubtagLength(java.lang.String) -> b
    1119:1132:java.lang.String getName(java.lang.String) -> getName
    1140:1140:java.lang.String toString() -> toString
    1150:1150:java.util.Iterator getKeywords() -> getKeywords
    1161:1161:java.util.Iterator getKeywords(java.lang.String) -> getKeywords
    1172:1172:java.lang.String getKeywordValue(java.lang.String) -> getKeywordValue
    1183:1183:java.lang.String getKeywordValue(java.lang.String,java.lang.String) -> getKeywordValue
    1194:1249:java.lang.String canonicalize(java.lang.String) -> canonicalize
    1267:1267:com.ibm.icu.util.ULocale setKeywordValue(java.lang.String,java.lang.String) -> setKeywordValue
    1286:1288:java.lang.String setKeywordValue(java.lang.String,java.lang.String,java.lang.String) -> setKeywordValue
    1317:1317:java.lang.String getISO3Language() -> getISO3Language
    1331:1331:java.lang.String getISO3Language(java.lang.String) -> getISO3Language
    1343:1343:java.lang.String getISO3Country() -> getISO3Country
    1355:1355:java.lang.String getISO3Country(java.lang.String) -> getISO3Country
    1380:1404:boolean isRightToLeft() -> isRightToLeft
    1416:1416:java.lang.String getDisplayLanguage() -> getDisplayLanguage
    1426:1426:java.lang.String getDisplayLanguage(com.ibm.icu.util.ULocale) -> getDisplayLanguage
    1438:1438:java.lang.String getDisplayLanguage(java.lang.String,java.lang.String) -> getDisplayLanguage
    1451:1451:java.lang.String getDisplayLanguage(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayLanguage
    1461:1461:java.lang.String getDisplayLanguageWithDialect() -> getDisplayLanguageWithDialect
    1472:1472:java.lang.String getDisplayLanguageWithDialect(com.ibm.icu.util.ULocale) -> getDisplayLanguageWithDialect
    1485:1485:java.lang.String getDisplayLanguageWithDialect(java.lang.String,java.lang.String) -> getDisplayLanguageWithDialect
    1499:1499:java.lang.String getDisplayLanguageWithDialect(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayLanguageWithDialect
    1504:1505:java.lang.String getDisplayLanguageInternal(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale,boolean) -> a
    1515:1515:java.lang.String getDisplayScript() -> getDisplayScript
    1527:1527:java.lang.String getDisplayScriptInContext() -> getDisplayScriptInContext
    1537:1537:java.lang.String getDisplayScript(com.ibm.icu.util.ULocale) -> getDisplayScript
    1549:1549:java.lang.String getDisplayScriptInContext(com.ibm.icu.util.ULocale) -> getDisplayScriptInContext
    1561:1561:java.lang.String getDisplayScript(java.lang.String,java.lang.String) -> getDisplayScript
    1574:1574:java.lang.String getDisplayScriptInContext(java.lang.String,java.lang.String) -> getDisplayScriptInContext
    1585:1585:java.lang.String getDisplayScript(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayScript
    1597:1597:java.lang.String getDisplayScriptInContext(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayScriptInContext
    1602:1602:java.lang.String getDisplayScriptInternal(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> a
    1607:1607:java.lang.String getDisplayScriptInContextInternal(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> b
    1620:1620:java.lang.String getDisplayCountry() -> getDisplayCountry
    1632:1632:java.lang.String getDisplayCountry(com.ibm.icu.util.ULocale) -> getDisplayCountry
    1646:1646:java.lang.String getDisplayCountry(java.lang.String,java.lang.String) -> getDisplayCountry
    1660:1660:java.lang.String getDisplayCountry(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayCountry
    1665:1665:java.lang.String getDisplayCountryInternal(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> c
    1676:1676:java.lang.String getDisplayVariant() -> getDisplayVariant
    1686:1686:java.lang.String getDisplayVariant(com.ibm.icu.util.ULocale) -> getDisplayVariant
    1698:1698:java.lang.String getDisplayVariant(java.lang.String,java.lang.String) -> getDisplayVariant
    1710:1710:java.lang.String getDisplayVariant(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayVariant
    1714:1714:java.lang.String getDisplayVariantInternal(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> d
    1727:1727:java.lang.String getDisplayKeyword(java.lang.String) -> getDisplayKeyword
    1739:1739:java.lang.String getDisplayKeyword(java.lang.String,java.lang.String) -> getDisplayKeyword
    1751:1751:java.lang.String getDisplayKeyword(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayKeyword
    1755:1755:java.lang.String getDisplayKeywordInternal(java.lang.String,com.ibm.icu.util.ULocale) -> a
    1766:1766:java.lang.String getDisplayKeywordValue(java.lang.String) -> getDisplayKeywordValue
    1777:1777:java.lang.String getDisplayKeywordValue(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayKeywordValue
    1791:1791:java.lang.String getDisplayKeywordValue(java.lang.String,java.lang.String,java.lang.String) -> getDisplayKeywordValue
    1806:1806:java.lang.String getDisplayKeywordValue(java.lang.String,java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayKeywordValue
    1812:1814:java.lang.String getDisplayKeywordValueInternal(com.ibm.icu.util.ULocale,java.lang.String,com.ibm.icu.util.ULocale) -> a
    1824:1824:java.lang.String getDisplayName() -> getDisplayName
    1834:1834:java.lang.String getDisplayName(com.ibm.icu.util.ULocale) -> getDisplayName
    1846:1846:java.lang.String getDisplayName(java.lang.String,java.lang.String) -> getDisplayName
    1858:1858:java.lang.String getDisplayName(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayName
    1862:1862:java.lang.String getDisplayNameInternal(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> e
    1873:1873:java.lang.String getDisplayNameWithDialect() -> getDisplayNameWithDialect
    1884:1884:java.lang.String getDisplayNameWithDialect(com.ibm.icu.util.ULocale) -> getDisplayNameWithDialect
    1897:1897:java.lang.String getDisplayNameWithDialect(java.lang.String,java.lang.String) -> getDisplayNameWithDialect
    1911:1911:java.lang.String getDisplayNameWithDialect(java.lang.String,com.ibm.icu.util.ULocale) -> getDisplayNameWithDialect
    1915:1915:java.lang.String getDisplayNameWithDialectInternal(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale) -> f
    1927:1927:java.lang.String getCharacterOrientation() -> getCharacterOrientation
    1939:1939:java.lang.String getLineOrientation() -> getLineOrientation
    2002:2014:com.ibm.icu.util.ULocale acceptLanguage(java.lang.String,com.ibm.icu.util.ULocale[],boolean[]) -> acceptLanguage
    2037:2077:com.ibm.icu.util.ULocale acceptLanguage(com.ibm.icu.util.ULocale[],com.ibm.icu.util.ULocale[],boolean[]) -> acceptLanguage
    2098:2098:com.ibm.icu.util.ULocale acceptLanguage(java.lang.String,boolean[]) -> acceptLanguage
    2119:2119:com.ibm.icu.util.ULocale acceptLanguage(com.ibm.icu.util.ULocale[],boolean[]) -> acceptLanguage
    2152:2377:com.ibm.icu.util.ULocale[] parseAcceptLanguage(java.lang.String,boolean) -> a
    2412:2430:com.ibm.icu.util.ULocale addLikelySubtags(com.ibm.icu.util.ULocale) -> addLikelySubtags
    2461:2461:com.ibm.icu.util.ULocale minimizeSubtags(com.ibm.icu.util.ULocale) -> minimizeSubtags
    2519:2661:com.ibm.icu.util.ULocale minimizeSubtags(com.ibm.icu.util.ULocale,com.ibm.icu.util.ULocale$Minimize) -> minimizeSubtags
    2673:2673:boolean isEmptyString(java.lang.String) -> c
    2684:2689:void appendTag(java.lang.String,java.lang.StringBuilder) -> a
    2710:2832:java.lang.String createTagString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    2847:2847:java.lang.String createTagString(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    2860:2911:int parseTagString(java.lang.String,java.lang.String[]) -> a
    2916:2923:java.lang.String lookupLikelySubtags(java.lang.String) -> d
    2933:3050:java.lang.String createLikelySubtagsString(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> c
    3094:3097:java.lang.String getExtension(char) -> getExtension
    3110:3110:java.util.Set getExtensionKeys() -> getExtensionKeys
    3122:3122:java.util.Set getUnicodeLocaleAttributes() -> getUnicodeLocaleAttributes
    3141:3144:java.lang.String getUnicodeLocaleType(java.lang.String) -> getUnicodeLocaleType
    3157:3157:java.util.Set getUnicodeLocaleKeys() -> getUnicodeLocaleKeys
    3216:3277:java.lang.String toLanguageTag() -> toLanguageTag
    3386:3389:com.ibm.icu.util.ULocale forLanguageTag(java.lang.String) -> forLanguageTag
    3413:3418:java.lang.String toUnicodeLocaleKey(java.lang.String) -> toUnicodeLocaleKey
    3449:3454:java.lang.String toUnicodeLocaleType(java.lang.String,java.lang.String) -> toUnicodeLocaleType
    3470:3484:java.lang.String toLegacyKey(java.lang.String) -> toLegacyKey
    3514:3529:java.lang.String toLegacyType(java.lang.String,java.lang.String) -> toLegacyType
    3886:3949:com.ibm.icu.util.ULocale getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions) -> b
    3953:3965:com.ibm.icu.impl.locale.BaseLocale base() -> b
    3969:4009:com.ibm.icu.impl.locale.LocaleExtensions extensions() -> c
    112:112:int compareTo(java.lang.Object) -> compareTo
    112:112:com.ibm.icu.impl.locale.BaseLocale access$100(com.ibm.icu.util.ULocale) -> a
    112:112:com.ibm.icu.impl.locale.LocaleExtensions access$200(com.ibm.icu.util.ULocale) -> b
    112:112:com.ibm.icu.util.ULocale access$300(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions) -> a
    112:112:void <init>(java.lang.String,java.util.Locale,byte) -> <init>
    116:1970:void <clinit>() -> <clinit>
com.ibm.icu.util.ULocale$1 -> com.ibm.icu.util.O:
    int[] $SwitchMap$com$ibm$icu$util$ULocale$Category -> a
    4345:4345:void <clinit>() -> <clinit>
com.ibm.icu.util.ULocale$1ULocaleAcceptLanguageQ -> com.ibm.icu.util.P:
    double q -> a
    double serial -> b
    2131:2134:void <init>(double,int) -> <init>
    2136:2146:int compareTo(com.ibm.icu.util.ULocale$1ULocaleAcceptLanguageQ) -> a
    2128:2128:int compareTo(java.lang.Object) -> compareTo
com.ibm.icu.util.ULocale$Builder -> com.ibm.icu.util.ULocale$Builder:
    com.ibm.icu.impl.locale.InternalLocaleBuilder _locbld -> a
    3577:3579:void <init>() -> <init>
    3600:3604:com.ibm.icu.util.ULocale$Builder setLocale(com.ibm.icu.util.ULocale) -> setLocale
    3627:3634:com.ibm.icu.util.ULocale$Builder setLanguageTag(java.lang.String) -> setLanguageTag
    3654:3658:com.ibm.icu.util.ULocale$Builder setLanguage(java.lang.String) -> setLanguage
    3676:3680:com.ibm.icu.util.ULocale$Builder setScript(java.lang.String) -> setScript
    3702:3706:com.ibm.icu.util.ULocale$Builder setRegion(java.lang.String) -> setRegion
    3729:3733:com.ibm.icu.util.ULocale$Builder setVariant(java.lang.String) -> setVariant
    3762:3766:com.ibm.icu.util.ULocale$Builder setExtension(char,java.lang.String) -> setExtension
    3793:3797:com.ibm.icu.util.ULocale$Builder setUnicodeLocaleKeyword(java.lang.String,java.lang.String) -> setUnicodeLocaleKeyword
    3815:3819:com.ibm.icu.util.ULocale$Builder addUnicodeLocaleAttribute(java.lang.String) -> addUnicodeLocaleAttribute
    3839:3843:com.ibm.icu.util.ULocale$Builder removeUnicodeLocaleAttribute(java.lang.String) -> removeUnicodeLocaleAttribute
    3854:3855:com.ibm.icu.util.ULocale$Builder clear() -> clear
    3868:3869:com.ibm.icu.util.ULocale$Builder clearExtensions() -> clearExtensions
    3881:3881:com.ibm.icu.util.ULocale build() -> build
com.ibm.icu.util.ULocale$Category -> com.ibm.icu.util.ULocale$Category:
    com.ibm.icu.util.ULocale$Category DISPLAY -> DISPLAY
    com.ibm.icu.util.ULocale$Category FORMAT -> FORMAT
    com.ibm.icu.util.ULocale$Category[] $VALUES -> a
    293:293:com.ibm.icu.util.ULocale$Category[] values() -> values
    293:293:com.ibm.icu.util.ULocale$Category valueOf(java.lang.String) -> valueOf
    293:293:void <init>(java.lang.String,int) -> <init>
    293:303:void <clinit>() -> <clinit>
com.ibm.icu.util.ULocale$JDKLocaleHelper -> com.ibm.icu.util.Q:
    boolean hasScriptsAndUnicodeExtensions -> a
    boolean hasLocaleCategories -> b
    java.lang.reflect.Method mGetScript -> c
    java.lang.reflect.Method mGetExtensionKeys -> d
    java.lang.reflect.Method mGetExtension -> e
    java.lang.reflect.Method mGetUnicodeLocaleKeys -> f
    java.lang.reflect.Method mGetUnicodeLocaleAttributes -> g
    java.lang.reflect.Method mGetUnicodeLocaleType -> h
    java.lang.reflect.Method mForLanguageTag -> i
    java.lang.reflect.Method mGetDefault -> j
    java.lang.reflect.Method mSetDefault -> k
    java.lang.Object eDISPLAY -> l
    java.lang.Object eFORMAT -> m
    java.lang.String[][] JAVA6_MAPDATA -> n
    4112:4112:boolean hasLocaleCategories() -> a
    4116:4116:com.ibm.icu.util.ULocale toULocale(java.util.Locale) -> a
    4120:4120:java.util.Locale toLocale(com.ibm.icu.util.ULocale) -> a
    4124:4257:com.ibm.icu.util.ULocale toULocale7(java.util.Locale) -> c
    4261:4276:com.ibm.icu.util.ULocale toULocale6(java.util.Locale) -> d
    4280:4317:java.util.Locale toLocale7(com.ibm.icu.util.ULocale) -> b
    4321:4338:java.util.Locale toLocale6(com.ibm.icu.util.ULocale) -> c
    4342:4365:java.util.Locale getDefault(com.ibm.icu.util.ULocale$Category) -> a
    4369:4391:void setDefault(com.ibm.icu.util.ULocale$Category,java.util.Locale) -> a
    4398:4411:boolean isOriginalDefaultLocale(java.util.Locale) -> b
    4417:4432:java.lang.String getSystemProperty(java.lang.String) -> a
    4016:4106:void <clinit>() -> <clinit>
com.ibm.icu.util.ULocale$JDKLocaleHelper$1 -> com.ibm.icu.util.R:
    java.lang.String val$fkey -> a
    4421:4421:void <init>(java.lang.String) -> <init>
    4423:4423:java.lang.String run() -> a
    4421:4421:java.lang.Object run() -> run
com.ibm.icu.util.ULocale$Minimize -> com.ibm.icu.util.ULocale$Minimize:
    com.ibm.icu.util.ULocale$Minimize FAVOR_SCRIPT -> FAVOR_SCRIPT
    com.ibm.icu.util.ULocale$Minimize FAVOR_REGION -> FAVOR_REGION
    com.ibm.icu.util.ULocale$Minimize[] $VALUES -> a
    2469:2469:com.ibm.icu.util.ULocale$Minimize[] values() -> values
    2469:2469:com.ibm.icu.util.ULocale$Minimize valueOf(java.lang.String) -> valueOf
    2470:2470:void <init>(java.lang.String,int) -> <init>
    2469:2483:void <clinit>() -> <clinit>
com.ibm.icu.util.ULocale$Type -> com.ibm.icu.util.ULocale$Type:
    1981:1981:void <init>() -> <init>
    1980:1980:void <init>(byte) -> <init>
com.ibm.icu.util.UResourceBundle -> com.ibm.icu.util.UResourceBundle:
    com.ibm.icu.impl.ICUCache BUNDLE_CACHE -> a
    com.ibm.icu.util.UResourceBundle$ResourceCacheKey cacheKey -> b
    java.lang.ref.SoftReference ROOT_CACHE -> c
    int NONE -> NONE
    int STRING -> STRING
    int BINARY -> BINARY
    int TABLE -> TABLE
    int INT -> INT
    int ARRAY -> ARRAY
    int INT_VECTOR -> INT_VECTOR
    108:108:com.ibm.icu.util.UResourceBundle getBundleInstance(java.lang.String,java.lang.String) -> getBundleInstance
    125:125:com.ibm.icu.util.UResourceBundle getBundleInstance(java.lang.String,java.lang.String,java.lang.ClassLoader) -> getBundleInstance
    145:145:com.ibm.icu.util.UResourceBundle getBundleInstance(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean) -> getBundleInstance
    154:155:void <init>() -> <init>
    166:169:com.ibm.icu.util.UResourceBundle getBundleInstance(com.ibm.icu.util.ULocale) -> getBundleInstance
    182:186:com.ibm.icu.util.UResourceBundle getBundleInstance(java.lang.String) -> getBundleInstance
    202:207:com.ibm.icu.util.UResourceBundle getBundleInstance(java.lang.String,java.util.Locale) -> getBundleInstance
    222:228:com.ibm.icu.util.UResourceBundle getBundleInstance(java.lang.String,com.ibm.icu.util.ULocale) -> getBundleInstance
    245:249:com.ibm.icu.util.UResourceBundle getBundleInstance(java.lang.String,java.util.Locale,java.lang.ClassLoader) -> getBundleInstance
    268:274:com.ibm.icu.util.UResourceBundle getBundleInstance(java.lang.String,com.ibm.icu.util.ULocale,java.lang.ClassLoader) -> getBundleInstance
    com.ibm.icu.util.ULocale getULocale() -> getULocale
    java.lang.String getLocaleID() -> getLocaleID
    java.lang.String getBaseName() -> getBaseName
    com.ibm.icu.util.UResourceBundle getParent() -> getParent
    316:316:java.util.Locale getLocale() -> getLocale
    340:341:void resetBundleCache() -> resetBundleCache
    352:360:com.ibm.icu.util.UResourceBundle addToCache(java.lang.String,com.ibm.icu.util.ULocale,com.ibm.icu.util.UResourceBundle) -> addToCache
    370:373:com.ibm.icu.util.UResourceBundle loadFromCache(java.lang.String,com.ibm.icu.util.ULocale) -> loadFromCache
    463:498:int getRootType(java.lang.String,java.lang.ClassLoader) -> a
    502:517:void setRootType(java.lang.String,int) -> a
    533:569:com.ibm.icu.util.UResourceBundle instantiateBundle(java.lang.String,java.lang.String,java.lang.ClassLoader,boolean) -> instantiateBundle
    585:585:java.nio.ByteBuffer getBinary() -> getBinary
    600:600:java.lang.String getString() -> getString
    614:614:java.lang.String[] getStringArray() -> getStringArray
    630:630:byte[] getBinary(byte[]) -> getBinary
    644:644:int[] getIntVector() -> getIntVector
    658:658:int getInt() -> getInt
    673:673:int getUInt() -> getUInt
    685:692:com.ibm.icu.util.UResourceBundle get(java.lang.String) -> get
    710:717:com.ibm.icu.util.UResourceBundle findTopLevel(java.lang.String) -> findTopLevel
    730:734:java.lang.String getString(int) -> getString
    747:760:com.ibm.icu.util.UResourceBundle get(int) -> get
    781:788:com.ibm.icu.util.UResourceBundle findTopLevel(int) -> findTopLevel
    798:798:java.util.Enumeration getKeys() -> getKeys
    815:848:java.util.Set keySet() -> keySet
    861:861:java.util.Set handleKeySet() -> handleKeySet
    874:874:int getSize() -> getSize
    887:887:int getType() -> getType
    897:897:com.ibm.icu.util.VersionInfo getVersion() -> getVersion
    907:907:com.ibm.icu.util.UResourceBundleIterator getIterator() -> getIterator
    917:917:java.lang.String getKey() -> getKey
    980:980:com.ibm.icu.util.UResourceBundle handleGet(java.lang.String,java.util.HashMap,com.ibm.icu.util.UResourceBundle) -> handleGet
    996:996:com.ibm.icu.util.UResourceBundle handleGet(int,java.util.HashMap,com.ibm.icu.util.UResourceBundle) -> handleGet
    1006:1006:java.lang.String[] handleGetStringArray() -> handleGetStringArray
    1017:1017:java.util.Enumeration handleGetKeys() -> handleGetKeys
    1028:1028:java.lang.Object handleGetObject(java.lang.String) -> handleGetObject
    1041:1053:java.lang.Object handleGetObjectImpl(java.lang.String,com.ibm.icu.util.UResourceBundle) -> a
    1059:1075:java.lang.Object resolveObject(java.lang.String,com.ibm.icu.util.UResourceBundle) -> b
    void setLoadingStatus(int) -> setLoadingStatus
    1095:1095:boolean isTopLevelResource() -> isTopLevelResource
    320:459:void <clinit>() -> <clinit>
com.ibm.icu.util.UResourceBundle$ResourceCacheKey -> com.ibm.icu.util.S:
    java.lang.String searchName -> a
    com.ibm.icu.util.ULocale defaultLocale -> b
    int hashCodeCache -> c
    386:386:void <init>() -> <init>
    392:422:boolean equals(java.lang.Object) -> equals
    427:427:int hashCode() -> hashCode
    432:435:java.lang.Object clone() -> clone
    441:447:void setKeyValues(java.lang.String,com.ibm.icu.util.ULocale) -> a
    386:386:void access$000(com.ibm.icu.util.UResourceBundle$ResourceCacheKey,java.lang.String,com.ibm.icu.util.ULocale) -> a
    386:386:void <init>(byte) -> <init>
com.ibm.icu.util.UResourceBundleIterator -> com.ibm.icu.util.UResourceBundleIterator:
    com.ibm.icu.util.UResourceBundle bundle -> a
    int index -> b
    int size -> c
    38:50:void <init>(com.ibm.icu.util.UResourceBundle) -> <init>
    59:62:com.ibm.icu.util.UResourceBundle next() -> next
    72:75:java.lang.String nextString() -> nextString
    84:85:void reset() -> reset
    93:93:boolean hasNext() -> hasNext
com.ibm.icu.util.UResourceTypeMismatchException -> com.ibm.icu.util.UResourceTypeMismatchException:
    long serialVersionUID -> serialVersionUID
    26:27:void <init>(java.lang.String) -> <init>
com.ibm.icu.util.UniversalTimeScale -> com.ibm.icu.util.UniversalTimeScale:
    int JAVA_TIME -> JAVA_TIME
    int UNIX_TIME -> UNIX_TIME
    int ICU4C_TIME -> ICU4C_TIME
    int WINDOWS_FILE_TIME -> WINDOWS_FILE_TIME
    int DOTNET_DATE_TIME -> DOTNET_DATE_TIME
    int MAC_OLD_TIME -> MAC_OLD_TIME
    int MAC_TIME -> MAC_TIME
    int EXCEL_TIME -> EXCEL_TIME
    int DB2_TIME -> DB2_TIME
    int UNIX_MICROSECONDS_TIME -> UNIX_MICROSECONDS_TIME
    int MAX_SCALE -> MAX_SCALE
    int UNITS_VALUE -> UNITS_VALUE
    int EPOCH_OFFSET_VALUE -> EPOCH_OFFSET_VALUE
    int FROM_MIN_VALUE -> FROM_MIN_VALUE
    int FROM_MAX_VALUE -> FROM_MAX_VALUE
    int TO_MIN_VALUE -> TO_MIN_VALUE
    int TO_MAX_VALUE -> TO_MAX_VALUE
    int EPOCH_OFFSET_PLUS_1_VALUE -> EPOCH_OFFSET_PLUS_1_VALUE
    int EPOCH_OFFSET_MINUS_1_VALUE -> EPOCH_OFFSET_MINUS_1_VALUE
    int UNITS_ROUND_VALUE -> UNITS_ROUND_VALUE
    int MIN_ROUND_VALUE -> MIN_ROUND_VALUE
    int MAX_ROUND_VALUE -> MAX_ROUND_VALUE
    int MAX_SCALE_VALUE -> MAX_SCALE_VALUE
    com.ibm.icu.util.UniversalTimeScale$TimeScaleData[] timeScaleTable -> a
    358:360:void <init>() -> <init>
    375:377:long from(long,int) -> from
    394:399:com.ibm.icu.math.BigDecimal bigDecimalFrom(double,int) -> bigDecimalFrom
    416:421:com.ibm.icu.math.BigDecimal bigDecimalFrom(long,int) -> bigDecimalFrom
    438:443:com.ibm.icu.math.BigDecimal bigDecimalFrom(com.ibm.icu.math.BigDecimal,int) -> bigDecimalFrom
    488:502:long toLong(long,int) -> toLong
    517:522:com.ibm.icu.math.BigDecimal toBigDecimal(long,int) -> toBigDecimal
    537:541:com.ibm.icu.math.BigDecimal toBigDecimal(com.ibm.icu.math.BigDecimal,int) -> toBigDecimal
    553:557:com.ibm.icu.util.UniversalTimeScale$TimeScaleData getTimeScaleData(int) -> a
    572:610:long getTimeScaleValue(int,int) -> getTimeScaleValue
    616:622:com.ibm.icu.util.UniversalTimeScale$TimeScaleData toRangeCheck(long,int) -> a
    627:633:com.ibm.icu.util.UniversalTimeScale$TimeScaleData fromRangeCheck(long,int) -> b
    653:657:com.ibm.icu.math.BigDecimal toBigDecimalTrunc(com.ibm.icu.math.BigDecimal,int) -> toBigDecimalTrunc
    339:339:void <clinit>() -> <clinit>
com.ibm.icu.util.UniversalTimeScale$TimeScaleData -> com.ibm.icu.util.T:
    long units -> a
    long epochOffset -> b
    long fromMin -> c
    long fromMax -> d
    long toMin -> e
    long toMax -> f
    long epochOffsetP1 -> g
    long epochOffsetM1 -> h
    long unitsRound -> i
    long minRound -> j
    long maxRound -> k
    302:323:void <init>(long,long,long,long,long,long) -> <init>
com.ibm.icu.util.VTimeZone -> com.ibm.icu.util.VTimeZone:
    long serialVersionUID -> serialVersionUID
    com.ibm.icu.util.BasicTimeZone tz -> a
    java.util.List vtzlines -> b
    java.lang.String olsonzid -> c
    java.lang.String tzurl -> d
    java.util.Date lastmod -> e
    java.lang.String ICU_TZVERSION -> f
    java.lang.String[] ICAL_DOW_NAMES -> g
    int[] MONTHLENGTH -> h
    boolean isFrozen -> i
    boolean $assertionsDisabled -> j
    50:54:com.ibm.icu.util.VTimeZone create(java.lang.String) -> create
    67:71:com.ibm.icu.util.VTimeZone create(java.io.Reader) -> create
    81:81:int getOffset(int,int,int,int,int,int) -> getOffset
    90:91:void getOffset(long,boolean,int[]) -> getOffset
    102:103:void getOffsetFromLocal(long,int,int,int[]) -> getOffsetFromLocal
    111:111:int getRawOffset() -> getRawOffset
    120:120:boolean inDaylightTime(java.util.Date) -> inDaylightTime
    129:133:void setRawOffset(int) -> setRawOffset
    141:141:boolean useDaylightTime() -> useDaylightTime
    150:150:boolean observesDaylightTime() -> observesDaylightTime
    159:165:boolean hasSameRules(com.ibm.icu.util.TimeZone) -> hasSameRules
    178:178:java.lang.String getTZURL() -> getTZURL
    189:193:void setTZURL(java.lang.String) -> setTZURL
    205:205:java.util.Date getLastModified() -> getLastModified
    216:220:void setLastModified(java.util.Date) -> setLastModified
    231:262:void write(java.io.Writer) -> write
    277:291:void write(java.io.Writer,long) -> write
    311:325:void writeSimple(java.io.Writer,long) -> writeSimple
    335:335:com.ibm.icu.util.TimeZoneTransition getNextTransition(long,boolean) -> getNextTransition
    344:344:com.ibm.icu.util.TimeZoneTransition getPreviousTransition(long,boolean) -> getPreviousTransition
    353:356:boolean hasEquivalentTransitions(com.ibm.icu.util.TimeZone,long,long) -> hasEquivalentTransitions
    365:365:com.ibm.icu.util.TimeZoneRule[] getTimeZoneRules() -> getTimeZoneRules
    374:374:com.ibm.icu.util.TimeZoneRule[] getTimeZoneRules(long) -> getTimeZoneRules
    383:386:java.lang.Object clone() -> clone
    393:2098:void <init>() -> <init>
    393:2098:void <init>(java.lang.String) -> <init>
    480:545:boolean load(java.io.Reader) -> a
    559:841:boolean parse() -> a
    848:851:java.lang.String getDefaultTZName(java.lang.String,boolean) -> a
    859:1042:com.ibm.icu.util.TimeZoneRule createRuleByRRULE(java.lang.String,int,int,long,java.util.List,int) -> a
    1063:1209:int[] parseRRULE(java.lang.String,long[]) -> a
    1219:1235:com.ibm.icu.util.TimeZoneRule createRuleByRDATE(java.lang.String,int,int,long,java.util.List,int) -> b
    1243:1479:void writeZone(java.io.Writer,com.ibm.icu.util.BasicTimeZone,java.lang.String[]) -> a
    1486:1516:boolean isEquivalentDateRule(int,int,int,com.ibm.icu.util.DateTimeRule) -> a
    1524:1532:void writeZonePropsByTime(java.io.Writer,boolean,java.lang.String,int,int,long,boolean) -> a
    1539:1552:void writeZonePropsByDOM(java.io.Writer,boolean,java.lang.String,int,int,int,int,long,long) -> a
    1559:1573:void writeZonePropsByDOW(java.io.Writer,boolean,java.lang.String,int,int,int,int,int,long,long) -> a
    1581:1624:void writeZonePropsByDOW_GEQ_DOM(java.io.Writer,boolean,java.lang.String,int,int,int,int,int,long,long) -> b
    1632:1656:void writeZonePropsByDOW_GEQ_DOM_sub(java.io.Writer,int,int,int,int,long,int) -> a
    1664:1681:void writeZonePropsByDOW_LEQ_DOM(java.io.Writer,boolean,java.lang.String,int,int,int,int,int,long,long) -> c
    1688:1720:void writeFinalRule(java.io.Writer,boolean,com.ibm.icu.util.AnnualTimeZoneRule,int,int,long) -> a
    1726:1793:com.ibm.icu.util.DateTimeRule toWallTimeRule(com.ibm.icu.util.DateTimeRule,int,int) -> a
    1800:1832:void beginZoneProps(java.io.Writer,boolean,java.lang.String,int,int,long) -> a
    1839:1847:void endZoneProps(java.io.Writer,boolean) -> a
    1853:1863:void beginRRULE(java.io.Writer,int) -> a
    1869:1875:void appendUNTIL(java.io.Writer,java.lang.String) -> a
    1881:1901:void writeHeader(java.io.Writer) -> a
    1907:1911:void writeFooter(java.io.Writer) -> b
    1917:1934:java.lang.String getDateTimeString(long) -> a
    1941:1941:java.lang.String getUTCDateTimeString(long) -> b
    1949:2005:long parseDateTimeString(java.lang.String,int) -> a
    2012:2051:int offsetStrToMillis(java.lang.String) -> a
    2058:2077:java.lang.String millisToOffset(int) -> a
    2084:2094:java.lang.String numToString(int,int) -> a
    2105:2105:boolean isFrozen() -> isFrozen
    2113:2114:com.ibm.icu.util.TimeZone freeze() -> freeze
    2122:2125:com.ibm.icu.util.TimeZone cloneAsThawed() -> cloneAsThawed
    36:36:java.lang.Object cloneAsThawed() -> cloneAsThawed
    36:36:java.lang.Object freeze() -> freeze
    36:457:void <clinit>() -> <clinit>
com.ibm.icu.util.ValueIterator -> com.ibm.icu.util.ValueIterator:
    boolean next(com.ibm.icu.util.ValueIterator$Element) -> next
    void reset() -> reset
    void setRange(int,int) -> setRange
com.ibm.icu.util.ValueIterator$Element -> com.ibm.icu.util.ValueIterator$Element:
    int integer -> integer
    java.lang.Object value -> value
    66:67:void <init>() -> <init>
com.ibm.icu.util.VersionInfo -> com.ibm.icu.util.VersionInfo:
    com.ibm.icu.util.VersionInfo UNICODE_1_0 -> UNICODE_1_0
    com.ibm.icu.util.VersionInfo UNICODE_1_0_1 -> UNICODE_1_0_1
    com.ibm.icu.util.VersionInfo UNICODE_1_1_0 -> UNICODE_1_1_0
    com.ibm.icu.util.VersionInfo UNICODE_1_1_5 -> UNICODE_1_1_5
    com.ibm.icu.util.VersionInfo UNICODE_2_0 -> UNICODE_2_0
    com.ibm.icu.util.VersionInfo UNICODE_2_1_2 -> UNICODE_2_1_2
    com.ibm.icu.util.VersionInfo UNICODE_2_1_5 -> UNICODE_2_1_5
    com.ibm.icu.util.VersionInfo UNICODE_2_1_8 -> UNICODE_2_1_8
    com.ibm.icu.util.VersionInfo UNICODE_2_1_9 -> UNICODE_2_1_9
    com.ibm.icu.util.VersionInfo UNICODE_3_0 -> UNICODE_3_0
    com.ibm.icu.util.VersionInfo UNICODE_3_0_1 -> UNICODE_3_0_1
    com.ibm.icu.util.VersionInfo UNICODE_3_1_0 -> UNICODE_3_1_0
    com.ibm.icu.util.VersionInfo UNICODE_3_1_1 -> UNICODE_3_1_1
    com.ibm.icu.util.VersionInfo UNICODE_3_2 -> UNICODE_3_2
    com.ibm.icu.util.VersionInfo UNICODE_4_0 -> UNICODE_4_0
    com.ibm.icu.util.VersionInfo UNICODE_4_0_1 -> UNICODE_4_0_1
    com.ibm.icu.util.VersionInfo UNICODE_4_1 -> UNICODE_4_1
    com.ibm.icu.util.VersionInfo UNICODE_5_0 -> UNICODE_5_0
    com.ibm.icu.util.VersionInfo UNICODE_5_1 -> UNICODE_5_1
    com.ibm.icu.util.VersionInfo UNICODE_5_2 -> UNICODE_5_2
    com.ibm.icu.util.VersionInfo UNICODE_6_0 -> UNICODE_6_0
    com.ibm.icu.util.VersionInfo UNICODE_6_1 -> UNICODE_6_1
    com.ibm.icu.util.VersionInfo UNICODE_6_2 -> UNICODE_6_2
    com.ibm.icu.util.VersionInfo UNICODE_6_3 -> UNICODE_6_3
    com.ibm.icu.util.VersionInfo UNICODE_7_0 -> UNICODE_7_0
    com.ibm.icu.util.VersionInfo UNICODE_8_0 -> UNICODE_8_0
    com.ibm.icu.util.VersionInfo ICU_VERSION -> ICU_VERSION
    java.lang.String ICU_DATA_VERSION_PATH -> ICU_DATA_VERSION_PATH
    com.ibm.icu.util.VersionInfo ICU_DATA_VERSION -> ICU_DATA_VERSION
    com.ibm.icu.util.VersionInfo UCOL_RUNTIME_VERSION -> UCOL_RUNTIME_VERSION
    com.ibm.icu.util.VersionInfo UCOL_BUILDER_VERSION -> UCOL_BUILDER_VERSION
    com.ibm.icu.util.VersionInfo UCOL_TAILORINGS_VERSION -> UCOL_TAILORINGS_VERSION
    com.ibm.icu.util.VersionInfo javaVersion -> a
    com.ibm.icu.util.VersionInfo UNICODE_VERSION -> b
    int m_version_ -> c
    java.util.concurrent.ConcurrentHashMap MAP_ -> d
    java.lang.String TZDATA_VERSION -> e
    231:261:com.ibm.icu.util.VersionInfo getInstance(java.lang.String) -> getInstance
    278:292:com.ibm.icu.util.VersionInfo getInstance(int,int,int,int) -> getInstance
    307:307:com.ibm.icu.util.VersionInfo getInstance(int,int,int) -> getInstance
    321:321:com.ibm.icu.util.VersionInfo getInstance(int,int) -> getInstance
    334:334:com.ibm.icu.util.VersionInfo getInstance(int) -> getInstance
    345:384:com.ibm.icu.util.VersionInfo javaVersion() -> javaVersion
    395:403:java.lang.String toString() -> toString
    413:413:int getMajor() -> getMajor
    423:423:int getMinor() -> getMinor
    433:433:int getMilli() -> getMilli
    443:443:int getMicro() -> getMicro
    455:455:boolean equals(java.lang.Object) -> equals
    471:471:int compareTo(com.ibm.icu.util.VersionInfo) -> compareTo
    551:553:void <init>(int) -> <init>
    564:564:int getInt(int,int,int,int) -> a
    575:605:void main(java.lang.String[]) -> main
    619:645:java.lang.String getVersionString(int,int) -> getVersionString
    654:663:java.lang.String getTZDataVersion() -> a
    17:17:int compareTo(java.lang.Object) -> compareTo
    491:651:void <clinit>() -> <clinit>
org.apache.commons.io.CopyUtils -> org.apache.commons.io.CopyUtils:
    124:124:void <init>() -> <init>
    138:139:void copy(byte[],java.io.OutputStream) -> copy
    155:157:void copy(byte[],java.io.Writer) -> copy
    175:177:void copy(byte[],java.io.Writer,java.lang.String) -> copy
    196:203:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    221:228:int copy(java.io.Reader,java.io.Writer) -> copy
    247:249:void copy(java.io.InputStream,java.io.Writer) -> copy
    266:268:void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    286:291:void copy(java.io.Reader,java.io.OutputStream) -> copy
    309:315:void copy(java.lang.String,java.io.OutputStream) -> copy
    329:330:void copy(java.lang.String,java.io.Writer) -> copy
org.apache.commons.io.DirectoryWalker -> org.apache.commons.io.DirectoryWalker:
    java.io.FileFilter filter -> a
    int depthLimit -> b
    266:267:void <init>() -> <init>
    281:284:void <init>(java.io.FileFilter,int) -> <init>
    300:311:void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,int) -> <init>
    330:340:void walk(java.io.File,java.util.Collection) -> walk
    351:376:void walk(java.io.File,int,java.util.Collection) -> a
    394:397:void checkIfCancelled(java.io.File,int,java.util.Collection) -> checkIfCancelled
    437:437:boolean handleIsCancelled(java.io.File,int,java.util.Collection) -> handleIsCancelled
    456:456:void handleCancelled(java.io.File,java.util.Collection,org.apache.commons.io.DirectoryWalker$CancelException) -> handleCancelled
    471:471:void handleStart(java.io.File,java.util.Collection) -> handleStart
    490:490:boolean handleDirectory(java.io.File,int,java.util.Collection) -> handleDirectory
    505:505:void handleDirectoryStart(java.io.File,int,java.util.Collection) -> handleDirectoryStart
    519:519:void handleFile(java.io.File,int,java.util.Collection) -> handleFile
    533:533:void handleRestricted(java.io.File,int,java.util.Collection) -> handleRestricted
    547:547:void handleDirectoryEnd(java.io.File,int,java.util.Collection) -> handleDirectoryEnd
    559:559:void handleEnd(java.util.Collection) -> handleEnd
org.apache.commons.io.DirectoryWalker$CancelException -> org.apache.commons.io.DirectoryWalker$CancelException:
    long serialVersionUID -> serialVersionUID
    java.io.File file -> a
    int depth -> b
    584:585:void <init>(java.io.File,int) -> <init>
    574:600:void <init>(java.lang.String,java.io.File,int) -> <init>
    608:608:java.io.File getFile() -> getFile
    617:617:int getDepth() -> getDepth
org.apache.commons.io.EndianUtils -> org.apache.commons.io.EndianUtils:
    46:47:void <init>() -> <init>
    57:57:short swapShort(short) -> swapShort
    67:67:int swapInteger(int) -> swapInteger
    80:80:long swapLong(long) -> swapLong
    97:97:float swapFloat(float) -> swapFloat
    106:106:double swapDouble(double) -> swapDouble
    119:121:void writeSwappedShort(byte[],int,short) -> writeSwappedShort
    131:131:short readSwappedShort(byte[],int) -> readSwappedShort
    144:144:int readSwappedUnsignedShort(byte[],int) -> readSwappedUnsignedShort
    156:160:void writeSwappedInteger(byte[],int,int) -> writeSwappedInteger
    170:170:int readSwappedInteger(byte[],int) -> readSwappedInteger
    185:191:long readSwappedUnsignedInteger(byte[],int) -> readSwappedUnsignedInteger
    202:210:void writeSwappedLong(byte[],int,long) -> writeSwappedLong
    220:230:long readSwappedLong(byte[],int) -> readSwappedLong
    241:242:void writeSwappedFloat(byte[],int,float) -> writeSwappedFloat
    252:252:float readSwappedFloat(byte[],int) -> readSwappedFloat
    263:264:void writeSwappedDouble(byte[],int,double) -> writeSwappedDouble
    274:274:double readSwappedDouble(byte[],int) -> readSwappedDouble
    287:289:void writeSwappedShort(java.io.OutputStream,short) -> writeSwappedShort
    301:301:short readSwappedShort(java.io.InputStream) -> readSwappedShort
    315:318:int readSwappedUnsignedShort(java.io.InputStream) -> readSwappedUnsignedShort
    332:336:void writeSwappedInteger(java.io.OutputStream,int) -> writeSwappedInteger
    348:353:int readSwappedInteger(java.io.InputStream) -> readSwappedInteger
    369:380:long readSwappedUnsignedInteger(java.io.InputStream) -> readSwappedUnsignedInteger
    393:401:void writeSwappedLong(java.io.OutputStream,long) -> writeSwappedLong
    413:417:long readSwappedLong(java.io.InputStream) -> readSwappedLong
    430:431:void writeSwappedFloat(java.io.OutputStream,float) -> writeSwappedFloat
    443:443:float readSwappedFloat(java.io.InputStream) -> readSwappedFloat
    456:457:void writeSwappedDouble(java.io.OutputStream,double) -> writeSwappedDouble
    469:469:double readSwappedDouble(java.io.InputStream) -> readSwappedDouble
    481:487:int read(java.io.InputStream) -> a
org.apache.commons.io.FileCleaner -> org.apache.commons.io.FileCleaner:
    org.apache.commons.io.FileCleaningTracker theInstance -> a
    39:39:void <init>() -> <init>
    56:57:void track(java.io.File,java.lang.Object) -> track
    70:71:void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> track
    83:84:void track(java.lang.String,java.lang.Object) -> track
    97:98:void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> track
    108:108:int getTrackCount() -> getTrackCount
    133:134:void exitWhenFinished() -> exitWhenFinished
    143:143:org.apache.commons.io.FileCleaningTracker getInstance() -> getInstance
    43:43:void <clinit>() -> <clinit>
org.apache.commons.io.FileCleaningTracker -> org.apache.commons.io.FileCleaningTracker:
    java.lang.ref.ReferenceQueue q -> a
    java.util.Collection trackers -> b
    boolean exitWhenFinished -> c
    java.lang.Thread reaper -> d
    43:222:void <init>() -> <init>
    72:73:void track(java.io.File,java.lang.Object) -> track
    86:90:void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> track
    102:103:void track(java.lang.String,java.lang.Object) -> track
    116:120:void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> track
    131:139:void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy) -> a
    149:149:int getTrackCount() -> getTrackCount
    175:181:void exitWhenFinished() -> exitWhenFinished
org.apache.commons.io.FileCleaningTracker$Reaper -> org.apache.commons.io.a:
    org.apache.commons.io.FileCleaningTracker this$0 -> a
    189:193:void <init>(org.apache.commons.io.FileCleaningTracker) -> <init>
    201:215:void run() -> run
org.apache.commons.io.FileCleaningTracker$Tracker -> org.apache.commons.io.b:
    java.lang.String path -> a
    org.apache.commons.io.FileDeleteStrategy deleteStrategy -> b
    242:245:void <init>(java.lang.String,org.apache.commons.io.FileDeleteStrategy,java.lang.Object,java.lang.ref.ReferenceQueue) -> <init>
    254:254:boolean delete() -> a
org.apache.commons.io.FileDeleteStrategy -> org.apache.commons.io.FileDeleteStrategy:
    org.apache.commons.io.FileDeleteStrategy NORMAL -> NORMAL
    org.apache.commons.io.FileDeleteStrategy FORCE -> FORCE
    java.lang.String name -> a
    57:59:void <init>(java.lang.String) -> <init>
    73:79:boolean deleteQuietly(java.io.File) -> deleteQuietly
    94:97:void delete(java.io.File) -> delete
    116:116:boolean doDelete(java.io.File) -> doDelete
    126:126:java.lang.String toString() -> toString
    41:46:void <clinit>() -> <clinit>
org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy -> org.apache.commons.io.c:
    136:137:void <init>() -> <init>
    151:152:boolean doDelete(java.io.File) -> doDelete
org.apache.commons.io.FileSystemUtils -> org.apache.commons.io.FileSystemUtils:
    org.apache.commons.io.FileSystemUtils INSTANCE -> a
    int OS -> b
    106:107:void <init>() -> <init>
    137:137:long freeSpace(java.lang.String) -> freeSpace
    166:166:long freeSpaceKb(java.lang.String) -> freeSpaceKb
    189:202:long freeSpaceOS(java.lang.String,int,boolean) -> a
    216:238:long freeSpaceWindows(java.lang.String) -> a
    256:292:long parseDir(java.lang.String,java.lang.String) -> a
    306:350:long freeSpaceUnix(java.lang.String,boolean,boolean) -> a
    364:373:long parseBytes(java.lang.String,java.lang.String) -> b
    397:441:java.util.List performCommand(java.lang.String[],int) -> a
    454:454:java.lang.Process openProcess(java.lang.String[]) -> a
    52:100:void <clinit>() -> <clinit>
org.apache.commons.io.FileUtils -> org.apache.commons.io.FileUtils:
    long ONE_KB -> ONE_KB
    long ONE_MB -> ONE_MB
    long ONE_GB -> ONE_GB
    java.io.File[] EMPTY_FILE_ARRAY -> EMPTY_FILE_ARRAY
    85:86:void <init>() -> <init>
    128:138:java.io.FileInputStream openInputStream(java.io.File) -> openInputStream
    163:178:java.io.FileOutputStream openOutputStream(java.io.File) -> openOutputStream
    192:201:java.lang.String byteCountToDisplaySize(long) -> byteCountToDisplaySize
    218:226:void touch(java.io.File) -> touch
    238:238:java.io.File[] convertFileCollectionToFileArray(java.util.Collection) -> convertFileCollectionToFileArray
    252:262:void innerListFiles(java.util.Collection,java.io.File,org.apache.commons.io.filefilter.IOFileFilter) -> a
    291:316:java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> listFiles
    338:338:java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> iterateFiles
    350:354:java.lang.String[] toSuffixes(java.lang.String[]) -> a
    371:377:java.util.Collection listFiles(java.io.File,java.lang.String[],boolean) -> listFiles
    395:395:java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean) -> iterateFiles
    415:449:boolean contentEquals(java.io.File,java.io.File) -> contentEquals
    467:479:java.io.File toFile(java.net.URL) -> toFile
    503:517:java.io.File[] toFiles(java.net.URL[]) -> toFiles
    530:536:java.net.URL[] toURLs(java.io.File[]) -> toURLs
    557:558:void copyFileToDirectory(java.io.File,java.io.File) -> copyFileToDirectory
    580:587:void copyFileToDirectory(java.io.File,java.io.File,boolean) -> copyFileToDirectory
    606:607:void copyFile(java.io.File,java.io.File) -> copyFile
    629:653:void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    664:687:void doCopyFile(java.io.File,java.io.File,boolean) -> a
    709:722:void copyDirectoryToDirectory(java.io.File,java.io.File) -> copyDirectoryToDirectory
    744:745:void copyDirectory(java.io.File,java.io.File) -> copyDirectory
    769:785:void copyDirectory(java.io.File,java.io.File,boolean) -> copyDirectory
    797:825:void doCopyDirectory(java.io.File,java.io.File,boolean) -> b
    844:855:void copyURLToFile(java.net.URL,java.io.File) -> copyURLToFile
    865:875:void deleteDirectory(java.io.File) -> deleteDirectory
    884:912:void cleanDirectory(java.io.File) -> cleanDirectory
    927:944:boolean waitFor(java.io.File,int) -> waitFor
    959:964:java.lang.String readFileToString(java.io.File,java.lang.String) -> readFileToString
    979:979:java.lang.String readFileToString(java.io.File) -> readFileToString
    992:997:byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    1013:1018:java.util.List readLines(java.io.File,java.lang.String) -> readLines
    1032:1032:java.util.List readLines(java.io.File) -> readLines
    1067:1076:org.apache.commons.io.LineIterator lineIterator(java.io.File,java.lang.String) -> lineIterator
    1090:1090:org.apache.commons.io.LineIterator lineIterator(java.io.File) -> lineIterator
    1107:1114:void writeStringToFile(java.io.File,java.lang.String,java.lang.String) -> writeStringToFile
    1124:1125:void writeStringToFile(java.io.File,java.lang.String) -> writeStringToFile
    1139:1146:void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    1164:1165:void writeLines(java.io.File,java.lang.String,java.util.Collection) -> writeLines
    1178:1179:void writeLines(java.io.File,java.util.Collection) -> writeLines
    1198:1205:void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String) -> writeLines
    1219:1220:void writeLines(java.io.File,java.util.Collection,java.lang.String) -> writeLines
    1238:1250:void forceDelete(java.io.File) -> forceDelete
    1261:1266:void forceDeleteOnExit(java.io.File) -> forceDeleteOnExit
    1276:1282:void deleteDirectoryOnExit(java.io.File) -> a
    1292:1320:void cleanDirectoryOnExit(java.io.File) -> b
    1332:1348:void forceMkdir(java.io.File) -> forceMkdir
    1359:1385:long sizeOfDirectory(java.io.File) -> sizeOfDirectory
    1403:1410:boolean isFileNewer(java.io.File,java.io.File) -> isFileNewer
    1426:1429:boolean isFileNewer(java.io.File,java.util.Date) -> isFileNewer
    1445:1451:boolean isFileNewer(java.io.File,long) -> isFileNewer
    1470:1477:boolean isFileOlder(java.io.File,java.io.File) -> isFileOlder
    1493:1496:boolean isFileOlder(java.io.File,java.util.Date) -> isFileOlder
    1512:1518:boolean isFileOlder(java.io.File,long) -> isFileOlder
    1534:1536:long checksumCRC32(java.io.File) -> checksumCRC32
    1557:1567:java.util.zip.Checksum checksum(java.io.File,java.util.zip.Checksum) -> checksum
    106:106:void <clinit>() -> <clinit>
org.apache.commons.io.FilenameUtils -> org.apache.commons.io.FilenameUtils:
    char SYSTEM_SEPARATOR -> a
    char OTHER_SEPARATOR -> b
    131:132:void <init>() -> <init>
    141:141:boolean isSystemWindows() -> a
    152:152:boolean isSeparator(char) -> a
    197:197:java.lang.String normalize(java.lang.String) -> normalize
    243:243:java.lang.String normalizeNoEndSeparator(java.lang.String) -> normalizeNoEndSeparator
    254:342:java.lang.String doNormalize(java.lang.String,boolean) -> a
    387:405:java.lang.String concat(java.lang.String,java.lang.String) -> concat
    417:420:java.lang.String separatorsToUnix(java.lang.String) -> separatorsToUnix
    430:433:java.lang.String separatorsToWindows(java.lang.String) -> separatorsToWindows
    443:449:java.lang.String separatorsToSystem(java.lang.String) -> separatorsToSystem
    486:534:int getPrefixLength(java.lang.String) -> getPrefixLength
    552:557:int indexOfLastSeparator(java.lang.String) -> indexOfLastSeparator
    574:579:int indexOfExtension(java.lang.String) -> indexOfExtension
    613:623:java.lang.String getPrefix(java.lang.String) -> getPrefix
    649:649:java.lang.String getPath(java.lang.String) -> getPath
    676:676:java.lang.String getPathNoEndSeparator(java.lang.String) -> getPathNoEndSeparator
    687:698:java.lang.String doGetPath(java.lang.String,int) -> a
    727:727:java.lang.String getFullPath(java.lang.String) -> getFullPath
    757:757:java.lang.String getFullPathNoEndSeparator(java.lang.String) -> getFullPathNoEndSeparator
    768:787:java.lang.String doGetFullPath(java.lang.String,boolean) -> b
    808:812:java.lang.String getName(java.lang.String) -> getName
    833:833:java.lang.String getBaseName(java.lang.String) -> getBaseName
    854:861:java.lang.String getExtension(java.lang.String) -> getExtension
    884:891:java.lang.String removeExtension(java.lang.String) -> removeExtension
    908:908:boolean equals(java.lang.String,java.lang.String) -> equals
    923:923:boolean equalsOnSystem(java.lang.String,java.lang.String) -> equalsOnSystem
    939:939:boolean equalsNormalized(java.lang.String,java.lang.String) -> equalsNormalized
    956:956:boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String) -> equalsNormalizedOnSystem
    974:984:boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase) -> equals
    1000:1007:boolean isExtension(java.lang.String,java.lang.String) -> isExtension
    1022:1034:boolean isExtension(java.lang.String,java.lang.String[]) -> isExtension
    1049:1061:boolean isExtension(java.lang.String,java.util.Collection) -> isExtension
    1087:1087:boolean wildcardMatch(java.lang.String,java.lang.String) -> wildcardMatch
    1112:1112:boolean wildcardMatchOnSystem(java.lang.String,java.lang.String) -> wildcardMatchOnSystem
    1129:1206:boolean wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase) -> wildcardMatch
    1219:1246:java.lang.String[] splitOnTokens(java.lang.String) -> a
    113:125:void <clinit>() -> <clinit>
org.apache.commons.io.HexDump -> org.apache.commons.io.HexDump:
    java.lang.String EOL -> EOL
    java.lang.StringBuffer _lbuffer -> a
    java.lang.StringBuffer _cbuffer -> b
    char[] _hexcodes -> c
    int[] _shifts -> d
    40:41:void <init>() -> <init>
    64:103:void dump(byte[],long,java.io.OutputStream,int) -> dump
    129:134:java.lang.StringBuffer dump(long) -> a
    144:148:java.lang.StringBuffer dump(byte) -> a
    108:117:void <clinit>() -> <clinit>
org.apache.commons.io.IOCase -> org.apache.commons.io.IOCase:
    org.apache.commons.io.IOCase SENSITIVE -> SENSITIVE
    org.apache.commons.io.IOCase INSENSITIVE -> INSENSITIVE
    org.apache.commons.io.IOCase SYSTEM -> SYSTEM
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> a
    boolean sensitive -> b
    74:83:org.apache.commons.io.IOCase forName(java.lang.String) -> forName
    93:96:void <init>(java.lang.String,boolean) -> <init>
    105:105:java.lang.Object readResolve() -> readResolve
    115:115:java.lang.String getName() -> getName
    124:124:boolean isCaseSensitive() -> isCaseSensitive
    140:143:boolean checkEquals(java.lang.String,java.lang.String) -> checkEquals
    158:158:boolean checkStartsWith(java.lang.String,java.lang.String) -> checkStartsWith
    173:174:boolean checkEndsWith(java.lang.String,java.lang.String) -> checkEndsWith
    190:190:boolean checkRegionMatches(java.lang.String,int,java.lang.String) -> checkRegionMatches
    201:204:java.lang.String convertCase(java.lang.String) -> a
    214:214:java.lang.String toString() -> toString
    43:55:void <clinit>() -> <clinit>
org.apache.commons.io.IOUtils -> org.apache.commons.io.IOUtils:
    char DIR_SEPARATOR_UNIX -> DIR_SEPARATOR_UNIX
    char DIR_SEPARATOR_WINDOWS -> DIR_SEPARATOR_WINDOWS
    char DIR_SEPARATOR -> DIR_SEPARATOR
    java.lang.String LINE_SEPARATOR_UNIX -> LINE_SEPARATOR_UNIX
    java.lang.String LINE_SEPARATOR_WINDOWS -> LINE_SEPARATOR_WINDOWS
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    127:128:void <init>() -> <init>
    141:147:void closeQuietly(java.io.Reader) -> closeQuietly
    159:165:void closeQuietly(java.io.Writer) -> closeQuietly
    177:183:void closeQuietly(java.io.InputStream) -> closeQuietly
    195:201:void closeQuietly(java.io.OutputStream) -> closeQuietly
    217:219:byte[] toByteArray(java.io.InputStream) -> toByteArray
    235:237:byte[] toByteArray(java.io.Reader) -> toByteArray
    259:261:byte[] toByteArray(java.io.Reader,java.lang.String) -> toByteArray
    277:277:byte[] toByteArray(java.lang.String) -> toByteArray
    296:298:char[] toCharArray(java.io.InputStream) -> toCharArray
    320:322:char[] toCharArray(java.io.InputStream,java.lang.String) -> toCharArray
    338:340:char[] toCharArray(java.io.Reader) -> toCharArray
    358:360:java.lang.String toString(java.io.InputStream) -> toString
    381:383:java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    398:400:java.lang.String toString(java.io.Reader) -> toString
    414:414:java.lang.String toString(byte[]) -> toString
    433:436:java.lang.String toString(byte[],java.lang.String) -> toString
    456:457:java.util.List readLines(java.io.InputStream) -> readLines
    478:482:java.util.List readLines(java.io.InputStream,java.lang.String) -> readLines
    500:507:java.util.List readLines(java.io.Reader) -> readLines
    540:540:org.apache.commons.io.LineIterator lineIterator(java.io.Reader) -> lineIterator
    575:581:org.apache.commons.io.LineIterator lineIterator(java.io.InputStream,java.lang.String) -> lineIterator
    594:595:java.io.InputStream toInputStream(java.lang.String) -> toInputStream
    612:613:java.io.InputStream toInputStream(java.lang.String,java.lang.String) -> toInputStream
    630:633:void write(byte[],java.io.OutputStream) -> write
    649:652:void write(byte[],java.io.Writer) -> write
    673:680:void write(byte[],java.io.Writer,java.lang.String) -> write
    696:699:void write(char[],java.io.Writer) -> write
    717:720:void write(char[],java.io.OutputStream) -> write
    742:749:void write(char[],java.io.OutputStream,java.lang.String) -> write
    763:766:void write(java.lang.String,java.io.Writer) -> write
    783:786:void write(java.lang.String,java.io.OutputStream) -> write
    806:813:void write(java.lang.String,java.io.OutputStream,java.lang.String) -> write
    828:831:void write(java.lang.StringBuffer,java.io.Writer) -> write
    848:851:void write(java.lang.StringBuffer,java.io.OutputStream) -> write
    871:878:void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String) -> write
    896:909:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream) -> writeLines
    929:946:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String) -> writeLines
    961:974:void writeLines(java.util.Collection,java.lang.String,java.io.Writer) -> writeLines
    999:1003:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    1022:1029:long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    1049:1051:void copy(java.io.InputStream,java.io.Writer) -> copy
    1074:1080:void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    1104:1108:int copy(java.io.Reader,java.io.Writer) -> copy
    1125:1132:long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    1156:1161:void copy(java.io.Reader,java.io.OutputStream) -> copy
    1188:1197:void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    1217:1234:boolean contentEquals(java.io.InputStream,java.io.InputStream) -> contentEquals
    1254:1271:boolean contentEquals(java.io.Reader,java.io.Reader) -> contentEquals
    97:116:void <clinit>() -> <clinit>
org.apache.commons.io.LineIterator -> org.apache.commons.io.LineIterator:
    java.io.BufferedReader bufferedReader -> a
    java.lang.String cachedLine -> b
    boolean finished -> c
    60:77:void <init>(java.io.Reader) -> <init>
    89:107:boolean hasNext() -> hasNext
    119:119:boolean isValidLine(java.lang.String) -> isValidLine
    129:129:java.lang.Object next() -> next
    139:144:java.lang.String nextLine() -> nextLine
    155:158:void close() -> close
    166:166:void remove() -> remove
    176:179:void closeQuietly(org.apache.commons.io.LineIterator) -> closeQuietly
org.apache.commons.io.filefilter.AbstractFileFilter -> org.apache.commons.io.filefilter.AbstractFileFilter:
    33:33:void <init>() -> <init>
    42:42:boolean accept(java.io.File) -> accept
    53:53:boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.AgeFileFilter -> org.apache.commons.io.filefilter.AgeFileFilter:
    long cutoff -> a
    boolean acceptOlder -> b
    59:60:void <init>(long) -> <init>
    70:73:void <init>(long,boolean) -> <init>
    82:83:void <init>(java.util.Date) -> <init>
    94:95:void <init>(java.util.Date,boolean) -> <init>
    105:106:void <init>(java.io.File) -> <init>
    119:120:void <init>(java.io.File,boolean) -> <init>
    136:137:boolean accept(java.io.File) -> accept
org.apache.commons.io.filefilter.AndFileFilter -> org.apache.commons.io.filefilter.AndFileFilter:
    java.util.List fileFilters -> a
    49:51:void <init>() -> <init>
    60:66:void <init>(java.util.List) -> <init>
    75:82:void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> <init>
    88:89:void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> addFileFilter
    95:95:java.util.List getFileFilters() -> getFileFilters
    102:102:boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> removeFileFilter
    109:110:void setFileFilters(java.util.List) -> setFileFilters
    116:125:boolean accept(java.io.File) -> accept
    132:141:boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.CanReadFileFilter -> org.apache.commons.io.filefilter.CanReadFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter CAN_READ -> CAN_READ
    org.apache.commons.io.filefilter.IOFileFilter CANNOT_READ -> CANNOT_READ
    org.apache.commons.io.filefilter.IOFileFilter READ_ONLY -> READ_ONLY
    77:78:void <init>() -> <init>
    88:88:boolean accept(java.io.File) -> accept
    65:71:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.CanWriteFileFilter -> org.apache.commons.io.filefilter.CanWriteFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter CAN_WRITE -> CAN_WRITE
    org.apache.commons.io.filefilter.IOFileFilter CANNOT_WRITE -> CANNOT_WRITE
    65:66:void <init>() -> <init>
    76:76:boolean accept(java.io.File) -> accept
    57:60:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.ConditionalFileFilter -> org.apache.commons.io.filefilter.ConditionalFileFilter:
    void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> addFileFilter
    java.util.List getFileFilters() -> getFileFilters
    boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> removeFileFilter
    void setFileFilters(java.util.List) -> setFileFilters
org.apache.commons.io.filefilter.DelegateFileFilter -> org.apache.commons.io.filefilter.DelegateFileFilter:
    java.io.FilenameFilter filenameFilter -> a
    java.io.FileFilter fileFilter -> b
    43:48:void <init>(java.io.FilenameFilter) -> <init>
    55:60:void <init>(java.io.FileFilter) -> <init>
    69:72:boolean accept(java.io.File) -> accept
    84:87:boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.DirectoryFileFilter -> org.apache.commons.io.filefilter.DirectoryFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter DIRECTORY -> DIRECTORY
    org.apache.commons.io.filefilter.IOFileFilter INSTANCE -> INSTANCE
    59:60:void <init>() -> <init>
    69:69:boolean accept(java.io.File) -> accept
    47:54:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.EmptyFileFilter -> org.apache.commons.io.filefilter.EmptyFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter EMPTY -> EMPTY
    org.apache.commons.io.filefilter.IOFileFilter NOT_EMPTY -> NOT_EMPTY
    64:65:void <init>() -> <init>
    75:79:boolean accept(java.io.File) -> accept
    56:59:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.FalseFileFilter -> org.apache.commons.io.filefilter.FalseFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter FALSE -> FALSE
    org.apache.commons.io.filefilter.IOFileFilter INSTANCE -> INSTANCE
    47:48:void <init>() -> <init>
    57:57:boolean accept(java.io.File) -> accept
    68:68:boolean accept(java.io.File,java.lang.String) -> accept
    35:42:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.FileFileFilter -> org.apache.commons.io.filefilter.FileFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter FILE -> FILE
    46:47:void <init>() -> <init>
    56:56:boolean accept(java.io.File) -> accept
    41:41:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.FileFilterUtils -> org.apache.commons.io.filefilter.FileFilterUtils:
    org.apache.commons.io.filefilter.IOFileFilter cvsFilter -> a
    org.apache.commons.io.filefilter.IOFileFilter svnFilter -> b
    42:43:void <init>() -> <init>
    53:53:org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String) -> prefixFileFilter
    63:63:org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String) -> suffixFileFilter
    73:73:org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String) -> nameFileFilter
    82:82:org.apache.commons.io.filefilter.IOFileFilter directoryFileFilter() -> directoryFileFilter
    91:91:org.apache.commons.io.filefilter.IOFileFilter fileFileFilter() -> fileFileFilter
    103:103:org.apache.commons.io.filefilter.IOFileFilter andFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> andFileFilter
    114:114:org.apache.commons.io.filefilter.IOFileFilter orFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> orFileFilter
    124:124:org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> notFileFilter
    134:134:org.apache.commons.io.filefilter.IOFileFilter trueFileFilter() -> trueFileFilter
    143:143:org.apache.commons.io.filefilter.IOFileFilter falseFileFilter() -> falseFileFilter
    155:155:org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FileFilter) -> asFileFilter
    166:166:org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FilenameFilter) -> asFileFilter
    179:179:org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(long) -> ageFileFilter
    191:191:org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(long,boolean) -> ageFileFilter
    203:203:org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.util.Date) -> ageFileFilter
    215:215:org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.util.Date,boolean) -> ageFileFilter
    228:228:org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.io.File) -> ageFileFilter
    241:241:org.apache.commons.io.filefilter.IOFileFilter ageFileFilter(java.io.File,boolean) -> ageFileFilter
    253:253:org.apache.commons.io.filefilter.IOFileFilter sizeFileFilter(long) -> sizeFileFilter
    265:265:org.apache.commons.io.filefilter.IOFileFilter sizeFileFilter(long,boolean) -> sizeFileFilter
    278:280:org.apache.commons.io.filefilter.IOFileFilter sizeRangeFileFilter(long,long) -> sizeRangeFileFilter
    300:307:org.apache.commons.io.filefilter.IOFileFilter makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter) -> makeCVSAware
    321:328:org.apache.commons.io.filefilter.IOFileFilter makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter) -> makeSVNAware
    341:344:org.apache.commons.io.filefilter.IOFileFilter makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter) -> makeDirectoryOnly
    355:358:org.apache.commons.io.filefilter.IOFileFilter makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter) -> makeFileOnly
org.apache.commons.io.filefilter.HiddenFileFilter -> org.apache.commons.io.filefilter.HiddenFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter HIDDEN -> HIDDEN
    org.apache.commons.io.filefilter.IOFileFilter VISIBLE -> VISIBLE
    61:62:void <init>() -> <init>
    72:72:boolean accept(java.io.File) -> accept
    53:56:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.IOFileFilter -> org.apache.commons.io.filefilter.IOFileFilter:
    boolean accept(java.io.File) -> accept
    boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.NameFileFilter -> org.apache.commons.io.filefilter.NameFileFilter:
    java.lang.String[] names -> a
    org.apache.commons.io.IOCase caseSensitivity -> b
    60:61:void <init>(java.lang.String) -> <init>
    70:76:void <init>(java.lang.String,org.apache.commons.io.IOCase) -> <init>
    88:89:void <init>(java.lang.String[]) -> <init>
    101:107:void <init>(java.lang.String[],org.apache.commons.io.IOCase) -> <init>
    117:118:void <init>(java.util.List) -> <init>
    128:134:void <init>(java.util.List,org.apache.commons.io.IOCase) -> <init>
    144:150:boolean accept(java.io.File) -> accept
    161:166:boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.NotFileFilter -> org.apache.commons.io.filefilter.NotFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter filter -> a
    40:45:void <init>(org.apache.commons.io.filefilter.IOFileFilter) -> <init>
    54:54:boolean accept(java.io.File) -> accept
    65:65:boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.OrFileFilter -> org.apache.commons.io.filefilter.OrFileFilter:
    java.util.List fileFilters -> a
    49:51:void <init>() -> <init>
    60:66:void <init>(java.util.List) -> <init>
    75:82:void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter) -> <init>
    88:89:void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> addFileFilter
    95:95:java.util.List getFileFilters() -> getFileFilters
    102:102:boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter) -> removeFileFilter
    109:110:void setFileFilters(java.util.List) -> setFileFilters
    116:122:boolean accept(java.io.File) -> accept
    129:135:boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.PrefixFileFilter -> org.apache.commons.io.filefilter.PrefixFileFilter:
    java.lang.String[] prefixes -> a
    55:60:void <init>(java.lang.String) -> <init>
    71:76:void <init>(java.lang.String[]) -> <init>
    85:90:void <init>(java.util.List) -> <init>
    99:105:boolean accept(java.io.File) -> accept
    116:121:boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.SizeFileFilter -> org.apache.commons.io.filefilter.SizeFileFilter:
    long size -> a
    boolean acceptLarger -> b
    55:56:void <init>(long) -> <init>
    67:73:void <init>(long,boolean) -> <init>
    88:89:boolean accept(java.io.File) -> accept
org.apache.commons.io.filefilter.SuffixFileFilter -> org.apache.commons.io.filefilter.SuffixFileFilter:
    java.lang.String[] suffixes -> a
    56:61:void <init>(java.lang.String) -> <init>
    72:77:void <init>(java.lang.String[]) -> <init>
    86:91:void <init>(java.util.List) -> <init>
    100:106:boolean accept(java.io.File) -> accept
    117:122:boolean accept(java.io.File,java.lang.String) -> accept
org.apache.commons.io.filefilter.TrueFileFilter -> org.apache.commons.io.filefilter.TrueFileFilter:
    org.apache.commons.io.filefilter.IOFileFilter TRUE -> TRUE
    org.apache.commons.io.filefilter.IOFileFilter INSTANCE -> INSTANCE
    47:48:void <init>() -> <init>
    57:57:boolean accept(java.io.File) -> accept
    68:68:boolean accept(java.io.File,java.lang.String) -> accept
    35:42:void <clinit>() -> <clinit>
org.apache.commons.io.filefilter.WildcardFileFilter -> org.apache.commons.io.filefilter.WildcardFileFilter:
    java.lang.String[] wildcards -> a
    org.apache.commons.io.IOCase caseSensitivity -> b
    65:66:void <init>(java.lang.String) -> <init>
    75:81:void <init>(java.lang.String,org.apache.commons.io.IOCase) -> <init>
    93:94:void <init>(java.lang.String[]) -> <init>
    106:112:void <init>(java.lang.String[],org.apache.commons.io.IOCase) -> <init>
    122:123:void <init>(java.util.List) -> <init>
    133:139:void <init>(java.util.List,org.apache.commons.io.IOCase) -> <init>
    150:155:boolean accept(java.io.File,java.lang.String) -> accept
    165:171:boolean accept(java.io.File) -> accept
org.apache.commons.io.filefilter.WildcardFilter -> org.apache.commons.io.filefilter.WildcardFilter:
    java.lang.String[] wildcards -> a
    63:68:void <init>(java.lang.String) -> <init>
    76:81:void <init>(java.lang.String[]) -> <init>
    90:95:void <init>(java.util.List) -> <init>
    106:116:boolean accept(java.io.File,java.lang.String) -> accept
    126:136:boolean accept(java.io.File) -> accept
org.apache.commons.io.input.ClassLoaderObjectInputStream -> org.apache.commons.io.input.ClassLoaderObjectInputStream:
    java.lang.ClassLoader classLoader -> a
    51:53:void <init>(java.lang.ClassLoader,java.io.InputStream) -> <init>
    67:74:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
org.apache.commons.io.input.CountingInputStream -> org.apache.commons.io.input.CountingInputStream:
    long count -> a
    43:44:void <init>(java.io.InputStream) -> <init>
    57:59:int read(byte[]) -> read
    74:76:int read(byte[],int,int) -> read
    88:90:int read() -> read
    103:105:long skip(long) -> skip
    120:124:int getCount() -> getCount
    138:142:int resetCount() -> resetCount
    156:156:long getByteCount() -> getByteCount
    170:172:long resetByteCount() -> resetByteCount
org.apache.commons.io.input.DemuxInputStream -> org.apache.commons.io.input.DemuxInputStream:
    java.lang.InheritableThreadLocal m_streams -> a
    29:32:void <init>() -> <init>
    42:44:java.io.InputStream bindStream(java.io.InputStream) -> bindStream
    55:60:void close() -> close
    71:78:int read() -> read
    89:89:java.io.InputStream getStream() -> a
org.apache.commons.io.input.NullInputStream -> org.apache.commons.io.input.NullInputStream:
    long size -> a
    long position -> b
    long mark -> c
    long readlimit -> d
    boolean eof -> e
    boolean throwEofException -> f
    boolean markSupported -> g
    80:81:void <init>(long) -> <init>
    67:98:void <init>(long,boolean,boolean) -> <init>
    106:106:long getPosition() -> getPosition
    115:115:long getSize() -> getSize
    124:130:int available() -> available
    141:144:void close() -> close
    154:159:void mark(int) -> mark
    167:167:boolean markSupported() -> markSupported
    181:188:int read() -> read
    203:203:int read(byte[]) -> read
    220:233:int read(byte[],int,int) -> read
    245:258:void reset() -> reset
    272:284:long skip(long) -> skip
    296:296:int processByte() -> processByte
    311:311:void processBytes(byte[],int,int) -> processBytes
    322:326:int doEndOfFile() -> a
org.apache.commons.io.input.NullReader -> org.apache.commons.io.input.NullReader:
    long size -> a
    long position -> b
    long mark -> c
    long readlimit -> d
    boolean eof -> e
    boolean throwEofException -> f
    boolean markSupported -> g
    80:81:void <init>(long) -> <init>
    67:98:void <init>(long,boolean,boolean) -> <init>
    106:106:long getPosition() -> getPosition
    115:115:long getSize() -> getSize
    125:128:void close() -> close
    138:143:void mark(int) -> mark
    151:151:boolean markSupported() -> markSupported
    165:172:int read() -> read
    187:187:int read(char[]) -> read
    204:217:int read(char[],int,int) -> read
    229:242:void reset() -> reset
    256:268:long skip(long) -> skip
    280:280:int processChar() -> processChar
    295:295:void processChars(char[],int,int) -> processChars
    306:310:int doEndOfFile() -> a
org.apache.commons.io.input.ProxyInputStream -> org.apache.commons.io.input.ProxyInputStream:
    43:45:void <init>(java.io.InputStream) -> <init>
    49:49:int read() -> read
    54:54:int read(byte[]) -> read
    59:59:int read(byte[],int,int) -> read
    64:64:long skip(long) -> skip
    69:69:int available() -> available
    74:75:void close() -> close
    79:80:void mark(int) -> mark
    84:85:void reset() -> reset
    89:89:boolean markSupported() -> markSupported
org.apache.commons.io.input.ProxyReader -> org.apache.commons.io.input.ProxyReader:
    43:45:void <init>(java.io.Reader) -> <init>
    49:49:int read() -> read
    54:54:int read(char[]) -> read
    59:59:int read(char[],int,int) -> read
    64:64:long skip(long) -> skip
    69:69:boolean ready() -> ready
    74:75:void close() -> close
    79:80:void mark(int) -> mark
    84:85:void reset() -> reset
    89:89:boolean markSupported() -> markSupported
org.apache.commons.io.input.SwappedDataInputStream -> org.apache.commons.io.input.SwappedDataInputStream:
    47:48:void <init>(java.io.InputStream) -> <init>
    54:54:boolean readBoolean() -> readBoolean
    61:61:byte readByte() -> readByte
    68:68:char readChar() -> readChar
    75:75:double readDouble() -> readDouble
    82:82:float readFloat() -> readFloat
    89:90:void readFully(byte[]) -> readFully
    96:110:void readFully(byte[],int,int) -> readFully
    116:116:int readInt() -> readInt
    127:127:java.lang.String readLine() -> readLine
    135:135:long readLong() -> readLong
    142:142:short readShort() -> readShort
    149:149:int readUnsignedByte() -> readUnsignedByte
    156:156:int readUnsignedShort() -> readUnsignedShort
    167:167:java.lang.String readUTF() -> readUTF
    175:175:int skipBytes(int) -> skipBytes
org.apache.commons.io.output.ByteArrayOutputStream -> org.apache.commons.io.output.ByteArrayOutputStream:
    byte[] EMPTY_BYTE_ARRAY -> a
    java.util.List buffers -> b
    int currentBufferIndex -> c
    int filledBufferSum -> d
    byte[] currentBuffer -> e
    int count -> f
    71:72:void <init>() -> <init>
    56:87:void <init>(int) -> <init>
    97:97:byte[] getBuffer(int) -> a
    107:130:void needNewBuffer(int) -> b
    136:160:void write(byte[],int,int) -> write
    166:173:void write(int) -> write
    179:179:int size() -> size
    192:192:void close() -> close
    198:202:void reset() -> reset
    213:223:void writeTo(java.io.OutputStream) -> writeTo
    233:249:byte[] toByteArray() -> toByteArray
    258:258:java.lang.String toString() -> toString
    271:271:java.lang.String toString(java.lang.String) -> toString
    53:53:void <clinit>() -> <clinit>
org.apache.commons.io.output.CountingOutputStream -> org.apache.commons.io.output.CountingOutputStream:
    long count -> a
    42:43:void <init>(java.io.OutputStream) -> <init>
    55:57:void write(byte[]) -> write
    70:72:void write(byte[],int,int) -> write
    83:85:void write(int) -> write
    99:103:int getCount() -> getCount
    117:121:int resetCount() -> resetCount
    135:135:long getByteCount() -> getByteCount
    149:151:long resetByteCount() -> resetByteCount
org.apache.commons.io.output.DeferredFileOutputStream -> org.apache.commons.io.output.DeferredFileOutputStream:
    org.apache.commons.io.output.ByteArrayOutputStream memoryOutputStream -> a
    java.io.OutputStream currentOutputStream -> b
    java.io.File outputFile -> c
    boolean closed -> d
    74:93:void <init>(int,java.io.File) -> <init>
    109:109:java.io.OutputStream getStream() -> getStream
    123:127:void thresholdReached() -> thresholdReached
    142:142:boolean isInMemory() -> isInMemory
    156:160:byte[] getData() -> getData
    173:173:java.io.File getFile() -> getFile
    184:186:void close() -> close
    201:219:void writeTo(java.io.OutputStream) -> writeTo
org.apache.commons.io.output.DemuxOutputStream -> org.apache.commons.io.output.DemuxOutputStream:
    java.lang.InheritableThreadLocal m_streams -> a
    29:32:void <init>() -> <init>
    42:44:java.io.OutputStream bindStream(java.io.OutputStream) -> bindStream
    55:60:void close() -> close
    70:75:void flush() -> flush
    86:91:void write(int) -> write
    100:100:java.io.OutputStream getStream() -> a
org.apache.commons.io.output.LockableFileWriter -> org.apache.commons.io.output.LockableFileWriter:
    java.io.Writer out -> a
    java.io.File lockFile -> b
    java.lang.Class class$org$apache$commons$io$output$LockableFileWriter -> c
    71:72:void <init>(java.lang.String) -> <init>
    83:84:void <init>(java.lang.String,boolean) -> <init>
    96:97:void <init>(java.lang.String,boolean,java.lang.String) -> <init>
    108:109:void <init>(java.io.File) -> <init>
    120:121:void <init>(java.io.File,boolean) -> <init>
    133:134:void <init>(java.io.File,boolean,java.lang.String) -> <init>
    145:146:void <init>(java.io.File,java.lang.String) -> <init>
    160:184:void <init>(java.io.File,java.lang.String,boolean,java.lang.String) -> <init>
    195:203:void testLockDir(java.io.File) -> a
    211:218:void createLock() -> a
    231:258:java.io.Writer initWriter(java.io.File,java.lang.String,boolean) -> a
    269:273:void close() -> close
    278:279:void write(int) -> write
    283:284:void write(char[]) -> write
    288:289:void write(char[],int,int) -> write
    293:294:void write(java.lang.String) -> write
    298:299:void write(java.lang.String,int,int) -> write
    303:304:void flush() -> flush
    211:211:java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.io.output.NullOutputStream -> org.apache.commons.io.output.NullOutputStream:
    31:31:void <init>() -> <init>
    38:38:void write(byte[],int,int) -> write
    45:45:void write(int) -> write
    52:52:void write(byte[]) -> write
org.apache.commons.io.output.NullWriter -> org.apache.commons.io.output.NullWriter:
    34:35:void <init>() -> <init>
    40:40:void write(int) -> write
    45:45:void write(char[]) -> write
    50:50:void write(char[],int,int) -> write
    55:55:void write(java.lang.String) -> write
    60:60:void write(java.lang.String,int,int) -> write
    65:65:void flush() -> flush
    70:70:void close() -> close
org.apache.commons.io.output.ProxyOutputStream -> org.apache.commons.io.output.ProxyOutputStream:
    40:42:void <init>(java.io.OutputStream) -> <init>
    46:47:void write(int) -> write
    51:52:void write(byte[]) -> write
    56:57:void write(byte[],int,int) -> write
    61:62:void flush() -> flush
    66:67:void close() -> close
org.apache.commons.io.output.ProxyWriter -> org.apache.commons.io.output.ProxyWriter:
    42:44:void <init>(java.io.Writer) -> <init>
    48:49:void write(int) -> write
    53:54:void write(char[]) -> write
    58:59:void write(char[],int,int) -> write
    63:64:void write(java.lang.String) -> write
    68:69:void write(java.lang.String,int,int) -> write
    73:74:void flush() -> flush
    78:79:void close() -> close
org.apache.commons.io.output.TeeOutputStream -> org.apache.commons.io.output.TeeOutputStream:
    java.io.OutputStream branch -> branch
    40:42:void <init>(java.io.OutputStream,java.io.OutputStream) -> <init>
    46:48:void write(byte[]) -> write
    52:54:void write(byte[],int,int) -> write
    58:60:void write(int) -> write
    68:70:void flush() -> flush
    78:80:void close() -> close
org.apache.commons.io.output.ThresholdingOutputStream -> org.apache.commons.io.output.ThresholdingOutputStream:
    int threshold -> a
    long written -> b
    boolean thresholdExceeded -> c
    76:78:void <init>(int) -> <init>
    93:96:void write(int) -> write
    109:112:void write(byte[]) -> write
    127:130:void write(byte[],int,int) -> write
    141:142:void flush() -> flush
    155:162:void close() -> close
    175:175:int getThreshold() -> getThreshold
    186:186:long getByteCount() -> getByteCount
    199:199:boolean isThresholdExceeded() -> isThresholdExceeded
    218:223:void checkThreshold(int) -> checkThreshold
    java.io.OutputStream getStream() -> getStream
    void thresholdReached() -> thresholdReached
proguard.ArgumentWordReader -> proguard.ArgumentWordReader:
    java.lang.String[] arguments -> a
    int index -> b
    36:57:void <init>(java.lang.String[],java.io.File) -> <init>
    64:64:java.lang.String nextLine() -> nextLine
    72:72:java.lang.String lineLocationDescription() -> lineLocationDescription
    84:110:void main(java.lang.String[]) -> main
proguard.AssumeNoSideEffectsChecker -> proguard.AssumeNoSideEffectsChecker:
    proguard.classfile.util.WarningPrinter notePrinter -> a
    42:44:void <init>(proguard.classfile.util.WarningPrinter) -> <init>
    53:97:void checkClassSpecifications(java.util.List) -> checkClassSpecifications
proguard.ClassMemberChecker -> proguard.ClassMemberChecker:
    proguard.classfile.ClassPool programClassPool -> a
    proguard.classfile.util.WarningPrinter notePrinter -> b
    47:50:void <init>(proguard.classfile.ClassPool,proguard.classfile.util.WarningPrinter) -> <init>
    59:80:void checkClassSpecifications(java.util.List) -> checkClassSpecifications
    91:130:void checkMemberSpecifications(proguard.classfile.Clazz,java.util.List,boolean) -> a
    135:135:boolean containsWildCards(java.lang.String) -> a
    148:150:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    155:157:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
proguard.ClassPath -> proguard.ClassPath:
    java.util.List classPathEntries -> a
    31:33:void <init>() -> <init>
    41:49:boolean hasOutput() -> hasOutput
    57:58:void clear() -> clear
    62:63:void add(int,proguard.ClassPathEntry) -> add
    67:67:boolean add(proguard.ClassPathEntry) -> add
    72:72:boolean addAll(proguard.ClassPath) -> addAll
    77:77:proguard.ClassPathEntry get(int) -> get
    82:82:proguard.ClassPathEntry remove(int) -> remove
    87:87:boolean isEmpty() -> isEmpty
    92:92:int size() -> size
proguard.ClassPathEntry -> proguard.ClassPathEntry:
    java.io.File file -> a
    boolean output -> b
    java.util.List filter -> c
    java.util.List apkFilter -> d
    java.util.List jarFilter -> e
    java.util.List aarFilter -> f
    java.util.List warFilter -> g
    java.util.List earFilter -> h
    java.util.List zipFilter -> i
    java.lang.String cachedName -> j
    57:60:void <init>(java.io.File,boolean) -> <init>
    68:73:java.lang.String getName() -> getName
    84:88:java.lang.String getUncachedName() -> a
    98:98:java.io.File getFile() -> getFile
    107:109:void setFile(java.io.File) -> setFile
    117:117:boolean isOutput() -> isOutput
    126:127:void setOutput(boolean) -> setOutput
    135:135:boolean isDex() -> isDex
    144:144:boolean isApk() -> isApk
    154:154:boolean isJar() -> isJar
    163:163:boolean isAar() -> isAar
    172:172:boolean isWar() -> isWar
    181:181:boolean isEar() -> isEar
    190:190:boolean isZip() -> isZip
    199:199:boolean hasExtension(java.lang.String) -> a
    209:212:boolean endsWithIgnoreCase(java.lang.String,java.lang.String) -> a
    222:222:boolean isFiltered() -> isFiltered
    237:237:java.util.List getFilter() -> getFilter
    245:246:void setFilter(java.util.List) -> setFilter
    254:254:java.util.List getApkFilter() -> getApkFilter
    262:263:void setApkFilter(java.util.List) -> setApkFilter
    271:271:java.util.List getJarFilter() -> getJarFilter
    279:280:void setJarFilter(java.util.List) -> setJarFilter
    288:288:java.util.List getAarFilter() -> getAarFilter
    296:297:void setAarFilter(java.util.List) -> setAarFilter
    305:305:java.util.List getWarFilter() -> getWarFilter
    313:314:void setWarFilter(java.util.List) -> setWarFilter
    322:322:java.util.List getEarFilter() -> getEarFilter
    330:331:void setEarFilter(java.util.List) -> setEarFilter
    339:339:java.util.List getZipFilter() -> getZipFilter
    347:348:void setZipFilter(java.util.List) -> setZipFilter
    355:382:java.lang.String toString() -> toString
proguard.ClassSpecification -> proguard.ClassSpecification:
    java.lang.String comments -> comments
    int requiredSetAccessFlags -> requiredSetAccessFlags
    int requiredUnsetAccessFlags -> requiredUnsetAccessFlags
    java.lang.String annotationType -> annotationType
    java.lang.String className -> className
    java.lang.String extendsAnnotationType -> extendsAnnotationType
    java.lang.String extendsClassName -> extendsClassName
    java.util.List fieldSpecifications -> fieldSpecifications
    java.util.List methodSpecifications -> methodSpecifications
    53:60:void <init>() -> <init>
    68:77:void <init>(proguard.ClassSpecification) -> <init>
    115:124:void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    165:175:void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List) -> <init>
    185:191:void addField(proguard.MemberSpecification) -> addField
    201:207:void addMethod(proguard.MemberSpecification) -> addMethod
    215:222:boolean equals(java.lang.Object) -> equals
    236:236:int hashCode() -> hashCode
    252:256:java.lang.Object clone() -> clone
proguard.ClassSpecificationVisitorFactory -> proguard.ClassSpecificationVisitorFactory:
    35:35:void <init>() -> <init>
    62:83:proguard.classfile.visitor.ClassPoolVisitor createClassPoolVisitor(java.util.List,proguard.classfile.visitor.ClassVisitor,proguard.classfile.visitor.MemberVisitor,boolean,boolean,boolean) -> createClassPoolVisitor
    103:119:proguard.classfile.visitor.ClassPoolVisitor createClassPoolVisitor(java.util.List,proguard.classfile.visitor.ClassVisitor,proguard.classfile.visitor.MemberVisitor) -> createClassPoolVisitor
    140:178:proguard.classfile.visitor.ClassPoolVisitor createClassPoolVisitor(proguard.KeepClassSpecification,proguard.classfile.visitor.ClassVisitor,proguard.classfile.visitor.MemberVisitor) -> createClassPoolVisitor
    200:285:proguard.classfile.visitor.ClassPoolVisitor createClassPoolVisitor(proguard.ClassSpecification,proguard.classfile.visitor.ClassVisitor,proguard.classfile.visitor.MemberVisitor) -> createClassPoolVisitor
    307:343:proguard.classfile.visitor.ClassVisitor createCombinedClassVisitor(proguard.ClassSpecification,proguard.classfile.visitor.ClassVisitor,proguard.classfile.visitor.MemberVisitor) -> a
    358:364:proguard.classfile.visitor.ClassVisitor createClassVisitor(proguard.ClassSpecification,proguard.classfile.visitor.MemberVisitor) -> a
    379:392:void addMemberVisitors(java.util.List,boolean,proguard.classfile.visitor.MultiClassVisitor,proguard.classfile.visitor.MemberVisitor) -> a
    404:404:proguard.classfile.visitor.ClassVisitor createClassMemberTester(proguard.ClassSpecification,proguard.classfile.visitor.ClassVisitor) -> a
    422:436:proguard.classfile.visitor.ClassVisitor createClassMemberTester(java.util.List,boolean,proguard.classfile.visitor.ClassVisitor) -> a
    453:501:proguard.classfile.visitor.ClassVisitor createClassVisitor(proguard.MemberSpecification,boolean,proguard.classfile.visitor.MemberVisitor) -> a
    515:515:boolean containsWildCards(java.lang.String) -> a
proguard.Configuration -> proguard.Configuration:
    java.io.File STD_OUT -> STD_OUT
    proguard.ClassPath programJars -> programJars
    proguard.ClassPath libraryJars -> libraryJars
    boolean skipNonPublicLibraryClasses -> skipNonPublicLibraryClasses
    boolean skipNonPublicLibraryClassMembers -> skipNonPublicLibraryClassMembers
    java.util.List keepDirectories -> keepDirectories
    int targetClassVersion -> targetClassVersion
    long lastModified -> lastModified
    java.util.List keep -> keep
    java.io.File printSeeds -> printSeeds
    boolean shrink -> shrink
    java.io.File printUsage -> printUsage
    java.util.List whyAreYouKeeping -> whyAreYouKeeping
    boolean optimize -> optimize
    java.util.List optimizations -> optimizations
    int optimizationPasses -> optimizationPasses
    java.util.List assumeNoSideEffects -> assumeNoSideEffects
    boolean allowAccessModification -> allowAccessModification
    boolean mergeInterfacesAggressively -> mergeInterfacesAggressively
    boolean obfuscate -> obfuscate
    java.io.File printMapping -> printMapping
    java.io.File applyMapping -> applyMapping
    java.io.File obfuscationDictionary -> obfuscationDictionary
    java.io.File classObfuscationDictionary -> classObfuscationDictionary
    java.io.File packageObfuscationDictionary -> packageObfuscationDictionary
    boolean overloadAggressively -> overloadAggressively
    boolean useUniqueClassMemberNames -> useUniqueClassMemberNames
    boolean useMixedCaseClassNames -> useMixedCaseClassNames
    java.util.List keepPackageNames -> keepPackageNames
    java.lang.String flattenPackageHierarchy -> flattenPackageHierarchy
    java.lang.String repackageClasses -> repackageClasses
    java.util.List keepAttributes -> keepAttributes
    boolean keepParameterNames -> keepParameterNames
    java.lang.String newSourceFileAttribute -> newSourceFileAttribute
    java.util.List adaptClassStrings -> adaptClassStrings
    java.util.List adaptResourceFileNames -> adaptResourceFileNames
    java.util.List adaptResourceFileContents -> adaptResourceFileContents
    boolean preverify -> preverify
    boolean microEdition -> microEdition
    boolean verbose -> verbose
    java.util.List note -> note
    java.util.List warn -> warn
    boolean ignoreWarnings -> ignoreWarnings
    java.io.File printConfiguration -> printConfiguration
    java.io.File dump -> dump
    33:317:void <init>() -> <init>
    35:35:void <clinit>() -> <clinit>
proguard.ConfigurationChecker -> proguard.ConfigurationChecker:
    proguard.Configuration configuration -> a
    41:43:void <init>(proguard.Configuration) -> <init>
    51:164:void check() -> check
    174:223:void checkConflicts(proguard.ClassPath,proguard.ClassPath) -> a
proguard.ConfigurationConstants -> proguard.a:
    java.lang.String JAR_SEPARATOR_KEYWORD -> a
    104:104:void <clinit>() -> <clinit>
proguard.ConfigurationParser -> proguard.ConfigurationParser:
    proguard.WordReader reader -> a
    java.util.Properties properties -> b
    java.lang.String nextWord -> c
    java.lang.String lastComments -> d
    55:56:void <init>(java.lang.String[],java.util.Properties) -> <init>
    67:68:void <init>(java.lang.String[],java.io.File,java.util.Properties) -> <init>
    80:84:void <init>(java.lang.String,java.lang.String,java.io.File,java.util.Properties) -> <init>
    94:95:void <init>(java.io.File) -> <init>
    105:106:void <init>(java.io.File,java.util.Properties) -> <init>
    116:117:void <init>(java.net.URL,java.util.Properties) -> <init>
    126:131:void <init>(proguard.WordReader,java.util.Properties) -> <init>
    144:220:void parse(proguard.Configuration) -> parse
    230:234:void close() -> close
    240:247:long parseIncludeArgument(long) -> a
    254:259:void parseBaseDirectoryArgument() -> a
    267:357:proguard.ClassPath parseClassPathArgument(proguard.ClassPath,boolean) -> a
    365:375:int parseClassVersion() -> b
    385:395:int parseIntegerArgument() -> c
    405:412:java.io.File parseFile() -> d
    420:433:java.io.File parseOptionalFile() -> e
    440:452:java.lang.String parseOptionalArgument() -> f
    458:460:boolean parseNoArgument(boolean) -> a
    466:468:long parseNoArgument(long) -> b
    479:545:java.util.List parseKeepClassSpecificationArguments(java.util.List,boolean,boolean,boolean) -> a
    553:566:java.util.List parseClassSpecificationArguments(java.util.List) -> a
    580:753:proguard.ClassSpecification parseClassSpecificationArguments() -> parseClassSpecificationArguments
    762:990:void parseMemberSpecificationArguments(java.lang.String,proguard.ClassSpecification) -> a
    1025:1113:java.util.List parseCommaSeparatedList(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.util.List) -> a
    1123:1123:int unknownAccessFlag() -> g
    1132:1141:java.io.File file(java.lang.String) -> a
    1151:1179:java.lang.String replaceSystemProperties(java.lang.String) -> b
    1190:1191:void readNextWord(java.lang.String) -> c
    1203:1209:void readNextWord(java.lang.String,boolean,boolean) -> a
    1217:1218:void readNextWord() -> h
    1226:1227:void readNextWord(boolean) -> b
    1235:1235:boolean configurationEnd() -> i
    1244:1244:boolean configurationEnd(boolean) -> c
    1258:1263:void checkJavaIdentifier(java.lang.String) -> d
    1272:1296:boolean isJavaIdentifier(java.lang.String) -> e
    1308:1315:void checkFieldAccessFlags(int,int) -> a
    1326:1333:void checkMethodAccessFlags(int,int) -> b
    1343:1363:void main(java.lang.String[]) -> main
proguard.ConfigurationWriter -> proguard.ConfigurationWriter:
    java.lang.String[] KEEP_OPTIONS -> a
    java.io.PrintWriter writer -> b
    java.io.File baseDir -> c
    55:58:void <init>(java.io.File) -> <init>
    66:67:void <init>(java.io.OutputStream) -> <init>
    74:76:void <init>(java.io.PrintWriter) -> <init>
    84:85:void close() -> close
    96:168:void write(proguard.Configuration) -> write
    175:209:void writeJarOptions(java.lang.String,java.lang.String,proguard.ClassPath) -> a
    214:231:boolean writeFilter(boolean,java.util.List) -> a
    237:241:void writeOption(java.lang.String,boolean) -> a
    246:252:void writeOption(java.lang.String,int) -> a
    257:258:void writeOption(java.lang.String,java.util.List) -> a
    265:283:void writeOption(java.lang.String,java.util.List,boolean) -> a
    288:289:void writeOption(java.lang.String,java.lang.String) -> a
    296:307:void writeOption(java.lang.String,java.lang.String,boolean) -> a
    312:325:void writeOption(java.lang.String,java.io.File) -> a
    331:338:void writeOptions(java.lang.String[],java.util.List) -> a
    345:375:void writeOption(java.lang.String[],proguard.KeepClassSpecification) -> a
    381:388:void writeOptions(java.lang.String,java.util.List) -> b
    394:471:void writeOption(java.lang.String,proguard.ClassSpecification) -> a
    477:500:void writeComments(java.lang.String) -> a
    505:542:void writeFieldSpecification(java.util.List) -> a
    547:585:void writeMethodSpecification(java.util.List) -> b
    594:601:java.util.List externalClassNames(java.util.List) -> c
    611:623:java.lang.String relativeFileName(java.io.File) -> a
    632:632:java.lang.String quotedString(java.lang.String) -> b
    652:660:void main(java.lang.String[]) -> main
    38:38:void <clinit>() -> <clinit>
proguard.DataEntryReaderFactory -> proguard.DataEntryReaderFactory:
    36:36:void <init>() -> <init>
    51:120:proguard.io.DataEntryReader createDataEntryReader(java.lang.String,proguard.ClassPathEntry,proguard.io.DataEntryReader) -> createDataEntryReader
    133:152:proguard.io.DataEntryReader wrapInJarReader(proguard.io.DataEntryReader,boolean,java.util.List,java.lang.String) -> a
proguard.DataEntryWriterFactory -> proguard.DataEntryWriterFactory:
    34:34:void <init>() -> <init>
    48:57:proguard.io.DataEntryWriter createDataEntryWriter(proguard.ClassPath,int,int) -> createDataEntryWriter
    68:125:proguard.io.DataEntryWriter createClassPathEntryWriter(proguard.ClassPathEntry,proguard.io.DataEntryWriter) -> a
    141:155:proguard.io.DataEntryWriter wrapInJarWriter(proguard.io.DataEntryWriter,boolean,java.util.List,java.lang.String,boolean) -> a
proguard.DescriptorKeepChecker -> proguard.DescriptorKeepChecker:
    proguard.classfile.ClassPool programClassPool -> a
    proguard.classfile.ClassPool libraryClassPool -> b
    proguard.classfile.util.WarningPrinter notePrinter -> c
    proguard.classfile.Clazz referencingClass -> d
    proguard.classfile.Member referencingMember -> e
    boolean isField -> f
    57:61:void <init>(proguard.classfile.ClassPool,proguard.classfile.ClassPool,proguard.classfile.util.WarningPrinter) -> <init>
    71:92:void checkClassSpecifications(java.util.List) -> checkClassSpecifications
    105:105:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    110:138:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    145:164:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    167:167:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.DuplicateClassPrinter -> proguard.DuplicateClassPrinter:
    proguard.classfile.util.WarningPrinter notePrinter -> a
    42:44:void <init>(proguard.classfile.util.WarningPrinter) -> <init>
    51:54:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    59:62:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.FileWordReader -> proguard.FileWordReader:
    39:43:void <init>(java.io.File) -> <init>
    51:54:void <init>(java.net.URL) -> <init>
proguard.FullyQualifiedClassNameChecker -> proguard.FullyQualifiedClassNameChecker:
    java.lang.String INVALID_CLASS_EXTENSION -> a
    proguard.classfile.ClassPool programClassPool -> b
    proguard.classfile.ClassPool libraryClassPool -> c
    proguard.classfile.util.WarningPrinter notePrinter -> d
    53:57:void <init>(proguard.classfile.ClassPool,proguard.classfile.ClassPool,proguard.classfile.util.WarningPrinter) -> <init>
    66:82:void checkClassSpecifications(java.util.List) -> checkClassSpecifications
    91:110:void checkMemberSpecifications(java.util.List,boolean) -> a
    119:131:void checkDescriptor(java.lang.String) -> a
    140:144:void checkType(java.lang.String) -> b
    153:179:void checkClassName(java.lang.String) -> c
    184:184:boolean containsWildCards(java.lang.String) -> d
    197:199:void visitAnyClass(proguard.classfile.Clazz) -> visitAnyClass
    39:39:void <clinit>() -> <clinit>
proguard.GPL -> proguard.GPL:
    31:31:void <init>() -> <init>
    39:56:void check() -> check
    64:96:java.util.Set unknownPackageNames(java.io.LineNumberReader) -> a
    106:118:java.lang.String uniquePackageNames(java.util.Set) -> a
    128:129:java.lang.String trimSuffix(java.lang.String,char) -> a
    138:149:boolean containsPrefix(java.util.Set,java.lang.String) -> a
    162:162:boolean isKnown(java.lang.String) -> a
    184:195:void main(java.lang.String[]) -> main
proguard.GetAnnotationChecker -> proguard.GetAnnotationChecker:
    proguard.classfile.util.WarningPrinter notePrinter -> a
    45:47:void <init>(proguard.classfile.util.WarningPrinter) -> <init>
    52:52:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    57:79:void visitMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodrefConstant) -> visitMethodrefConstant
proguard.GetEnclosingClassChecker -> proguard.GetEnclosingClassChecker:
    proguard.classfile.util.WarningPrinter notePrinter -> a
    45:47:void <init>(proguard.classfile.util.WarningPrinter) -> <init>
    52:52:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    57:75:void visitMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodrefConstant) -> visitMethodrefConstant
proguard.GetEnclosingMethodChecker -> proguard.GetEnclosingMethodChecker:
    proguard.classfile.util.WarningPrinter notePrinter -> a
    45:47:void <init>(proguard.classfile.util.WarningPrinter) -> <init>
    52:52:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    57:75:void visitMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodrefConstant) -> visitMethodrefConstant
proguard.GetSignatureChecker -> proguard.GetSignatureChecker:
    proguard.classfile.util.WarningPrinter notePrinter -> a
    45:47:void <init>(proguard.classfile.util.WarningPrinter) -> <init>
    52:52:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    57:77:void visitMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodrefConstant) -> visitMethodrefConstant
proguard.Initializer -> proguard.Initializer:
    proguard.Configuration configuration -> a
    50:52:void <init>(proguard.Configuration) -> <init>
    62:492:void execute(proguard.classfile.ClassPool,proguard.classfile.ClassPool) -> execute
    501:531:proguard.util.StringMatcher createClassNoteExceptionMatcher(java.util.List) -> a
    542:574:proguard.util.StringMatcher createClassMemberNoteExceptionMatcher(java.util.List,boolean) -> a
proguard.InputReader -> proguard.InputReader:
    proguard.Configuration configuration -> a
    45:47:void <init>(proguard.Configuration) -> <init>
    57:126:void execute(proguard.classfile.ClassPool,proguard.classfile.ClassPool) -> execute
    136:141:void readInput(java.lang.String,proguard.ClassPath,proguard.io.DataEntryReader) -> a
    153:161:void readInput(java.lang.String,proguard.ClassPath,int,int,proguard.io.DataEntryReader) -> readInput
    174:190:void readInput(java.lang.String,proguard.ClassPathEntry,proguard.io.DataEntryReader) -> a
proguard.KeepClassMemberChecker -> proguard.KeepClassMemberChecker:
    proguard.classfile.util.WarningPrinter notePrinter -> a
    43:45:void <init>(proguard.classfile.util.WarningPrinter) -> <init>
    54:85:void checkClassSpecifications(java.util.List) -> checkClassSpecifications
proguard.KeepClassSpecification -> proguard.KeepClassSpecification:
    boolean markClasses -> markClasses
    boolean markConditionally -> markConditionally
    boolean markDescriptorClasses -> markDescriptorClasses
    boolean allowShrinking -> allowShrinking
    boolean allowOptimization -> allowOptimization
    boolean allowObfuscation -> allowObfuscation
    60:67:void <init>(boolean,boolean,boolean,boolean,boolean,boolean) -> <init>
    96:104:void <init>(boolean,boolean,boolean,boolean,boolean,boolean,proguard.ClassSpecification) -> <init>
    111:118:boolean equals(java.lang.Object) -> equals
    130:130:int hashCode() -> hashCode
    144:144:java.lang.Object clone() -> clone
proguard.LibraryKeepChecker -> proguard.LibraryKeepChecker:
    proguard.classfile.ClassPool programClassPool -> a
    proguard.classfile.ClassPool libraryClassPool -> b
    proguard.classfile.util.WarningPrinter notePrinter -> c
    java.lang.String keepName -> d
    54:58:void <init>(proguard.classfile.ClassPool,proguard.classfile.ClassPool,proguard.classfile.util.WarningPrinter) -> <init>
    67:97:void checkClassSpecifications(java.util.List) -> checkClassSpecifications
    102:102:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    107:114:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.LineWordReader -> proguard.LineWordReader:
    java.io.LineNumberReader reader -> a
    java.lang.String description -> b
    44:48:void <init>(java.io.LineNumberReader,java.lang.String,java.io.File) -> <init>
    55:55:java.lang.String nextLine() -> nextLine
    61:61:java.lang.String lineLocationDescription() -> lineLocationDescription
    67:73:void close() -> close
proguard.MemberSpecification -> proguard.MemberSpecification:
    int requiredSetAccessFlags -> requiredSetAccessFlags
    int requiredUnsetAccessFlags -> requiredUnsetAccessFlags
    java.lang.String annotationType -> annotationType
    java.lang.String name -> name
    java.lang.String descriptor -> descriptor
    44:49:void <init>() -> <init>
    76:82:void <init>(int,int,java.lang.String,java.lang.String,java.lang.String) -> <init>
    90:97:boolean equals(java.lang.Object) -> equals
    107:107:int hashCode() -> hashCode
proguard.OutputWriter -> proguard.OutputWriter:
    proguard.Configuration configuration -> a
    45:47:void <init>(proguard.Configuration) -> <init>
    56:90:void execute(proguard.classfile.ClassPool) -> execute
    107:189:void writeOutput(proguard.classfile.ClassPool,proguard.ClassPath,int,int,int) -> a
    198:217:java.util.Map createPackagePrefixMap(proguard.classfile.ClassPool) -> a
proguard.ParseException -> proguard.ParseException:
    37:38:void <init>() -> <init>
    49:50:void <init>(java.lang.String) -> <init>
proguard.ProGuard -> proguard.ProGuard:
    java.lang.String VERSION -> VERSION
    proguard.Configuration configuration -> a
    proguard.classfile.ClassPool programClassPool -> b
    proguard.classfile.ClassPool libraryClassPool -> c
    45:56:void <init>(proguard.Configuration) -> <init>
    64:182:void execute() -> execute
    190:204:void printConfiguration() -> a
    212:219:void readInput() -> b
    228:234:void initialize() -> c
    242:248:void target() -> d
    257:271:void printSeeds() -> e
    279:299:void shrink() -> f
    307:314:void inlineSubroutines() -> g
    322:328:boolean optimize() -> h
    337:356:void obfuscate() -> i
    365:366:void linearizeLineNumbers() -> j
    374:376:void trimLineNumbers() -> k
    384:389:void clearPreverification() -> l
    397:404:void preverify() -> m
    412:413:void sortClassElements() -> n
    421:428:void writeOutput() -> o
    436:450:void dump() -> p
    460:460:java.io.PrintStream createPrintStream(java.io.File) -> a
    473:481:void closePrintStream(java.io.PrintStream) -> a
    490:502:java.lang.String fileName(java.io.File) -> b
    513:557:void main(java.lang.String[]) -> main
proguard.SeedPrinter -> proguard.SeedPrinter:
    java.io.PrintStream ps -> a
    43:45:void <init>(java.io.PrintStream) -> <init>
    58:90:void write(proguard.Configuration,proguard.classfile.ClassPool,proguard.classfile.ClassPool) -> write
proguard.Targeter -> proguard.Targeter:
    proguard.Configuration configuration -> a
    45:47:void <init>(proguard.Configuration) -> <init>
    55:87:void execute(proguard.classfile.ClassPool) -> execute
proguard.UpToDateChecker -> proguard.UpToDateChecker:
    proguard.Configuration configuration -> a
    39:41:void <init>(proguard.Configuration) -> <init>
    52:106:boolean check() -> check
proguard.UpToDateChecker$1 -> proguard.b:
    long inputModificationTime -> a
    long outputModificationTime -> b
    1115:1118:void proguard.UpToDateChecker$ModificationTimeChecker.<init>():115:118 -> <init>
    1127:1131:void proguard.UpToDateChecker$ModificationTimeChecker.updateInputModificationTime(java.io.File):127:131 -> a
    1140:1144:void proguard.UpToDateChecker$ModificationTimeChecker.updateOutputModificationTime(java.io.File):140:144 -> b
    1154:1177:void proguard.UpToDateChecker$ModificationTimeChecker.updateModificationTime(java.io.File,boolean):154:177 -> a
    1185:1193:void proguard.UpToDateChecker$ModificationTimeChecker.updateModificationTime(long,boolean):185:193 -> a
    1201:1207:void proguard.UpToDateChecker$ModificationTimeChecker.updateInputModificationTime(long):201:207 -> a
    1215:1221:void proguard.UpToDateChecker$ModificationTimeChecker.updateOutputModificationTime(long):215:221 -> b
    1226:1230:void proguard.UpToDateChecker$ModificationTimeChecker.checkModificationTimes():226:230 -> a
    2115:2115:void proguard.UpToDateChecker$ModificationTimeChecker.<init>(byte):115:115 -> <init>
proguard.WordReader -> proguard.WordReader:
    java.io.File baseDir -> a
    proguard.WordReader includeWordReader -> b
    java.lang.String currentLine -> c
    int currentLineLength -> d
    int currentIndex -> e
    java.lang.String currentWord -> f
    java.lang.String currentComments -> g
    53:55:void <init>(java.io.File) -> <init>
    63:71:void setBaseDir(java.io.File) -> setBaseDir
    79:79:java.io.File getBaseDir() -> getBaseDir
    93:101:void includeWordReader(proguard.WordReader) -> includeWordReader
    114:270:java.lang.String nextWord(boolean) -> nextWord
    282:290:java.lang.String lastComments() -> lastComments
    303:303:java.lang.String locationDescription() -> locationDescription
    java.lang.String nextLine() -> nextLine
    java.lang.String lineLocationDescription() -> lineLocationDescription
    337:342:void close() -> close
    349:349:boolean isOption(char) -> a
    355:355:boolean isComment(char) -> b
    361:361:boolean isDelimiter(char) -> c
    374:374:boolean isFileDelimiter(char) -> d
    384:384:boolean isQuote(char) -> e
proguard.classfile.ClassConstants -> proguard.classfile.ClassConstants:
    java.lang.String CLASS_FILE_EXTENSION -> CLASS_FILE_EXTENSION
    int MAGIC -> MAGIC
    int CLASS_VERSION_1_0_MAJOR -> CLASS_VERSION_1_0_MAJOR
    int CLASS_VERSION_1_0_MINOR -> CLASS_VERSION_1_0_MINOR
    int CLASS_VERSION_1_2_MAJOR -> CLASS_VERSION_1_2_MAJOR
    int CLASS_VERSION_1_2_MINOR -> CLASS_VERSION_1_2_MINOR
    int CLASS_VERSION_1_3_MAJOR -> CLASS_VERSION_1_3_MAJOR
    int CLASS_VERSION_1_3_MINOR -> CLASS_VERSION_1_3_MINOR
    int CLASS_VERSION_1_4_MAJOR -> CLASS_VERSION_1_4_MAJOR
    int CLASS_VERSION_1_4_MINOR -> CLASS_VERSION_1_4_MINOR
    int CLASS_VERSION_1_5_MAJOR -> CLASS_VERSION_1_5_MAJOR
    int CLASS_VERSION_1_5_MINOR -> CLASS_VERSION_1_5_MINOR
    int CLASS_VERSION_1_6_MAJOR -> CLASS_VERSION_1_6_MAJOR
    int CLASS_VERSION_1_6_MINOR -> CLASS_VERSION_1_6_MINOR
    int CLASS_VERSION_1_7_MAJOR -> CLASS_VERSION_1_7_MAJOR
    int CLASS_VERSION_1_7_MINOR -> CLASS_VERSION_1_7_MINOR
    int CLASS_VERSION_1_8_MAJOR -> CLASS_VERSION_1_8_MAJOR
    int CLASS_VERSION_1_8_MINOR -> CLASS_VERSION_1_8_MINOR
    int CLASS_VERSION_1_0 -> CLASS_VERSION_1_0
    int CLASS_VERSION_1_2 -> CLASS_VERSION_1_2
    int CLASS_VERSION_1_3 -> CLASS_VERSION_1_3
    int CLASS_VERSION_1_4 -> CLASS_VERSION_1_4
    int CLASS_VERSION_1_5 -> CLASS_VERSION_1_5
    int CLASS_VERSION_1_6 -> CLASS_VERSION_1_6
    int CLASS_VERSION_1_7 -> CLASS_VERSION_1_7
    int CLASS_VERSION_1_8 -> CLASS_VERSION_1_8
    int ACC_PUBLIC -> ACC_PUBLIC
    int ACC_PRIVATE -> ACC_PRIVATE
    int ACC_PROTECTED -> ACC_PROTECTED
    int ACC_STATIC -> ACC_STATIC
    int ACC_FINAL -> ACC_FINAL
    int ACC_SUPER -> ACC_SUPER
    int ACC_SYNCHRONIZED -> ACC_SYNCHRONIZED
    int ACC_VOLATILE -> ACC_VOLATILE
    int ACC_TRANSIENT -> ACC_TRANSIENT
    int ACC_BRIDGE -> ACC_BRIDGE
    int ACC_VARARGS -> ACC_VARARGS
    int ACC_NATIVE -> ACC_NATIVE
    int ACC_INTERFACE -> ACC_INTERFACE
    int ACC_ABSTRACT -> ACC_ABSTRACT
    int ACC_STRICT -> ACC_STRICT
    int ACC_SYNTHETIC -> ACC_SYNTHETIC
    int ACC_ANNOTATTION -> ACC_ANNOTATTION
    int ACC_ENUM -> ACC_ENUM
    int ACC_MANDATED -> ACC_MANDATED
    int VALID_ACC_CLASS -> VALID_ACC_CLASS
    int VALID_ACC_FIELD -> VALID_ACC_FIELD
    int VALID_ACC_METHOD -> VALID_ACC_METHOD
    int VALID_ACC_PARAMETER -> VALID_ACC_PARAMETER
    int CONSTANT_Utf8 -> CONSTANT_Utf8
    int CONSTANT_Integer -> CONSTANT_Integer
    int CONSTANT_Float -> CONSTANT_Float
    int CONSTANT_Long -> CONSTANT_Long
    int CONSTANT_Double -> CONSTANT_Double
    int CONSTANT_Class -> CONSTANT_Class
    int CONSTANT_String -> CONSTANT_String
    int CONSTANT_Fieldref -> CONSTANT_Fieldref
    int CONSTANT_Methodref -> CONSTANT_Methodref
    int CONSTANT_InterfaceMethodref -> CONSTANT_InterfaceMethodref
    int CONSTANT_NameAndType -> CONSTANT_NameAndType
    int CONSTANT_MethodHandle -> CONSTANT_MethodHandle
    int CONSTANT_MethodType -> CONSTANT_MethodType
    int CONSTANT_InvokeDynamic -> CONSTANT_InvokeDynamic
    int REF_getField -> REF_getField
    int REF_getStatic -> REF_getStatic
    int REF_putField -> REF_putField
    int REF_putStatic -> REF_putStatic
    int REF_invokeVirtual -> REF_invokeVirtual
    int REF_invokeStatic -> REF_invokeStatic
    int REF_invokeSpecial -> REF_invokeSpecial
    int REF_newInvokeSpecial -> REF_newInvokeSpecial
    int REF_invokeInterface -> REF_invokeInterface
    java.lang.String ATTR_BootstrapMethods -> ATTR_BootstrapMethods
    java.lang.String ATTR_SourceFile -> ATTR_SourceFile
    java.lang.String ATTR_SourceDir -> ATTR_SourceDir
    java.lang.String ATTR_InnerClasses -> ATTR_InnerClasses
    java.lang.String ATTR_EnclosingMethod -> ATTR_EnclosingMethod
    java.lang.String ATTR_Deprecated -> ATTR_Deprecated
    java.lang.String ATTR_Synthetic -> ATTR_Synthetic
    java.lang.String ATTR_Signature -> ATTR_Signature
    java.lang.String ATTR_ConstantValue -> ATTR_ConstantValue
    java.lang.String ATTR_MethodParameters -> ATTR_MethodParameters
    java.lang.String ATTR_Exceptions -> ATTR_Exceptions
    java.lang.String ATTR_Code -> ATTR_Code
    java.lang.String ATTR_StackMap -> ATTR_StackMap
    java.lang.String ATTR_StackMapTable -> ATTR_StackMapTable
    java.lang.String ATTR_LineNumberTable -> ATTR_LineNumberTable
    java.lang.String ATTR_LocalVariableTable -> ATTR_LocalVariableTable
    java.lang.String ATTR_LocalVariableTypeTable -> ATTR_LocalVariableTypeTable
    java.lang.String ATTR_RuntimeVisibleAnnotations -> ATTR_RuntimeVisibleAnnotations
    java.lang.String ATTR_RuntimeInvisibleAnnotations -> ATTR_RuntimeInvisibleAnnotations
    java.lang.String ATTR_RuntimeVisibleParameterAnnotations -> ATTR_RuntimeVisibleParameterAnnotations
    java.lang.String ATTR_RuntimeInvisibleParameterAnnotations -> ATTR_RuntimeInvisibleParameterAnnotations
    java.lang.String ATTR_RuntimeVisibleTypeAnnotations -> ATTR_RuntimeVisibleTypeAnnotations
    java.lang.String ATTR_RuntimeInvisibleTypeAnnotations -> ATTR_RuntimeInvisibleTypeAnnotations
    java.lang.String ATTR_AnnotationDefault -> ATTR_AnnotationDefault
    int ANNOTATION_TARGET_ParameterGenericClass -> ANNOTATION_TARGET_ParameterGenericClass
    int ANNOTATION_TARGET_ParameterGenericMethod -> ANNOTATION_TARGET_ParameterGenericMethod
    int ANNOTATION_TARGET_Extends -> ANNOTATION_TARGET_Extends
    int ANNOTATION_TARGET_BoundGenericClass -> ANNOTATION_TARGET_BoundGenericClass
    int ANNOTATION_TARGET_BoundGenericMethod -> ANNOTATION_TARGET_BoundGenericMethod
    int ANNOTATION_TARGET_Field -> ANNOTATION_TARGET_Field
    int ANNOTATION_TARGET_Return -> ANNOTATION_TARGET_Return
    int ANNOTATION_TARGET_Receiver -> ANNOTATION_TARGET_Receiver
    int ANNOTATION_TARGET_Parameter -> ANNOTATION_TARGET_Parameter
    int ANNOTATION_TARGET_Throws -> ANNOTATION_TARGET_Throws
    int ANNOTATION_TARGET_LocalVariable -> ANNOTATION_TARGET_LocalVariable
    int ANNOTATION_TARGET_ResourceVariable -> ANNOTATION_TARGET_ResourceVariable
    int ANNOTATION_TARGET_Catch -> ANNOTATION_TARGET_Catch
    int ANNOTATION_TARGET_InstanceOf -> ANNOTATION_TARGET_InstanceOf
    int ANNOTATION_TARGET_New -> ANNOTATION_TARGET_New
    int ANNOTATION_TARGET_MethodReferenceNew -> ANNOTATION_TARGET_MethodReferenceNew
    int ANNOTATION_TARGET_MethodReference -> ANNOTATION_TARGET_MethodReference
    int ANNOTATION_TARGET_Cast -> ANNOTATION_TARGET_Cast
    int ANNOTATION_TARGET_ArgumentGenericMethodNew -> ANNOTATION_TARGET_ArgumentGenericMethodNew
    int ANNOTATION_TARGET_ArgumentGenericMethod -> ANNOTATION_TARGET_ArgumentGenericMethod
    int ANNOTATION_TARGET_ArgumentGenericMethodReferenceNew -> ANNOTATION_TARGET_ArgumentGenericMethodReferenceNew
    int ANNOTATION_TARGET_ArgumentGenericMethodReference -> ANNOTATION_TARGET_ArgumentGenericMethodReference
    char ELEMENT_VALUE_STRING_CONSTANT -> ELEMENT_VALUE_STRING_CONSTANT
    char ELEMENT_VALUE_ENUM_CONSTANT -> ELEMENT_VALUE_ENUM_CONSTANT
    char ELEMENT_VALUE_CLASS -> ELEMENT_VALUE_CLASS
    char ELEMENT_VALUE_ANNOTATION -> ELEMENT_VALUE_ANNOTATION
    char ELEMENT_VALUE_ARRAY -> ELEMENT_VALUE_ARRAY
    char PACKAGE_SEPARATOR -> PACKAGE_SEPARATOR
    char INNER_CLASS_SEPARATOR -> INNER_CLASS_SEPARATOR
    char SPECIAL_CLASS_CHARACTER -> SPECIAL_CLASS_CHARACTER
    char SPECIAL_MEMBER_SEPARATOR -> SPECIAL_MEMBER_SEPARATOR
    char METHOD_ARGUMENTS_OPEN -> METHOD_ARGUMENTS_OPEN
    char METHOD_ARGUMENTS_CLOSE -> METHOD_ARGUMENTS_CLOSE
    java.lang.String PACKAGE_JAVA_LANG -> PACKAGE_JAVA_LANG
    java.lang.String NAME_JAVA_LANG_OBJECT -> NAME_JAVA_LANG_OBJECT
    java.lang.String TYPE_JAVA_LANG_OBJECT -> TYPE_JAVA_LANG_OBJECT
    java.lang.String NAME_JAVA_LANG_CLONEABLE -> NAME_JAVA_LANG_CLONEABLE
    java.lang.String NAME_JAVA_LANG_THROWABLE -> NAME_JAVA_LANG_THROWABLE
    java.lang.String NAME_JAVA_LANG_CLASS -> NAME_JAVA_LANG_CLASS
    java.lang.String NAME_JAVA_LANG_STRING -> NAME_JAVA_LANG_STRING
    java.lang.String NAME_JAVA_LANG_STRING_BUFFER -> NAME_JAVA_LANG_STRING_BUFFER
    java.lang.String NAME_JAVA_LANG_STRING_BUILDER -> NAME_JAVA_LANG_STRING_BUILDER
    java.lang.String NAME_JAVA_LANG_INVOKE_METHOD_HANDLE -> NAME_JAVA_LANG_INVOKE_METHOD_HANDLE
    java.lang.String NAME_JAVA_LANG_INVOKE_METHOD_TYPE -> NAME_JAVA_LANG_INVOKE_METHOD_TYPE
    java.lang.String NAME_JAVA_LANG_VOID -> NAME_JAVA_LANG_VOID
    java.lang.String NAME_JAVA_LANG_BOOLEAN -> NAME_JAVA_LANG_BOOLEAN
    java.lang.String NAME_JAVA_LANG_BYTE -> NAME_JAVA_LANG_BYTE
    java.lang.String NAME_JAVA_LANG_SHORT -> NAME_JAVA_LANG_SHORT
    java.lang.String NAME_JAVA_LANG_CHARACTER -> NAME_JAVA_LANG_CHARACTER
    java.lang.String NAME_JAVA_LANG_INTEGER -> NAME_JAVA_LANG_INTEGER
    java.lang.String NAME_JAVA_LANG_LONG -> NAME_JAVA_LANG_LONG
    java.lang.String NAME_JAVA_LANG_FLOAT -> NAME_JAVA_LANG_FLOAT
    java.lang.String NAME_JAVA_LANG_DOUBLE -> NAME_JAVA_LANG_DOUBLE
    java.lang.String NAME_JAVA_LANG_MATH -> NAME_JAVA_LANG_MATH
    java.lang.String NAME_JAVA_LANG_SYSTEM -> NAME_JAVA_LANG_SYSTEM
    java.lang.String NAME_JAVA_LANG_RUNTIME -> NAME_JAVA_LANG_RUNTIME
    java.lang.String NAME_JAVA_LANG_REFLECT_ARRAY -> NAME_JAVA_LANG_REFLECT_ARRAY
    java.lang.String NAME_JAVA_LANG_REFLECT_FIELD -> NAME_JAVA_LANG_REFLECT_FIELD
    java.lang.String NAME_JAVA_LANG_REFLECT_METHOD -> NAME_JAVA_LANG_REFLECT_METHOD
    java.lang.String NAME_JAVA_LANG_REFLECT_CONSTRUCTOR -> NAME_JAVA_LANG_REFLECT_CONSTRUCTOR
    java.lang.String NAME_JAVA_LANG_REFLECT_ACCESSIBLE_OBJECT -> NAME_JAVA_LANG_REFLECT_ACCESSIBLE_OBJECT
    java.lang.String NAME_JAVA_IO_SERIALIZABLE -> NAME_JAVA_IO_SERIALIZABLE
    java.lang.String NAME_JAVA_UTIL_CONCURRENT_ATOMIC_ATOMIC_INTEGER_FIELD_UPDATER -> NAME_JAVA_UTIL_CONCURRENT_ATOMIC_ATOMIC_INTEGER_FIELD_UPDATER
    java.lang.String NAME_JAVA_UTIL_CONCURRENT_ATOMIC_ATOMIC_LONG_FIELD_UPDATER -> NAME_JAVA_UTIL_CONCURRENT_ATOMIC_ATOMIC_LONG_FIELD_UPDATER
    java.lang.String NAME_JAVA_UTIL_CONCURRENT_ATOMIC_ATOMIC_REFERENCE_FIELD_UPDATER -> NAME_JAVA_UTIL_CONCURRENT_ATOMIC_ATOMIC_REFERENCE_FIELD_UPDATER
    java.lang.String METHOD_NAME_INIT -> METHOD_NAME_INIT
    java.lang.String METHOD_TYPE_INIT -> METHOD_TYPE_INIT
    java.lang.String METHOD_NAME_CLINIT -> METHOD_NAME_CLINIT
    java.lang.String METHOD_TYPE_CLINIT -> METHOD_TYPE_CLINIT
    java.lang.String METHOD_NAME_CLASS_FOR_NAME -> METHOD_NAME_CLASS_FOR_NAME
    java.lang.String METHOD_TYPE_CLASS_FOR_NAME -> METHOD_TYPE_CLASS_FOR_NAME
    java.lang.String METHOD_NAME_CLASS_GET_COMPONENT_TYPE -> METHOD_NAME_CLASS_GET_COMPONENT_TYPE
    java.lang.String METHOD_TYPE_CLASS_GET_COMPONENT_TYPE -> METHOD_TYPE_CLASS_GET_COMPONENT_TYPE
    java.lang.String METHOD_NAME_CLASS_GET_FIELD -> METHOD_NAME_CLASS_GET_FIELD
    java.lang.String METHOD_TYPE_CLASS_GET_FIELD -> METHOD_TYPE_CLASS_GET_FIELD
    java.lang.String METHOD_NAME_CLASS_GET_DECLARED_FIELD -> METHOD_NAME_CLASS_GET_DECLARED_FIELD
    java.lang.String METHOD_TYPE_CLASS_GET_DECLARED_FIELD -> METHOD_TYPE_CLASS_GET_DECLARED_FIELD
    java.lang.String CONSTRUCTOR_NAME_CLASS_GET_CONSTRUCTOR -> CONSTRUCTOR_NAME_CLASS_GET_CONSTRUCTOR
    java.lang.String CONSTRUCTOR_TYPE_CLASS_GET_CONSTRUCTOR -> CONSTRUCTOR_TYPE_CLASS_GET_CONSTRUCTOR
    java.lang.String CONSTRUCTOR_NAME_CLASS_GET_DECLARED_CONSTRUCTOR -> CONSTRUCTOR_NAME_CLASS_GET_DECLARED_CONSTRUCTOR
    java.lang.String CONSTRUCTOR_TYPE_CLASS_GET_DECLARED_CONSTRUCTOR -> CONSTRUCTOR_TYPE_CLASS_GET_DECLARED_CONSTRUCTOR
    java.lang.String METHOD_NAME_CLASS_GET_METHOD -> METHOD_NAME_CLASS_GET_METHOD
    java.lang.String METHOD_TYPE_CLASS_GET_METHOD -> METHOD_TYPE_CLASS_GET_METHOD
    java.lang.String METHOD_NAME_CLASS_GET_DECLARED_METHOD -> METHOD_NAME_CLASS_GET_DECLARED_METHOD
    java.lang.String METHOD_TYPE_CLASS_GET_DECLARED_METHOD -> METHOD_TYPE_CLASS_GET_DECLARED_METHOD
    java.lang.String METHOD_NAME_CLASS_GET_DECLARING_CLASS -> METHOD_NAME_CLASS_GET_DECLARING_CLASS
    java.lang.String METHOD_NAME_CLASS_GET_ENCLOSING_CLASS -> METHOD_NAME_CLASS_GET_ENCLOSING_CLASS
    java.lang.String METHOD_NAME_CLASS_GET_ENCLOSING_CONSTRUCTOR -> METHOD_NAME_CLASS_GET_ENCLOSING_CONSTRUCTOR
    java.lang.String METHOD_NAME_CLASS_GET_ENCLOSING_METHOD -> METHOD_NAME_CLASS_GET_ENCLOSING_METHOD
    java.lang.String METHOD_NAME_GET_ANNOTATION -> METHOD_NAME_GET_ANNOTATION
    java.lang.String METHOD_NAME_GET_ANNOTATIONS -> METHOD_NAME_GET_ANNOTATIONS
    java.lang.String METHOD_NAME_GET_DECLARED_ANNOTATIONS -> METHOD_NAME_GET_DECLARED_ANNOTATIONS
    java.lang.String METHOD_NAME_GET_PARAMETER_ANNOTATIONS -> METHOD_NAME_GET_PARAMETER_ANNOTATIONS
    java.lang.String METHOD_NAME_GET_TYPE_PREFIX -> METHOD_NAME_GET_TYPE_PREFIX
    java.lang.String METHOD_NAME_GET_GENERIC_PREFIX -> METHOD_NAME_GET_GENERIC_PREFIX
    java.lang.String METHOD_NAME_NEW_UPDATER -> METHOD_NAME_NEW_UPDATER
    java.lang.String METHOD_TYPE_NEW_INTEGER_UPDATER -> METHOD_TYPE_NEW_INTEGER_UPDATER
    java.lang.String METHOD_TYPE_NEW_LONG_UPDATER -> METHOD_TYPE_NEW_LONG_UPDATER
    java.lang.String METHOD_TYPE_NEW_REFERENCE_UPDATER -> METHOD_TYPE_NEW_REFERENCE_UPDATER
    java.lang.String METHOD_NAME_DOT_CLASS_JAVAC -> METHOD_NAME_DOT_CLASS_JAVAC
    java.lang.String METHOD_TYPE_DOT_CLASS_JAVAC -> METHOD_TYPE_DOT_CLASS_JAVAC
    java.lang.String METHOD_NAME_DOT_CLASS_JIKES -> METHOD_NAME_DOT_CLASS_JIKES
    java.lang.String METHOD_TYPE_DOT_CLASS_JIKES -> METHOD_TYPE_DOT_CLASS_JIKES
    java.lang.String METHOD_TYPE_INIT_ENUM -> METHOD_TYPE_INIT_ENUM
    java.lang.String METHOD_NAME_NEW_INSTANCE -> METHOD_NAME_NEW_INSTANCE
    java.lang.String METHOD_TYPE_NEW_INSTANCE -> METHOD_TYPE_NEW_INSTANCE
    java.lang.String METHOD_NAME_EQUALS -> METHOD_NAME_EQUALS
    java.lang.String METHOD_TYPE_EQUALS -> METHOD_TYPE_EQUALS
    java.lang.String METHOD_NAME_LENGTH -> METHOD_NAME_LENGTH
    java.lang.String METHOD_NAME_VALUEOF -> METHOD_NAME_VALUEOF
    java.lang.String METHOD_TYPE_VALUEOF_BOOLEAN -> METHOD_TYPE_VALUEOF_BOOLEAN
    java.lang.String METHOD_TYPE_VALUEOF_CHAR -> METHOD_TYPE_VALUEOF_CHAR
    java.lang.String METHOD_TYPE_VALUEOF_INT -> METHOD_TYPE_VALUEOF_INT
    java.lang.String METHOD_TYPE_VALUEOF_LONG -> METHOD_TYPE_VALUEOF_LONG
    java.lang.String METHOD_TYPE_VALUEOF_FLOAT -> METHOD_TYPE_VALUEOF_FLOAT
    java.lang.String METHOD_TYPE_VALUEOF_DOUBLE -> METHOD_TYPE_VALUEOF_DOUBLE
    java.lang.String METHOD_TYPE_VALUEOF_OBJECT -> METHOD_TYPE_VALUEOF_OBJECT
    java.lang.String METHOD_TYPE_LENGTH -> METHOD_TYPE_LENGTH
    java.lang.String METHOD_NAME_APPEND -> METHOD_NAME_APPEND
    java.lang.String METHOD_TYPE_STRING_VOID -> METHOD_TYPE_STRING_VOID
    java.lang.String METHOD_TYPE_BOOLEAN_STRING_BUFFER -> METHOD_TYPE_BOOLEAN_STRING_BUFFER
    java.lang.String METHOD_TYPE_CHAR_STRING_BUFFER -> METHOD_TYPE_CHAR_STRING_BUFFER
    java.lang.String METHOD_TYPE_INT_STRING_BUFFER -> METHOD_TYPE_INT_STRING_BUFFER
    java.lang.String METHOD_TYPE_LONG_STRING_BUFFER -> METHOD_TYPE_LONG_STRING_BUFFER
    java.lang.String METHOD_TYPE_FLOAT_STRING_BUFFER -> METHOD_TYPE_FLOAT_STRING_BUFFER
    java.lang.String METHOD_TYPE_DOUBLE_STRING_BUFFER -> METHOD_TYPE_DOUBLE_STRING_BUFFER
    java.lang.String METHOD_TYPE_STRING_STRING_BUFFER -> METHOD_TYPE_STRING_STRING_BUFFER
    java.lang.String METHOD_TYPE_OBJECT_STRING_BUFFER -> METHOD_TYPE_OBJECT_STRING_BUFFER
    java.lang.String METHOD_TYPE_BOOLEAN_STRING_BUILDER -> METHOD_TYPE_BOOLEAN_STRING_BUILDER
    java.lang.String METHOD_TYPE_CHAR_STRING_BUILDER -> METHOD_TYPE_CHAR_STRING_BUILDER
    java.lang.String METHOD_TYPE_INT_STRING_BUILDER -> METHOD_TYPE_INT_STRING_BUILDER
    java.lang.String METHOD_TYPE_LONG_STRING_BUILDER -> METHOD_TYPE_LONG_STRING_BUILDER
    java.lang.String METHOD_TYPE_FLOAT_STRING_BUILDER -> METHOD_TYPE_FLOAT_STRING_BUILDER
    java.lang.String METHOD_TYPE_DOUBLE_STRING_BUILDER -> METHOD_TYPE_DOUBLE_STRING_BUILDER
    java.lang.String METHOD_TYPE_STRING_STRING_BUILDER -> METHOD_TYPE_STRING_STRING_BUILDER
    java.lang.String METHOD_TYPE_OBJECT_STRING_BUILDER -> METHOD_TYPE_OBJECT_STRING_BUILDER
    java.lang.String METHOD_NAME_TOSTRING -> METHOD_NAME_TOSTRING
    java.lang.String METHOD_TYPE_TOSTRING -> METHOD_TYPE_TOSTRING
    java.lang.String METHOD_NAME_CLONE -> METHOD_NAME_CLONE
    java.lang.String METHOD_TYPE_CLONE -> METHOD_TYPE_CLONE
    java.lang.String METHOD_NAME_VALUES -> METHOD_NAME_VALUES
    java.lang.String METHOD_NAME_ORDINAL -> METHOD_NAME_ORDINAL
    java.lang.String METHOD_TYPE_ORDINAL -> METHOD_TYPE_ORDINAL
    char TYPE_VOID -> TYPE_VOID
    char TYPE_BOOLEAN -> TYPE_BOOLEAN
    char TYPE_BYTE -> TYPE_BYTE
    char TYPE_CHAR -> TYPE_CHAR
    char TYPE_SHORT -> TYPE_SHORT
    char TYPE_INT -> TYPE_INT
    char TYPE_LONG -> TYPE_LONG
    char TYPE_FLOAT -> TYPE_FLOAT
    char TYPE_DOUBLE -> TYPE_DOUBLE
    char TYPE_CLASS_START -> TYPE_CLASS_START
    char TYPE_CLASS_END -> TYPE_CLASS_END
    char TYPE_ARRAY -> TYPE_ARRAY
    char TYPE_GENERIC_VARIABLE_START -> TYPE_GENERIC_VARIABLE_START
    char TYPE_GENERIC_START -> TYPE_GENERIC_START
    char TYPE_GENERIC_BOUND -> TYPE_GENERIC_BOUND
    char TYPE_GENERIC_END -> TYPE_GENERIC_END
    int TYPICAL_CONSTANT_POOL_SIZE -> TYPICAL_CONSTANT_POOL_SIZE
    int TYPICAL_FIELD_COUNT -> TYPICAL_FIELD_COUNT
    int TYPICAL_METHOD_COUNT -> TYPICAL_METHOD_COUNT
    int TYPICAL_CODE_LENGTH -> TYPICAL_CODE_LENGTH
    int TYPICAL_LINE_NUMBER_TABLE_LENGTH -> TYPICAL_LINE_NUMBER_TABLE_LENGTH
    int TYPICAL_EXCEPTION_TABLE_LENGTH -> TYPICAL_EXCEPTION_TABLE_LENGTH
    int TYPICAL_VARIABLES_SIZE -> TYPICAL_VARIABLES_SIZE
    int TYPICAL_STACK_SIZE -> TYPICAL_STACK_SIZE
    28:28:void <init>() -> <init>
proguard.classfile.ClassPool -> proguard.classfile.ClassPool:
    java.util.Map classes -> a
    33:37:void <init>() -> <init>
    45:46:void clear() -> clear
    54:55:void addClass(proguard.classfile.Clazz) -> addClass
    63:64:void removeClass(proguard.classfile.Clazz) -> removeClass
    72:73:void removeClass(java.lang.String) -> removeClass
    83:83:proguard.classfile.Clazz getClass(java.lang.String) -> getClass
    92:92:java.util.Iterator classNames() -> classNames
    101:101:int size() -> size
    110:111:void accept(proguard.classfile.visitor.ClassPoolVisitor) -> accept
    120:126:void classesAccept(proguard.classfile.visitor.ClassVisitor) -> classesAccept
    139:145:void classesAcceptAlphabetically(proguard.classfile.visitor.ClassVisitor) -> classesAcceptAlphabetically
    154:159:void classAccept(java.lang.String,proguard.classfile.visitor.ClassVisitor) -> classAccept
proguard.classfile.Clazz -> proguard.classfile.Clazz:
    int getAccessFlags() -> getAccessFlags
    java.lang.String getName() -> getName
    java.lang.String getSuperName() -> getSuperName
    int getInterfaceCount() -> getInterfaceCount
    java.lang.String getInterfaceName(int) -> getInterfaceName
    int getTag(int) -> getTag
    java.lang.String getString(int) -> getString
    java.lang.String getStringString(int) -> getStringString
    java.lang.String getClassName(int) -> getClassName
    java.lang.String getName(int) -> getName
    java.lang.String getType(int) -> getType
    java.lang.String getRefClassName(int) -> getRefClassName
    java.lang.String getRefName(int) -> getRefName
    java.lang.String getRefType(int) -> getRefType
    void addSubClass(proguard.classfile.Clazz) -> addSubClass
    proguard.classfile.Clazz getSuperClass() -> getSuperClass
    proguard.classfile.Clazz getInterface(int) -> getInterface
    boolean extends_(proguard.classfile.Clazz) -> extends_
    boolean extends_(java.lang.String) -> extends_
    boolean extendsOrImplements(proguard.classfile.Clazz) -> extendsOrImplements
    boolean extendsOrImplements(java.lang.String) -> extendsOrImplements
    proguard.classfile.Field findField(java.lang.String,java.lang.String) -> findField
    proguard.classfile.Method findMethod(java.lang.String,java.lang.String) -> findMethod
    void accept(proguard.classfile.visitor.ClassVisitor) -> accept
    void hierarchyAccept(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor) -> hierarchyAccept
    void subclassesAccept(proguard.classfile.visitor.ClassVisitor) -> subclassesAccept
    void constantPoolEntriesAccept(proguard.classfile.constant.visitor.ConstantVisitor) -> constantPoolEntriesAccept
    void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor) -> constantPoolEntryAccept
    void thisClassConstantAccept(proguard.classfile.constant.visitor.ConstantVisitor) -> thisClassConstantAccept
    void superClassConstantAccept(proguard.classfile.constant.visitor.ConstantVisitor) -> superClassConstantAccept
    void interfaceConstantsAccept(proguard.classfile.constant.visitor.ConstantVisitor) -> interfaceConstantsAccept
    void fieldsAccept(proguard.classfile.visitor.MemberVisitor) -> fieldsAccept
    void fieldAccept(java.lang.String,java.lang.String,proguard.classfile.visitor.MemberVisitor) -> fieldAccept
    void methodsAccept(proguard.classfile.visitor.MemberVisitor) -> methodsAccept
    void methodAccept(java.lang.String,java.lang.String,proguard.classfile.visitor.MemberVisitor) -> methodAccept
    boolean mayHaveImplementations(proguard.classfile.Method) -> mayHaveImplementations
    void attributesAccept(proguard.classfile.attribute.visitor.AttributeVisitor) -> attributesAccept
    void attributeAccept(java.lang.String,proguard.classfile.attribute.visitor.AttributeVisitor) -> attributeAccept
proguard.classfile.Field -> proguard.classfile.Field:
proguard.classfile.JavaConstants -> proguard.classfile.JavaConstants:
    java.lang.String JAVA_FILE_EXTENSION -> JAVA_FILE_EXTENSION
    java.lang.String CLASS_VERSION_1_0 -> CLASS_VERSION_1_0
    java.lang.String CLASS_VERSION_1_1 -> CLASS_VERSION_1_1
    java.lang.String CLASS_VERSION_1_2 -> CLASS_VERSION_1_2
    java.lang.String CLASS_VERSION_1_3 -> CLASS_VERSION_1_3
    java.lang.String CLASS_VERSION_1_4 -> CLASS_VERSION_1_4
    java.lang.String CLASS_VERSION_1_5 -> CLASS_VERSION_1_5
    java.lang.String CLASS_VERSION_1_6 -> CLASS_VERSION_1_6
    java.lang.String CLASS_VERSION_1_7 -> CLASS_VERSION_1_7
    java.lang.String CLASS_VERSION_1_8 -> CLASS_VERSION_1_8
    java.lang.String CLASS_VERSION_1_5_ALIAS -> CLASS_VERSION_1_5_ALIAS
    java.lang.String CLASS_VERSION_1_6_ALIAS -> CLASS_VERSION_1_6_ALIAS
    java.lang.String CLASS_VERSION_1_7_ALIAS -> CLASS_VERSION_1_7_ALIAS
    java.lang.String CLASS_VERSION_1_8_ALIAS -> CLASS_VERSION_1_8_ALIAS
    java.lang.String ACC_PUBLIC -> ACC_PUBLIC
    java.lang.String ACC_PRIVATE -> ACC_PRIVATE
    java.lang.String ACC_PROTECTED -> ACC_PROTECTED
    java.lang.String ACC_STATIC -> ACC_STATIC
    java.lang.String ACC_FINAL -> ACC_FINAL
    java.lang.String ACC_SYNCHRONIZED -> ACC_SYNCHRONIZED
    java.lang.String ACC_VOLATILE -> ACC_VOLATILE
    java.lang.String ACC_TRANSIENT -> ACC_TRANSIENT
    java.lang.String ACC_BRIDGE -> ACC_BRIDGE
    java.lang.String ACC_VARARGS -> ACC_VARARGS
    java.lang.String ACC_NATIVE -> ACC_NATIVE
    java.lang.String ACC_INTERFACE -> ACC_INTERFACE
    java.lang.String ACC_ABSTRACT -> ACC_ABSTRACT
    java.lang.String ACC_STRICT -> ACC_STRICT
    java.lang.String ACC_SYNTHETIC -> ACC_SYNTHETIC
    java.lang.String ACC_ANNOTATION -> ACC_ANNOTATION
    java.lang.String ACC_ENUM -> ACC_ENUM
    java.lang.String ACC_MANDATED -> ACC_MANDATED
    char PACKAGE_SEPARATOR -> PACKAGE_SEPARATOR
    char INNER_CLASS_SEPARATOR -> INNER_CLASS_SEPARATOR
    char SPECIAL_CLASS_CHARACTER -> SPECIAL_CLASS_CHARACTER
    char SPECIAL_MEMBER_SEPARATOR -> SPECIAL_MEMBER_SEPARATOR
    char METHOD_ARGUMENTS_OPEN -> METHOD_ARGUMENTS_OPEN
    char METHOD_ARGUMENTS_CLOSE -> METHOD_ARGUMENTS_CLOSE
    char METHOD_ARGUMENTS_SEPARATOR -> METHOD_ARGUMENTS_SEPARATOR
    java.lang.String TYPE_JAVA_LANG_OBJECT -> TYPE_JAVA_LANG_OBJECT
    java.lang.String PACKAGE_JAVA_LANG -> PACKAGE_JAVA_LANG
    java.lang.String TYPE_VOID -> TYPE_VOID
    java.lang.String TYPE_BOOLEAN -> TYPE_BOOLEAN
    java.lang.String TYPE_BYTE -> TYPE_BYTE
    java.lang.String TYPE_CHAR -> TYPE_CHAR
    java.lang.String TYPE_SHORT -> TYPE_SHORT
    java.lang.String TYPE_INT -> TYPE_INT
    java.lang.String TYPE_FLOAT -> TYPE_FLOAT
    java.lang.String TYPE_LONG -> TYPE_LONG
    java.lang.String TYPE_DOUBLE -> TYPE_DOUBLE
    java.lang.String TYPE_ARRAY -> TYPE_ARRAY
proguard.classfile.LibraryClass -> proguard.classfile.LibraryClass:
    int u2accessFlags -> u2accessFlags
    java.lang.String thisClassName -> thisClassName
    java.lang.String superClassName -> superClassName
    java.lang.String[] interfaceNames -> interfaceNames
    proguard.classfile.LibraryField[] fields -> fields
    proguard.classfile.LibraryMethod[] methods -> methods
    proguard.classfile.Clazz superClass -> superClass
    proguard.classfile.Clazz[] interfaceClasses -> interfaceClasses
    proguard.classfile.Clazz[] subClasses -> subClasses
    java.lang.Object visitorInfo -> visitorInfo
    69:69:void <init>() -> <init>
    85:85:int getAccessFlags() -> getAccessFlags
    90:90:java.lang.String getName() -> getName
    96:96:java.lang.String getSuperName() -> getSuperName
    101:101:int getInterfaceCount() -> getInterfaceCount
    106:106:java.lang.String getInterfaceName(int) -> getInterfaceName
    111:111:int getTag(int) -> getTag
    116:116:java.lang.String getString(int) -> getString
    121:121:java.lang.String getStringString(int) -> getStringString
    126:126:java.lang.String getClassName(int) -> getClassName
    131:131:java.lang.String getName(int) -> getName
    136:136:java.lang.String getType(int) -> getType
    142:142:java.lang.String getRefClassName(int) -> getRefClassName
    147:147:java.lang.String getRefName(int) -> getRefName
    152:152:java.lang.String getRefType(int) -> getRefType
    158:171:void addSubClass(proguard.classfile.Clazz) -> addSubClass
    176:176:proguard.classfile.Clazz getSuperClass() -> getSuperClass
    182:182:proguard.classfile.Clazz getInterface(int) -> getInterface
    188:193:boolean extends_(proguard.classfile.Clazz) -> extends_
    200:205:boolean extends_(java.lang.String) -> extends_
    212:236:boolean extendsOrImplements(proguard.classfile.Clazz) -> extendsOrImplements
    242:266:boolean extendsOrImplements(java.lang.String) -> extendsOrImplements
    272:283:proguard.classfile.Field findField(java.lang.String,java.lang.String) -> findField
    289:300:proguard.classfile.Method findMethod(java.lang.String,java.lang.String) -> findMethod
    306:307:void accept(proguard.classfile.visitor.ClassVisitor) -> accept
    317:384:void hierarchyAccept(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor) -> hierarchyAccept
    394:398:void superClassAccept(proguard.classfile.visitor.ClassVisitor) -> superClassAccept
    408:419:void interfacesAccept(proguard.classfile.visitor.ClassVisitor) -> interfacesAccept
    424:431:void subclassesAccept(proguard.classfile.visitor.ClassVisitor) -> subclassesAccept
    437:437:void constantPoolEntriesAccept(proguard.classfile.constant.visitor.ConstantVisitor) -> constantPoolEntriesAccept
    443:443:void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor) -> constantPoolEntryAccept
    449:449:void thisClassConstantAccept(proguard.classfile.constant.visitor.ConstantVisitor) -> thisClassConstantAccept
    455:455:void superClassConstantAccept(proguard.classfile.constant.visitor.ConstantVisitor) -> superClassConstantAccept
    461:461:void interfaceConstantsAccept(proguard.classfile.constant.visitor.ConstantVisitor) -> interfaceConstantsAccept
    466:474:void fieldsAccept(proguard.classfile.visitor.MemberVisitor) -> fieldsAccept
    479:484:void fieldAccept(java.lang.String,java.lang.String,proguard.classfile.visitor.MemberVisitor) -> fieldAccept
    489:497:void methodsAccept(proguard.classfile.visitor.MemberVisitor) -> methodsAccept
    502:507:void methodAccept(java.lang.String,java.lang.String,proguard.classfile.visitor.MemberVisitor) -> methodAccept
    512:512:boolean mayHaveImplementations(proguard.classfile.Method) -> mayHaveImplementations
    524:524:void attributesAccept(proguard.classfile.attribute.visitor.AttributeVisitor) -> attributesAccept
    530:530:void attributeAccept(java.lang.String,proguard.classfile.attribute.visitor.AttributeVisitor) -> attributeAccept
    538:538:java.lang.Object getVisitorInfo() -> getVisitorInfo
    543:544:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
    551:551:java.lang.String toString() -> toString
proguard.classfile.LibraryField -> proguard.classfile.LibraryField:
    proguard.classfile.Clazz referencedClass -> referencedClass
    45:46:void <init>() -> <init>
    56:57:void <init>(int,java.lang.String,java.lang.String) -> <init>
    64:65:void accept(proguard.classfile.LibraryClass,proguard.classfile.visitor.MemberVisitor) -> accept
    72:76:void referencedClassesAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassesAccept
proguard.classfile.LibraryMember -> proguard.classfile.LibraryMember:
    int u2accessFlags -> u2accessFlags
    java.lang.String name -> name
    java.lang.String descriptor -> descriptor
    java.lang.Object visitorInfo -> visitorInfo
    46:47:void <init>() -> <init>
    56:60:void <init>(int,java.lang.String,java.lang.String) -> <init>
    void accept(proguard.classfile.LibraryClass,proguard.classfile.visitor.MemberVisitor) -> accept
    74:74:int getAccessFlags() -> getAccessFlags
    79:79:java.lang.String getName(proguard.classfile.Clazz) -> getName
    84:84:java.lang.String getDescriptor(proguard.classfile.Clazz) -> getDescriptor
    89:90:void accept(proguard.classfile.Clazz,proguard.classfile.visitor.MemberVisitor) -> accept
    97:97:java.lang.Object getVisitorInfo() -> getVisitorInfo
    102:103:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
proguard.classfile.LibraryMethod -> proguard.classfile.LibraryMethod:
    proguard.classfile.Clazz[] referencedClasses -> referencedClasses
    47:48:void <init>() -> <init>
    58:59:void <init>(int,java.lang.String,java.lang.String) -> <init>
    66:67:void accept(proguard.classfile.LibraryClass,proguard.classfile.visitor.MemberVisitor) -> accept
    74:84:void referencedClassesAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassesAccept
proguard.classfile.Member -> proguard.classfile.Member:
    int getAccessFlags() -> getAccessFlags
    java.lang.String getName(proguard.classfile.Clazz) -> getName
    java.lang.String getDescriptor(proguard.classfile.Clazz) -> getDescriptor
    void accept(proguard.classfile.Clazz,proguard.classfile.visitor.MemberVisitor) -> accept
    void referencedClassesAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassesAccept
proguard.classfile.Method -> proguard.classfile.Method:
proguard.classfile.ProgramClass -> proguard.classfile.ProgramClass:
    int u4magic -> u4magic
    int u4version -> u4version
    int u2constantPoolCount -> u2constantPoolCount
    proguard.classfile.constant.Constant[] constantPool -> constantPool
    int u2accessFlags -> u2accessFlags
    int u2thisClass -> u2thisClass
    int u2superClass -> u2superClass
    int u2interfacesCount -> u2interfacesCount
    int[] u2interfaces -> u2interfaces
    int u2fieldsCount -> u2fieldsCount
    proguard.classfile.ProgramField[] fields -> fields
    int u2methodsCount -> u2methodsCount
    proguard.classfile.ProgramMethod[] methods -> methods
    int u2attributesCount -> u2attributesCount
    proguard.classfile.attribute.Attribute[] attributes -> attributes
    proguard.classfile.Clazz[] subClasses -> subClasses
    java.lang.Object visitorInfo -> visitorInfo
    68:68:void <init>() -> <init>
    76:76:proguard.classfile.constant.Constant getConstant(int) -> getConstant
    84:84:int getAccessFlags() -> getAccessFlags
    89:89:java.lang.String getName() -> getName
    94:94:java.lang.String getSuperName() -> getSuperName
    99:99:int getInterfaceCount() -> getInterfaceCount
    104:104:java.lang.String getInterfaceName(int) -> getInterfaceName
    109:109:int getTag(int) -> getTag
    116:120:java.lang.String getString(int) -> getString
    128:132:java.lang.String getStringString(int) -> getStringString
    140:144:java.lang.String getClassName(int) -> getClassName
    152:156:java.lang.String getName(int) -> getName
    164:168:java.lang.String getType(int) -> getType
    177:181:java.lang.String getRefClassName(int) -> getRefClassName
    189:193:java.lang.String getRefName(int) -> getRefName
    201:205:java.lang.String getRefType(int) -> getRefType
    212:225:void addSubClass(proguard.classfile.Clazz) -> addSubClass
    230:230:proguard.classfile.Clazz getSuperClass() -> getSuperClass
    238:238:proguard.classfile.Clazz getInterface(int) -> getInterface
    244:250:boolean extends_(proguard.classfile.Clazz) -> extends_
    257:263:boolean extends_(java.lang.String) -> extends_
    270:292:boolean extendsOrImplements(proguard.classfile.Clazz) -> extendsOrImplements
    298:320:boolean extendsOrImplements(java.lang.String) -> extendsOrImplements
    326:336:proguard.classfile.Field findField(java.lang.String,java.lang.String) -> findField
    342:352:proguard.classfile.Method findMethod(java.lang.String,java.lang.String) -> findMethod
    358:359:void accept(proguard.classfile.visitor.ClassVisitor) -> accept
    369:436:void hierarchyAccept(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor) -> hierarchyAccept
    441:448:void subclassesAccept(proguard.classfile.visitor.ClassVisitor) -> subclassesAccept
    453:460:void constantPoolEntriesAccept(proguard.classfile.constant.visitor.ConstantVisitor) -> constantPoolEntriesAccept
    465:466:void constantPoolEntryAccept(int,proguard.classfile.constant.visitor.ConstantVisitor) -> constantPoolEntryAccept
    471:472:void thisClassConstantAccept(proguard.classfile.constant.visitor.ConstantVisitor) -> thisClassConstantAccept
    477:481:void superClassConstantAccept(proguard.classfile.constant.visitor.ConstantVisitor) -> superClassConstantAccept
    486:490:void interfaceConstantsAccept(proguard.classfile.constant.visitor.ConstantVisitor) -> interfaceConstantsAccept
    495:499:void fieldsAccept(proguard.classfile.visitor.MemberVisitor) -> fieldsAccept
    504:509:void fieldAccept(java.lang.String,java.lang.String,proguard.classfile.visitor.MemberVisitor) -> fieldAccept
    514:518:void methodsAccept(proguard.classfile.visitor.MemberVisitor) -> methodsAccept
    523:528:void methodAccept(java.lang.String,java.lang.String,proguard.classfile.visitor.MemberVisitor) -> methodAccept
    533:533:boolean mayHaveImplementations(proguard.classfile.Method) -> mayHaveImplementations
    545:549:void attributesAccept(proguard.classfile.attribute.visitor.AttributeVisitor) -> attributesAccept
    554:562:void attributeAccept(java.lang.String,proguard.classfile.attribute.visitor.AttributeVisitor) -> attributeAccept
    569:569:java.lang.Object getVisitorInfo() -> getVisitorInfo
    574:575:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
    582:582:java.lang.String toString() -> toString
proguard.classfile.ProgramField -> proguard.classfile.ProgramField:
    proguard.classfile.Clazz referencedClass -> referencedClass
    47:48:void <init>() -> <init>
    61:64:void <init>(int,int,int,int,proguard.classfile.attribute.Attribute[],proguard.classfile.Clazz) -> <init>
    71:72:void accept(proguard.classfile.ProgramClass,proguard.classfile.visitor.MemberVisitor) -> accept
    77:81:void attributesAccept(proguard.classfile.ProgramClass,proguard.classfile.attribute.visitor.AttributeVisitor) -> attributesAccept
    88:92:void referencedClassesAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassesAccept
proguard.classfile.ProgramMember -> proguard.classfile.ProgramMember:
    int u2accessFlags -> u2accessFlags
    int u2nameIndex -> u2nameIndex
    int u2descriptorIndex -> u2descriptorIndex
    int u2attributesCount -> u2attributesCount
    proguard.classfile.attribute.Attribute[] attributes -> attributes
    java.lang.Object visitorInfo -> visitorInfo
    51:52:void <init>() -> <init>
    63:69:void <init>(int,int,int,int,proguard.classfile.attribute.Attribute[]) -> <init>
    void accept(proguard.classfile.ProgramClass,proguard.classfile.visitor.MemberVisitor) -> accept
    void attributesAccept(proguard.classfile.ProgramClass,proguard.classfile.attribute.visitor.AttributeVisitor) -> attributesAccept
    110:110:int getAccessFlags() -> getAccessFlags
    115:115:java.lang.String getName(proguard.classfile.Clazz) -> getName
    120:120:java.lang.String getDescriptor(proguard.classfile.Clazz) -> getDescriptor
    125:126:void accept(proguard.classfile.Clazz,proguard.classfile.visitor.MemberVisitor) -> accept
    133:133:java.lang.Object getVisitorInfo() -> getVisitorInfo
    138:139:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
proguard.classfile.ProgramMethod -> proguard.classfile.ProgramMethod:
    proguard.classfile.Clazz[] referencedClasses -> referencedClasses
    49:50:void <init>() -> <init>
    63:66:void <init>(int,int,int,int,proguard.classfile.attribute.Attribute[],proguard.classfile.Clazz[]) -> <init>
    73:74:void accept(proguard.classfile.ProgramClass,proguard.classfile.visitor.MemberVisitor) -> accept
    79:83:void attributesAccept(proguard.classfile.ProgramClass,proguard.classfile.attribute.visitor.AttributeVisitor) -> attributesAccept
    90:100:void referencedClassesAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassesAccept
proguard.classfile.VisitorAccepter -> proguard.classfile.VisitorAccepter:
    java.lang.Object getVisitorInfo() -> getVisitorInfo
    void setVisitorInfo(java.lang.Object) -> setVisitorInfo
proguard.classfile.attribute.Attribute -> proguard.classfile.attribute.Attribute:
    int u2attributeNameIndex -> u2attributeNameIndex
    java.lang.Object visitorInfo -> visitorInfo
    50:51:void <init>() -> <init>
    58:60:void <init>(int) -> <init>
    68:68:java.lang.String getAttributeName(proguard.classfile.Clazz) -> getAttributeName
    79:79:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    88:96:void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    104:112:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    121:129:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    136:136:java.lang.Object getVisitorInfo() -> getVisitorInfo
    141:142:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
proguard.classfile.attribute.BootstrapMethodInfo -> proguard.classfile.attribute.BootstrapMethodInfo:
    int u2methodHandleIndex -> u2methodHandleIndex
    int u2methodArgumentCount -> u2methodArgumentCount
    int[] u2methodArguments -> u2methodArguments
    java.lang.Object visitorInfo -> visitorInfo
    47:48:void <init>() -> <init>
    57:61:void <init>(int,int,int[]) -> <init>
    70:75:void methodArgumentsAccept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> methodArgumentsAccept
    82:82:java.lang.Object getVisitorInfo() -> getVisitorInfo
    87:88:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
proguard.classfile.attribute.BootstrapMethodsAttribute -> proguard.classfile.attribute.BootstrapMethodsAttribute:
    int u2bootstrapMethodsCount -> u2bootstrapMethodsCount
    proguard.classfile.attribute.BootstrapMethodInfo[] bootstrapMethods -> bootstrapMethods
    41:42:void <init>() -> <init>
    52:56:void <init>(int,int,proguard.classfile.attribute.BootstrapMethodInfo[]) -> <init>
    63:64:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    72:78:void bootstrapMethodEntriesAccept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.BootstrapMethodInfoVisitor) -> bootstrapMethodEntriesAccept
    91:92:void bootstrapMethodEntryAccept(proguard.classfile.Clazz,int,proguard.classfile.attribute.visitor.BootstrapMethodInfoVisitor) -> bootstrapMethodEntryAccept
proguard.classfile.attribute.CodeAttribute -> proguard.classfile.attribute.CodeAttribute:
    int u2maxStack -> u2maxStack
    int u2maxLocals -> u2maxLocals
    int u4codeLength -> u4codeLength
    byte[] code -> code
    int u2exceptionTableLength -> u2exceptionTableLength
    proguard.classfile.attribute.ExceptionInfo[] exceptionTable -> exceptionTable
    int u2attributesCount -> u2attributesCount
    proguard.classfile.attribute.Attribute[] attributes -> attributes
    49:50:void <init>() -> <init>
    66:76:void <init>(int,int,int,int,byte[],int,proguard.classfile.attribute.ExceptionInfo[],int,proguard.classfile.attribute.Attribute[]) -> <init>
    84:93:proguard.classfile.attribute.Attribute getAttribute(proguard.classfile.Clazz,java.lang.String) -> getAttribute
    101:102:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    110:111:void instructionsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.instruction.visitor.InstructionVisitor) -> instructionsAccept
    120:122:void instructionAccept(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.instruction.visitor.InstructionVisitor) -> instructionAccept
    131:141:void instructionsAccept(proguard.classfile.Clazz,proguard.classfile.Method,int,int,proguard.classfile.instruction.visitor.InstructionVisitor) -> instructionsAccept
    149:155:void exceptionsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.ExceptionInfoVisitor) -> exceptionsAccept
    164:172:void exceptionsAccept(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.visitor.ExceptionInfoVisitor) -> exceptionsAccept
    181:189:void exceptionsAccept(proguard.classfile.Clazz,proguard.classfile.Method,int,int,proguard.classfile.attribute.visitor.ExceptionInfoVisitor) -> exceptionsAccept
    197:201:void attributesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> attributesAccept
proguard.classfile.attribute.ConstantValueAttribute -> proguard.classfile.attribute.ConstantValueAttribute:
    int u2constantValueIndex -> u2constantValueIndex
    40:41:void <init>() -> <init>
    50:53:void <init>(int,int) -> <init>
    60:61:void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.DeprecatedAttribute -> proguard.classfile.attribute.DeprecatedAttribute:
    37:38:void <init>() -> <init>
    46:47:void <init>(int) -> <init>
    54:55:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    59:60:void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    64:65:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.EnclosingMethodAttribute -> proguard.classfile.attribute.EnclosingMethodAttribute:
    int u2classIndex -> u2classIndex
    int u2nameAndTypeIndex -> u2nameAndTypeIndex
    proguard.classfile.Clazz referencedClass -> referencedClass
    proguard.classfile.Method referencedMethod -> referencedMethod
    58:59:void <init>() -> <init>
    69:73:void <init>(int,int,int) -> <init>
    81:81:java.lang.String getClassName(proguard.classfile.Clazz) -> getClassName
    89:89:java.lang.String getName(proguard.classfile.Clazz) -> getName
    97:97:java.lang.String getType(proguard.classfile.Clazz) -> getType
    106:110:void referencedClassAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassAccept
    118:123:void referencedMethodAccept(proguard.classfile.visitor.MemberVisitor) -> referencedMethodAccept
    130:131:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.ExceptionInfo -> proguard.classfile.attribute.ExceptionInfo:
    int u2startPC -> u2startPC
    int u2endPC -> u2endPC
    int u2handlerPC -> u2handlerPC
    int u2catchType -> u2catchType
    java.lang.Object visitorInfo -> visitorInfo
    48:49:void <init>() -> <init>
    59:64:void <init>(int,int,int,int) -> <init>
    73:73:boolean isApplicable(int) -> isApplicable
    84:84:boolean isApplicable(int,int) -> isApplicable
    93:93:java.lang.Object getVisitorInfo() -> getVisitorInfo
    98:99:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
proguard.classfile.attribute.ExceptionsAttribute -> proguard.classfile.attribute.ExceptionsAttribute:
    int u2exceptionIndexTableLength -> u2exceptionIndexTableLength
    int[] u2exceptionIndexTable -> u2exceptionIndexTable
    42:43:void <init>() -> <init>
    53:57:void <init>(int,int,int[]) -> <init>
    64:65:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    74:79:void exceptionEntriesAccept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> exceptionEntriesAccept
proguard.classfile.attribute.ExtendedLineNumberInfo -> proguard.classfile.attribute.ExtendedLineNumberInfo:
    java.lang.String source -> source
    40:41:void <init>() -> <init>
    51:54:void <init>(int,int,java.lang.String) -> <init>
    61:61:java.lang.String getSource() -> getSource
proguard.classfile.attribute.InnerClassesAttribute -> proguard.classfile.attribute.InnerClassesAttribute:
    int u2classesCount -> u2classesCount
    proguard.classfile.attribute.InnerClassesInfo[] classes -> classes
    41:42:void <init>() -> <init>
    52:56:void <init>(int,int,proguard.classfile.attribute.InnerClassesInfo[]) -> <init>
    64:65:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    73:79:void innerClassEntriesAccept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.InnerClassesInfoVisitor) -> innerClassEntriesAccept
proguard.classfile.attribute.InnerClassesInfo -> proguard.classfile.attribute.InnerClassesInfo:
    int u2innerClassIndex -> u2innerClassIndex
    int u2outerClassIndex -> u2outerClassIndex
    int u2innerNameIndex -> u2innerNameIndex
    int u2innerClassAccessFlags -> u2innerClassAccessFlags
    java.lang.Object visitorInfo -> visitorInfo
    31:31:void <init>() -> <init>
    49:49:int getInnerClassIndex() -> getInnerClassIndex
    57:57:int getInnerNameIndex() -> getInnerNameIndex
    65:66:void setInnerNameIndex(int) -> setInnerNameIndex
    75:79:void innerClassConstantAccept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> innerClassConstantAccept
    88:92:void outerClassConstantAccept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> outerClassConstantAccept
    101:105:void innerNameConstantAccept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> innerNameConstantAccept
    112:112:java.lang.Object getVisitorInfo() -> getVisitorInfo
    117:118:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
proguard.classfile.attribute.LineNumberInfo -> proguard.classfile.attribute.LineNumberInfo:
    int u2startPC -> u2startPC
    int u2lineNumber -> u2lineNumber
    38:39:void <init>() -> <init>
    46:49:void <init>(int,int) -> <init>
    59:59:java.lang.String getSource() -> getSource
proguard.classfile.attribute.LineNumberTableAttribute -> proguard.classfile.attribute.LineNumberTableAttribute:
    int u2lineNumberTableLength -> u2lineNumberTableLength
    proguard.classfile.attribute.LineNumberInfo[] lineNumberTable -> lineNumberTable
    41:42:void <init>() -> <init>
    52:56:void <init>(int,int,proguard.classfile.attribute.LineNumberInfo[]) -> <init>
    65:67:int getLineNumber(int) -> getLineNumber
    77:79:java.lang.String getSource(int) -> getSource
    89:98:proguard.classfile.attribute.LineNumberInfo getLineNumberInfo(int) -> getLineNumberInfo
    110:125:int getLowestLineNumber() -> getLowestLineNumber
    135:150:int getHighestLineNumber() -> getHighestLineNumber
    158:159:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    167:173:void lineNumbersAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.LineNumberInfoVisitor) -> lineNumbersAccept
proguard.classfile.attribute.LocalVariableInfo -> proguard.classfile.attribute.LocalVariableInfo:
    int u2startPC -> u2startPC
    int u2length -> u2length
    int u2nameIndex -> u2nameIndex
    int u2descriptorIndex -> u2descriptorIndex
    int u2index -> u2index
    proguard.classfile.Clazz referencedClass -> referencedClass
    java.lang.Object visitorInfo -> visitorInfo
    57:58:void <init>() -> <init>
    69:75:void <init>(int,int,int,int,int) -> <init>
    83:83:java.lang.String getName(proguard.classfile.Clazz) -> getName
    92:92:java.lang.String getDescriptor(proguard.classfile.Clazz) -> getDescriptor
    101:105:void referencedClassAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassAccept
    112:112:java.lang.Object getVisitorInfo() -> getVisitorInfo
    117:118:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
    125:127:int compareTo(java.lang.Object) -> compareTo
proguard.classfile.attribute.LocalVariableTableAttribute -> proguard.classfile.attribute.LocalVariableTableAttribute:
    int u2localVariableTableLength -> u2localVariableTableLength
    proguard.classfile.attribute.LocalVariableInfo[] localVariableTable -> localVariableTable
    41:42:void <init>() -> <init>
    52:56:void <init>(int,int,proguard.classfile.attribute.LocalVariableInfo[]) -> <init>
    63:64:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    72:78:void localVariablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.LocalVariableInfoVisitor) -> localVariablesAccept
proguard.classfile.attribute.LocalVariableTypeInfo -> proguard.classfile.attribute.LocalVariableTypeInfo:
    int u2startPC -> u2startPC
    int u2length -> u2length
    int u2nameIndex -> u2nameIndex
    int u2signatureIndex -> u2signatureIndex
    int u2index -> u2index
    proguard.classfile.Clazz[] referencedClasses -> referencedClasses
    java.lang.Object visitorInfo -> visitorInfo
    58:59:void <init>() -> <init>
    70:76:void <init>(int,int,int,int,int) -> <init>
    84:84:java.lang.String getName(proguard.classfile.Clazz) -> getName
    93:93:java.lang.String getSignature(proguard.classfile.Clazz) -> getSignature
    102:113:void referencedClassesAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassesAccept
    120:120:java.lang.Object getVisitorInfo() -> getVisitorInfo
    125:126:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
    133:135:int compareTo(java.lang.Object) -> compareTo
proguard.classfile.attribute.LocalVariableTypeTableAttribute -> proguard.classfile.attribute.LocalVariableTypeTableAttribute:
    int u2localVariableTypeTableLength -> u2localVariableTypeTableLength
    proguard.classfile.attribute.LocalVariableTypeInfo[] localVariableTypeTable -> localVariableTypeTable
    41:42:void <init>() -> <init>
    52:56:void <init>(int,int,proguard.classfile.attribute.LocalVariableTypeInfo[]) -> <init>
    63:64:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    72:78:void localVariablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.LocalVariableTypeInfoVisitor) -> localVariablesAccept
proguard.classfile.attribute.MethodParametersAttribute -> proguard.classfile.attribute.MethodParametersAttribute:
    int u1parametersCount -> u1parametersCount
    proguard.classfile.attribute.ParameterInfo[] parameters -> parameters
    41:42:void <init>() -> <init>
    52:56:void <init>(int,int,proguard.classfile.attribute.ParameterInfo[]) -> <init>
    63:64:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    73:79:void parametersAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.ParameterInfoVisitor) -> parametersAccept
proguard.classfile.attribute.ParameterInfo -> proguard.classfile.attribute.ParameterInfo:
    int u2nameIndex -> u2nameIndex
    int u2accessFlags -> u2accessFlags
    java.lang.Object visitorInfo -> visitorInfo
    46:47:void <init>() -> <init>
    55:58:void <init>(int,int) -> <init>
    66:66:java.lang.String getName(proguard.classfile.Clazz) -> getName
    74:74:java.lang.Object getVisitorInfo() -> getVisitorInfo
    79:80:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
proguard.classfile.attribute.SignatureAttribute -> proguard.classfile.attribute.SignatureAttribute:
    int u2signatureIndex -> u2signatureIndex
    proguard.classfile.Clazz[] referencedClasses -> referencedClasses
    51:52:void <init>() -> <init>
    61:64:void <init>(int,int) -> <init>
    72:72:java.lang.String getSignature(proguard.classfile.Clazz) -> getSignature
    82:92:void referencedClassesAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassesAccept
    99:100:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    104:105:void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    109:110:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.SourceDirAttribute -> proguard.classfile.attribute.SourceDirAttribute:
    int u2sourceDirIndex -> u2sourceDirIndex
    40:41:void <init>() -> <init>
    50:53:void <init>(int,int) -> <init>
    60:61:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.SourceFileAttribute -> proguard.classfile.attribute.SourceFileAttribute:
    int u2sourceFileIndex -> u2sourceFileIndex
    40:41:void <init>() -> <init>
    50:53:void <init>(int,int) -> <init>
    60:61:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.SyntheticAttribute -> proguard.classfile.attribute.SyntheticAttribute:
    37:38:void <init>() -> <init>
    46:47:void <init>(int) -> <init>
    54:55:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    59:60:void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    64:65:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.UnknownAttribute -> proguard.classfile.attribute.UnknownAttribute:
    int u4attributeLength -> u4attributeLength
    byte[] info -> info
    45:46:void <init>(int,int) -> <init>
    56:60:void <init>(int,int,byte[]) -> <init>
    67:68:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    72:73:void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    77:78:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    82:83:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.annotation.Annotation -> proguard.classfile.attribute.annotation.Annotation:
    int u2typeIndex -> u2typeIndex
    int u2elementValuesCount -> u2elementValuesCount
    proguard.classfile.attribute.annotation.ElementValue[] elementValues -> elementValues
    proguard.classfile.Clazz[] referencedClasses -> referencedClasses
    java.lang.Object visitorInfo -> visitorInfo
    57:58:void <init>() -> <init>
    67:71:void <init>(int,int,proguard.classfile.attribute.annotation.ElementValue[]) -> <init>
    79:79:java.lang.String getType(proguard.classfile.Clazz) -> getType
    90:98:void referencedClassAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassAccept
    106:117:void referencedClassesAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassesAccept
    125:129:void elementValuesAccept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.visitor.ElementValueVisitor) -> elementValuesAccept
    136:136:java.lang.Object getVisitorInfo() -> getVisitorInfo
    141:142:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
proguard.classfile.attribute.annotation.AnnotationDefaultAttribute -> proguard.classfile.attribute.annotation.AnnotationDefaultAttribute:
    proguard.classfile.attribute.annotation.ElementValue defaultValue -> defaultValue
    42:43:void <init>() -> <init>
    52:55:void <init>(int,proguard.classfile.attribute.annotation.ElementValue) -> <init>
    63:64:void defaultValueAccept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.visitor.ElementValueVisitor) -> defaultValueAccept
    71:72:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.annotation.AnnotationElementValue -> proguard.classfile.attribute.annotation.AnnotationElementValue:
    proguard.classfile.attribute.annotation.Annotation annotationValue -> annotationValue
    40:41:void <init>() -> <init>
    50:53:void <init>(int,proguard.classfile.attribute.annotation.Annotation) -> <init>
    61:62:void annotationAccept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.visitor.AnnotationVisitor) -> annotationAccept
    69:69:char getTag() -> getTag
    74:75:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.visitor.ElementValueVisitor) -> accept
proguard.classfile.attribute.annotation.AnnotationsAttribute -> proguard.classfile.attribute.annotation.AnnotationsAttribute:
    int u2annotationsCount -> u2annotationsCount
    proguard.classfile.attribute.annotation.Annotation[] annotations -> annotations
    42:43:void <init>() -> <init>
    53:57:void <init>(int,int,proguard.classfile.attribute.annotation.Annotation[]) -> <init>
    65:71:void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.visitor.AnnotationVisitor) -> annotationsAccept
    79:85:void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.visitor.AnnotationVisitor) -> annotationsAccept
    93:99:void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.visitor.AnnotationVisitor) -> annotationsAccept
    107:113:void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.visitor.AnnotationVisitor) -> annotationsAccept
proguard.classfile.attribute.annotation.ArrayElementValue -> proguard.classfile.attribute.annotation.ArrayElementValue:
    int u2elementValuesCount -> u2elementValuesCount
    proguard.classfile.attribute.annotation.ElementValue[] elementValues -> elementValues
    41:42:void <init>() -> <init>
    52:56:void <init>(int,int,proguard.classfile.attribute.annotation.ElementValue[]) -> <init>
    63:63:char getTag() -> getTag
    68:69:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.visitor.ElementValueVisitor) -> accept
    77:81:void elementValuesAccept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.visitor.ElementValueVisitor) -> elementValuesAccept
proguard.classfile.attribute.annotation.ClassElementValue -> proguard.classfile.attribute.annotation.ClassElementValue:
    int u2classInfoIndex -> u2classInfoIndex
    proguard.classfile.Clazz[] referencedClasses -> referencedClasses
    49:50:void <init>() -> <init>
    59:62:void <init>(int,int) -> <init>
    70:70:java.lang.String getClassName(proguard.classfile.Clazz) -> getClassName
    79:90:void referencedClassesAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassesAccept
    97:97:char getTag() -> getTag
    102:103:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.visitor.ElementValueVisitor) -> accept
proguard.classfile.attribute.annotation.ConstantElementValue -> proguard.classfile.attribute.annotation.ConstantElementValue:
    char u1tag -> u1tag
    int u2constantValueIndex -> u2constantValueIndex
    41:43:void <init>(char) -> <init>
    53:57:void <init>(char,int,int) -> <init>
    64:64:char getTag() -> getTag
    69:70:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.visitor.ElementValueVisitor) -> accept
proguard.classfile.attribute.annotation.ElementValue -> proguard.classfile.attribute.annotation.ElementValue:
    int u2elementNameIndex -> u2elementNameIndex
    proguard.classfile.Clazz referencedClass -> referencedClass
    proguard.classfile.Method referencedMethod -> referencedMethod
    java.lang.Object visitorInfo -> visitorInfo
    66:67:void <init>() -> <init>
    74:76:void <init>(int) -> <init>
    84:84:java.lang.String getMethodName(proguard.classfile.Clazz) -> getMethodName
    char getTag() -> getTag
    void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.visitor.ElementValueVisitor) -> accept
    108:112:void referencedMethodAccept(proguard.classfile.visitor.MemberVisitor) -> referencedMethodAccept
    119:119:java.lang.Object getVisitorInfo() -> getVisitorInfo
    124:125:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
proguard.classfile.attribute.annotation.EnumConstantElementValue -> proguard.classfile.attribute.annotation.EnumConstantElementValue:
    int u2typeNameIndex -> u2typeNameIndex
    int u2constantNameIndex -> u2constantNameIndex
    proguard.classfile.Clazz[] referencedClasses -> referencedClasses
    proguard.classfile.Field referencedField -> referencedField
    59:60:void <init>() -> <init>
    70:74:void <init>(int,int,int) -> <init>
    82:82:java.lang.String getTypeName(proguard.classfile.Clazz) -> getTypeName
    91:91:java.lang.String getConstantName(proguard.classfile.Clazz) -> getConstantName
    100:111:void referencedClassesAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassesAccept
    119:124:void referencedFieldAccept(proguard.classfile.visitor.MemberVisitor) -> referencedFieldAccept
    131:131:char getTag() -> getTag
    136:137:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.visitor.ElementValueVisitor) -> accept
proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute -> proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute:
    int u1parametersCount -> u1parametersCount
    int[] u2parameterAnnotationsCount -> u2parameterAnnotationsCount
    proguard.classfile.attribute.annotation.Annotation[][] parameterAnnotations -> parameterAnnotations
    43:44:void <init>() -> <init>
    55:60:void <init>(int,int,int[],proguard.classfile.attribute.annotation.Annotation[][]) -> <init>
    69:82:void annotationsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.visitor.AnnotationVisitor) -> annotationsAccept
proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute -> proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute:
    37:38:void <init>() -> <init>
    48:49:void <init>(int,int,proguard.classfile.attribute.annotation.Annotation[]) -> <init>
    56:57:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    62:63:void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    68:69:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.annotation.RuntimeInvisibleParameterAnnotationsAttribute -> proguard.classfile.attribute.annotation.RuntimeInvisibleParameterAnnotationsAttribute:
    37:38:void <init>() -> <init>
    49:53:void <init>(int,int,int[],proguard.classfile.attribute.annotation.Annotation[][]) -> <init>
    60:61:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute -> proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute:
    38:39:void <init>() -> <init>
    49:50:void <init>(int,int,proguard.classfile.attribute.annotation.TypeAnnotation[]) -> <init>
    57:58:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    63:64:void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    69:70:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    75:76:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute -> proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute:
    37:38:void <init>() -> <init>
    48:49:void <init>(int,int,proguard.classfile.attribute.annotation.Annotation[]) -> <init>
    56:57:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    62:63:void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    68:69:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.annotation.RuntimeVisibleParameterAnnotationsAttribute -> proguard.classfile.attribute.annotation.RuntimeVisibleParameterAnnotationsAttribute:
    37:38:void <init>() -> <init>
    49:53:void <init>(int,int,int[],proguard.classfile.attribute.annotation.Annotation[][]) -> <init>
    60:61:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute -> proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute:
    38:39:void <init>() -> <init>
    49:50:void <init>(int,int,proguard.classfile.attribute.annotation.TypeAnnotation[]) -> <init>
    57:58:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    63:64:void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    69:70:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    75:76:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
proguard.classfile.attribute.annotation.TypeAnnotation -> proguard.classfile.attribute.annotation.TypeAnnotation:
    proguard.classfile.attribute.annotation.target.TargetInfo targetInfo -> targetInfo
    proguard.classfile.attribute.annotation.TypePathInfo[] typePath -> typePath
    44:45:void <init>() -> <init>
    57:61:void <init>(int,int,proguard.classfile.attribute.annotation.ElementValue[],proguard.classfile.attribute.annotation.target.TargetInfo,proguard.classfile.attribute.annotation.TypePathInfo[]) -> <init>
    71:72:void targetInfoAccept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> targetInfoAccept
    82:83:void targetInfoAccept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> targetInfoAccept
    93:94:void targetInfoAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> targetInfoAccept
    104:105:void targetInfoAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> targetInfoAccept
    113:119:void typePathInfosAccept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.visitor.TypePathInfoVisitor) -> typePathInfosAccept
    127:133:void typePathInfosAccept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.visitor.TypePathInfoVisitor) -> typePathInfosAccept
    141:147:void typePathInfosAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.visitor.TypePathInfoVisitor) -> typePathInfosAccept
    155:161:void typePathInfosAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.visitor.TypePathInfoVisitor) -> typePathInfosAccept
proguard.classfile.attribute.annotation.TypeAnnotationsAttribute -> proguard.classfile.attribute.annotation.TypeAnnotationsAttribute:
    37:38:void <init>() -> <init>
    48:49:void <init>(int,int,proguard.classfile.attribute.annotation.TypeAnnotation[]) -> <init>
    57:65:void typeAnnotationsAccept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.visitor.TypeAnnotationVisitor) -> typeAnnotationsAccept
    73:81:void typeAnnotationsAccept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.visitor.TypeAnnotationVisitor) -> typeAnnotationsAccept
    89:97:void typeAnnotationsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.visitor.TypeAnnotationVisitor) -> typeAnnotationsAccept
proguard.classfile.attribute.annotation.TypePathInfo -> proguard.classfile.attribute.annotation.TypePathInfo:
    int u1typePathKind -> u1typePathKind
    int u1typeArgumentIndex -> u1typeArgumentIndex
    38:39:void <init>() -> <init>
    46:49:void <init>(int,int) -> <init>
proguard.classfile.attribute.annotation.target.CatchTargetInfo -> proguard.classfile.attribute.annotation.target.CatchTargetInfo:
    int u2exceptionTableIndex -> u2exceptionTableIndex
    42:43:void <init>() -> <init>
    51:52:void <init>(byte) -> <init>
    61:64:void <init>(byte,int) -> <init>
    74:75:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    80:81:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
proguard.classfile.attribute.annotation.target.EmptyTargetInfo -> proguard.classfile.attribute.annotation.target.EmptyTargetInfo:
    38:39:void <init>() -> <init>
    47:48:void <init>(byte) -> <init>
    58:59:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    64:65:void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    70:71:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
proguard.classfile.attribute.annotation.target.FormalParameterTargetInfo -> proguard.classfile.attribute.annotation.target.FormalParameterTargetInfo:
    int u1formalParameterIndex -> u1formalParameterIndex
    41:42:void <init>() -> <init>
    50:51:void <init>(byte) -> <init>
    60:63:void <init>(byte,int) -> <init>
    73:74:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    79:80:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
proguard.classfile.attribute.annotation.target.LocalVariableTargetElement -> proguard.classfile.attribute.annotation.target.LocalVariableTargetElement:
    int u2startPC -> u2startPC
    int u2length -> u2length
    int u2index -> u2index
    38:39:void <init>() -> <init>
    48:52:void <init>(int,int,int) -> <init>
proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo -> proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo:
    int u2tableLength -> u2tableLength
    proguard.classfile.attribute.annotation.target.LocalVariableTargetElement[] table -> table
    43:44:void <init>() -> <init>
    52:53:void <init>(byte) -> <init>
    63:67:void <init>(byte,int,proguard.classfile.attribute.annotation.target.LocalVariableTargetElement[]) -> <init>
    75:81:void targetElementsAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.LocalVariableTargetElementVisitor) -> targetElementsAccept
    91:92:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    97:98:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
proguard.classfile.attribute.annotation.target.OffsetTargetInfo -> proguard.classfile.attribute.annotation.target.OffsetTargetInfo:
    int u2offset -> u2offset
    42:43:void <init>() -> <init>
    51:52:void <init>(byte) -> <init>
    61:64:void <init>(byte,int) -> <init>
    74:75:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    80:81:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
proguard.classfile.attribute.annotation.target.SuperTypeTargetInfo -> proguard.classfile.attribute.annotation.target.SuperTypeTargetInfo:
    int u2superTypeIndex -> u2superTypeIndex
    41:42:void <init>() -> <init>
    50:51:void <init>(byte) -> <init>
    60:63:void <init>(byte,int) -> <init>
    70:71:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
proguard.classfile.attribute.annotation.target.TargetInfo -> proguard.classfile.attribute.annotation.target.TargetInfo:
    byte u1targetType -> u1targetType
    42:43:void <init>() -> <init>
    50:52:void <init>(byte) -> <init>
    60:60:byte getTargetType() -> getTargetType
    71:71:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    79:79:void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    87:87:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    95:95:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
proguard.classfile.attribute.annotation.target.ThrowsTargetInfo -> proguard.classfile.attribute.annotation.target.ThrowsTargetInfo:
    int u2throwsTypeIndex -> u2throwsTypeIndex
    41:42:void <init>() -> <init>
    50:51:void <init>(byte) -> <init>
    60:63:void <init>(byte,int) -> <init>
    73:74:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    79:80:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
proguard.classfile.attribute.annotation.target.TypeArgumentTargetInfo -> proguard.classfile.attribute.annotation.target.TypeArgumentTargetInfo:
    int u2offset -> u2offset
    int u1typeArgumentIndex -> u1typeArgumentIndex
    43:44:void <init>() -> <init>
    52:53:void <init>(byte) -> <init>
    63:67:void <init>(byte,int,int) -> <init>
    77:78:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    83:84:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
proguard.classfile.attribute.annotation.target.TypeParameterBoundTargetInfo -> proguard.classfile.attribute.annotation.target.TypeParameterBoundTargetInfo:
    int u1typeParameterIndex -> u1typeParameterIndex
    int u1boundIndex -> u1boundIndex
    42:43:void <init>() -> <init>
    51:52:void <init>(byte) -> <init>
    62:66:void <init>(byte,int,int) -> <init>
    73:74:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    79:80:void accept(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    85:86:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
proguard.classfile.attribute.annotation.target.TypeParameterTargetInfo -> proguard.classfile.attribute.annotation.target.TypeParameterTargetInfo:
    int u1typeParameterIndex -> u1typeParameterIndex
    42:43:void <init>() -> <init>
    51:52:void <init>(byte) -> <init>
    61:64:void <init>(byte,int) -> <init>
    71:72:void accept(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
    77:78:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor) -> accept
proguard.classfile.attribute.annotation.target.visitor.LocalVariableTargetElementVisitor -> proguard.classfile.attribute.annotation.target.visitor.LocalVariableTargetElementVisitor:
    void visitLocalVariableTargetElement(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo,proguard.classfile.attribute.annotation.target.LocalVariableTargetElement) -> visitLocalVariableTargetElement
proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor -> proguard.classfile.attribute.annotation.target.visitor.TargetInfoVisitor:
    void visitTypeParameterTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterTargetInfo) -> visitTypeParameterTargetInfo
    void visitTypeParameterTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterTargetInfo) -> visitTypeParameterTargetInfo
    void visitSuperTypeTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.SuperTypeTargetInfo) -> visitSuperTypeTargetInfo
    void visitTypeParameterBoundTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterBoundTargetInfo) -> visitTypeParameterBoundTargetInfo
    void visitTypeParameterBoundTargetInfo(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterBoundTargetInfo) -> visitTypeParameterBoundTargetInfo
    void visitTypeParameterBoundTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterBoundTargetInfo) -> visitTypeParameterBoundTargetInfo
    void visitEmptyTargetInfo(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.EmptyTargetInfo) -> visitEmptyTargetInfo
    void visitEmptyTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.EmptyTargetInfo) -> visitEmptyTargetInfo
    void visitFormalParameterTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.FormalParameterTargetInfo) -> visitFormalParameterTargetInfo
    void visitThrowsTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.ThrowsTargetInfo) -> visitThrowsTargetInfo
    void visitLocalVariableTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo) -> visitLocalVariableTargetInfo
    void visitCatchTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.CatchTargetInfo) -> visitCatchTargetInfo
    void visitOffsetTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.OffsetTargetInfo) -> visitOffsetTargetInfo
    void visitTypeArgumentTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeArgumentTargetInfo) -> visitTypeArgumentTargetInfo
proguard.classfile.attribute.annotation.visitor.AllAnnotationVisitor -> proguard.classfile.attribute.annotation.visitor.AllAnnotationVisitor:
    proguard.classfile.attribute.annotation.visitor.AnnotationVisitor annotationVisitor -> a
    48:50:void <init>(proguard.classfile.attribute.annotation.visitor.AnnotationVisitor) -> <init>
    55:55:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    61:62:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    68:69:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    75:76:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    82:83:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    89:90:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    96:97:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    103:104:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    110:111:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    117:118:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    124:125:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    131:132:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    138:139:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    145:146:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    152:153:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    159:160:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
proguard.classfile.attribute.annotation.visitor.AllElementValueVisitor -> proguard.classfile.attribute.annotation.visitor.AllElementValueVisitor:
    boolean deep -> a
    proguard.classfile.attribute.annotation.visitor.ElementValueVisitor elementValueVisitor -> b
    53:54:void <init>(proguard.classfile.attribute.annotation.visitor.ElementValueVisitor) -> <init>
    67:70:void <init>(boolean,proguard.classfile.attribute.annotation.visitor.ElementValueVisitor) -> <init>
    75:75:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    81:82:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    88:89:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    95:96:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    102:103:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    109:110:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    116:117:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    123:124:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    130:131:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    138:139:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    144:145:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    150:151:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    156:157:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    162:163:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    170:171:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    176:177:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    182:183:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    188:194:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    199:205:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
proguard.classfile.attribute.annotation.visitor.AnnotatedClassVisitor -> proguard.classfile.attribute.annotation.visitor.AnnotatedClassVisitor:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    proguard.classfile.Clazz lastVisitedClass -> b
    46:48:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    55:61:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
proguard.classfile.attribute.annotation.visitor.AnnotationToMemberVisitor -> proguard.classfile.attribute.annotation.visitor.AnnotationToMemberVisitor:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    proguard.classfile.Member lastVisitedMember -> b
    46:48:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    55:61:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
proguard.classfile.attribute.annotation.visitor.AnnotationTypeFilter -> proguard.classfile.attribute.annotation.visitor.AnnotationTypeFilter:
    proguard.util.StringMatcher regularExpressionMatcher -> a
    proguard.classfile.attribute.annotation.visitor.AnnotationVisitor annotationVisitor -> b
    51:54:void <init>(java.lang.String,proguard.classfile.attribute.annotation.visitor.AnnotationVisitor) -> <init>
    61:65:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    70:74:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    79:83:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    88:92:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    97:101:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    108:108:boolean accepted(java.lang.String) -> a
proguard.classfile.attribute.annotation.visitor.AnnotationVisitor -> proguard.classfile.attribute.annotation.visitor.AnnotationVisitor:
    void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
proguard.classfile.attribute.annotation.visitor.ElementValueVisitor -> proguard.classfile.attribute.annotation.visitor.ElementValueVisitor:
    void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
proguard.classfile.attribute.annotation.visitor.TypeAnnotationVisitor -> proguard.classfile.attribute.annotation.visitor.TypeAnnotationVisitor:
    void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
proguard.classfile.attribute.annotation.visitor.TypePathInfoVisitor -> proguard.classfile.attribute.annotation.visitor.TypePathInfoVisitor:
    void visitTypePathInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.TypePathInfo) -> visitTypePathInfo
    void visitTypePathInfo(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.TypePathInfo) -> visitTypePathInfo
    void visitTypePathInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.TypePathInfo) -> visitTypePathInfo
    void visitTypePathInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.TypePathInfo) -> visitTypePathInfo
proguard.classfile.attribute.preverification.DoubleType -> proguard.classfile.attribute.preverification.DoubleType:
    32:32:void <init>() -> <init>
    38:38:int getTag() -> getTag
    44:45:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> accept
    50:51:void stackAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> stackAccept
    56:57:void variablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> variablesAccept
    64:64:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.FloatType -> proguard.classfile.attribute.preverification.FloatType:
    32:32:void <init>() -> <init>
    38:38:int getTag() -> getTag
    44:45:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> accept
    50:51:void stackAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> stackAccept
    56:57:void variablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> variablesAccept
    64:64:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.FullFrame -> proguard.classfile.attribute.preverification.FullFrame:
    int variablesCount -> variablesCount
    proguard.classfile.attribute.preverification.VerificationType[] variables -> variables
    int stackCount -> stackCount
    proguard.classfile.attribute.preverification.VerificationType[] stack -> stack
    44:45:void <init>() -> <init>
    55:60:void <init>(int,proguard.classfile.attribute.preverification.VerificationType[],proguard.classfile.attribute.preverification.VerificationType[]) -> <init>
    71:77:void <init>(int,int,proguard.classfile.attribute.preverification.VerificationType[],int,proguard.classfile.attribute.preverification.VerificationType[]) -> <init>
    85:89:void variablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> variablesAccept
    97:101:void stackAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> stackAccept
    108:108:int getTag() -> getTag
    114:115:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor) -> accept
    122:158:boolean equals(java.lang.Object) -> equals
    164:176:int hashCode() -> hashCode
    182:200:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.IntegerType -> proguard.classfile.attribute.preverification.IntegerType:
    32:32:void <init>() -> <init>
    38:38:int getTag() -> getTag
    44:45:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> accept
    50:51:void stackAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> stackAccept
    56:57:void variablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> variablesAccept
    64:64:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.LessZeroFrame -> proguard.classfile.attribute.preverification.LessZeroFrame:
    int choppedVariablesCount -> choppedVariablesCount
    41:42:void <init>() -> <init>
    49:51:void <init>(int) -> <init>
    58:60:void <init>(byte) -> <init>
    67:67:int getTag() -> getTag
    73:74:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor) -> accept
    81:88:boolean equals(java.lang.Object) -> equals
    95:95:int hashCode() -> hashCode
    101:101:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.LongType -> proguard.classfile.attribute.preverification.LongType:
    32:32:void <init>() -> <init>
    38:38:int getTag() -> getTag
    44:45:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> accept
    50:51:void stackAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> stackAccept
    56:57:void variablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> variablesAccept
    64:64:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.MoreZeroFrame -> proguard.classfile.attribute.preverification.MoreZeroFrame:
    int additionalVariablesCount -> additionalVariablesCount
    proguard.classfile.attribute.preverification.VerificationType[] additionalVariables -> additionalVariables
    42:43:void <init>() -> <init>
    50:52:void <init>(int) -> <init>
    60:61:void <init>(proguard.classfile.attribute.preverification.VerificationType[]) -> <init>
    69:72:void <init>(int,proguard.classfile.attribute.preverification.VerificationType[]) -> <init>
    80:84:void additionalVariablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> additionalVariablesAccept
    91:91:int getTag() -> getTag
    97:98:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor) -> accept
    105:129:boolean equals(java.lang.Object) -> equals
    135:142:int hashCode() -> hashCode
    148:159:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.NullType -> proguard.classfile.attribute.preverification.NullType:
    32:32:void <init>() -> <init>
    38:38:int getTag() -> getTag
    44:45:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> accept
    50:51:void stackAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> stackAccept
    56:57:void variablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> variablesAccept
    64:64:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.ObjectType -> proguard.classfile.attribute.preverification.ObjectType:
    int u2classIndex -> u2classIndex
    42:43:void <init>() -> <init>
    50:52:void <init>(int) -> <init>
    59:59:int getTag() -> getTag
    65:66:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> accept
    71:72:void stackAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> stackAccept
    77:78:void variablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> variablesAccept
    85:92:boolean equals(java.lang.Object) -> equals
    98:98:int hashCode() -> hashCode
    105:105:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.SameOneFrame -> proguard.classfile.attribute.preverification.SameOneFrame:
    proguard.classfile.attribute.preverification.VerificationType stackItem -> stackItem
    42:43:void <init>() -> <init>
    50:52:void <init>(int) -> <init>
    59:61:void <init>(proguard.classfile.attribute.preverification.VerificationType) -> <init>
    69:70:void stackItemAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> stackItemAccept
    77:77:int getTag() -> getTag
    85:86:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor) -> accept
    93:100:boolean equals(java.lang.Object) -> equals
    107:107:int hashCode() -> hashCode
    113:113:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.SameZeroFrame -> proguard.classfile.attribute.preverification.SameZeroFrame:
    39:40:void <init>() -> <init>
    47:49:void <init>(int) -> <init>
    56:56:int getTag() -> getTag
    64:65:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor) -> accept
    72:72:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.StackMapAttribute -> proguard.classfile.attribute.preverification.StackMapAttribute:
    int u2stackMapFramesCount -> u2stackMapFramesCount
    proguard.classfile.attribute.preverification.FullFrame[] stackMapFrames -> stackMapFrames
    43:44:void <init>() -> <init>
    52:53:void <init>(proguard.classfile.attribute.preverification.FullFrame[]) -> <init>
    61:64:void <init>(int,proguard.classfile.attribute.preverification.FullFrame[]) -> <init>
    73:74:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    82:90:void stackMapFramesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor) -> stackMapFramesAccept
proguard.classfile.attribute.preverification.StackMapFrame -> proguard.classfile.attribute.preverification.StackMapFrame:
    int SAME_ZERO_FRAME -> SAME_ZERO_FRAME
    int SAME_ONE_FRAME -> SAME_ONE_FRAME
    int SAME_ONE_FRAME_EXTENDED -> SAME_ONE_FRAME_EXTENDED
    int LESS_ZERO_FRAME -> LESS_ZERO_FRAME
    int SAME_ZERO_FRAME_EXTENDED -> SAME_ZERO_FRAME_EXTENDED
    int MORE_ZERO_FRAME -> MORE_ZERO_FRAME
    int FULL_FRAME -> FULL_FRAME
    int u2offsetDelta -> u2offsetDelta
    java.lang.Object visitorInfo -> visitorInfo
    33:33:void <init>() -> <init>
    59:59:int getOffsetDelta() -> getOffsetDelta
    int getTag() -> getTag
    void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor) -> accept
    81:81:java.lang.Object getVisitorInfo() -> getVisitorInfo
    86:87:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
    94:102:boolean equals(java.lang.Object) -> equals
    108:108:int hashCode() -> hashCode
    115:115:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.StackMapTableAttribute -> proguard.classfile.attribute.preverification.StackMapTableAttribute:
    int u2stackMapFramesCount -> u2stackMapFramesCount
    proguard.classfile.attribute.preverification.StackMapFrame[] stackMapFrames -> stackMapFrames
    43:44:void <init>() -> <init>
    52:53:void <init>(proguard.classfile.attribute.preverification.StackMapFrame[]) -> <init>
    61:64:void <init>(int,proguard.classfile.attribute.preverification.StackMapFrame[]) -> <init>
    71:72:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.visitor.AttributeVisitor) -> accept
    80:92:void stackMapFramesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor) -> stackMapFramesAccept
proguard.classfile.attribute.preverification.TopType -> proguard.classfile.attribute.preverification.TopType:
    32:32:void <init>() -> <init>
    38:38:int getTag() -> getTag
    44:45:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> accept
    50:51:void stackAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> stackAccept
    56:57:void variablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> variablesAccept
    64:64:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.UninitializedThisType -> proguard.classfile.attribute.preverification.UninitializedThisType:
    32:32:void <init>() -> <init>
    38:38:int getTag() -> getTag
    44:45:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> accept
    50:51:void stackAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> stackAccept
    56:57:void variablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> variablesAccept
    64:64:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.UninitializedType -> proguard.classfile.attribute.preverification.UninitializedType:
    int u2newInstructionOffset -> u2newInstructionOffset
    41:42:void <init>() -> <init>
    49:51:void <init>(int) -> <init>
    58:58:int getTag() -> getTag
    64:65:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> accept
    70:71:void stackAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> stackAccept
    76:77:void variablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> variablesAccept
    84:91:boolean equals(java.lang.Object) -> equals
    97:97:int hashCode() -> hashCode
    104:104:java.lang.String toString() -> toString
proguard.classfile.attribute.preverification.VerificationType -> proguard.classfile.attribute.preverification.VerificationType:
    int TOP_TYPE -> TOP_TYPE
    int INTEGER_TYPE -> INTEGER_TYPE
    int FLOAT_TYPE -> FLOAT_TYPE
    int DOUBLE_TYPE -> DOUBLE_TYPE
    int LONG_TYPE -> LONG_TYPE
    int NULL_TYPE -> NULL_TYPE
    int UNINITIALIZED_THIS_TYPE -> UNINITIALIZED_THIS_TYPE
    int OBJECT_TYPE -> OBJECT_TYPE
    int UNINITIALIZED_TYPE -> UNINITIALIZED_TYPE
    java.lang.Object visitorInfo -> visitorInfo
    33:33:void <init>() -> <init>
    int getTag() -> getTag
    void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> accept
    void stackAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> stackAccept
    void variablesAccept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor) -> variablesAccept
    81:81:java.lang.Object getVisitorInfo() -> getVisitorInfo
    86:87:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
    94:94:boolean equals(java.lang.Object) -> equals
    101:101:int hashCode() -> hashCode
proguard.classfile.attribute.preverification.VerificationTypeFactory -> proguard.classfile.attribute.preverification.VerificationTypeFactory:
    proguard.classfile.attribute.preverification.IntegerType INTEGER_TYPE -> a
    proguard.classfile.attribute.preverification.LongType LONG_TYPE -> b
    proguard.classfile.attribute.preverification.FloatType FLOAT_TYPE -> c
    proguard.classfile.attribute.preverification.DoubleType DOUBLE_TYPE -> d
    proguard.classfile.attribute.preverification.TopType TOP_TYPE -> e
    proguard.classfile.attribute.preverification.NullType NULL_TYPE -> f
    proguard.classfile.attribute.preverification.UninitializedThisType UNINITIALIZED_THIS_TYPE -> g
    28:28:void <init>() -> <init>
    45:45:proguard.classfile.attribute.preverification.IntegerType createIntegerType() -> createIntegerType
    53:53:proguard.classfile.attribute.preverification.LongType createLongType() -> createLongType
    61:61:proguard.classfile.attribute.preverification.FloatType createFloatType() -> createFloatType
    69:69:proguard.classfile.attribute.preverification.DoubleType createDoubleType() -> createDoubleType
    77:77:proguard.classfile.attribute.preverification.TopType createTopType() -> createTopType
    85:85:proguard.classfile.attribute.preverification.NullType createNullType() -> createNullType
    93:93:proguard.classfile.attribute.preverification.UninitializedThisType createUninitializedThisType() -> createUninitializedThisType
    102:102:proguard.classfile.attribute.preverification.UninitializedType createUninitializedType(int) -> createUninitializedType
    110:110:proguard.classfile.attribute.preverification.ObjectType createObjectType(int) -> createObjectType
    31:37:void <clinit>() -> <clinit>
proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor -> proguard.classfile.attribute.preverification.visitor.StackMapFrameVisitor:
    void visitSameZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameZeroFrame) -> visitSameZeroFrame
    void visitSameOneFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameOneFrame) -> visitSameOneFrame
    void visitLessZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.LessZeroFrame) -> visitLessZeroFrame
    void visitMoreZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.MoreZeroFrame) -> visitMoreZeroFrame
    void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame) -> visitFullFrame
proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor -> proguard.classfile.attribute.preverification.visitor.VerificationTypeVisitor:
    void visitIntegerType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.IntegerType) -> visitIntegerType
    void visitFloatType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FloatType) -> visitFloatType
    void visitLongType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.LongType) -> visitLongType
    void visitDoubleType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.DoubleType) -> visitDoubleType
    void visitTopType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.TopType) -> visitTopType
    void visitObjectType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.ObjectType) -> visitObjectType
    void visitNullType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.NullType) -> visitNullType
    void visitUninitializedType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.UninitializedType) -> visitUninitializedType
    void visitUninitializedThisType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.UninitializedThisType) -> visitUninitializedThisType
    void visitStackIntegerType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.IntegerType) -> visitStackIntegerType
    void visitStackFloatType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.FloatType) -> visitStackFloatType
    void visitStackLongType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.LongType) -> visitStackLongType
    void visitStackDoubleType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.DoubleType) -> visitStackDoubleType
    void visitStackTopType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.TopType) -> visitStackTopType
    void visitStackObjectType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.ObjectType) -> visitStackObjectType
    void visitStackNullType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.NullType) -> visitStackNullType
    void visitStackUninitializedType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.UninitializedType) -> visitStackUninitializedType
    void visitStackUninitializedThisType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.UninitializedThisType) -> visitStackUninitializedThisType
    void visitVariablesIntegerType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.IntegerType) -> visitVariablesIntegerType
    void visitVariablesFloatType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.FloatType) -> visitVariablesFloatType
    void visitVariablesLongType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.LongType) -> visitVariablesLongType
    void visitVariablesDoubleType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.DoubleType) -> visitVariablesDoubleType
    void visitVariablesTopType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.TopType) -> visitVariablesTopType
    void visitVariablesObjectType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.ObjectType) -> visitVariablesObjectType
    void visitVariablesNullType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.NullType) -> visitVariablesNullType
    void visitVariablesUninitializedType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.UninitializedType) -> visitVariablesUninitializedType
    void visitVariablesUninitializedThisType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.UninitializedThisType) -> visitVariablesUninitializedThisType
proguard.classfile.attribute.visitor.AllAttributeVisitor -> proguard.classfile.attribute.visitor.AllAttributeVisitor:
    boolean deep -> a
    proguard.classfile.attribute.visitor.AttributeVisitor attributeVisitor -> b
    52:53:void <init>(proguard.classfile.attribute.visitor.AttributeVisitor) -> <init>
    66:69:void <init>(boolean,proguard.classfile.attribute.visitor.AttributeVisitor) -> <init>
    76:85:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    88:88:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    95:102:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    105:105:void visitLibraryMember(proguard.classfile.LibraryClass,proguard.classfile.LibraryMember) -> visitLibraryMember
    110:110:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    115:116:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
proguard.classfile.attribute.visitor.AllBootstrapMethodInfoVisitor -> proguard.classfile.attribute.visitor.AllBootstrapMethodInfoVisitor:
    proguard.classfile.attribute.visitor.BootstrapMethodInfoVisitor bootstrapMethodInfoVisitor -> a
    41:43:void <init>(proguard.classfile.attribute.visitor.BootstrapMethodInfoVisitor) -> <init>
    48:48:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    53:54:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
proguard.classfile.attribute.visitor.AllExceptionInfoVisitor -> proguard.classfile.attribute.visitor.AllExceptionInfoVisitor:
    proguard.classfile.attribute.visitor.ExceptionInfoVisitor exceptionInfoVisitor -> a
    41:43:void <init>(proguard.classfile.attribute.visitor.ExceptionInfoVisitor) -> <init>
    48:48:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    53:54:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor -> proguard.classfile.attribute.visitor.AllInnerClassesInfoVisitor:
    proguard.classfile.attribute.visitor.InnerClassesInfoVisitor innerClassesInfoVisitor -> a
    41:43:void <init>(proguard.classfile.attribute.visitor.InnerClassesInfoVisitor) -> <init>
    48:48:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    53:54:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
proguard.classfile.attribute.visitor.AllLineNumberInfoVisitor -> proguard.classfile.attribute.visitor.AllLineNumberInfoVisitor:
    proguard.classfile.attribute.visitor.LineNumberInfoVisitor lineNumberInfoVisitor -> a
    41:43:void <init>(proguard.classfile.attribute.visitor.LineNumberInfoVisitor) -> <init>
    48:48:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    53:54:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
proguard.classfile.attribute.visitor.AttributeNameFilter -> proguard.classfile.attribute.visitor.AttributeNameFilter:
    proguard.util.StringMatcher regularExpressionMatcher -> a
    proguard.classfile.attribute.visitor.AttributeVisitor attributeVisitor -> b
    55:57:void <init>(java.lang.String,proguard.classfile.attribute.visitor.AttributeVisitor) -> <init>
    70:72:void <init>(java.util.List,proguard.classfile.attribute.visitor.AttributeVisitor) -> <init>
    84:87:void <init>(proguard.util.StringMatcher,proguard.classfile.attribute.visitor.AttributeVisitor) -> <init>
    94:98:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    103:107:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    112:116:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    121:125:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    130:134:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    139:143:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    148:152:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    157:161:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    166:170:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    175:179:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    184:188:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    193:197:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    202:206:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    211:215:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    220:224:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    229:233:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    238:242:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    247:251:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    256:260:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    265:269:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    274:278:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    283:287:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    292:296:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    301:305:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    310:314:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    319:323:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    328:332:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    337:341:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    346:350:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    355:359:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    364:368:void visitRuntimeVisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleParameterAnnotationsAttribute) -> visitRuntimeVisibleParameterAnnotationsAttribute
    373:377:void visitRuntimeInvisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleParameterAnnotationsAttribute) -> visitRuntimeInvisibleParameterAnnotationsAttribute
    382:386:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    391:395:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    400:404:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    409:413:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    418:422:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    427:431:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    436:440:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    445:449:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    454:458:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    465:465:boolean accepted(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> a
proguard.classfile.attribute.visitor.AttributeVisitor -> proguard.classfile.attribute.visitor.AttributeVisitor:
    void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    void visitRuntimeVisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleParameterAnnotationsAttribute) -> visitRuntimeVisibleParameterAnnotationsAttribute
    void visitRuntimeInvisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleParameterAnnotationsAttribute) -> visitRuntimeInvisibleParameterAnnotationsAttribute
    void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
proguard.classfile.attribute.visitor.BootstrapMethodInfoVisitor -> proguard.classfile.attribute.visitor.BootstrapMethodInfoVisitor:
    void visitBootstrapMethodInfo(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodInfo) -> visitBootstrapMethodInfo
proguard.classfile.attribute.visitor.ExceptionInfoVisitor -> proguard.classfile.attribute.visitor.ExceptionInfoVisitor:
    void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
proguard.classfile.attribute.visitor.InnerClassesInfoVisitor -> proguard.classfile.attribute.visitor.InnerClassesInfoVisitor:
    void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
proguard.classfile.attribute.visitor.LineNumberInfoVisitor -> proguard.classfile.attribute.visitor.LineNumberInfoVisitor:
    void visitLineNumberInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberInfo) -> visitLineNumberInfo
proguard.classfile.attribute.visitor.LineNumberRangeFinder -> proguard.classfile.attribute.visitor.LineNumberRangeFinder:
    int lowestLineNumber -> a
    int highestLineNumber -> b
    boolean hasSource -> c
    31:35:void <init>() -> <init>
    44:44:int getLowestLineNumber() -> getLowestLineNumber
    53:53:int getHighestLineNumber() -> getHighestLineNumber
    62:62:boolean hasSource() -> hasSource
    70:88:void visitLineNumberInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberInfo) -> visitLineNumberInfo
proguard.classfile.attribute.visitor.LocalVariableInfoVisitor -> proguard.classfile.attribute.visitor.LocalVariableInfoVisitor:
    void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
proguard.classfile.attribute.visitor.LocalVariableTypeInfoVisitor -> proguard.classfile.attribute.visitor.LocalVariableTypeInfoVisitor:
    void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
proguard.classfile.attribute.visitor.MultiAttributeVisitor -> proguard.classfile.attribute.visitor.MultiAttributeVisitor:
    proguard.classfile.attribute.visitor.AttributeVisitor[] attributeVisitors -> a
    40:41:void <init>() -> <init>
    45:47:void <init>(proguard.classfile.attribute.visitor.AttributeVisitor[]) -> <init>
    52:55:void addAttributeVisitor(proguard.classfile.attribute.visitor.AttributeVisitor) -> addAttributeVisitor
    60:73:void incrementArraySize() -> a
    81:85:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    90:94:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    99:103:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    108:112:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    117:121:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    126:130:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    135:139:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    144:148:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    153:157:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    162:166:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    171:175:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    180:184:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    189:193:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    198:202:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    207:211:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    216:220:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    225:229:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    234:238:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    243:247:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    252:256:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    261:265:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    270:274:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    279:283:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    288:292:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    297:301:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    306:310:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    315:319:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    324:328:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    333:337:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    342:346:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    351:355:void visitRuntimeVisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleParameterAnnotationsAttribute) -> visitRuntimeVisibleParameterAnnotationsAttribute
    360:364:void visitRuntimeInvisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleParameterAnnotationsAttribute) -> visitRuntimeInvisibleParameterAnnotationsAttribute
    369:373:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    378:382:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    387:391:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    396:400:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    405:409:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    414:418:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    423:427:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    432:436:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    441:445:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
proguard.classfile.attribute.visitor.NonEmptyAttributeFilter -> proguard.classfile.attribute.visitor.NonEmptyAttributeFilter:
    proguard.classfile.attribute.visitor.AttributeVisitor attributeVisitor -> a
    47:49:void <init>(proguard.classfile.attribute.visitor.AttributeVisitor) -> <init>
    56:57:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    62:66:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    71:72:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    77:78:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    83:87:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    92:93:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    98:99:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    104:105:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    110:111:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    116:117:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    122:123:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    128:129:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    134:135:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    140:141:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    146:147:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    152:153:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    158:162:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    167:171:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    176:177:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    182:186:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    191:195:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    200:204:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    209:213:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    218:222:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    227:231:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    236:240:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    245:249:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    254:258:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    263:267:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    272:276:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    281:285:void visitRuntimeVisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleParameterAnnotationsAttribute) -> visitRuntimeVisibleParameterAnnotationsAttribute
    290:294:void visitRuntimeInvisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleParameterAnnotationsAttribute) -> visitRuntimeInvisibleParameterAnnotationsAttribute
    299:303:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    308:312:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    317:321:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    326:330:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    335:339:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    344:348:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    353:357:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    362:366:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    371:372:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
proguard.classfile.attribute.visitor.ParameterInfoVisitor -> proguard.classfile.attribute.visitor.ParameterInfoVisitor:
    void visitParameterInfo(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.ParameterInfo) -> visitParameterInfo
proguard.classfile.attribute.visitor.RequiredAttributeFilter -> proguard.classfile.attribute.visitor.RequiredAttributeFilter:
    proguard.classfile.attribute.visitor.AttributeVisitor requiredAttributeVisitor -> a
    proguard.classfile.attribute.visitor.AttributeVisitor optionalAttributeVisitor -> b
    54:55:void <init>(proguard.classfile.attribute.visitor.AttributeVisitor) -> <init>
    68:71:void <init>(proguard.classfile.attribute.visitor.AttributeVisitor,proguard.classfile.attribute.visitor.AttributeVisitor) -> <init>
    78:82:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    87:91:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    96:100:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    105:109:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    114:118:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    123:127:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    132:136:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    141:145:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    150:154:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    159:163:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    168:172:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    177:181:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    186:190:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    195:199:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    204:208:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    213:217:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    222:226:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    231:235:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    240:244:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    249:253:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    258:262:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    267:271:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    276:280:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    285:289:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    294:298:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    303:307:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    312:316:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    321:325:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    330:334:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    339:343:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    348:352:void visitRuntimeVisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleParameterAnnotationsAttribute) -> visitRuntimeVisibleParameterAnnotationsAttribute
    357:361:void visitRuntimeInvisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleParameterAnnotationsAttribute) -> visitRuntimeInvisibleParameterAnnotationsAttribute
    366:370:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    375:379:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    384:388:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    393:397:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    402:406:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    411:415:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    420:424:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    429:433:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    438:442:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
proguard.classfile.attribute.visitor.StackSizeComputer -> proguard.classfile.attribute.visitor.StackSizeComputer:
    boolean[] evaluated -> a
    int[] stackSizes -> b
    boolean exitInstructionBlock -> c
    int stackSize -> d
    int maxStackSize -> e
    38:52:void <init>() -> <init>
    66:66:boolean isReachable(int) -> isReachable
    76:81:int getStackSize(int) -> getStackSize
    90:90:int getMaxStackSize() -> getMaxStackSize
    96:96:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    110:126:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    137:157:void visitCodeAttribute0(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute0
    164:175:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    180:181:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    185:190:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    194:223:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    231:250:void visitAnySwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SwitchInstruction) -> visitAnySwitchInstruction
    263:271:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    300:377:void evaluateInstructionBlock(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int) -> a
proguard.classfile.constant.ClassConstant -> proguard.classfile.constant.ClassConstant:
    int u2nameIndex -> u2nameIndex
    proguard.classfile.Clazz referencedClass -> referencedClass
    proguard.classfile.Clazz javaLangClassClass -> javaLangClassClass
    56:57:void <init>() -> <init>
    67:70:void <init>(int,proguard.classfile.Clazz) -> <init>
    78:78:java.lang.String getName(proguard.classfile.Clazz) -> getName
    86:86:int getTag() -> getTag
    91:92:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
    100:104:void referencedClassAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassAccept
proguard.classfile.constant.Constant -> proguard.classfile.constant.Constant:
    java.lang.Object visitorInfo -> visitorInfo
    32:32:void <init>() -> <init>
    int getTag() -> getTag
    void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
    61:61:java.lang.Object getVisitorInfo() -> getVisitorInfo
    66:67:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
proguard.classfile.constant.DoubleConstant -> proguard.classfile.constant.DoubleConstant:
    double f8value -> f8value
    40:41:void <init>() -> <init>
    48:50:void <init>(double) -> <init>
    58:58:double getValue() -> getValue
    67:68:void setValue(double) -> setValue
    75:75:int getTag() -> getTag
    80:81:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
proguard.classfile.constant.FieldrefConstant -> proguard.classfile.constant.FieldrefConstant:
    37:38:void <init>() -> <init>
    52:57:void <init>(int,int,proguard.classfile.Clazz,proguard.classfile.Member) -> <init>
    64:64:int getTag() -> getTag
    69:70:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
proguard.classfile.constant.FloatConstant -> proguard.classfile.constant.FloatConstant:
    float f4value -> f4value
    40:41:void <init>() -> <init>
    48:50:void <init>(float) -> <init>
    58:58:float getValue() -> getValue
    67:68:void setValue(float) -> setValue
    75:75:int getTag() -> getTag
    80:81:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
proguard.classfile.constant.IntegerConstant -> proguard.classfile.constant.IntegerConstant:
    int u4value -> u4value
    40:41:void <init>() -> <init>
    48:50:void <init>(int) -> <init>
    58:58:int getValue() -> getValue
    67:68:void setValue(int) -> setValue
    75:75:int getTag() -> getTag
    80:81:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
proguard.classfile.constant.InterfaceMethodrefConstant -> proguard.classfile.constant.InterfaceMethodrefConstant:
    37:38:void <init>() -> <init>
    52:57:void <init>(int,int,proguard.classfile.Clazz,proguard.classfile.Member) -> <init>
    64:64:int getTag() -> getTag
    69:70:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
proguard.classfile.constant.InvokeDynamicConstant -> proguard.classfile.constant.InvokeDynamicConstant:
    int u2bootstrapMethodAttributeIndex -> u2bootstrapMethodAttributeIndex
    int u2nameAndTypeIndex -> u2nameAndTypeIndex
    proguard.classfile.Clazz[] referencedClasses -> referencedClasses
    50:51:void <init>() -> <init>
    68:72:void <init>(int,int,proguard.classfile.Clazz[]) -> <init>
    81:81:int getBootstrapMethodAttributeIndex() -> getBootstrapMethodAttributeIndex
    89:89:int getNameAndTypeIndex() -> getNameAndTypeIndex
    97:97:java.lang.String getName(proguard.classfile.Clazz) -> getName
    105:105:java.lang.String getType(proguard.classfile.Clazz) -> getType
    115:125:void referencedClassesAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassesAccept
    133:134:void bootstrapMethodHandleAccept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> bootstrapMethodHandleAccept
    141:141:int getTag() -> getTag
    146:147:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
proguard.classfile.constant.LongConstant -> proguard.classfile.constant.LongConstant:
    long u8value -> u8value
    40:41:void <init>() -> <init>
    48:50:void <init>(long) -> <init>
    58:58:long getValue() -> getValue
    67:68:void setValue(long) -> setValue
    75:75:int getTag() -> getTag
    80:81:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
proguard.classfile.constant.MethodHandleConstant -> proguard.classfile.constant.MethodHandleConstant:
    int u1referenceKind -> u1referenceKind
    int u2referenceIndex -> u2referenceIndex
    proguard.classfile.Clazz javaLangInvokeMethodHandleClass -> javaLangInvokeMethodHandleClass
    50:51:void <init>() -> <init>
    63:66:void <init>(int,int) -> <init>
    84:84:int getReferenceKind() -> getReferenceKind
    92:92:int getReferenceIndex() -> getReferenceIndex
    101:101:java.lang.String getClassName(proguard.classfile.Clazz) -> getClassName
    109:109:java.lang.String getName(proguard.classfile.Clazz) -> getName
    117:117:java.lang.String getType(proguard.classfile.Clazz) -> getType
    125:125:int getTag() -> getTag
    130:131:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
proguard.classfile.constant.MethodTypeConstant -> proguard.classfile.constant.MethodTypeConstant:
    int u2descriptorIndex -> u2descriptorIndex
    proguard.classfile.Clazz javaLangInvokeMethodTypeClass -> javaLangInvokeMethodTypeClass
    proguard.classfile.Clazz[] referencedClasses -> referencedClasses
    59:60:void <init>() -> <init>
    69:71:void <init>(int) -> <init>
    79:79:int getDescriptorIndex() -> getDescriptorIndex
    88:88:java.lang.String getType(proguard.classfile.Clazz) -> getType
    98:108:void referencedClassesAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassesAccept
    115:115:int getTag() -> getTag
    120:121:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
proguard.classfile.constant.MethodrefConstant -> proguard.classfile.constant.MethodrefConstant:
    37:38:void <init>() -> <init>
    52:57:void <init>(int,int,proguard.classfile.Clazz,proguard.classfile.Member) -> <init>
    64:64:int getTag() -> getTag
    69:70:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
proguard.classfile.constant.NameAndTypeConstant -> proguard.classfile.constant.NameAndTypeConstant:
    int u2nameIndex -> u2nameIndex
    int u2descriptorIndex -> u2descriptorIndex
    41:42:void <init>() -> <init>
    53:56:void <init>(int,int) -> <init>
    64:64:int getNameIndex() -> getNameIndex
    72:73:void setNameIndex(int) -> setNameIndex
    80:80:int getDescriptorIndex() -> getDescriptorIndex
    88:89:void setDescriptorIndex(int) -> setDescriptorIndex
    96:96:java.lang.String getName(proguard.classfile.Clazz) -> getName
    104:104:java.lang.String getType(proguard.classfile.Clazz) -> getType
    112:112:int getTag() -> getTag
    117:118:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
proguard.classfile.constant.RefConstant -> proguard.classfile.constant.RefConstant:
    int u2classIndex -> u2classIndex
    int u2nameAndTypeIndex -> u2nameAndTypeIndex
    proguard.classfile.Clazz referencedClass -> referencedClass
    proguard.classfile.Member referencedMember -> referencedMember
    54:55:void <init>() -> <init>
    63:63:int getClassIndex() -> getClassIndex
    71:71:int getNameAndTypeIndex() -> getNameAndTypeIndex
    79:80:void setNameAndTypeIndex(int) -> setNameAndTypeIndex
    87:87:java.lang.String getClassName(proguard.classfile.Clazz) -> getClassName
    95:95:java.lang.String getName(proguard.classfile.Clazz) -> getName
    103:103:java.lang.String getType(proguard.classfile.Clazz) -> getType
    112:116:void referencedClassAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassAccept
    124:129:void referencedMemberAccept(proguard.classfile.visitor.MemberVisitor) -> referencedMemberAccept
proguard.classfile.constant.StringConstant -> proguard.classfile.constant.StringConstant:
    int u2stringIndex -> u2stringIndex
    proguard.classfile.Clazz referencedClass -> referencedClass
    proguard.classfile.Member referencedMember -> referencedMember
    proguard.classfile.Clazz javaLangStringClass -> javaLangStringClass
    70:71:void <init>() -> <init>
    83:87:void <init>(int,proguard.classfile.Clazz,proguard.classfile.Member) -> <init>
    95:95:java.lang.String getString(proguard.classfile.Clazz) -> getString
    103:103:int getTag() -> getTag
    108:109:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
    117:122:void referencedClassAccept(proguard.classfile.visitor.ClassVisitor) -> referencedClassAccept
    130:134:void referencedMemberAccept(proguard.classfile.visitor.MemberVisitor) -> referencedMemberAccept
proguard.classfile.constant.Utf8Constant -> proguard.classfile.constant.Utf8Constant:
    byte[] bytes -> a
    java.lang.String string -> b
    69:70:void <init>() -> <init>
    77:80:void <init>(java.lang.String) -> <init>
    88:90:void setBytes(byte[]) -> setBytes
    100:107:byte[] getBytes() -> getBytes
    116:118:void setString(java.lang.String) -> setString
    128:135:java.lang.String getString() -> getString
    143:143:int getTag() -> getTag
    148:149:void accept(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> accept
    159:164:void switchToByteArrayRepresentation() -> a
    172:177:void switchToStringRepresentation() -> b
    190:237:byte[] getByteArrayRepresentation(java.lang.String) -> a
    251:283:java.lang.String getStringRepresentation(byte[]) -> a
proguard.classfile.constant.visitor.AllConstantVisitor -> proguard.classfile.constant.visitor.AllConstantVisitor:
    proguard.classfile.constant.visitor.ConstantVisitor constantVisitor -> a
    39:41:void <init>(proguard.classfile.constant.visitor.ConstantVisitor) -> <init>
    48:49:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    52:52:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.constant.visitor.BootstrapMethodArgumentVisitor -> proguard.classfile.constant.visitor.BootstrapMethodArgumentVisitor:
    proguard.classfile.constant.visitor.ConstantVisitor constantVisitor -> a
    44:46:void <init>(proguard.classfile.constant.visitor.ConstantVisitor) -> <init>
    54:55:void visitBootstrapMethodInfo(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodInfo) -> visitBootstrapMethodInfo
proguard.classfile.constant.visitor.BootstrapMethodHandleTraveler -> proguard.classfile.constant.visitor.BootstrapMethodHandleTraveler:
    proguard.classfile.constant.visitor.ConstantVisitor bootstrapMethodHandleVisitor -> a
    int bootstrapMethodAttributeIndex -> b
    53:55:void <init>(proguard.classfile.constant.visitor.ConstantVisitor) -> <init>
    60:60:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    66:71:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    76:76:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    82:85:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    93:95:void visitBootstrapMethodInfo(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodInfo) -> visitBootstrapMethodInfo
proguard.classfile.constant.visitor.ConstantTagFilter -> proguard.classfile.constant.visitor.ConstantTagFilter:
    int constantTagMask -> a
    proguard.classfile.constant.visitor.ConstantVisitor constantVisitor -> b
    50:53:void <init>(int,proguard.classfile.constant.visitor.ConstantVisitor) -> <init>
    65:74:void <init>(int[],proguard.classfile.constant.visitor.ConstantVisitor) -> <init>
    81:85:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
proguard.classfile.constant.visitor.ConstantVisitor -> proguard.classfile.constant.visitor.ConstantVisitor:
    void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    void visitFieldrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.FieldrefConstant) -> visitFieldrefConstant
    void visitInterfaceMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.InterfaceMethodrefConstant) -> visitInterfaceMethodrefConstant
    void visitMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodrefConstant) -> visitMethodrefConstant
    void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
proguard.classfile.constant.visitor.ExceptClassConstantFilter -> proguard.classfile.constant.visitor.ExceptClassConstantFilter:
    java.lang.String exceptClassName -> a
    proguard.classfile.constant.visitor.ConstantVisitor constantVisitor -> b
    49:52:void <init>(java.lang.String,proguard.classfile.constant.visitor.ConstantVisitor) -> <init>
    59:63:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
proguard.classfile.constant.visitor.MethodrefTraveler -> proguard.classfile.constant.visitor.MethodrefTraveler:
    proguard.classfile.constant.visitor.ConstantVisitor methodrefConstantVisitor -> a
    44:46:void <init>(proguard.classfile.constant.visitor.ConstantVisitor) -> <init>
    51:51:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    56:58:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
proguard.classfile.editor.AccessFixer -> proguard.classfile.editor.AccessFixer:
    46:47:void <init>() -> <init>
    55:59:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    65:69:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    77:92:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    98:113:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    121:125:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    131:135:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
proguard.classfile.editor.AccessFixer$MyAccessFixer -> proguard.classfile.editor.a:
    proguard.classfile.Clazz referencingClass -> a
    143:143:void <init>() -> <init>
    153:153:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    158:174:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    179:179:void visitLibraryMember(proguard.classfile.LibraryClass,proguard.classfile.LibraryMember) -> visitLibraryMember
    184:202:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    212:212:boolean inSamePackage(proguard.classfile.ProgramClass,proguard.classfile.Clazz) -> a
    143:143:void <init>(byte) -> <init>
    143:143:proguard.classfile.Clazz access$102(proguard.classfile.editor.AccessFixer$MyAccessFixer,proguard.classfile.Clazz) -> a
proguard.classfile.editor.AnnotationAdder -> proguard.classfile.editor.AnnotationAdder:
    proguard.classfile.attribute.annotation.ElementValue[] EMPTY_ELEMENT_VALUES -> a
    proguard.classfile.ProgramClass targetClass -> b
    proguard.classfile.attribute.annotation.AnnotationElementValue targetAnnotationElementValue -> c
    proguard.classfile.editor.AnnotationsAttributeEditor annotationsAttributeEditor -> d
    proguard.classfile.editor.ParameterAnnotationsAttributeEditor parameterAnnotationsAttributeEditor -> e
    proguard.classfile.editor.ConstantAdder constantAdder -> f
    56:63:void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.annotation.AnnotationElementValue) -> <init>
    72:79:void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> <init>
    88:95:void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> <init>
    102:129:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    134:152:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    39:39:void <clinit>() -> <clinit>
proguard.classfile.editor.AnnotationsAttributeEditor -> proguard.classfile.editor.AnnotationsAttributeEditor:
    proguard.classfile.attribute.annotation.AnnotationsAttribute targetAnnotationsAttribute -> a
    41:43:void <init>(proguard.classfile.attribute.annotation.AnnotationsAttribute) -> <init>
    51:66:void addAnnotation(proguard.classfile.attribute.annotation.Annotation) -> addAnnotation
proguard.classfile.editor.AttributeAdder -> proguard.classfile.editor.AttributeAdder:
    byte[] EMPTY_BYTES -> a
    int[] EMPTY_INTS -> b
    proguard.classfile.attribute.Attribute[] EMPTY_ATTRIBUTES -> c
    proguard.classfile.attribute.ExceptionInfo[] EMPTY_EXCEPTIONS -> d
    proguard.classfile.attribute.annotation.Annotation[] EMPTY_ANNOTATIONS -> e
    proguard.classfile.ProgramClass targetClass -> f
    proguard.classfile.ProgramMember targetMember -> g
    boolean replaceAttributes -> h
    proguard.classfile.editor.ConstantAdder constantAdder -> i
    proguard.classfile.editor.AttributesEditor attributesEditor -> j
    65:66:void <init>(proguard.classfile.ProgramClass,boolean) -> <init>
    77:78:void <init>(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember,boolean) -> <init>
    89:100:void <init>(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember,proguard.classfile.attribute.CodeAttribute,boolean) -> <init>
    108:115:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    121:127:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    133:139:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    145:152:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    158:169:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    175:180:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    186:191:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    197:205:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    211:217:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    223:235:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    241:255:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    261:326:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    332:332:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    338:338:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    344:357:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    363:376:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    382:395:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    401:413:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    419:431:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    437:456:void visitRuntimeVisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleParameterAnnotationsAttribute) -> visitRuntimeVisibleParameterAnnotationsAttribute
    462:481:void visitRuntimeInvisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleParameterAnnotationsAttribute) -> visitRuntimeInvisibleParameterAnnotationsAttribute
    487:499:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    42:46:void <clinit>() -> <clinit>
proguard.classfile.editor.AttributeSorter -> proguard.classfile.editor.AttributeSorter:
    37:37:void <init>() -> <init>
    46:51:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    59:63:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    68:68:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    74:75:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    82:85:int compare(java.lang.Object,java.lang.Object) -> compare
proguard.classfile.editor.AttributesEditor -> proguard.classfile.editor.AttributesEditor:
    proguard.classfile.ProgramClass targetClass -> a
    proguard.classfile.ProgramMember targetMember -> b
    proguard.classfile.attribute.CodeAttribute targetAttribute -> c
    boolean replaceAttributes -> d
    49:50:void <init>(proguard.classfile.ProgramClass,boolean) -> <init>
    61:62:void <init>(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember,boolean) -> <init>
    73:78:void <init>(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember,proguard.classfile.attribute.CodeAttribute,boolean) -> <init>
    87:87:proguard.classfile.attribute.Attribute findAttribute(java.lang.String) -> findAttribute
    108:159:void addAttribute(proguard.classfile.attribute.Attribute) -> addAttribute
    168:189:void deleteAttribute(java.lang.String) -> deleteAttribute
    203:213:boolean replaceAttribute(int,proguard.classfile.attribute.Attribute[],proguard.classfile.attribute.Attribute) -> a
    226:239:proguard.classfile.attribute.Attribute[] addAttribute(int,proguard.classfile.attribute.Attribute[],proguard.classfile.attribute.Attribute) -> b
    252:268:int deleteAttribute(int,proguard.classfile.attribute.Attribute[],java.lang.String) -> a
    280:290:int findAttributeIndex(int,proguard.classfile.attribute.Attribute[],java.lang.String) -> b
    302:312:proguard.classfile.attribute.Attribute findAttribute(int,proguard.classfile.attribute.Attribute[],java.lang.String) -> c
proguard.classfile.editor.BootstrapMethodInfoAdder -> proguard.classfile.editor.BootstrapMethodInfoAdder:
    proguard.classfile.editor.ConstantAdder constantAdder -> a
    proguard.classfile.editor.BootstrapMethodsAttributeEditor bootstrapMethodsAttributeEditor -> b
    int bootstrapMethodIndex -> c
    46:49:void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.BootstrapMethodsAttribute) -> <init>
    57:57:int getBootstrapMethodIndex() -> getBootstrapMethodIndex
    66:85:void visitBootstrapMethodInfo(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodInfo) -> visitBootstrapMethodInfo
proguard.classfile.editor.BootstrapMethodRemapper -> proguard.classfile.editor.BootstrapMethodRemapper:
    int[] constantIndexMap -> a
    43:43:void <init>() -> <init>
    56:57:void setConstantIndexMap(int[]) -> setConstantIndexMap
    62:62:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    67:69:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    80:86:int remapConstantIndex(int) -> a
proguard.classfile.editor.BootstrapMethodsAttributeAdder -> proguard.classfile.editor.BootstrapMethodsAttributeAdder:
    proguard.classfile.ProgramClass targetClass -> a
    proguard.classfile.editor.ConstantPoolEditor constantPoolEditor -> b
    proguard.classfile.editor.BootstrapMethodInfoAdder bootstrapMethodInfoAdder -> c
    44:47:void <init>(proguard.classfile.ProgramClass) -> <init>
    55:55:int getBootstrapMethodIndex() -> getBootstrapMethodIndex
    64:90:void visitBootstrapMethodInfo(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodInfo) -> visitBootstrapMethodInfo
proguard.classfile.editor.BootstrapMethodsAttributeEditor -> proguard.classfile.editor.BootstrapMethodsAttributeEditor:
    proguard.classfile.attribute.BootstrapMethodsAttribute targetBootstrapMethodsAttribute -> a
    42:44:void <init>(proguard.classfile.attribute.BootstrapMethodsAttribute) -> <init>
    53:58:int addBootstrapMethodInfo(proguard.classfile.attribute.BootstrapMethodInfo) -> addBootstrapMethodInfo
proguard.classfile.editor.BridgeMethodFixer -> proguard.classfile.editor.BridgeMethodFixer:
    java.lang.String bridgedMethodName -> a
    42:42:void <init>() -> <init>
    60:64:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    69:69:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    75:76:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    81:81:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    86:108:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    115:116:void visitAnyMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyMethodrefConstant
proguard.classfile.editor.ClassEditor -> proguard.classfile.editor.ClassEditor:
    proguard.classfile.ProgramClass targetClass -> a
    44:46:void <init>(proguard.classfile.ProgramClass) -> <init>
    54:74:void addInterface(int) -> addInterface
    81:93:void removeInterface(int) -> removeInterface
    102:113:int findInterfaceIndex(int) -> a
    122:142:void addField(proguard.classfile.Field) -> addField
    151:163:void removeField(proguard.classfile.Field) -> removeField
    172:183:int findFieldIndex(proguard.classfile.Field) -> a
    192:212:void addMethod(proguard.classfile.Method) -> addMethod
    221:233:void removeMethod(proguard.classfile.Method) -> removeMethod
    242:253:int findMethodIndex(proguard.classfile.Method) -> a
proguard.classfile.editor.ClassElementSorter -> proguard.classfile.editor.ClassElementSorter:
    proguard.classfile.visitor.ClassVisitor interfaceSorter -> a
    proguard.classfile.visitor.ClassVisitor constantPoolSorter -> b
    proguard.classfile.visitor.ClassVisitor attributeSorter -> c
    33:40:void <init>() -> <init>
    47:51:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
proguard.classfile.editor.ClassMemberSorter -> proguard.classfile.editor.ClassMemberSorter:
    35:35:void <init>() -> <init>
    42:46:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    51:51:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    58:61:int compare(java.lang.Object,java.lang.Object) -> compare
proguard.classfile.editor.ClassReferenceFixer -> proguard.classfile.editor.ClassReferenceFixer:
    boolean ensureUniqueMemberNames -> a
    64:66:void <init>(boolean) -> <init>
    74:82:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    88:90:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    98:123:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    129:154:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    160:166:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    172:181:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    186:186:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    192:218:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    224:236:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    242:255:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    261:271:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    276:276:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    282:283:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    289:290:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    296:297:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    303:304:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    310:320:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    326:327:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    333:334:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    340:341:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    349:362:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    370:380:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    387:397:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    404:417:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    424:424:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    430:440:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    446:456:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    462:463:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    469:470:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    479:505:java.lang.String newDescriptor(java.lang.String,proguard.classfile.Clazz) -> a
    513:547:java.lang.String newDescriptor(java.lang.String,proguard.classfile.Clazz[]) -> a
    556:556:java.lang.String newUniqueMemberName(java.lang.String,java.lang.String) -> a
    571:589:java.lang.String newClassName(java.lang.String,proguard.classfile.Clazz) -> b
proguard.classfile.editor.CodeAttributeComposer -> proguard.classfile.editor.CodeAttributeComposer:
    boolean allowExternalBranchTargets -> a
    boolean allowExternalExceptionHandlers -> b
    boolean shrinkInstructions -> c
    int maximumCodeLength -> d
    int codeLength -> e
    int exceptionTableLength -> f
    int lineNumberTableLength -> g
    int level -> h
    byte[] code -> i
    int[] oldInstructionOffsets -> j
    int[] codeFragmentOffsets -> k
    int[] codeFragmentLengths -> l
    int[][] instructionOffsetMap -> m
    proguard.classfile.attribute.ExceptionInfo[] exceptionTable -> n
    proguard.classfile.attribute.LineNumberInfo[] lineNumberTable -> o
    int expectedStackMapFrameOffset -> p
    proguard.classfile.editor.StackSizeUpdater stackSizeUpdater -> q
    proguard.classfile.editor.VariableSizeUpdater variableSizeUpdater -> r
    proguard.classfile.editor.InstructionWriter instructionWriter -> s
    98:99:void <init>() -> <init>
    72:122:void <init>(boolean,boolean,boolean) -> <init>
    130:139:void reset() -> reset
    153:182:void beginCodeFragment(int) -> beginCodeFragment
    197:229:void appendInstruction(int,proguard.classfile.instruction.Instruction) -> appendInstruction
    246:253:void appendLabel(int) -> appendLabel
    262:266:void appendInstructions(proguard.classfile.instruction.Instruction[]) -> appendInstructions
    279:305:void appendInstruction(proguard.classfile.instruction.Instruction) -> appendInstruction
    320:343:void appendException(proguard.classfile.attribute.ExceptionInfo) -> appendException
    354:354:int insertLineNumber(proguard.classfile.attribute.LineNumberInfo) -> insertLineNumber
    374:398:int insertLineNumber(int,proguard.classfile.attribute.LineNumberInfo) -> insertLineNumber
    414:426:void appendLineNumber(proguard.classfile.attribute.LineNumberInfo) -> appendLineNumber
    435:496:void endCodeFragment() -> endCodeFragment
    501:501:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    511:580:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    586:588:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    594:596:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    602:622:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    627:634:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    640:647:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    652:652:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    660:673:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    682:699:void visitAnySwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SwitchInstruction) -> visitAnySwitchInstruction
    708:719:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    727:741:void visitAnyStackMapFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.StackMapFrame) -> visitAnyStackMapFrame
    747:751:void visitSameOneFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameOneFrame) -> visitSameOneFrame
    757:761:void visitMoreZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.MoreZeroFrame) -> visitMoreZeroFrame
    767:772:void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame) -> visitFullFrame
    777:777:void visitAnyVerificationType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.VerificationType) -> visitAnyVerificationType
    783:784:void visitUninitializedType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.UninitializedType) -> visitUninitializedType
    792:793:void visitLineNumberInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberInfo) -> visitLineNumberInfo
    802:808:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    816:822:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    832:842:void ensureCodeLength(int) -> a
    850:854:void updateJumpOffsets(int,int[]) -> a
    863:873:int newBranchOffset(int,int) -> a
    884:896:int newInstructionOffset(int) -> b
    907:918:boolean remappableExceptionHandler(int) -> c
    985:999:int removeEmptyLocalVariables(proguard.classfile.attribute.LocalVariableInfo[],int,int) -> a
    1012:1026:int removeEmptyLocalVariableTypes(proguard.classfile.attribute.LocalVariableTypeInfo[],int,int) -> a
    1052:1068:void main(java.lang.String[]) -> main
proguard.classfile.editor.CodeAttributeEditor -> proguard.classfile.editor.CodeAttributeEditor:
    boolean updateFrameSizes -> a
    boolean shrinkInstructions -> b
    int codeLength -> c
    boolean modified -> d
    boolean simple -> e
    proguard.classfile.instruction.Instruction[] preInsertions -> preInsertions
    proguard.classfile.instruction.Instruction[] replacements -> replacements
    proguard.classfile.instruction.Instruction[] postInsertions -> postInsertions
    boolean[] deleted -> deleted
    int[] newInstructionOffsets -> f
    int newOffset -> g
    boolean lengthIncreased -> h
    int expectedStackMapFrameOffset -> i
    proguard.classfile.editor.StackSizeUpdater stackSizeUpdater -> j
    proguard.classfile.editor.VariableSizeUpdater variableSizeUpdater -> k
    proguard.classfile.editor.InstructionWriter instructionWriter -> l
    95:96:void <init>() -> <init>
    73:111:void <init>(boolean,boolean) -> <init>
    121:140:void reset(int) -> reset
    150:166:void extend(int) -> extend
    177:189:void insertBeforeInstruction(int,proguard.classfile.instruction.Instruction) -> insertBeforeInstruction
    200:215:void insertBeforeInstruction(int,proguard.classfile.instruction.Instruction[]) -> insertBeforeInstruction
    226:237:void replaceInstruction(int,proguard.classfile.instruction.Instruction) -> replaceInstruction
    248:262:void replaceInstruction(int,proguard.classfile.instruction.Instruction[]) -> replaceInstruction
    273:285:void insertAfterInstruction(int,proguard.classfile.instruction.Instruction) -> insertAfterInstruction
    296:311:void insertAfterInstruction(int,proguard.classfile.instruction.Instruction[]) -> insertAfterInstruction
    320:330:void deleteInstruction(int) -> deleteInstruction
    339:346:void undeleteInstruction(int) -> undeleteInstruction
    355:365:void clearModifications(int) -> clearModifications
    373:373:boolean isModified() -> isModified
    383:383:boolean isModified(int) -> isModified
    392:392:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    406:417:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    423:474:void visitCodeAttribute0(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute0
    480:482:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    488:490:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    496:503:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    509:510:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    516:517:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    522:523:void visitAnyTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotationsAttribute) -> visitAnyTypeAnnotationsAttribute
    534:556:boolean canPerformSimpleReplacements(proguard.classfile.attribute.CodeAttribute) -> a
    566:584:void performSimpleReplacements(proguard.classfile.attribute.CodeAttribute) -> b
    598:628:int updateInstructions(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> a
    641:665:int mapInstructions(byte[],int) -> a
    677:706:void mapInstruction(int,proguard.classfile.instruction.Instruction) -> a
    724:742:void moveInstructions(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,byte[],int) -> a
    760:808:void moveInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> a
    816:823:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    829:836:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    842:849:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    855:866:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    872:888:void visitTableSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.TableSwitchInstruction) -> visitTableSwitchInstruction
    894:910:void visitLookUpSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.LookUpSwitchInstruction) -> visitLookUpSwitchInstruction
    919:922:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    930:944:void visitAnyStackMapFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.StackMapFrame) -> visitAnyStackMapFrame
    950:954:void visitSameOneFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameOneFrame) -> visitSameOneFrame
    960:964:void visitMoreZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.MoreZeroFrame) -> visitMoreZeroFrame
    970:975:void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame) -> visitFullFrame
    980:980:void visitAnyVerificationType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.VerificationType) -> visitAnyVerificationType
    986:987:void visitUninitializedType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.UninitializedType) -> visitUninitializedType
    995:996:void visitLineNumberInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberInfo) -> visitLineNumberInfo
    1005:1007:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    1016:1018:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    1026:1027:void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    1032:1032:void visitAnyTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TargetInfo) -> visitAnyTargetInfo
    1038:1039:void visitLocalVariableTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo) -> visitLocalVariableTargetInfo
    1045:1046:void visitOffsetTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.OffsetTargetInfo) -> visitOffsetTargetInfo
    1055:1057:void visitLocalVariableTargetElement(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo,proguard.classfile.attribute.annotation.target.LocalVariableTargetElement) -> visitLocalVariableTargetElement
    1070:1076:void newJumpOffsets(int,int[],int) -> a
    1087:1087:int newBranchOffset(int,int) -> a
    1100:1100:int newBranchOffset(int,int,int) -> a
    1111:1117:int newInstructionOffset(int) -> a
    1129:1139:int removeEmptyExceptions(proguard.classfile.attribute.ExceptionInfo[],int) -> a
proguard.classfile.editor.CodeAttributeEditor$CompositeInstruction -> proguard.classfile.editor.b:
    proguard.classfile.instruction.Instruction[] instructions -> a
    proguard.classfile.editor.CodeAttributeEditor this$0 -> b
    1179:1181:void <init>(proguard.classfile.editor.CodeAttributeEditor,proguard.classfile.instruction.Instruction[]) -> <init>
    1188:1193:proguard.classfile.instruction.Instruction shrink() -> shrink
    1199:1207:void write(byte[],int) -> write
    1212:1212:void readInfo(byte[],int) -> readInfo
    1218:1218:void writeInfo(byte[],int) -> writeInfo
    1224:1231:int length(int) -> length
    1237:1250:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.visitor.InstructionVisitor) -> accept
    1257:1264:java.lang.String toString() -> toString
    1172:1172:void <init>(proguard.classfile.editor.CodeAttributeEditor,proguard.classfile.instruction.Instruction[],byte) -> <init>
proguard.classfile.editor.CodeAttributeEditorResetter -> proguard.classfile.editor.CodeAttributeEditorResetter:
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> a
    46:48:void <init>(proguard.classfile.editor.CodeAttributeEditor) -> <init>
    53:53:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    58:59:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
proguard.classfile.editor.ComparableConstant -> proguard.classfile.editor.c:
    int[] PRIORITIES -> a
    proguard.classfile.Clazz clazz -> b
    int thisIndex -> c
    proguard.classfile.constant.Constant thisConstant -> d
    proguard.classfile.constant.Constant otherConstant -> e
    int result -> f
    70:74:void <init>(proguard.classfile.Clazz,int,proguard.classfile.constant.Constant) -> <init>
    79:79:int getIndex() -> a
    85:85:proguard.classfile.constant.Constant getConstant() -> b
    93:120:int compareTo(java.lang.Object) -> compareTo
    128:133:void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    137:142:void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    146:148:void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    152:154:void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    158:159:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    163:164:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    168:179:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    183:196:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    200:207:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    211:212:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    216:220:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    224:229:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    236:236:boolean equals(java.lang.Object) -> equals
    245:245:int hashCode() -> hashCode
    258:258:int compare(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    271:271:int compare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    42:59:void <clinit>() -> <clinit>
proguard.classfile.editor.ConstantAdder -> proguard.classfile.editor.ConstantAdder:
    proguard.classfile.editor.ConstantPoolEditor constantPoolEditor -> a
    proguard.classfile.editor.BootstrapMethodsAttributeAdder bootstrapMethodsAttributeAdder -> b
    int constantIndex -> c
    51:54:void <init>(proguard.classfile.ProgramClass) -> <init>
    63:65:int addConstant(proguard.classfile.Clazz,int) -> addConstant
    75:77:int addConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> addConstant
    87:87:int getConstantIndex() -> getConstantIndex
    95:97:void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    102:104:void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    109:111:void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    116:118:void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    123:127:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    132:134:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    140:169:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    176:182:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    188:198:void visitFieldrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.FieldrefConstant) -> visitFieldrefConstant
    204:214:void visitInterfaceMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.InterfaceMethodrefConstant) -> visitInterfaceMethodrefConstant
    220:230:void visitMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodrefConstant) -> visitMethodrefConstant
    236:239:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    244:246:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    251:254:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
proguard.classfile.editor.ConstantPoolEditor -> proguard.classfile.editor.ConstantPoolEditor:
    proguard.classfile.ProgramClass targetClass -> a
    43:45:void <init>(proguard.classfile.ProgramClass) -> <init>
    55:74:int addIntegerConstant(int) -> addIntegerConstant
    84:103:int addLongConstant(long) -> addLongConstant
    114:133:int addFloatConstant(float) -> addFloatConstant
    144:163:int addDoubleConstant(double) -> addDoubleConstant
    176:195:int addStringConstant(java.lang.String,proguard.classfile.Clazz,proguard.classfile.Member) -> addStringConstant
    212:212:int addInvokeDynamicConstant(int,java.lang.String,java.lang.String,proguard.classfile.Clazz[]) -> addInvokeDynamicConstant
    228:248:int addInvokeDynamicConstant(int,int,proguard.classfile.Clazz[]) -> addInvokeDynamicConstant
    263:283:int addMethodHandleConstant(int,int) -> addMethodHandleConstant
    296:296:int addFieldrefConstant(proguard.classfile.Clazz,proguard.classfile.Member) -> addFieldrefConstant
    315:315:int addFieldrefConstant(java.lang.String,java.lang.String,java.lang.String,proguard.classfile.Clazz,proguard.classfile.Member) -> addFieldrefConstant
    332:332:int addFieldrefConstant(java.lang.String,int,proguard.classfile.Clazz,proguard.classfile.Member) -> addFieldrefConstant
    350:350:int addFieldrefConstant(int,java.lang.String,java.lang.String,proguard.classfile.Clazz,proguard.classfile.Member) -> addFieldrefConstant
    368:388:int addFieldrefConstant(int,int,proguard.classfile.Clazz,proguard.classfile.Member) -> addFieldrefConstant
    406:406:int addInterfaceMethodrefConstant(java.lang.String,java.lang.String,java.lang.String,proguard.classfile.Clazz,proguard.classfile.Member) -> addInterfaceMethodrefConstant
    423:423:int addInterfaceMethodrefConstant(java.lang.String,int,proguard.classfile.Clazz,proguard.classfile.Member) -> addInterfaceMethodrefConstant
    438:438:int addInterfaceMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.Member) -> addInterfaceMethodrefConstant
    457:457:int addInterfaceMethodrefConstant(int,java.lang.String,java.lang.String,proguard.classfile.Clazz,proguard.classfile.Member) -> addInterfaceMethodrefConstant
    475:495:int addInterfaceMethodrefConstant(int,int,proguard.classfile.Clazz,proguard.classfile.Member) -> addInterfaceMethodrefConstant
    510:510:int addMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.Member) -> addMethodrefConstant
    529:529:int addMethodrefConstant(java.lang.String,java.lang.String,java.lang.String,proguard.classfile.Clazz,proguard.classfile.Member) -> addMethodrefConstant
    546:546:int addMethodrefConstant(java.lang.String,int,proguard.classfile.Clazz,proguard.classfile.Member) -> addMethodrefConstant
    564:564:int addMethodrefConstant(int,java.lang.String,java.lang.String,proguard.classfile.Clazz,proguard.classfile.Member) -> addMethodrefConstant
    582:602:int addMethodrefConstant(int,int,proguard.classfile.Clazz,proguard.classfile.Member) -> addMethodrefConstant
    615:615:int addClassConstant(proguard.classfile.Clazz) -> addClassConstant
    627:648:int addClassConstant(java.lang.String,proguard.classfile.Clazz) -> addClassConstant
    659:678:int addMethodTypeConstant(java.lang.String) -> addMethodTypeConstant
    690:710:int addNameAndTypeConstant(java.lang.String,java.lang.String) -> addNameAndTypeConstant
    721:740:int addUtf8Constant(java.lang.String) -> addUtf8Constant
    750:780:int addConstant(proguard.classfile.constant.Constant) -> addConstant
proguard.classfile.editor.ConstantPoolRemapper -> proguard.classfile.editor.ConstantPoolRemapper:
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> a
    int[] constantIndexMap -> b
    44:62:void <init>() -> <init>
    73:74:void setConstantIndexMap(int[]) -> setConstantIndexMap
    82:95:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    100:100:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    108:108:void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    114:114:void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    120:120:void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    126:126:void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    131:133:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    139:139:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    144:146:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    151:153:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    158:162:void visitFieldrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.FieldrefConstant) -> visitFieldrefConstant
    167:171:void visitInterfaceMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.InterfaceMethodrefConstant) -> visitInterfaceMethodrefConstant
    176:180:void visitMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodrefConstant) -> visitMethodrefConstant
    185:187:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    192:194:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    199:203:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    210:211:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    216:217:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    223:230:void visitMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> a
    236:236:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    242:242:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    249:253:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    258:263:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    268:272:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    277:281:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    286:291:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    296:302:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    307:309:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    314:316:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    321:325:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    330:334:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    339:344:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    349:355:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    360:376:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    381:386:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    391:396:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    401:403:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    408:413:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    418:423:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    428:433:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    438:443:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    448:453:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    460:466:void visitBootstrapMethodInfo(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodInfo) -> visitBootstrapMethodInfo
    473:490:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    497:502:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    507:507:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    513:524:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    529:529:void visitAnyStackMapFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.StackMapFrame) -> visitAnyStackMapFrame
    535:536:void visitSameOneFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameOneFrame) -> visitSameOneFrame
    542:543:void visitMoreZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.MoreZeroFrame) -> visitMoreZeroFrame
    549:551:void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame) -> visitFullFrame
    556:556:void visitAnyVerificationType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.VerificationType) -> visitAnyVerificationType
    561:563:void visitObjectType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.ObjectType) -> visitObjectType
    570:572:void visitParameterInfo(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.ParameterInfo) -> visitParameterInfo
    579:583:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    590:594:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    601:606:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    613:617:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    622:628:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    633:637:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    642:647:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    652:657:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    665:669:void remapConstantIndexArray(int[],int) -> a
    680:686:int remapConstantIndex(int) -> a
proguard.classfile.editor.ConstantPoolShrinker -> proguard.classfile.editor.ConstantPoolShrinker:
    java.lang.Object USED -> a
    int[] constantIndexMap -> b
    proguard.classfile.editor.ConstantPoolRemapper constantPoolRemapper -> c
    44:66:void <init>() -> <init>
    74:104:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    112:117:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    124:125:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    130:133:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    138:144:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    149:152:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    157:161:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    166:169:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    174:177:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    182:186:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    193:194:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    199:203:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    208:210:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    215:217:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    222:226:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    231:238:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    243:245:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    250:252:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    257:261:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    266:270:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    275:282:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    287:291:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    296:300:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    305:309:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    314:318:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    323:327:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    332:336:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    341:345:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    352:356:void visitBootstrapMethodInfo(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodInfo) -> visitBootstrapMethodInfo
    363:366:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    373:377:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    382:382:void visitAnyStackMapFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.StackMapFrame) -> visitAnyStackMapFrame
    388:389:void visitSameOneFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameOneFrame) -> visitSameOneFrame
    395:396:void visitMoreZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.MoreZeroFrame) -> visitMoreZeroFrame
    402:404:void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame) -> visitFullFrame
    409:409:void visitAnyVerificationType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.VerificationType) -> visitAnyVerificationType
    414:415:void visitObjectType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.ObjectType) -> visitObjectType
    422:423:void visitParameterInfo(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.ParameterInfo) -> visitParameterInfo
    430:432:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    439:441:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    448:452:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    459:465:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    470:477:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    482:488:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    493:500:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    505:512:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    517:517:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    522:523:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    534:535:void markConstant(proguard.classfile.Clazz,int) -> a
    543:544:void markAsUsed(proguard.classfile.constant.Constant) -> a
    552:552:boolean isUsed(proguard.classfile.VisitorAccepter) -> a
    564:602:int shrinkConstantPool(proguard.classfile.constant.Constant[],int) -> a
    63:63:void <clinit>() -> <clinit>
proguard.classfile.editor.ConstantPoolSorter -> proguard.classfile.editor.ConstantPoolSorter:
    int[] constantIndexMap -> a
    proguard.classfile.editor.ComparableConstant[] comparableConstantPool -> b
    proguard.classfile.constant.Constant[] newConstantPool -> c
    proguard.classfile.editor.ConstantPoolRemapper constantPoolRemapper -> d
    37:45:void <init>() -> <init>
    52:122:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
proguard.classfile.editor.ElementValueAdder -> proguard.classfile.editor.ElementValueAdder:
    proguard.classfile.attribute.annotation.ElementValue[] EMPTY_ELEMENT_VALUES -> a
    proguard.classfile.ProgramClass targetClass -> b
    proguard.classfile.attribute.annotation.AnnotationDefaultAttribute targetAnnotationDefaultAttribute -> c
    proguard.classfile.editor.ConstantAdder constantAdder -> d
    proguard.classfile.editor.ElementValuesEditor elementValuesEditor -> e
    53:59:void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute,boolean) -> <init>
    69:77:void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.annotation.Annotation,boolean) -> <init>
    87:95:void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.annotation.ArrayElementValue,boolean) -> <init>
    103:114:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    120:134:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    140:153:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    159:173:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    179:198:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    206:216:void addElementValue(proguard.classfile.attribute.annotation.ElementValue) -> a
    36:36:void <clinit>() -> <clinit>
proguard.classfile.editor.ElementValuesEditor -> proguard.classfile.editor.ElementValuesEditor:
    proguard.classfile.ProgramClass targetClass -> a
    proguard.classfile.attribute.annotation.Annotation targetAnnotation -> b
    proguard.classfile.attribute.annotation.ArrayElementValue targetArrayElementValue -> c
    boolean replaceElementValues -> d
    49:54:void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.annotation.Annotation,boolean) -> <init>
    64:69:void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.annotation.ArrayElementValue,boolean) -> <init>
    78:112:void addElementValue(proguard.classfile.attribute.annotation.ElementValue) -> addElementValue
    121:137:void deleteElementValue(java.lang.String) -> deleteElementValue
    151:161:boolean replaceElementValue(int,proguard.classfile.attribute.annotation.ElementValue[],proguard.classfile.attribute.annotation.ElementValue) -> a
    174:187:proguard.classfile.attribute.annotation.ElementValue[] addElementValue(int,proguard.classfile.attribute.annotation.ElementValue[],proguard.classfile.attribute.annotation.ElementValue) -> b
    200:216:int deleteElementValue(int,proguard.classfile.attribute.annotation.ElementValue[],java.lang.String) -> a
    228:236:int findElementValue(int,proguard.classfile.attribute.annotation.ElementValue[],java.lang.String) -> b
proguard.classfile.editor.ExceptionAdder -> proguard.classfile.editor.ExceptionAdder:
    proguard.classfile.editor.ConstantAdder constantAdder -> a
    proguard.classfile.editor.ExceptionsAttributeEditor exceptionsAttributeEditor -> b
    49:52:void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.ExceptionsAttribute) -> <init>
    60:64:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
proguard.classfile.editor.ExceptionInfoAdder -> proguard.classfile.editor.ExceptionInfoAdder:
    proguard.classfile.editor.ConstantAdder constantAdder -> a
    proguard.classfile.editor.CodeAttributeComposer codeAttributeComposer -> b
    46:49:void <init>(proguard.classfile.ProgramClass,proguard.classfile.editor.CodeAttributeComposer) -> <init>
    57:66:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
proguard.classfile.editor.ExceptionsAttributeEditor -> proguard.classfile.editor.ExceptionsAttributeEditor:
    proguard.classfile.attribute.ExceptionsAttribute targetExceptionsAttribute -> a
    42:44:void <init>(proguard.classfile.attribute.ExceptionsAttribute) -> <init>
    52:67:void addException(int) -> addException
proguard.classfile.editor.InnerClassesAccessFixer -> proguard.classfile.editor.InnerClassesAccessFixer:
    int innerClassAccessFlags -> a
    37:37:void <init>() -> <init>
    51:58:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    63:63:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    68:69:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    74:74:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    79:82:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
proguard.classfile.editor.InstructionAdder -> proguard.classfile.editor.InstructionAdder:
    proguard.classfile.editor.ConstantAdder constantAdder -> a
    proguard.classfile.editor.CodeAttributeComposer codeAttributeComposer -> b
    49:52:void <init>(proguard.classfile.ProgramClass,proguard.classfile.editor.CodeAttributeComposer) -> <init>
    61:62:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    68:75:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
proguard.classfile.editor.InstructionWriter -> proguard.classfile.editor.InstructionWriter:
    int codeLength -> a
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> b
    38:38:void <init>() -> <init>
    61:67:void reset(int) -> reset
    76:82:void extend(int) -> extend
    91:92:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    100:122:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    130:152:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    160:235:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    242:243:void visitAnySwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SwitchInstruction) -> visitAnySwitchInstruction
    251:265:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    276:280:void insertBeforeInstruction(int,proguard.classfile.instruction.Instruction) -> a
    289:293:void replaceInstruction(int,proguard.classfile.instruction.Instruction) -> b
    314:319:void ensureCodeAttributeEditor() -> a
proguard.classfile.editor.InterfaceAdder -> proguard.classfile.editor.InterfaceAdder:
    proguard.classfile.editor.ConstantAdder constantAdder -> a
    proguard.classfile.editor.InterfacesEditor interfacesEditor -> b
    47:50:void <init>(proguard.classfile.ProgramClass) -> <init>
    57:58:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
proguard.classfile.editor.InterfaceDeleter -> proguard.classfile.editor.InterfaceDeleter:
    boolean[] delete -> a
    55:57:void <init>(boolean[]) -> <init>
    64:94:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    99:99:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    104:208:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
proguard.classfile.editor.InterfaceSorter -> proguard.classfile.editor.InterfaceSorter:
    37:37:void <init>() -> <init>
    49:81:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    86:86:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    91:245:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
proguard.classfile.editor.InterfacesEditor -> proguard.classfile.editor.InterfacesEditor:
    proguard.classfile.ProgramClass targetClass -> a
    42:44:void <init>(proguard.classfile.ProgramClass) -> <init>
    53:61:void addInterface(int) -> addInterface
    70:85:void deleteInterface(int) -> deleteInterface
    96:107:int findInterfaceIndex(int) -> a
proguard.classfile.editor.LineNumberInfoAdder -> proguard.classfile.editor.LineNumberInfoAdder:
    proguard.classfile.editor.LineNumberTableAttributeEditor lineNumberTableAttributeEditor -> a
    java.lang.String source -> b
    48:50:void <init>(proguard.classfile.attribute.LineNumberTableAttribute) -> <init>
    55:55:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    61:70:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    78:90:void visitLineNumberInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberInfo) -> visitLineNumberInfo
proguard.classfile.editor.LineNumberTableAttributeEditor -> proguard.classfile.editor.LineNumberTableAttributeEditor:
    proguard.classfile.attribute.LineNumberTableAttribute targetLineNumberTableAttribute -> a
    41:43:void <init>(proguard.classfile.attribute.LineNumberTableAttribute) -> <init>
    51:66:void addLineNumberInfo(proguard.classfile.attribute.LineNumberInfo) -> addLineNumberInfo
proguard.classfile.editor.LineNumberTableAttributeTrimmer -> proguard.classfile.editor.LineNumberTableAttributeTrimmer:
    35:35:void <init>() -> <init>
    41:41:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    46:77:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
proguard.classfile.editor.LocalVariableInfoAdder -> proguard.classfile.editor.LocalVariableInfoAdder:
    proguard.classfile.editor.ConstantAdder constantAdder -> a
    proguard.classfile.editor.LocalVariableTableAttributeEditor localVariableTableAttributeEditor -> b
    44:47:void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.LocalVariableTableAttribute) -> <init>
    55:66:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
proguard.classfile.editor.LocalVariableTableAttributeEditor -> proguard.classfile.editor.LocalVariableTableAttributeEditor:
    proguard.classfile.attribute.LocalVariableTableAttribute targetLocalVariableTableAttribute -> a
    42:44:void <init>(proguard.classfile.attribute.LocalVariableTableAttribute) -> <init>
    52:56:void addLocalVariableInfo(proguard.classfile.attribute.LocalVariableInfo) -> addLocalVariableInfo
proguard.classfile.editor.LocalVariableTypeInfoAdder -> proguard.classfile.editor.LocalVariableTypeInfoAdder:
    proguard.classfile.editor.ConstantAdder constantAdder -> a
    proguard.classfile.editor.LocalVariableTypeTableAttributeEditor localVariableTypeTableAttributeEditor -> b
    44:47:void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> <init>
    55:67:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
proguard.classfile.editor.LocalVariableTypeTableAttributeEditor -> proguard.classfile.editor.LocalVariableTypeTableAttributeEditor:
    proguard.classfile.attribute.LocalVariableTypeTableAttribute targetLocalVariableTypeTableAttribute -> a
    43:45:void <init>(proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> <init>
    53:57:void addLocalVariableTypeInfo(proguard.classfile.attribute.LocalVariableTypeInfo) -> addLocalVariableTypeInfo
proguard.classfile.editor.MemberAdder -> proguard.classfile.editor.MemberAdder:
    proguard.classfile.attribute.Attribute[] EMPTY_ATTRIBUTES -> a
    proguard.classfile.ProgramClass targetClass -> b
    proguard.classfile.visitor.MemberVisitor extraMemberVisitor -> c
    proguard.classfile.editor.ConstantAdder constantAdder -> d
    proguard.classfile.editor.ClassEditor classEditor -> e
    66:67:void <init>(proguard.classfile.ProgramClass) -> <init>
    84:92:void <init>(proguard.classfile.ProgramClass,proguard.classfile.visitor.MemberVisitor) -> <init>
    101:181:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    186:280:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    46:46:void <clinit>() -> <clinit>
proguard.classfile.editor.MemberReferenceFixer -> proguard.classfile.editor.MemberReferenceFixer:
    proguard.classfile.editor.StackSizeUpdater stackSizeUpdater -> a
    int constantIndex -> b
    boolean isInterfaceMethod -> c
    boolean stackSizesMayHaveChanged -> d
    39:51:void <init>() -> <init>
    65:86:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    91:91:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    98:118:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    124:146:void visitFieldrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.FieldrefConstant) -> visitFieldrefConstant
    152:202:void visitInterfaceMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.InterfaceMethodrefConstant) -> visitInterfaceMethodrefConstant
    208:258:void visitMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodrefConstant) -> visitMethodrefConstant
    264:277:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    285:286:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    291:291:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    296:314:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    320:327:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    333:334:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    340:341:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    347:348:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    356:357:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    364:365:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    370:371:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    376:377:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    382:386:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    391:395:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    408:422:void fixElementValue$5835c5e2(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.ElementValue) -> a
proguard.classfile.editor.MethodInvocationFixer -> proguard.classfile.editor.MethodInvocationFixer:
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> a
    proguard.classfile.Clazz referencedClass -> b
    proguard.classfile.Clazz referencedMethodClass -> c
    proguard.classfile.Member referencedMethod -> d
    38:47:void <init>() -> <init>
    57:57:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    63:70:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    75:75:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    80:186:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    191:191:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    200:213:void visitAnyMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyMethodrefConstant
    219:220:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
proguard.classfile.editor.NameAndTypeShrinker -> proguard.classfile.editor.NameAndTypeShrinker:
    java.lang.Object USED -> a
    int[] constantIndexMap -> b
    proguard.classfile.editor.ConstantPoolRemapper constantPoolRemapper -> c
    40:50:void <init>() -> <init>
    59:80:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    85:85:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    90:91:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    96:97:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    102:102:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    107:111:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    121:122:void markNameAndTypeConstant(proguard.classfile.Clazz,int) -> a
    131:132:void markAsUsed(proguard.classfile.VisitorAccepter) -> a
    141:141:boolean isUsed(proguard.classfile.VisitorAccepter) -> b
    153:193:int shrinkConstantPool(proguard.classfile.constant.Constant[],int) -> a
    47:47:void <clinit>() -> <clinit>
proguard.classfile.editor.NamedAttributeDeleter -> proguard.classfile.editor.NamedAttributeDeleter:
    java.lang.String attributeName -> a
    46:48:void <init>(java.lang.String) -> <init>
    53:53:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    58:59:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    64:64:void visitLibraryMember(proguard.classfile.LibraryClass,proguard.classfile.LibraryMember) -> visitLibraryMember
    69:70:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    75:75:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    80:81:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
proguard.classfile.editor.ParameterAnnotationsAttributeEditor -> proguard.classfile.editor.ParameterAnnotationsAttributeEditor:
    proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute targetParameterAnnotationsAttribute -> a
    42:44:void <init>(proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> <init>
    52:55:void addAnnotation(int,proguard.classfile.attribute.annotation.Annotation) -> addAnnotation
proguard.classfile.editor.ParameterInfoAdder -> proguard.classfile.editor.ParameterInfoAdder:
    proguard.classfile.editor.ConstantAdder constantAdder -> a
    proguard.classfile.attribute.MethodParametersAttribute targetMethodParametersAttribute -> b
    44:47:void <init>(proguard.classfile.ProgramClass,proguard.classfile.attribute.MethodParametersAttribute) -> <init>
    55:61:void visitParameterInfo(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.ParameterInfo) -> visitParameterInfo
proguard.classfile.editor.StackSizeUpdater -> proguard.classfile.editor.StackSizeUpdater:
    proguard.classfile.attribute.visitor.StackSizeComputer stackSizeComputer -> a
    34:38:void <init>() -> <init>
    43:43:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    49:53:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
proguard.classfile.editor.SubclassAdder -> proguard.classfile.editor.SubclassAdder:
    proguard.classfile.Clazz subclass -> a
    42:44:void <init>(proguard.classfile.Clazz) -> <init>
    51:52:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    57:58:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.editor.SubclassToAdder -> proguard.classfile.editor.SubclassToAdder:
    proguard.classfile.Clazz targetClass -> a
    43:45:void <init>(proguard.classfile.Clazz) -> <init>
    52:53:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    58:59:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.editor.Utf8Shrinker -> proguard.classfile.editor.Utf8Shrinker:
    java.lang.Object USED -> a
    int[] constantIndexMap -> b
    proguard.classfile.editor.ConstantPoolRemapper constantPoolRemapper -> c
    42:59:void <init>() -> <init>
    67:91:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    99:104:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    109:109:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    114:115:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    120:121:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    126:128:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    136:137:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    142:145:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    150:153:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    158:162:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    167:172:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    177:178:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    183:184:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    189:192:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    197:198:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    203:207:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    212:213:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    218:222:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    227:228:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    233:234:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    239:240:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    245:249:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    254:258:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    263:267:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    272:276:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    281:285:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    292:296:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    303:307:void visitParameterInfo(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.ParameterInfo) -> visitParameterInfo
    314:316:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    323:325:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    332:336:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    343:353:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    358:365:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    370:376:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    381:388:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    393:400:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    410:411:void markCpUtf8Entry(proguard.classfile.Clazz,int) -> a
    420:421:void markAsUsed(proguard.classfile.VisitorAccepter) -> a
    430:430:boolean isUsed(proguard.classfile.VisitorAccepter) -> b
    442:481:int shrinkConstantPool(proguard.classfile.constant.Constant[],int) -> a
    56:56:void <clinit>() -> <clinit>
proguard.classfile.editor.VariableCleaner -> proguard.classfile.editor.VariableCleaner:
    boolean deleteLocalVariableTableAttribute -> a
    boolean deleteLocalVariableTypeTableAttribute -> b
    37:37:void <init>() -> <init>
    47:47:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    52:81:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    87:102:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    108:123:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    138:155:int removeUnusedLocalVariables(proguard.classfile.attribute.LocalVariableInfo[],int,int) -> a
    169:186:int removeUnusedLocalVariableTypes(proguard.classfile.attribute.LocalVariableTypeInfo[],int,int) -> a
    200:221:void trimLocalVariables(proguard.classfile.attribute.LocalVariableInfo[],int,int) -> b
    234:255:void trimLocalVariableTypes(proguard.classfile.attribute.LocalVariableTypeInfo[],int,int) -> b
    264:269:int[] createMaxArray(int) -> a
proguard.classfile.editor.VariableEditor -> proguard.classfile.editor.VariableEditor:
    boolean modified -> a
    boolean[] deleted -> b
    int[] variableMap -> c
    proguard.classfile.editor.VariableRemapper variableRemapper -> d
    36:45:void <init>() -> <init>
    56:68:void reset(int) -> reset
    77:80:void deleteVariable(int) -> deleteVariable
    88:88:boolean isDeleted(int) -> isDeleted
    94:94:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    100:129:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
proguard.classfile.editor.VariableRemapper -> proguard.classfile.editor.VariableRemapper:
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> a
    int[] variableMap -> b
    40:53:void <init>() -> <init>
    64:65:void setVariableMap(int[]) -> setVariableMap
    70:70:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    76:86:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    102:112:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    118:119:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    125:126:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    132:133:void visitAnyTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotationsAttribute) -> visitAnyTypeAnnotationsAttribute
    140:142:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    149:151:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    158:159:void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    164:164:void visitAnyTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TargetInfo) -> visitAnyTargetInfo
    169:170:void visitLocalVariableTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo) -> visitLocalVariableTargetInfo
    177:179:void visitLocalVariableTargetElement(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo,proguard.classfile.attribute.annotation.target.LocalVariableTargetElement) -> visitLocalVariableTargetElement
    184:184:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    190:202:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    212:212:int remapVariable(int) -> a
proguard.classfile.editor.VariableSizeUpdater -> proguard.classfile.editor.VariableSizeUpdater:
    proguard.classfile.editor.VariableCleaner variableCleaner -> a
    37:49:void <init>() -> <init>
    54:54:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    64:79:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    84:84:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    89:104:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
proguard.classfile.instruction.BranchInstruction -> proguard.classfile.instruction.BranchInstruction:
    int branchOffset -> branchOffset
    41:41:void <init>() -> <init>
    45:48:void <init>(byte,int) -> <init>
    58:61:proguard.classfile.instruction.BranchInstruction copy(proguard.classfile.instruction.BranchInstruction) -> copy
    70:76:byte canonicalOpcode() -> canonicalOpcode
    83:113:proguard.classfile.instruction.Instruction shrink() -> shrink
    118:119:void readInfo(byte[],int) -> readInfo
    124:130:void writeInfo(byte[],int) -> writeInfo
    135:135:int length(int) -> length
    141:142:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.visitor.InstructionVisitor) -> accept
    147:147:java.lang.String toString(int) -> toString
    155:155:java.lang.String toString() -> toString
    166:166:int branchOffsetSize() -> a
    178:178:int requiredBranchOffsetSize() -> b
proguard.classfile.instruction.ConstantInstruction -> proguard.classfile.instruction.ConstantInstruction:
    int constantIndex -> constantIndex
    int constant -> constant
    int parameterStackDelta -> a
    int typeStackDelta -> b
    51:51:void <init>() -> <init>
    60:61:void <init>(byte,int) -> <init>
    69:73:void <init>(byte,int,int) -> <init>
    83:87:proguard.classfile.instruction.ConstantInstruction copy(proguard.classfile.instruction.ConstantInstruction) -> copy
    96:96:byte canonicalOpcode() -> canonicalOpcode
    104:121:proguard.classfile.instruction.Instruction shrink() -> shrink
    126:131:void readInfo(byte[],int) -> readInfo
    136:146:void writeInfo(byte[],int) -> writeInfo
    151:151:int length(int) -> length
    157:158:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.visitor.InstructionVisitor) -> accept
    163:191:int stackPopCount(proguard.classfile.Clazz) -> stackPopCount
    197:215:int stackPushCount(proguard.classfile.Clazz) -> stackPushCount
    221:221:void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    222:222:void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    223:223:void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    224:224:void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    225:225:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    226:226:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    227:227:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    228:228:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    229:229:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    234:237:void visitFieldrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.FieldrefConstant) -> visitFieldrefConstant
    242:243:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    248:249:void visitInterfaceMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.InterfaceMethodrefConstant) -> visitInterfaceMethodrefConstant
    254:255:void visitMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodrefConstant) -> visitMethodrefConstant
    260:264:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    271:271:java.lang.String toString() -> toString
    282:282:int constantIndexSize() -> a
    292:292:int constantSize() -> b
    305:305:int requiredConstantIndexSize() -> c
proguard.classfile.instruction.Instruction -> proguard.classfile.instruction.Instruction:
    boolean[] MAY_THROW_EXCEPTIONS -> a
    boolean[] IS_CATEGORY2 -> b
    int[] STACK_POP_COUNTS -> c
    int[] STACK_PUSH_COUNTS -> d
    byte opcode -> opcode
    32:32:void <init>() -> <init>
    877:877:byte canonicalOpcode() -> canonicalOpcode
    proguard.classfile.instruction.Instruction shrink() -> shrink
    894:895:void write(proguard.classfile.attribute.CodeAttribute,int) -> write
    904:914:void write(byte[],int) -> write
    923:923:boolean isWide() -> isWide
    void readInfo(byte[],int) -> readInfo
    void writeInfo(byte[],int) -> writeInfo
    int length(int) -> length
    void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.visitor.InstructionVisitor) -> accept
    956:956:java.lang.String toString(int) -> toString
    965:965:java.lang.String getName() -> getName
    974:974:boolean mayThrowExceptions() -> mayThrowExceptions
    984:984:boolean isCategory2() -> isCategory2
    994:994:int stackPopCount(proguard.classfile.Clazz) -> stackPopCount
    1004:1004:int stackPushCount(proguard.classfile.Clazz) -> stackPushCount
    1012:1012:int readByte(byte[],int) -> readByte
    1017:1017:int readShort(byte[],int) -> readShort
    1023:1023:int readInt(byte[],int) -> readInt
    1031:1037:int readValue(byte[],int,int) -> readValue
    1043:1043:int readSignedByte(byte[],int) -> readSignedByte
    1048:1048:int readSignedShort(byte[],int) -> readSignedShort
    1054:1060:int readSignedValue(byte[],int,int) -> readSignedValue
    1066:1072:void writeByte(byte[],int,int) -> writeByte
    1076:1083:void writeShort(byte[],int,int) -> writeShort
    1087:1091:void writeInt(byte[],int,int) -> writeInt
    1095:1103:void writeValue(byte[],int,int,int) -> writeValue
    1107:1113:void writeSignedByte(byte[],int,int) -> writeSignedByte
    1117:1124:void writeSignedShort(byte[],int,int) -> writeSignedShort
    1128:1136:void writeSignedValue(byte[],int,int,int) -> writeSignedValue
    35:661:void <clinit>() -> <clinit>
proguard.classfile.instruction.InstructionConstants -> proguard.classfile.instruction.InstructionConstants:
    byte OP_NOP -> OP_NOP
    byte OP_ACONST_NULL -> OP_ACONST_NULL
    byte OP_ICONST_M1 -> OP_ICONST_M1
    byte OP_ICONST_0 -> OP_ICONST_0
    byte OP_ICONST_1 -> OP_ICONST_1
    byte OP_ICONST_2 -> OP_ICONST_2
    byte OP_ICONST_3 -> OP_ICONST_3
    byte OP_ICONST_4 -> OP_ICONST_4
    byte OP_ICONST_5 -> OP_ICONST_5
    byte OP_LCONST_0 -> OP_LCONST_0
    byte OP_LCONST_1 -> OP_LCONST_1
    byte OP_FCONST_0 -> OP_FCONST_0
    byte OP_FCONST_1 -> OP_FCONST_1
    byte OP_FCONST_2 -> OP_FCONST_2
    byte OP_DCONST_0 -> OP_DCONST_0
    byte OP_DCONST_1 -> OP_DCONST_1
    byte OP_BIPUSH -> OP_BIPUSH
    byte OP_SIPUSH -> OP_SIPUSH
    byte OP_LDC -> OP_LDC
    byte OP_LDC_W -> OP_LDC_W
    byte OP_LDC2_W -> OP_LDC2_W
    byte OP_ILOAD -> OP_ILOAD
    byte OP_LLOAD -> OP_LLOAD
    byte OP_FLOAD -> OP_FLOAD
    byte OP_DLOAD -> OP_DLOAD
    byte OP_ALOAD -> OP_ALOAD
    byte OP_ILOAD_0 -> OP_ILOAD_0
    byte OP_ILOAD_1 -> OP_ILOAD_1
    byte OP_ILOAD_2 -> OP_ILOAD_2
    byte OP_ILOAD_3 -> OP_ILOAD_3
    byte OP_LLOAD_0 -> OP_LLOAD_0
    byte OP_LLOAD_1 -> OP_LLOAD_1
    byte OP_LLOAD_2 -> OP_LLOAD_2
    byte OP_LLOAD_3 -> OP_LLOAD_3
    byte OP_FLOAD_0 -> OP_FLOAD_0
    byte OP_FLOAD_1 -> OP_FLOAD_1
    byte OP_FLOAD_2 -> OP_FLOAD_2
    byte OP_FLOAD_3 -> OP_FLOAD_3
    byte OP_DLOAD_0 -> OP_DLOAD_0
    byte OP_DLOAD_1 -> OP_DLOAD_1
    byte OP_DLOAD_2 -> OP_DLOAD_2
    byte OP_DLOAD_3 -> OP_DLOAD_3
    byte OP_ALOAD_0 -> OP_ALOAD_0
    byte OP_ALOAD_1 -> OP_ALOAD_1
    byte OP_ALOAD_2 -> OP_ALOAD_2
    byte OP_ALOAD_3 -> OP_ALOAD_3
    byte OP_IALOAD -> OP_IALOAD
    byte OP_LALOAD -> OP_LALOAD
    byte OP_FALOAD -> OP_FALOAD
    byte OP_DALOAD -> OP_DALOAD
    byte OP_AALOAD -> OP_AALOAD
    byte OP_BALOAD -> OP_BALOAD
    byte OP_CALOAD -> OP_CALOAD
    byte OP_SALOAD -> OP_SALOAD
    byte OP_ISTORE -> OP_ISTORE
    byte OP_LSTORE -> OP_LSTORE
    byte OP_FSTORE -> OP_FSTORE
    byte OP_DSTORE -> OP_DSTORE
    byte OP_ASTORE -> OP_ASTORE
    byte OP_ISTORE_0 -> OP_ISTORE_0
    byte OP_ISTORE_1 -> OP_ISTORE_1
    byte OP_ISTORE_2 -> OP_ISTORE_2
    byte OP_ISTORE_3 -> OP_ISTORE_3
    byte OP_LSTORE_0 -> OP_LSTORE_0
    byte OP_LSTORE_1 -> OP_LSTORE_1
    byte OP_LSTORE_2 -> OP_LSTORE_2
    byte OP_LSTORE_3 -> OP_LSTORE_3
    byte OP_FSTORE_0 -> OP_FSTORE_0
    byte OP_FSTORE_1 -> OP_FSTORE_1
    byte OP_FSTORE_2 -> OP_FSTORE_2
    byte OP_FSTORE_3 -> OP_FSTORE_3
    byte OP_DSTORE_0 -> OP_DSTORE_0
    byte OP_DSTORE_1 -> OP_DSTORE_1
    byte OP_DSTORE_2 -> OP_DSTORE_2
    byte OP_DSTORE_3 -> OP_DSTORE_3
    byte OP_ASTORE_0 -> OP_ASTORE_0
    byte OP_ASTORE_1 -> OP_ASTORE_1
    byte OP_ASTORE_2 -> OP_ASTORE_2
    byte OP_ASTORE_3 -> OP_ASTORE_3
    byte OP_IASTORE -> OP_IASTORE
    byte OP_LASTORE -> OP_LASTORE
    byte OP_FASTORE -> OP_FASTORE
    byte OP_DASTORE -> OP_DASTORE
    byte OP_AASTORE -> OP_AASTORE
    byte OP_BASTORE -> OP_BASTORE
    byte OP_CASTORE -> OP_CASTORE
    byte OP_SASTORE -> OP_SASTORE
    byte OP_POP -> OP_POP
    byte OP_POP2 -> OP_POP2
    byte OP_DUP -> OP_DUP
    byte OP_DUP_X1 -> OP_DUP_X1
    byte OP_DUP_X2 -> OP_DUP_X2
    byte OP_DUP2 -> OP_DUP2
    byte OP_DUP2_X1 -> OP_DUP2_X1
    byte OP_DUP2_X2 -> OP_DUP2_X2
    byte OP_SWAP -> OP_SWAP
    byte OP_IADD -> OP_IADD
    byte OP_LADD -> OP_LADD
    byte OP_FADD -> OP_FADD
    byte OP_DADD -> OP_DADD
    byte OP_ISUB -> OP_ISUB
    byte OP_LSUB -> OP_LSUB
    byte OP_FSUB -> OP_FSUB
    byte OP_DSUB -> OP_DSUB
    byte OP_IMUL -> OP_IMUL
    byte OP_LMUL -> OP_LMUL
    byte OP_FMUL -> OP_FMUL
    byte OP_DMUL -> OP_DMUL
    byte OP_IDIV -> OP_IDIV
    byte OP_LDIV -> OP_LDIV
    byte OP_FDIV -> OP_FDIV
    byte OP_DDIV -> OP_DDIV
    byte OP_IREM -> OP_IREM
    byte OP_LREM -> OP_LREM
    byte OP_FREM -> OP_FREM
    byte OP_DREM -> OP_DREM
    byte OP_INEG -> OP_INEG
    byte OP_LNEG -> OP_LNEG
    byte OP_FNEG -> OP_FNEG
    byte OP_DNEG -> OP_DNEG
    byte OP_ISHL -> OP_ISHL
    byte OP_LSHL -> OP_LSHL
    byte OP_ISHR -> OP_ISHR
    byte OP_LSHR -> OP_LSHR
    byte OP_IUSHR -> OP_IUSHR
    byte OP_LUSHR -> OP_LUSHR
    byte OP_IAND -> OP_IAND
    byte OP_LAND -> OP_LAND
    byte OP_IOR -> OP_IOR
    byte OP_LOR -> OP_LOR
    byte OP_IXOR -> OP_IXOR
    byte OP_LXOR -> OP_LXOR
    byte OP_IINC -> OP_IINC
    byte OP_I2L -> OP_I2L
    byte OP_I2F -> OP_I2F
    byte OP_I2D -> OP_I2D
    byte OP_L2I -> OP_L2I
    byte OP_L2F -> OP_L2F
    byte OP_L2D -> OP_L2D
    byte OP_F2I -> OP_F2I
    byte OP_F2L -> OP_F2L
    byte OP_F2D -> OP_F2D
    byte OP_D2I -> OP_D2I
    byte OP_D2L -> OP_D2L
    byte OP_D2F -> OP_D2F
    byte OP_I2B -> OP_I2B
    byte OP_I2C -> OP_I2C
    byte OP_I2S -> OP_I2S
    byte OP_LCMP -> OP_LCMP
    byte OP_FCMPL -> OP_FCMPL
    byte OP_FCMPG -> OP_FCMPG
    byte OP_DCMPL -> OP_DCMPL
    byte OP_DCMPG -> OP_DCMPG
    byte OP_IFEQ -> OP_IFEQ
    byte OP_IFNE -> OP_IFNE
    byte OP_IFLT -> OP_IFLT
    byte OP_IFGE -> OP_IFGE
    byte OP_IFGT -> OP_IFGT
    byte OP_IFLE -> OP_IFLE
    byte OP_IFICMPEQ -> OP_IFICMPEQ
    byte OP_IFICMPNE -> OP_IFICMPNE
    byte OP_IFICMPLT -> OP_IFICMPLT
    byte OP_IFICMPGE -> OP_IFICMPGE
    byte OP_IFICMPGT -> OP_IFICMPGT
    byte OP_IFICMPLE -> OP_IFICMPLE
    byte OP_IFACMPEQ -> OP_IFACMPEQ
    byte OP_IFACMPNE -> OP_IFACMPNE
    byte OP_GOTO -> OP_GOTO
    byte OP_JSR -> OP_JSR
    byte OP_RET -> OP_RET
    byte OP_TABLESWITCH -> OP_TABLESWITCH
    byte OP_LOOKUPSWITCH -> OP_LOOKUPSWITCH
    byte OP_IRETURN -> OP_IRETURN
    byte OP_LRETURN -> OP_LRETURN
    byte OP_FRETURN -> OP_FRETURN
    byte OP_DRETURN -> OP_DRETURN
    byte OP_ARETURN -> OP_ARETURN
    byte OP_RETURN -> OP_RETURN
    byte OP_GETSTATIC -> OP_GETSTATIC
    byte OP_PUTSTATIC -> OP_PUTSTATIC
    byte OP_GETFIELD -> OP_GETFIELD
    byte OP_PUTFIELD -> OP_PUTFIELD
    byte OP_INVOKEVIRTUAL -> OP_INVOKEVIRTUAL
    byte OP_INVOKESPECIAL -> OP_INVOKESPECIAL
    byte OP_INVOKESTATIC -> OP_INVOKESTATIC
    byte OP_INVOKEINTERFACE -> OP_INVOKEINTERFACE
    byte OP_INVOKEDYNAMIC -> OP_INVOKEDYNAMIC
    byte OP_NEW -> OP_NEW
    byte OP_NEWARRAY -> OP_NEWARRAY
    byte OP_ANEWARRAY -> OP_ANEWARRAY
    byte OP_ARRAYLENGTH -> OP_ARRAYLENGTH
    byte OP_ATHROW -> OP_ATHROW
    byte OP_CHECKCAST -> OP_CHECKCAST
    byte OP_INSTANCEOF -> OP_INSTANCEOF
    byte OP_MONITORENTER -> OP_MONITORENTER
    byte OP_MONITOREXIT -> OP_MONITOREXIT
    byte OP_WIDE -> OP_WIDE
    byte OP_MULTIANEWARRAY -> OP_MULTIANEWARRAY
    byte OP_IFNULL -> OP_IFNULL
    byte OP_IFNONNULL -> OP_IFNONNULL
    byte OP_GOTO_W -> OP_GOTO_W
    byte OP_JSR_W -> OP_JSR_W
    java.lang.String[] NAMES -> NAMES
    byte ARRAY_T_BOOLEAN -> ARRAY_T_BOOLEAN
    byte ARRAY_T_CHAR -> ARRAY_T_CHAR
    byte ARRAY_T_FLOAT -> ARRAY_T_FLOAT
    byte ARRAY_T_DOUBLE -> ARRAY_T_DOUBLE
    byte ARRAY_T_BYTE -> ARRAY_T_BYTE
    byte ARRAY_T_SHORT -> ARRAY_T_SHORT
    byte ARRAY_T_INT -> ARRAY_T_INT
    byte ARRAY_T_LONG -> ARRAY_T_LONG
    234:234:void <clinit>() -> <clinit>
proguard.classfile.instruction.InstructionFactory -> proguard.classfile.instruction.InstructionFactory:
    28:28:void <init>() -> <init>
    38:298:proguard.classfile.instruction.Instruction create(byte[],int) -> create
proguard.classfile.instruction.InstructionUtil -> proguard.classfile.instruction.InstructionUtil:
    31:31:void <init>() -> <init>
    54:64:char internalTypeFromArrayType(byte) -> internalTypeFromArrayType
proguard.classfile.instruction.LookUpSwitchInstruction -> proguard.classfile.instruction.LookUpSwitchInstruction:
    int[] cases -> cases
    41:41:void <init>() -> <init>
    51:56:void <init>(byte,int,int[],int[]) -> <init>
    66:71:proguard.classfile.instruction.LookUpSwitchInstruction copy(proguard.classfile.instruction.LookUpSwitchInstruction) -> copy
    80:80:proguard.classfile.instruction.Instruction shrink() -> shrink
    86:101:void readInfo(byte[],int) -> readInfo
    107:122:void writeInfo(byte[],int) -> writeInfo
    127:127:int length(int) -> length
    133:134:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.visitor.InstructionVisitor) -> accept
proguard.classfile.instruction.SimpleInstruction -> proguard.classfile.instruction.SimpleInstruction:
    int constant -> constant
    41:41:void <init>() -> <init>
    49:50:void <init>(byte) -> <init>
    57:60:void <init>(byte,int) -> <init>
    70:73:proguard.classfile.instruction.SimpleInstruction copy(proguard.classfile.instruction.SimpleInstruction) -> copy
    83:101:int embeddedConstant(byte) -> a
    111:133:byte canonicalOpcode() -> canonicalOpcode
    141:183:proguard.classfile.instruction.Instruction shrink() -> shrink
    188:194:void readInfo(byte[],int) -> readInfo
    199:207:void writeInfo(byte[],int) -> writeInfo
    212:212:int length(int) -> length
    218:219:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.visitor.InstructionVisitor) -> accept
    226:226:java.lang.String toString() -> toString
    238:238:int constantSize() -> a
    250:250:int requiredConstantSize() -> b
proguard.classfile.instruction.SwitchInstruction -> proguard.classfile.instruction.SwitchInstruction:
    int defaultOffset -> defaultOffset
    int[] jumpOffsets -> jumpOffsets
    38:38:void <init>() -> <init>
    47:51:void <init>(byte,int,int[]) -> <init>
    61:65:proguard.classfile.instruction.SwitchInstruction copy(proguard.classfile.instruction.SwitchInstruction) -> copy
    73:73:java.lang.String toString(int) -> toString
    81:81:java.lang.String toString() -> toString
proguard.classfile.instruction.TableSwitchInstruction -> proguard.classfile.instruction.TableSwitchInstruction:
    int lowCase -> lowCase
    int highCase -> highCase
    42:42:void <init>() -> <init>
    53:59:void <init>(byte,int,int,int,int[]) -> <init>
    69:75:proguard.classfile.instruction.TableSwitchInstruction copy(proguard.classfile.instruction.TableSwitchInstruction) -> copy
    84:84:proguard.classfile.instruction.Instruction shrink() -> shrink
    90:104:void readInfo(byte[],int) -> readInfo
    110:126:void writeInfo(byte[],int) -> writeInfo
    131:131:int length(int) -> length
    137:138:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.visitor.InstructionVisitor) -> accept
proguard.classfile.instruction.VariableInstruction -> proguard.classfile.instruction.VariableInstruction:
    boolean wide -> wide
    int variableIndex -> variableIndex
    int constant -> constant
    43:43:void <init>() -> <init>
    47:49:void <init>(boolean) -> <init>
    54:55:void <init>(byte) -> <init>
    61:62:void <init>(byte,int) -> <init>
    68:74:void <init>(byte,int,int) -> <init>
    84:89:proguard.classfile.instruction.VariableInstruction copy(proguard.classfile.instruction.VariableInstruction) -> copy
    99:134:int embeddedVariable(byte) -> a
    148:148:boolean isStore() -> isStore
    162:162:boolean isLoad() -> isLoad
    171:215:byte canonicalOpcode() -> canonicalOpcode
    221:246:proguard.classfile.instruction.Instruction shrink() -> shrink
    252:252:boolean isWide() -> isWide
    258:275:void readInfo(byte[],int) -> readInfo
    280:295:void writeInfo(byte[],int) -> writeInfo
    300:300:int length(int) -> length
    306:307:void accept(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.visitor.InstructionVisitor) -> accept
    314:314:java.lang.String toString() -> toString
    328:328:int variableIndexSize() -> a
    343:343:int requiredVariableIndexSize() -> b
    356:356:int constantSize() -> c
    367:367:int requiredConstantSize() -> d
proguard.classfile.instruction.visitor.AllInstructionVisitor -> proguard.classfile.instruction.visitor.AllInstructionVisitor:
    proguard.classfile.instruction.visitor.InstructionVisitor instructionVisitor -> a
    42:44:void <init>(proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    49:49:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    54:55:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
proguard.classfile.instruction.visitor.InstructionConstantVisitor -> proguard.classfile.instruction.visitor.InstructionConstantVisitor:
    proguard.classfile.constant.visitor.ConstantVisitor constantVisitor -> a
    48:50:void <init>(proguard.classfile.constant.visitor.ConstantVisitor) -> <init>
    55:55:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    60:62:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
proguard.classfile.instruction.visitor.InstructionCounter -> proguard.classfile.instruction.visitor.InstructionCounter:
    int count -> a
    33:33:void <init>() -> <init>
    45:45:int getCount() -> getCount
    57:58:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
proguard.classfile.instruction.visitor.InstructionVisitor -> proguard.classfile.instruction.visitor.InstructionVisitor:
    void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    void visitTableSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.TableSwitchInstruction) -> visitTableSwitchInstruction
    void visitLookUpSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.LookUpSwitchInstruction) -> visitLookUpSwitchInstruction
proguard.classfile.instruction.visitor.MultiInstructionVisitor -> proguard.classfile.instruction.visitor.MultiInstructionVisitor:
    proguard.classfile.instruction.visitor.InstructionVisitor[] instructionVisitors -> a
    int instructionVisitorCount -> b
    44:45:void <init>() -> <init>
    49:52:void <init>(proguard.classfile.instruction.visitor.InstructionVisitor[]) -> <init>
    57:60:void addInstructionVisitor(proguard.classfile.instruction.visitor.InstructionVisitor) -> addInstructionVisitor
    65:79:void ensureArraySize() -> a
    86:90:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    94:98:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    102:106:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    110:114:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    118:122:void visitTableSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.TableSwitchInstruction) -> visitTableSwitchInstruction
    126:130:void visitLookUpSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.LookUpSwitchInstruction) -> visitLookUpSwitchInstruction
proguard.classfile.io.LibraryClassReader -> proguard.classfile.io.LibraryClassReader:
    proguard.classfile.LibraryField[] EMPTY_LIBRARY_FIELDS -> a
    proguard.classfile.LibraryMethod[] EMPTY_LIBRARY_METHODS -> b
    proguard.classfile.io.ProgramClassWriter$1 dataInput$65885590 -> c
    boolean skipNonPublicClasses -> d
    boolean skipNonPublicClassMembers -> e
    proguard.classfile.constant.Constant[] constantPool -> f
    61:65:void <init>(java.io.DataInput,boolean,boolean) -> <init>
    72:72:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    78:215:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    222:222:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    228:234:void visitLibraryMember(proguard.classfile.LibraryClass,proguard.classfile.LibraryMember) -> visitLibraryMember
    241:242:void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    247:248:void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    253:254:void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    259:260:void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    265:266:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    271:277:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    282:283:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    288:289:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    294:295:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    300:301:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    306:307:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    312:313:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    324:326:java.lang.String getClassName(int) -> a
    336:336:java.lang.String getString(int) -> b
    342:361:proguard.classfile.constant.Constant createConstant() -> a
    368:374:void skipAttributes() -> b
    379:382:void skipAttribute() -> c
    43:44:void <clinit>() -> <clinit>
proguard.classfile.io.ProgramClassReader -> proguard.classfile.io.ProgramClassReader:
    proguard.classfile.io.ProgramClassWriter$1 dataInput$65885590 -> a
    74:76:void <init>(java.io.DataInput) -> <init>
    84:163:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    168:168:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    176:190:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    196:210:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    215:215:void visitLibraryMember(proguard.classfile.LibraryClass,proguard.classfile.LibraryMember) -> visitLibraryMember
    222:223:void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    228:229:void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    234:235:void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    240:241:void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    246:247:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    252:258:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    263:265:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    270:272:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    277:279:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    284:285:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    290:291:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    296:298:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    306:309:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    315:324:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    329:330:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    335:336:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    342:351:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    356:358:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    364:364:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    370:370:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    375:376:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    381:382:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    388:397:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    403:410:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    416:447:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    453:462:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    468:477:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    483:492:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    498:507:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    513:522:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    528:537:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    543:576:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    582:591:void visitAnyTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotationsAttribute) -> visitAnyTypeAnnotationsAttribute
    597:600:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    607:616:void visitBootstrapMethodInfo(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodInfo) -> visitBootstrapMethodInfo
    623:627:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    634:638:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    645:649:void visitSameZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameZeroFrame) -> visitSameZeroFrame
    654:663:void visitSameOneFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameOneFrame) -> visitSameOneFrame
    668:669:void visitLessZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.LessZeroFrame) -> visitLessZeroFrame
    674:684:void visitMoreZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.MoreZeroFrame) -> visitMoreZeroFrame
    689:710:void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame) -> visitFullFrame
    718:718:void visitAnyVerificationType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.VerificationType) -> visitAnyVerificationType
    723:724:void visitObjectType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.ObjectType) -> visitObjectType
    729:730:void visitUninitializedType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.UninitializedType) -> visitUninitializedType
    737:739:void visitLineNumberInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberInfo) -> visitLineNumberInfo
    746:748:void visitParameterInfo(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.ParameterInfo) -> visitParameterInfo
    755:760:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    767:772:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    780:794:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    802:819:void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    826:827:void visitTypeParameterTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterTargetInfo) -> visitTypeParameterTargetInfo
    832:833:void visitSuperTypeTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.SuperTypeTargetInfo) -> visitSuperTypeTargetInfo
    838:840:void visitTypeParameterBoundTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterBoundTargetInfo) -> visitTypeParameterBoundTargetInfo
    845:845:void visitEmptyTargetInfo(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.EmptyTargetInfo) -> visitEmptyTargetInfo
    850:851:void visitFormalParameterTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.FormalParameterTargetInfo) -> visitFormalParameterTargetInfo
    856:857:void visitThrowsTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.ThrowsTargetInfo) -> visitThrowsTargetInfo
    863:872:void visitLocalVariableTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo) -> visitLocalVariableTargetInfo
    877:878:void visitCatchTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.CatchTargetInfo) -> visitCatchTargetInfo
    883:884:void visitOffsetTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.OffsetTargetInfo) -> visitOffsetTargetInfo
    889:891:void visitTypeArgumentTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeArgumentTargetInfo) -> visitTypeArgumentTargetInfo
    898:900:void visitTypePathInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.TypePathInfo) -> visitTypePathInfo
    907:910:void visitLocalVariableTargetElement(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo,proguard.classfile.attribute.annotation.target.LocalVariableTargetElement) -> visitLocalVariableTargetElement
    917:918:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    923:925:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    930:931:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    937:940:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    946:955:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    962:981:proguard.classfile.constant.Constant createConstant() -> a
    988:1020:proguard.classfile.attribute.Attribute createAttribute(proguard.classfile.Clazz) -> a
    1026:1028:proguard.classfile.attribute.preverification.StackMapFrame createStackMapFrame() -> b
    1041:1055:proguard.classfile.attribute.preverification.VerificationType createVerificationType() -> c
    1062:1089:proguard.classfile.attribute.annotation.target.TargetInfo createTargetInfo() -> d
    1096:1115:proguard.classfile.attribute.annotation.ElementValue createElementValue() -> e
proguard.classfile.io.ProgramClassWriter -> proguard.classfile.io.ProgramClassWriter:
    proguard.classfile.io.RuntimeDataOutput dataOutput -> a
    proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter constantBodyWriter -> b
    proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter attributeBodyWriter -> c
    proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter stackMapFrameBodyWriter -> d
    proguard.classfile.io.ProgramClassWriter$VerificationTypeBodyWriter verificationTypeBodyWriter -> e
    proguard.classfile.io.ProgramClassWriter$ElementValueBodyWriter elementValueBodyWriter -> f
    54:67:void <init>(java.io.DataOutput) -> <init>
    75:113:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    118:118:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    126:134:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    140:148:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    153:153:void visitLibraryMember(proguard.classfile.LibraryClass,proguard.classfile.LibraryMember) -> visitLibraryMember
    161:165:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    259:282:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    45:45:proguard.classfile.io.RuntimeDataOutput access$500(proguard.classfile.io.ProgramClassWriter) -> a
    45:45:proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter access$600(proguard.classfile.io.ProgramClassWriter) -> b
    45:45:proguard.classfile.io.ProgramClassWriter$ElementValueBodyWriter access$700(proguard.classfile.io.ProgramClassWriter) -> c
    45:45:proguard.classfile.io.ProgramClassWriter$VerificationTypeBodyWriter access$800(proguard.classfile.io.ProgramClassWriter) -> d
    45:45:proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter access$900(proguard.classfile.io.ProgramClassWriter) -> e
proguard.classfile.io.ProgramClassWriter$1 -> proguard.classfile.io.a:
    java.io.DataInput dataInput -> a
    1037:1039:void proguard.classfile.io.RuntimeDataInput.<init>(java.io.DataInput):37:39 -> <init>
    1060:1064:byte proguard.classfile.io.RuntimeDataInput.readByte():60:64 -> a
    1084:1088:double proguard.classfile.io.RuntimeDataInput.readDouble():84:88 -> b
    1096:1100:float proguard.classfile.io.RuntimeDataInput.readFloat():96:100 -> c
    1108:1114:void proguard.classfile.io.RuntimeDataInput.readFully(byte[]):108:114 -> a
    1132:1136:int proguard.classfile.io.RuntimeDataInput.readInt():132:136 -> d
    1156:1160:long proguard.classfile.io.RuntimeDataInput.readLong():156:160 -> e
    1168:1172:short proguard.classfile.io.RuntimeDataInput.readShort():168:172 -> f
    1180:1184:int proguard.classfile.io.RuntimeDataInput.readUnsignedByte():180:184 -> g
    1192:1196:int proguard.classfile.io.RuntimeDataInput.readUnsignedShort():192:196 -> h
    1216:1220:int proguard.classfile.io.RuntimeDataInput.skipBytes(int):216:220 -> a
proguard.classfile.io.ProgramClassWriter$AttributeBodyWriter -> proguard.classfile.io.b:
    proguard.classfile.io.ProgramClassWriter this$0 -> a
    285:285:void <init>(proguard.classfile.io.ProgramClassWriter) -> <init>
    309:310:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    316:319:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    324:325:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    330:331:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    337:340:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    345:347:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    353:353:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    359:359:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    364:365:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    370:371:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    377:380:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    386:392:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    398:415:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    421:424:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    430:433:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    439:442:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    448:451:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    457:460:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    466:469:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    475:491:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    497:500:void visitAnyTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotationsAttribute) -> visitAnyTypeAnnotationsAttribute
    506:507:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    514:523:void visitBootstrapMethodInfo(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodInfo) -> visitBootstrapMethodInfo
    530:534:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    541:545:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    553:557:void visitAnyStackMapFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.StackMapFrame) -> visitAnyStackMapFrame
    564:566:void visitLineNumberInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberInfo) -> visitLineNumberInfo
    573:575:void visitParameterInfo(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.ParameterInfo) -> visitParameterInfo
    582:587:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    594:599:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    607:613:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    621:632:void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    639:640:void visitTypeParameterTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterTargetInfo) -> visitTypeParameterTargetInfo
    645:646:void visitSuperTypeTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.SuperTypeTargetInfo) -> visitSuperTypeTargetInfo
    651:653:void visitTypeParameterBoundTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterBoundTargetInfo) -> visitTypeParameterBoundTargetInfo
    658:658:void visitEmptyTargetInfo(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.EmptyTargetInfo) -> visitEmptyTargetInfo
    663:664:void visitFormalParameterTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.FormalParameterTargetInfo) -> visitFormalParameterTargetInfo
    669:670:void visitThrowsTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.ThrowsTargetInfo) -> visitThrowsTargetInfo
    676:679:void visitLocalVariableTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo) -> visitLocalVariableTargetInfo
    684:685:void visitCatchTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.CatchTargetInfo) -> visitCatchTargetInfo
    690:691:void visitOffsetTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.OffsetTargetInfo) -> visitOffsetTargetInfo
    696:698:void visitTypeArgumentTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeArgumentTargetInfo) -> visitTypeArgumentTargetInfo
    705:707:void visitTypePathInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.TypePathInfo) -> visitTypePathInfo
    714:717:void visitLocalVariableTargetElement(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo,proguard.classfile.attribute.annotation.target.LocalVariableTargetElement) -> visitLocalVariableTargetElement
    725:736:void visitAnyElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ElementValue) -> visitAnyElementValue
    285:285:void <init>(proguard.classfile.io.ProgramClassWriter,byte) -> <init>
proguard.classfile.io.ProgramClassWriter$ConstantBodyWriter -> proguard.classfile.io.c:
    proguard.classfile.io.ProgramClassWriter this$0 -> a
    168:168:void <init>(proguard.classfile.io.ProgramClassWriter) -> <init>
    176:177:void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    182:183:void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    188:189:void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    194:195:void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    200:201:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    206:210:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    215:217:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    222:224:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    229:231:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    236:237:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    242:243:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    248:250:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    168:168:void <init>(proguard.classfile.io.ProgramClassWriter,byte) -> <init>
proguard.classfile.io.ProgramClassWriter$ElementValueBodyWriter -> proguard.classfile.io.d:
    proguard.classfile.io.ProgramClassWriter this$0 -> a
    833:833:void <init>(proguard.classfile.io.ProgramClassWriter) -> <init>
    841:842:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    847:849:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    854:855:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    861:862:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    868:871:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    833:833:void <init>(proguard.classfile.io.ProgramClassWriter,byte) -> <init>
proguard.classfile.io.ProgramClassWriter$StackMapFrameBodyWriter -> proguard.classfile.io.e:
    proguard.classfile.io.ProgramClassWriter this$0 -> a
    740:740:void <init>(proguard.classfile.io.ProgramClassWriter) -> <init>
    747:751:void visitSameZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameZeroFrame) -> visitSameZeroFrame
    756:763:void visitSameOneFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameOneFrame) -> visitSameOneFrame
    768:769:void visitLessZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.LessZeroFrame) -> visitLessZeroFrame
    774:778:void visitMoreZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.MoreZeroFrame) -> visitMoreZeroFrame
    783:792:void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame) -> visitFullFrame
    800:804:void visitAnyVerificationType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.VerificationType) -> visitAnyVerificationType
    740:740:void <init>(proguard.classfile.io.ProgramClassWriter,byte) -> <init>
proguard.classfile.io.ProgramClassWriter$VerificationTypeBodyWriter -> proguard.classfile.io.f:
    proguard.classfile.io.ProgramClassWriter this$0 -> a
    808:808:void <init>(proguard.classfile.io.ProgramClassWriter) -> <init>
    817:817:void visitAnyVerificationType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.VerificationType) -> visitAnyVerificationType
    822:823:void visitObjectType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.ObjectType) -> visitObjectType
    828:829:void visitUninitializedType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.UninitializedType) -> visitUninitializedType
    808:808:void <init>(proguard.classfile.io.ProgramClassWriter,byte) -> <init>
proguard.classfile.io.RuntimeDataOutput -> proguard.classfile.io.g:
    java.io.DataOutput dataOutput -> a
    37:39:void <init>(java.io.DataOutput) -> <init>
    48:54:void write(byte[]) -> a
    61:67:void write(byte[],int,int) -> a
    100:106:void writeByte(int) -> a
    152:158:void writeDouble(double) -> a
    165:171:void writeFloat(float) -> a
    178:184:void writeInt(int) -> b
    191:197:void writeLong(long) -> a
    204:210:void writeShort(int) -> c
proguard.classfile.util.AccessUtil -> proguard.classfile.util.AccessUtil:
    int PRIVATE -> PRIVATE
    int PACKAGE_VISIBLE -> PACKAGE_VISIBLE
    int PROTECTED -> PROTECTED
    int PUBLIC -> PUBLIC
    33:33:void <init>() -> <init>
    57:62:int accessLevel(int) -> accessLevel
    79:84:int accessFlags(int) -> accessFlags
    97:102:int replaceAccessFlags(int,int) -> replaceAccessFlags
proguard.classfile.util.AllParameterVisitor -> proguard.classfile.util.AllParameterVisitor:
    proguard.classfile.visitor.ParameterVisitor parameterVisitor -> a
    44:46:void <init>(proguard.classfile.visitor.ParameterVisitor) -> <init>
    53:56:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    61:64:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    69:72:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    77:80:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    92:101:void visitFieldType(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.Clazz) -> a
    111:237:void visitParameters(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.Clazz[]) -> a
proguard.classfile.util.ClassReferenceInitializer -> proguard.classfile.util.ClassReferenceInitializer:
    proguard.classfile.ClassPool programClassPool -> a
    proguard.classfile.ClassPool libraryClassPool -> b
    proguard.classfile.util.WarningPrinter missingClassWarningPrinter -> c
    proguard.classfile.util.WarningPrinter missingProgramMemberWarningPrinter -> d
    proguard.classfile.util.WarningPrinter missingLibraryMemberWarningPrinter -> e
    proguard.classfile.util.WarningPrinter dependencyWarningPrinter -> f
    proguard.classfile.util.MemberFinder memberFinder -> g
    71:92:void <init>(proguard.classfile.ClassPool,proguard.classfile.ClassPool,proguard.classfile.util.WarningPrinter,proguard.classfile.util.WarningPrinter,proguard.classfile.util.WarningPrinter,proguard.classfile.util.WarningPrinter) -> <init>
    100:108:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    114:116:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    123:129:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    134:140:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    145:148:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    153:156:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    161:161:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    167:169:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    174:177:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    183:185:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    190:244:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    249:258:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    264:270:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    275:275:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    280:314:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    320:321:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    327:328:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    334:335:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    340:343:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    349:350:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    356:357:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    363:364:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    371:374:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    381:384:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    391:397:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    404:405:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    410:415:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    420:425:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    430:434:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    439:443:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    452:464:void initializeElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ElementValue) -> a
    476:486:proguard.classfile.Clazz findReferencedClass(java.lang.String,java.lang.String) -> a
    497:527:proguard.classfile.Clazz[] findReferencedClasses(java.lang.String,java.lang.String) -> b
    538:582:proguard.classfile.Clazz findClass(java.lang.String,java.lang.String) -> c
proguard.classfile.util.ClassSubHierarchyInitializer -> proguard.classfile.util.ClassSubHierarchyInitializer:
    32:32:void <init>() -> <init>
    40:47:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    53:65:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    72:76:void addSubclass(proguard.classfile.Clazz,proguard.classfile.Clazz) -> a
proguard.classfile.util.ClassSuperHierarchyInitializer -> proguard.classfile.util.ClassSuperHierarchyInitializer:
    proguard.classfile.ClassPool programClassPool -> a
    proguard.classfile.ClassPool libraryClassPool -> b
    proguard.classfile.util.WarningPrinter missingWarningPrinter -> c
    proguard.classfile.util.WarningPrinter dependencyWarningPrinter -> d
    62:67:void <init>(proguard.classfile.ClassPool,proguard.classfile.ClassPool,proguard.classfile.util.WarningPrinter,proguard.classfile.util.WarningPrinter) -> <init>
    75:79:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    84:109:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    116:118:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    130:161:proguard.classfile.Clazz findClass(java.lang.String,java.lang.String) -> a
proguard.classfile.util.ClassUtil -> proguard.classfile.util.ClassUtil:
    33:33:void <init>() -> <init>
    45:49:void checkMagicNumber(int) -> checkMagicNumber
    60:60:int internalClassVersion(int,int) -> internalClassVersion
    71:71:int internalMajorClassVersion(int) -> internalMajorClassVersion
    82:82:int internalMinorClassVersion(int) -> internalMinorClassVersion
    93:93:int internalClassVersion(java.lang.String) -> internalClassVersion
    118:128:java.lang.String externalClassVersion(int) -> externalClassVersion
    140:150:void checkVersionNumbers(int) -> checkVersionNumbers
    162:162:java.lang.String internalClassName(java.lang.String) -> internalClassName
    178:178:java.lang.String externalFullClassDescription(int,java.lang.String) -> externalFullClassDescription
    192:192:java.lang.String externalClassName(java.lang.String) -> externalClassName
    210:211:java.lang.String externalBaseType(java.lang.String) -> externalBaseType
    227:228:java.lang.String externalShortClassName(java.lang.String) -> externalShortClassName
    241:241:boolean isInternalArrayType(java.lang.String) -> isInternalArrayType
    254:260:int internalArrayTypeDimensionCount(java.lang.String) -> internalArrayTypeDimensionCount
    276:276:boolean isInternalArrayInterfaceName(java.lang.String) -> isInternalArrayInterfaceName
    292:292:boolean isInternalPrimitiveType(char) -> isInternalPrimitiveType
    312:312:boolean isInternalCategory2Type(java.lang.String) -> isInternalCategory2Type
    328:329:boolean isInternalClassType(java.lang.String) -> isInternalClassType
    344:344:java.lang.String internalTypeFromClassName(java.lang.String) -> internalTypeFromClassName
    361:368:java.lang.String internalArrayTypeFromClassName(java.lang.String,int) -> internalArrayTypeFromClassName
    386:387:java.lang.String internalTypeFromArrayType(java.lang.String) -> internalTypeFromArrayType
    404:404:java.lang.String internalClassNameFromClassType(java.lang.String) -> internalClassNameFromClassType
    423:434:java.lang.String internalClassNameFromType(java.lang.String) -> internalClassNameFromType
    448:448:boolean isInitializer(java.lang.String) -> isInitializer
    462:463:java.lang.String internalMethodReturnType(java.lang.String) -> internalMethodReturnType
    476:507:int internalMethodParameterCount(java.lang.String) -> internalMethodParameterCount
    522:522:int internalMethodParameterSize(java.lang.String) -> internalMethodParameterSize
    541:541:int internalMethodParameterSize(java.lang.String,int) -> internalMethodParameterSize
    561:607:int internalMethodParameterSize(java.lang.String,boolean) -> internalMethodParameterSize
    622:636:int internalTypeSize(java.lang.String) -> internalTypeSize
    652:684:java.lang.String internalType(java.lang.String) -> internalType
    696:708:int externalArrayTypeDimensionCount(java.lang.String) -> externalArrayTypeDimensionCount
    724:758:java.lang.String externalType(java.lang.String) -> externalType
    772:772:boolean isInternalMethodDescriptor(java.lang.String) -> isInternalMethodDescriptor
    787:787:boolean isExternalMethodNameAndArguments(java.lang.String) -> isExternalMethodNameAndArguments
    799:802:java.lang.String externalMethodName(java.lang.String) -> externalMethodName
    819:833:java.lang.String internalMethodDescriptor(java.lang.String,java.lang.String) -> internalMethodDescriptor
    850:861:java.lang.String internalMethodDescriptor(java.lang.String,java.util.List) -> internalMethodDescriptor
    879:879:java.lang.String externalFullFieldDescription(int,java.lang.String,java.lang.String) -> externalFullFieldDescription
    905:905:java.lang.String externalFullMethodDescription(java.lang.String,int,java.lang.String,java.lang.String) -> externalFullMethodDescription
    923:923:java.lang.String externalClassAccessFlags(int) -> externalClassAccessFlags
    936:987:java.lang.String externalClassAccessFlags(int,java.lang.String) -> externalClassAccessFlags
    999:999:java.lang.String externalFieldAccessFlags(int) -> externalFieldAccessFlags
    1012:1052:java.lang.String externalFieldAccessFlags(int,java.lang.String) -> externalFieldAccessFlags
    1064:1064:java.lang.String externalMethodAccessFlags(int) -> externalMethodAccessFlags
    1077:1133:java.lang.String externalMethodAccessFlags(int,java.lang.String) -> externalMethodAccessFlags
    1146:1146:java.lang.String externalParameterAccessFlags(int) -> externalParameterAccessFlags
    1160:1180:java.lang.String externalParameterAccessFlags(int,java.lang.String) -> externalParameterAccessFlags
    1193:1193:java.lang.String externalMethodReturnType(java.lang.String) -> externalMethodReturnType
    1215:1215:java.lang.String externalMethodReturnTypeAndName(java.lang.String,java.lang.String,java.lang.String) -> a
    1233:1247:java.lang.String externalMethodArguments(java.lang.String) -> externalMethodArguments
    1260:1262:java.lang.String internalPackageName(java.lang.String) -> internalPackageName
    1277:1277:java.lang.String internalPackagePrefix(java.lang.String) -> internalPackagePrefix
    1291:1293:java.lang.String externalPackageName(java.lang.String) -> externalPackageName
    1308:1308:java.lang.String externalPackagePrefix(java.lang.String) -> externalPackagePrefix
proguard.classfile.util.DescriptorClassEnumeration -> proguard.classfile.util.DescriptorClassEnumeration:
    java.lang.String descriptor -> a
    int index -> b
    int nestingLevel -> c
    boolean isInnerClassName -> d
    java.lang.String accumulatedClassName -> e
    java.util.Stack accumulatedClassNames -> f
    48:50:void <init>(java.lang.String) -> <init>
    59:74:int classCount() -> classCount
    83:88:void reset() -> a
    97:97:boolean hasMoreClassNames() -> hasMoreClassNames
    106:177:java.lang.String nextFluff() -> nextFluff
    186:211:java.lang.String nextClassName() -> nextClassName
    221:221:boolean isInnerClassName() -> isInnerClassName
    232:250:void main(java.lang.String[]) -> main
proguard.classfile.util.DynamicClassReferenceInitializer -> proguard.classfile.util.DynamicClassReferenceInitializer:
    int X -> X
    int Y -> Y
    int Z -> Z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    proguard.classfile.constant.Constant[] CLASS_FOR_NAME_CONSTANTS -> a
    proguard.classfile.instruction.Instruction[] CONSTANT_CLASS_FOR_NAME_INSTRUCTIONS -> b
    proguard.classfile.instruction.Instruction[] CLASS_FOR_NAME_CAST_INSTRUCTIONS -> c
    proguard.classfile.constant.Constant[] DOT_CLASS_JAVAC_CONSTANTS -> d
    proguard.classfile.instruction.Instruction[] DOT_CLASS_JAVAC_INSTRUCTIONS -> e
    proguard.classfile.constant.Constant[] DOT_CLASS_JIKES_CONSTANTS -> f
    proguard.classfile.instruction.Instruction[] DOT_CLASS_JIKES_INSTRUCTIONS -> g
    proguard.classfile.instruction.Instruction[] DOT_CLASS_JAVAC_IMPLEMENTATION_INSTRUCTIONS -> h
    proguard.classfile.instruction.Instruction[] DOT_CLASS_JIKES_IMPLEMENTATION_INSTRUCTIONS -> i
    proguard.classfile.instruction.Instruction[] DOT_CLASS_JIKES_IMPLEMENTATION_INSTRUCTIONS2 -> j
    proguard.classfile.ClassPool programClassPool -> k
    proguard.classfile.ClassPool libraryClassPool -> l
    proguard.classfile.util.WarningPrinter missingNotePrinter -> m
    proguard.classfile.util.WarningPrinter dependencyWarningPrinter -> n
    proguard.classfile.util.WarningPrinter notePrinter -> o
    proguard.util.StringMatcher noteExceptionMatcher -> p
    proguard.classfile.util.InstructionSequenceMatcher constantClassForNameMatcher -> q
    proguard.classfile.util.InstructionSequenceMatcher classForNameCastMatcher -> r
    proguard.classfile.util.InstructionSequenceMatcher dotClassJavacMatcher -> s
    proguard.classfile.util.InstructionSequenceMatcher dotClassJikesMatcher -> t
    proguard.classfile.util.InstructionSequenceMatcher dotClassJavacImplementationMatcher -> u
    proguard.classfile.util.InstructionSequenceMatcher dotClassJikesImplementationMatcher -> v
    proguard.classfile.util.InstructionSequenceMatcher dotClassJikesImplementationMatcher2 -> w
    boolean isClassForNameInvocation -> x
    63:236:void <init>(proguard.classfile.ClassPool,proguard.classfile.ClassPool,proguard.classfile.util.WarningPrinter,proguard.classfile.util.WarningPrinter,proguard.classfile.util.WarningPrinter,proguard.util.StringMatcher) -> <init>
    246:293:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    304:309:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    318:329:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    337:370:void visitMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodrefConstant) -> visitMethodrefConstant
    375:375:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    383:390:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    401:406:boolean isDotClassMethodref(proguard.classfile.Clazz,int) -> a
    421:429:boolean isDotClassMethodCode(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.util.InstructionSequenceMatcher,int) -> a
    440:484:proguard.classfile.Clazz findClass(java.lang.String,java.lang.String) -> a
proguard.classfile.util.DynamicMemberReferenceInitializer -> proguard.classfile.util.DynamicMemberReferenceInitializer:
    int CLASS_INDEX -> CLASS_INDEX
    int MEMBER_NAME_INDEX -> MEMBER_NAME_INDEX
    int TYPE_CLASS_INDEX -> TYPE_CLASS_INDEX
    int PARAMETER0_CLASS_INDEX -> PARAMETER0_CLASS_INDEX
    int PARAMETER1_CLASS_INDEX -> PARAMETER1_CLASS_INDEX
    int PARAMETER2_CLASS_INDEX -> PARAMETER2_CLASS_INDEX
    int PARAMETER3_CLASS_INDEX -> PARAMETER3_CLASS_INDEX
    proguard.classfile.constant.Constant[] GET_FIELD_CONSTANTS -> a
    proguard.classfile.constant.Constant[] GET_DECLARED_FIELD_CONSTANTS -> b
    proguard.classfile.constant.Constant[] GET_CONSTRUCTOR_CONSTANTS -> c
    proguard.classfile.constant.Constant[] GET_DECLARED_CONSTRUCTOR_CONSTANTS -> d
    proguard.classfile.constant.Constant[] GET_METHOD_CONSTANTS -> e
    proguard.classfile.constant.Constant[] GET_DECLARED_METHOD_CONSTANTS -> f
    proguard.classfile.constant.Constant[] NEW_INTEGER_UPDATER_CONSTANTS -> g
    proguard.classfile.constant.Constant[] NEW_LONG_UPDATER_CONSTANTS -> h
    proguard.classfile.constant.Constant[] NEW_REFERENCE_UPDATER_CONSTANTS -> i
    proguard.classfile.instruction.Instruction[] CONSTANT_GET_FIELD_INSTRUCTIONS -> j
    proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS0 -> k
    proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS1 -> l
    proguard.classfile.instruction.Instruction[] CONSTANT_GET_METHOD_INSTRUCTIONS2 -> m
    proguard.classfile.instruction.Instruction[] CONSTANT_NEW_PRIMITIVE_UPDATER_INSTRUCTIONS -> n
    proguard.classfile.instruction.Instruction[] CONSTANT_NEW_REFERENCE_UPDATER_INSTRUCTIONS -> o
    proguard.classfile.instruction.Instruction[] GET_FIELD_INSTRUCTIONS -> p
    proguard.classfile.instruction.Instruction[] GET_CONSTRUCTOR_INSTRUCTIONS1 -> q
    proguard.classfile.instruction.Instruction[] GET_CONSTRUCTOR_INSTRUCTIONS2 -> r
    proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS0 -> s
    proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS1 -> t
    proguard.classfile.instruction.Instruction[] GET_METHOD_INSTRUCTIONS2 -> u
    proguard.classfile.instruction.Instruction[] NEW_UPDATER_INSTRUCTIONS -> v
    proguard.classfile.ClassPool programClassPool -> w
    proguard.classfile.ClassPool libraryClassPool -> x
    proguard.classfile.util.WarningPrinter notePrinter -> y
    proguard.util.StringMatcher noteFieldExceptionMatcher -> z
    proguard.util.StringMatcher noteMethodExceptionMatcher -> A
    proguard.classfile.util.InstructionSequenceMatcher constantGetFieldMatcher -> B
    proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredFieldMatcher -> C
    proguard.classfile.util.InstructionSequenceMatcher constantGetMethodMatcher0 -> D
    proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredMethodMatcher0 -> E
    proguard.classfile.util.InstructionSequenceMatcher constantGetMethodMatcher1 -> F
    proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredMethodMatcher1 -> G
    proguard.classfile.util.InstructionSequenceMatcher constantGetMethodMatcher2 -> H
    proguard.classfile.util.InstructionSequenceMatcher constantGetDeclaredMethodMatcher2 -> I
    proguard.classfile.util.InstructionSequenceMatcher constantGetIntegerUpdaterMatcher -> J
    proguard.classfile.util.InstructionSequenceMatcher constantGetLongUpdaterMatcher -> K
    proguard.classfile.util.InstructionSequenceMatcher constantGetReferenceUpdaterMatcher -> L
    proguard.classfile.util.InstructionSequenceMatcher getFieldMatcher -> M
    proguard.classfile.util.InstructionSequenceMatcher getDeclaredFieldMatcher -> N
    proguard.classfile.util.InstructionSequenceMatcher getConstructorMatcher1 -> O
    proguard.classfile.util.InstructionSequenceMatcher getDeclaredConstructorMatcher1 -> P
    proguard.classfile.util.InstructionSequenceMatcher getConstructorMatcher2 -> Q
    proguard.classfile.util.InstructionSequenceMatcher getDeclaredConstructorMatcher2 -> R
    proguard.classfile.util.InstructionSequenceMatcher getMethodMatcher0 -> S
    proguard.classfile.util.InstructionSequenceMatcher getDeclaredMethodMatcher0 -> T
    proguard.classfile.util.InstructionSequenceMatcher getMethodMatcher1 -> U
    proguard.classfile.util.InstructionSequenceMatcher getDeclaredMethodMatcher1 -> V
    proguard.classfile.util.InstructionSequenceMatcher getMethodMatcher2 -> W
    proguard.classfile.util.InstructionSequenceMatcher getDeclaredMethodMatcher2 -> X
    proguard.classfile.util.InstructionSequenceMatcher getIntegerUpdaterMatcher -> Y
    proguard.classfile.util.InstructionSequenceMatcher getLongUpdaterMatcher -> Z
    proguard.classfile.util.InstructionSequenceMatcher getReferenceUpdaterMatcher -> aa
    proguard.classfile.util.MemberFinder memberFinder -> ab
    proguard.classfile.Clazz referencedClass -> ac
    java.lang.String descriptor -> ad
    boolean isDeclared -> ae
    boolean isField -> af
    72:529:void <init>(proguard.classfile.ClassPool,proguard.classfile.ClassPool,proguard.classfile.util.WarningPrinter,proguard.util.StringMatcher,proguard.util.StringMatcher) -> <init>
    537:643:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    662:697:void matchGetMember(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction,proguard.classfile.util.InstructionSequenceMatcher,proguard.classfile.util.InstructionSequenceMatcher,boolean,boolean,java.lang.String,java.lang.String) -> a
    710:725:void initializeStringReference(proguard.classfile.Clazz,proguard.classfile.util.InstructionSequenceMatcher,boolean,boolean,java.lang.String) -> a
    741:744:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    752:779:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    795:887:void printDynamicInvocationNote(proguard.classfile.Clazz,proguard.classfile.util.InstructionSequenceMatcher,boolean,boolean,java.lang.String,java.lang.String) -> a
    894:902:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    907:915:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    920:928:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    933:941:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.classfile.util.EnumFieldReferenceInitializer -> proguard.classfile.util.EnumFieldReferenceInitializer:
    proguard.classfile.visitor.MemberVisitor enumFieldFinder -> a
    java.lang.String enumTypeName -> b
    java.lang.String enumConstantName -> c
    boolean enumConstantNameFound -> d
    proguard.classfile.Clazz referencedEnumClass -> e
    proguard.classfile.Field referencedEnumField -> f
    40:52:void <init>() -> <init>
    65:65:void visitAnyElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ElementValue) -> visitAnyElementValue
    71:104:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    109:109:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    114:122:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    127:127:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    132:134:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    139:148:void visitFieldrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.FieldrefConstant) -> visitFieldrefConstant
proguard.classfile.util.ExternalTypeEnumeration -> proguard.classfile.util.ExternalTypeEnumeration:
    java.lang.String descriptor -> a
    int index -> b
    44:46:void <init>(java.lang.String) -> <init>
    50:51:void <init>() -> <init>
    56:59:void setDescriptor(java.lang.String) -> a
    64:70:void reset() -> reset
    75:75:boolean hasMoreTypes() -> hasMoreTypes
    81:98:java.lang.String nextType() -> nextType
    104:104:java.lang.String methodName() -> methodName
proguard.classfile.util.InstructionSequenceMatcher -> proguard.classfile.util.InstructionSequenceMatcher:
    int X -> X
    int Y -> Y
    int Z -> Z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    proguard.classfile.constant.Constant[] patternConstants -> a
    proguard.classfile.instruction.Instruction[] patternInstructions -> b
    boolean matching -> c
    int patternInstructionIndex -> d
    int[] matchedInstructionOffsets -> e
    int matchedArgumentFlags -> f
    int[] matchedArguments -> g
    long[] matchedConstantFlags -> h
    int[] matchedConstantIndices -> i
    int constantFlags -> j
    int previousConstantFlags -> k
    proguard.classfile.constant.Constant patternConstant -> l
    boolean matchingConstant -> m
    69:95:void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[]) -> <init>
    103:110:void reset() -> reset
    118:118:boolean isMatching() -> isMatching
    127:127:int instructionCount() -> instructionCount
    137:137:int matchedInstructionOffset(int) -> matchedInstructionOffset
    147:147:boolean wasConstant(int) -> wasConstant
    156:157:int matchedArgument(int) -> matchedArgument
    168:175:int[] matchedArguments(int[]) -> matchedArguments
    184:185:int matchedConstantIndex(int) -> matchedConstantIndex
    197:198:int matchedBranchOffset(int,int) -> matchedBranchOffset
    210:218:int[] matchedJumpOffsets(int,int[]) -> matchedJumpOffsets
    226:241:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    246:263:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    268:286:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    291:308:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    313:336:void visitTableSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.TableSwitchInstruction) -> visitTableSwitchInstruction
    341:362:void visitLookUpSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.LookUpSwitchInstruction) -> visitLookUpSwitchInstruction
    369:374:void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    379:384:void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    389:394:void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    399:404:void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    409:416:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    421:426:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    431:441:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    446:455:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    460:470:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    475:482:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    487:494:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    499:509:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    518:518:boolean matchingOpcodes(proguard.classfile.instruction.Instruction,proguard.classfile.instruction.Instruction) -> a
    526:542:boolean matchingArguments(int,int) -> a
    554:556:void setMatchingArgument(int,int) -> b
    565:565:boolean isMatchingArgumentIndex(int) -> a
    572:585:boolean matchingArguments(int[],int[]) -> a
    593:623:boolean matchingConstantIndices(proguard.classfile.Clazz,int,int) -> a
    635:637:void setMatchingConstant(int,int) -> c
    645:645:boolean isMatchingConstantIndex(int) -> b
    653:669:boolean matchingBranchOffsets(int,int,int) -> a
    678:693:boolean matchingJumpOffsets(int,int[],int[]) -> a
    710:753:void checkMatch(boolean,proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> a
proguard.classfile.util.InternalTypeEnumeration -> proguard.classfile.util.InternalTypeEnumeration:
    java.lang.String descriptor -> a
    int formalTypeParametersIndex -> b
    int openIndex -> c
    int closeIndex -> d
    int index -> e
    50:89:void <init>(java.lang.String) -> <init>
    97:97:boolean hasFormalTypeParameters() -> hasFormalTypeParameters
    106:106:java.lang.String formalTypeParameters() -> formalTypeParameters
    115:115:boolean isMethodSignature() -> isMethodSignature
    125:125:boolean hasMoreTypes() -> hasMoreTypes
    134:154:java.lang.String nextType() -> nextType
    164:164:java.lang.String returnType() -> returnType
    172:176:void skipArray() -> a
    183:193:void skipClass() -> b
    199:216:void skipGeneric() -> c
    226:253:void main(java.lang.String[]) -> main
proguard.classfile.util.MemberFinder -> proguard.classfile.util.MemberFinder:
    proguard.classfile.util.MemberFinder$MemberFoundException MEMBER_FOUND -> a
    proguard.classfile.Clazz clazz -> b
    proguard.classfile.Member member -> c
    32:36:void <init>() -> <init>
    52:52:proguard.classfile.Field findField(proguard.classfile.Clazz,proguard.classfile.Clazz,java.lang.String,java.lang.String) -> findField
    65:65:proguard.classfile.Method findMethod(proguard.classfile.Clazz,proguard.classfile.Clazz,java.lang.String,java.lang.String) -> findMethod
    84:97:proguard.classfile.Member findMember(proguard.classfile.Clazz,proguard.classfile.Clazz,java.lang.String,java.lang.String,boolean) -> findMember
    107:107:proguard.classfile.Clazz correspondingClass() -> correspondingClass
    118:137:boolean isOverriden(proguard.classfile.Clazz,proguard.classfile.Method) -> isOverriden
    148:166:boolean isShadowed(proguard.classfile.Clazz,proguard.classfile.Field) -> isShadowed
    192:195:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
    37:37:void <clinit>() -> <clinit>
proguard.classfile.util.MemberFinder$MemberFoundException -> proguard.classfile.util.a:
    36:36:void <init>() -> <init>
    36:36:void <init>(byte) -> <init>
proguard.classfile.util.MethodLinker -> proguard.classfile.util.MethodLinker:
    java.util.Map memberMap -> a
    37:44:void <init>() -> <init>
    52:59:void visitAnyClass(proguard.classfile.Clazz) -> visitAnyClass
    67:95:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
    106:122:void link(proguard.classfile.Member,proguard.classfile.Member) -> a
    132:139:proguard.classfile.Member lastMember(proguard.classfile.Member) -> lastMember
    150:157:proguard.classfile.VisitorAccepter lastVisitorAccepter(proguard.classfile.VisitorAccepter) -> lastVisitorAccepter
proguard.classfile.util.SimplifiedVisitor -> proguard.classfile.util.SimplifiedVisitor:
    39:39:void <init>() -> <init>
    48:48:void visitAnyClass(proguard.classfile.Clazz) -> visitAnyClass
    54:55:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    60:61:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    71:71:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
    80:81:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    86:87:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    92:93:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    101:102:void visitLibraryMember(proguard.classfile.LibraryClass,proguard.classfile.LibraryMember) -> visitLibraryMember
    107:108:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    113:114:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    121:121:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    127:128:void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    133:134:void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    139:140:void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    145:146:void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    151:152:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    157:158:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    163:164:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    169:170:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    178:179:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    184:185:void visitFieldrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.FieldrefConstant) -> visitFieldrefConstant
    193:194:void visitAnyMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyMethodrefConstant
    199:200:void visitInterfaceMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.InterfaceMethodrefConstant) -> visitInterfaceMethodrefConstant
    205:206:void visitMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodrefConstant) -> visitMethodrefConstant
    211:212:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    217:218:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    223:224:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    234:234:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    240:241:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    246:247:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    252:253:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    258:259:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    264:265:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    270:271:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    276:277:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    285:286:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    291:292:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    297:298:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    303:304:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    312:313:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    318:319:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    324:325:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    330:331:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    339:340:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    345:346:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    351:352:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    357:358:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    363:364:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    369:370:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    375:376:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    381:382:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    387:388:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    393:394:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    399:400:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    405:406:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    414:415:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    420:421:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    429:430:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    435:436:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    441:442:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    447:448:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    456:457:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    462:463:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    468:469:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    477:478:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    483:484:void visitRuntimeVisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleParameterAnnotationsAttribute) -> visitRuntimeVisibleParameterAnnotationsAttribute
    489:490:void visitRuntimeInvisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleParameterAnnotationsAttribute) -> visitRuntimeInvisibleParameterAnnotationsAttribute
    498:499:void visitAnyTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotationsAttribute) -> visitAnyTypeAnnotationsAttribute
    504:505:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    513:514:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    519:520:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    525:526:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    531:532:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    537:538:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    546:547:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    552:553:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    558:559:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    564:565:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    570:571:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    581:581:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    587:588:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    593:594:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    599:600:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    605:606:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    614:615:void visitAnySwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SwitchInstruction) -> visitAnySwitchInstruction
    620:621:void visitTableSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.TableSwitchInstruction) -> visitTableSwitchInstruction
    626:627:void visitLookUpSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.LookUpSwitchInstruction) -> visitLookUpSwitchInstruction
    637:637:void visitAnyStackMapFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.StackMapFrame) -> visitAnyStackMapFrame
    643:644:void visitSameZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameZeroFrame) -> visitSameZeroFrame
    649:650:void visitSameOneFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameOneFrame) -> visitSameOneFrame
    655:656:void visitLessZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.LessZeroFrame) -> visitLessZeroFrame
    661:662:void visitMoreZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.MoreZeroFrame) -> visitMoreZeroFrame
    667:668:void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame) -> visitFullFrame
    678:678:void visitAnyVerificationType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.VerificationType) -> visitAnyVerificationType
    684:685:void visitIntegerType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.IntegerType) -> visitIntegerType
    690:691:void visitFloatType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FloatType) -> visitFloatType
    696:697:void visitLongType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.LongType) -> visitLongType
    702:703:void visitDoubleType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.DoubleType) -> visitDoubleType
    708:709:void visitTopType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.TopType) -> visitTopType
    714:715:void visitObjectType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.ObjectType) -> visitObjectType
    720:721:void visitNullType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.NullType) -> visitNullType
    726:727:void visitUninitializedType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.UninitializedType) -> visitUninitializedType
    732:733:void visitUninitializedThisType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.UninitializedThisType) -> visitUninitializedThisType
    738:739:void visitStackIntegerType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.IntegerType) -> visitStackIntegerType
    744:745:void visitStackFloatType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.FloatType) -> visitStackFloatType
    750:751:void visitStackLongType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.LongType) -> visitStackLongType
    756:757:void visitStackDoubleType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.DoubleType) -> visitStackDoubleType
    762:763:void visitStackTopType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.TopType) -> visitStackTopType
    768:769:void visitStackObjectType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.ObjectType) -> visitStackObjectType
    774:775:void visitStackNullType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.NullType) -> visitStackNullType
    780:781:void visitStackUninitializedType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.UninitializedType) -> visitStackUninitializedType
    786:787:void visitStackUninitializedThisType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.UninitializedThisType) -> visitStackUninitializedThisType
    793:794:void visitVariablesIntegerType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.IntegerType) -> visitVariablesIntegerType
    799:800:void visitVariablesFloatType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.FloatType) -> visitVariablesFloatType
    805:806:void visitVariablesLongType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.LongType) -> visitVariablesLongType
    811:812:void visitVariablesDoubleType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.DoubleType) -> visitVariablesDoubleType
    817:818:void visitVariablesTopType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.TopType) -> visitVariablesTopType
    823:824:void visitVariablesObjectType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.ObjectType) -> visitVariablesObjectType
    829:830:void visitVariablesNullType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.NullType) -> visitVariablesNullType
    835:836:void visitVariablesUninitializedType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.UninitializedType) -> visitVariablesUninitializedType
    841:842:void visitVariablesUninitializedThisType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int,proguard.classfile.attribute.preverification.UninitializedThisType) -> visitVariablesUninitializedThisType
    849:849:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    858:859:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    864:865:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    870:871:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    876:877:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    882:883:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    890:890:void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    899:900:void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    905:906:void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    911:912:void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    917:918:void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    923:924:void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    934:934:void visitAnyTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TargetInfo) -> visitAnyTargetInfo
    940:941:void visitTypeParameterTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterTargetInfo) -> visitTypeParameterTargetInfo
    946:947:void visitTypeParameterTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterTargetInfo) -> visitTypeParameterTargetInfo
    952:953:void visitSuperTypeTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.SuperTypeTargetInfo) -> visitSuperTypeTargetInfo
    958:959:void visitTypeParameterBoundTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterBoundTargetInfo) -> visitTypeParameterBoundTargetInfo
    967:968:void visitTypeParameterBoundTargetInfo(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterBoundTargetInfo) -> visitTypeParameterBoundTargetInfo
    973:974:void visitTypeParameterBoundTargetInfo(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterBoundTargetInfo) -> visitTypeParameterBoundTargetInfo
    979:980:void visitTypeParameterBoundTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterBoundTargetInfo) -> visitTypeParameterBoundTargetInfo
    988:989:void visitEmptyTargetInfo(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.EmptyTargetInfo) -> visitEmptyTargetInfo
    994:995:void visitEmptyTargetInfo(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.EmptyTargetInfo) -> visitEmptyTargetInfo
    1000:1001:void visitEmptyTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.EmptyTargetInfo) -> visitEmptyTargetInfo
    1006:1007:void visitFormalParameterTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.FormalParameterTargetInfo) -> visitFormalParameterTargetInfo
    1012:1013:void visitThrowsTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.ThrowsTargetInfo) -> visitThrowsTargetInfo
    1018:1019:void visitLocalVariableTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo) -> visitLocalVariableTargetInfo
    1024:1025:void visitCatchTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.CatchTargetInfo) -> visitCatchTargetInfo
    1030:1031:void visitOffsetTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.OffsetTargetInfo) -> visitOffsetTargetInfo
    1036:1037:void visitTypeArgumentTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeArgumentTargetInfo) -> visitTypeArgumentTargetInfo
    1044:1044:void visitTypePathInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.TypePathInfo) -> visitTypePathInfo
    1053:1054:void visitTypePathInfo(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.TypePathInfo) -> visitTypePathInfo
    1059:1060:void visitTypePathInfo(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.TypePathInfo) -> visitTypePathInfo
    1065:1066:void visitTypePathInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.TypePathInfo) -> visitTypePathInfo
    1071:1072:void visitTypePathInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.TypePathInfo) -> visitTypePathInfo
    1082:1082:void visitAnyElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ElementValue) -> visitAnyElementValue
    1088:1089:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    1094:1095:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    1100:1101:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    1106:1107:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    1112:1113:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
proguard.classfile.util.StringReferenceInitializer -> proguard.classfile.util.StringReferenceInitializer:
    proguard.classfile.ClassPool programClassPool -> a
    proguard.classfile.ClassPool libraryClassPool -> b
    48:51:void <init>(proguard.classfile.ClassPool,proguard.classfile.ClassPool) -> <init>
    56:56:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    61:68:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    80:88:proguard.classfile.Clazz findClass(java.lang.String) -> a
proguard.classfile.util.StringSharer -> proguard.classfile.util.StringSharer:
    java.lang.String name -> a
    java.lang.String type -> b
    35:35:void <init>() -> <init>
    51:56:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    62:84:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    90:90:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    95:104:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    109:120:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    125:133:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    138:145:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    151:161:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    169:171:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
proguard.classfile.util.WarningPrinter -> proguard.classfile.util.WarningPrinter:
    java.io.PrintStream printStream -> a
    proguard.util.StringMatcher classFilter -> b
    int warningCount -> c
    45:46:void <init>() -> <init>
    53:56:void <init>(java.io.PrintStream) -> <init>
    64:68:void <init>(java.io.PrintStream,java.util.List) -> <init>
    77:81:void print(java.lang.String,java.lang.String) -> print
    89:89:boolean accepts(java.lang.String) -> accepts
    100:104:void print(java.lang.String,java.lang.String,java.lang.String) -> print
    112:112:boolean accepts(java.lang.String,java.lang.String) -> accepts
    123:126:void print(java.lang.String) -> a
    134:134:int getWarningCount() -> getWarningCount
proguard.classfile.visitor.AllClassVisitor -> proguard.classfile.visitor.AllClassVisitor:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    38:40:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    45:46:void visitClassPool(proguard.classfile.ClassPool) -> visitClassPool
proguard.classfile.visitor.AllFieldVisitor -> proguard.classfile.visitor.AllFieldVisitor:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    38:40:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    47:48:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    53:54:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.AllMemberVisitor -> proguard.classfile.visitor.AllMemberVisitor:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    38:40:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    47:49:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    54:56:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.AllMethodVisitor -> proguard.classfile.visitor.AllMethodVisitor:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    38:40:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    47:48:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    53:54:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.BottomClassFilter -> proguard.classfile.visitor.BottomClassFilter:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    44:46:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    54:58:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    64:68:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.ClassAccessFilter -> proguard.classfile.visitor.ClassAccessFilter:
    int requiredSetAccessFlags -> a
    int requiredUnsetAccessFlags -> b
    proguard.classfile.visitor.ClassVisitor classVisitor -> c
    54:58:void <init>(int,int,proguard.classfile.visitor.ClassVisitor) -> <init>
    65:69:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    74:78:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    85:85:boolean accepted(int) -> a
proguard.classfile.visitor.ClassCleaner -> proguard.classfile.visitor.ClassCleaner:
    40:40:void <init>() -> <init>
    62:70:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    75:79:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    86:87:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    94:97:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    102:103:void visitLibraryMember(proguard.classfile.LibraryClass,proguard.classfile.LibraryMember) -> visitLibraryMember
    110:111:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    116:119:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    124:127:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    132:135:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    140:143:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    148:152:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    157:160:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    165:168:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    173:176:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    181:184:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    189:192:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    197:200:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    205:208:void visitAnyTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotationsAttribute) -> visitAnyTypeAnnotationsAttribute
    213:216:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    223:224:void visitBootstrapMethodInfo(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodInfo) -> visitBootstrapMethodInfo
    231:232:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    239:240:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    247:248:void visitSameZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameZeroFrame) -> visitSameZeroFrame
    253:256:void visitSameOneFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameOneFrame) -> visitSameOneFrame
    261:262:void visitLessZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.LessZeroFrame) -> visitLessZeroFrame
    267:270:void visitMoreZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.MoreZeroFrame) -> visitMoreZeroFrame
    275:279:void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame) -> visitFullFrame
    286:287:void visitAnyVerificationType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.VerificationType) -> visitAnyVerificationType
    294:295:void visitParameterInfo(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.ParameterInfo) -> visitParameterInfo
    302:303:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    310:311:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    318:321:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    328:333:void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    340:341:void visitAnyElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ElementValue) -> visitAnyElementValue
    346:349:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    354:355:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    362:363:void clean(proguard.classfile.VisitorAccepter) -> a
proguard.classfile.visitor.ClassCollector -> proguard.classfile.visitor.ClassCollector:
    java.util.Set set -> a
    47:49:void <init>(java.util.Set) -> <init>
    56:57:void visitAnyClass(proguard.classfile.Clazz) -> visitAnyClass
proguard.classfile.visitor.ClassCounter -> proguard.classfile.visitor.ClassCounter:
    int count -> a
    30:30:void <init>() -> <init>
    40:40:int getCount() -> getCount
    48:49:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    54:55:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
proguard.classfile.visitor.ClassHierarchyTraveler -> proguard.classfile.visitor.ClassHierarchyTraveler:
    boolean visitThisClass -> a
    boolean visitSuperClass -> b
    boolean visitInterfaces -> c
    boolean visitSubclasses -> d
    proguard.classfile.visitor.ClassVisitor classVisitor -> e
    61:68:void <init>(boolean,boolean,boolean,boolean,proguard.classfile.visitor.ClassVisitor) -> <init>
    75:80:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    85:90:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.ClassNameFilter -> proguard.classfile.visitor.ClassNameFilter:
    proguard.util.StringMatcher regularExpressionMatcher -> a
    proguard.classfile.visitor.ClassVisitor classVisitor -> b
    51:53:void <init>(java.lang.String,proguard.classfile.visitor.ClassVisitor) -> <init>
    66:68:void <init>(java.util.List,proguard.classfile.visitor.ClassVisitor) -> <init>
    80:83:void <init>(proguard.util.StringMatcher,proguard.classfile.visitor.ClassVisitor) -> <init>
    90:94:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    99:103:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    110:110:boolean accepted(java.lang.String) -> a
proguard.classfile.visitor.ClassPoolFiller -> proguard.classfile.visitor.ClassPoolFiller:
    proguard.classfile.ClassPool classPool -> a
    44:46:void <init>(proguard.classfile.ClassPool) -> <init>
    53:54:void visitAnyClass(proguard.classfile.Clazz) -> visitAnyClass
proguard.classfile.visitor.ClassPoolVisitor -> proguard.classfile.visitor.ClassPoolVisitor:
    void visitClassPool(proguard.classfile.ClassPool) -> visitClassPool
proguard.classfile.visitor.ClassPresenceFilter -> proguard.classfile.visitor.ClassPresenceFilter:
    proguard.classfile.ClassPool classPool -> a
    proguard.classfile.visitor.ClassVisitor presentClassVisitor -> b
    proguard.classfile.visitor.ClassVisitor missingClassVisitor -> c
    51:55:void <init>(proguard.classfile.ClassPool,proguard.classfile.visitor.ClassVisitor,proguard.classfile.visitor.ClassVisitor) -> <init>
    62:68:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    73:79:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    89:89:proguard.classfile.visitor.ClassVisitor classFileVisitor(proguard.classfile.Clazz) -> a
proguard.classfile.visitor.ClassPrinter -> proguard.classfile.visitor.ClassPrinter:
    java.io.PrintStream ps -> a
    int indentation -> b
    82:83:void <init>() -> <init>
    91:93:void <init>(java.io.PrintStream) -> <init>
    100:150:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    155:188:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    195:197:void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    202:204:void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    209:211:void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    216:218:void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    223:225:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    230:232:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    237:242:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    247:252:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    257:261:void visitFieldrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.FieldrefConstant) -> visitFieldrefConstant
    266:270:void visitInterfaceMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.InterfaceMethodrefConstant) -> visitInterfaceMethodrefConstant
    275:279:void visitMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodrefConstant) -> visitMethodrefConstant
    284:286:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    291:293:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    298:301:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    308:322:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    327:342:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    347:352:void visitMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> a
    357:369:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    374:387:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    396:398:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    403:409:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    414:420:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    425:431:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    436:442:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    447:458:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    463:465:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    470:472:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    477:483:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    488:492:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    497:503:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    508:514:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    519:539:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    544:551:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    556:563:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    568:575:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    580:587:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    592:599:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    604:610:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    615:621:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    626:632:void visitRuntimeVisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleParameterAnnotationsAttribute) -> visitRuntimeVisibleParameterAnnotationsAttribute
    637:643:void visitRuntimeInvisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleParameterAnnotationsAttribute) -> visitRuntimeInvisibleParameterAnnotationsAttribute
    648:654:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    659:665:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    670:676:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    683:691:void visitBootstrapMethodInfo(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodInfo) -> visitBootstrapMethodInfo
    698:708:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    715:716:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    721:726:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    731:747:void visitTableSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.TableSwitchInstruction) -> visitTableSwitchInstruction
    752:769:void visitLookUpSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.LookUpSwitchInstruction) -> visitLookUpSwitchInstruction
    776:786:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    793:796:void visitSameZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameZeroFrame) -> visitSameZeroFrame
    801:808:void visitSameOneFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameOneFrame) -> visitSameOneFrame
    813:817:void visitLessZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.LessZeroFrame) -> visitLessZeroFrame
    822:829:void visitMoreZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.MoreZeroFrame) -> visitMoreZeroFrame
    834:845:void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame) -> visitFullFrame
    852:853:void visitIntegerType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.IntegerType) -> visitIntegerType
    858:859:void visitFloatType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FloatType) -> visitFloatType
    864:865:void visitLongType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.LongType) -> visitLongType
    870:871:void visitDoubleType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.DoubleType) -> visitDoubleType
    876:877:void visitTopType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.TopType) -> visitTopType
    882:883:void visitObjectType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.ObjectType) -> visitObjectType
    888:889:void visitNullType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.NullType) -> visitNullType
    894:895:void visitUninitializedType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.UninitializedType) -> visitUninitializedType
    900:901:void visitUninitializedThisType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.UninitializedThisType) -> visitUninitializedThisType
    908:911:void visitLineNumberInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberInfo) -> visitLineNumberInfo
    918:921:void visitParameterInfo(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.ParameterInfo) -> visitParameterInfo
    928:933:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    940:945:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    952:958:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    965:979:void visitTypeAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation) -> visitTypeAnnotation
    986:988:void visitTypeParameterTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterTargetInfo) -> visitTypeParameterTargetInfo
    993:997:void visitSuperTypeTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.SuperTypeTargetInfo) -> visitSuperTypeTargetInfo
    1002:1004:void visitTypeParameterBoundTargetInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeParameterBoundTargetInfo) -> visitTypeParameterBoundTargetInfo
    1009:1010:void visitEmptyTargetInfo(proguard.classfile.Clazz,proguard.classfile.Member,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.EmptyTargetInfo) -> visitEmptyTargetInfo
    1015:1017:void visitFormalParameterTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.FormalParameterTargetInfo) -> visitFormalParameterTargetInfo
    1022:1024:void visitThrowsTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.ThrowsTargetInfo) -> visitThrowsTargetInfo
    1029:1035:void visitLocalVariableTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo) -> visitLocalVariableTargetInfo
    1040:1042:void visitCatchTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.CatchTargetInfo) -> visitCatchTargetInfo
    1047:1049:void visitOffsetTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.OffsetTargetInfo) -> visitOffsetTargetInfo
    1054:1057:void visitTypeArgumentTargetInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.TypeArgumentTargetInfo) -> visitTypeArgumentTargetInfo
    1064:1067:void visitTypePathInfo(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.TypePathInfo) -> visitTypePathInfo
    1074:1078:void visitLocalVariableTargetElement(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.TypeAnnotation,proguard.classfile.attribute.annotation.target.LocalVariableTargetInfo,proguard.classfile.attribute.annotation.target.LocalVariableTargetElement) -> visitLocalVariableTargetElement
    1085:1094:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    1099:1105:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    1110:1115:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    1120:1128:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    1133:1141:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    1148:1149:void indent() -> a
    1153:1154:void outdent() -> b
    1158:1161:void println(java.lang.String) -> a
    1165:1171:void print(java.lang.String) -> b
    1175:1176:void println() -> c
    1181:1181:java.lang.String visitorInfo(proguard.classfile.VisitorAccepter) -> a
proguard.classfile.visitor.ClassVersionFilter -> proguard.classfile.visitor.ClassVersionFilter:
    int minimumClassVersion -> a
    int maximumClassVersion -> b
    proguard.classfile.visitor.ClassVisitor classVisitor -> c
    48:49:void <init>(int,proguard.classfile.visitor.ClassVisitor) -> <init>
    62:66:void <init>(int,int,proguard.classfile.visitor.ClassVisitor) -> <init>
    73:78:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    84:84:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.ClassVersionSetter -> proguard.classfile.visitor.ClassVersionSetter:
    int classVersion -> a
    java.util.Set newerClassVersions -> b
    46:47:void <init>(int) -> <init>
    59:62:void <init>(int,java.util.Set) -> <init>
    69:76:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    82:82:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.ClassVisitor -> proguard.classfile.visitor.ClassVisitor:
    void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.ConcreteClassDownTraveler -> proguard.classfile.visitor.ConcreteClassDownTraveler:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    45:47:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    55:74:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    80:99:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.DotClassClassVisitor -> proguard.classfile.visitor.DotClassClassVisitor:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    55:57:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    62:62:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    67:76:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    81:81:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    87:88:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
proguard.classfile.visitor.DynamicReturnedClassVisitor -> proguard.classfile.visitor.DynamicReturnedClassVisitor:
    proguard.classfile.visitor.ClassVisitor classVisitor -> classVisitor
    42:44:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    49:49:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    55:67:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
proguard.classfile.visitor.ExceptClassFilter -> proguard.classfile.visitor.ExceptClassFilter:
    proguard.classfile.Clazz exceptClass -> a
    proguard.classfile.visitor.ClassVisitor classVisitor -> b
    45:48:void <init>(proguard.classfile.Clazz,proguard.classfile.visitor.ClassVisitor) -> <init>
    55:59:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    64:68:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.ExceptClassesFilter -> proguard.classfile.visitor.ExceptClassesFilter:
    proguard.classfile.Clazz[] exceptClasses -> a
    proguard.classfile.visitor.ClassVisitor classVisitor -> b
    45:48:void <init>(proguard.classfile.Clazz[],proguard.classfile.visitor.ClassVisitor) -> <init>
    55:59:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    64:68:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    75:88:boolean present(proguard.classfile.Clazz) -> a
proguard.classfile.visitor.ExceptionCounter -> proguard.classfile.visitor.ExceptionCounter:
    int count -> a
    32:32:void <init>() -> <init>
    42:42:int getCount() -> getCount
    50:51:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
proguard.classfile.visitor.ExceptionExcludedOffsetFilter -> proguard.classfile.visitor.ExceptionExcludedOffsetFilter:
    int instructionOffset -> a
    proguard.classfile.attribute.visitor.ExceptionInfoVisitor exceptionInfoVisitor -> b
    49:52:void <init>(int,proguard.classfile.attribute.visitor.ExceptionInfoVisitor) -> <init>
    59:63:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
proguard.classfile.visitor.ExceptionHandlerConstantVisitor -> proguard.classfile.visitor.ExceptionHandlerConstantVisitor:
    proguard.classfile.constant.visitor.ConstantVisitor constantVisitor -> a
    47:49:void <init>(proguard.classfile.constant.visitor.ConstantVisitor) -> <init>
    56:61:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
proguard.classfile.visitor.ExceptionHandlerFilter -> proguard.classfile.visitor.ExceptionHandlerFilter:
    int startOffset -> a
    int endOffset -> b
    proguard.classfile.attribute.visitor.ExceptionInfoVisitor exceptionInfoVisitor -> c
    52:56:void <init>(int,int,proguard.classfile.attribute.visitor.ExceptionInfoVisitor) -> <init>
    63:69:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
proguard.classfile.visitor.ExceptionOffsetFilter -> proguard.classfile.visitor.ExceptionOffsetFilter:
    int instructionOffset -> a
    proguard.classfile.attribute.visitor.ExceptionInfoVisitor exceptionInfoVisitor -> b
    49:52:void <init>(int,proguard.classfile.attribute.visitor.ExceptionInfoVisitor) -> <init>
    59:63:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
proguard.classfile.visitor.ExceptionRangeFilter -> proguard.classfile.visitor.ExceptionRangeFilter:
    int startOffset -> a
    int endOffset -> b
    proguard.classfile.attribute.visitor.ExceptionInfoVisitor exceptionInfoVisitor -> c
    52:56:void <init>(int,int,proguard.classfile.attribute.visitor.ExceptionInfoVisitor) -> <init>
    63:67:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
proguard.classfile.visitor.ImplementedClassConstantFilter -> proguard.classfile.visitor.ImplementedClassConstantFilter:
    proguard.classfile.Clazz implementedClass -> a
    proguard.classfile.constant.visitor.ConstantVisitor constantVisitor -> b
    52:55:void <init>(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> <init>
    62:68:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
proguard.classfile.visitor.ImplementedClassFilter -> proguard.classfile.visitor.ImplementedClassFilter:
    proguard.classfile.Clazz implementedClass -> a
    proguard.classfile.visitor.ClassVisitor classVisitor -> b
    47:50:void <init>(proguard.classfile.Clazz,proguard.classfile.visitor.ClassVisitor) -> <init>
    57:61:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    66:70:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.ImplementingClassConstantFilter -> proguard.classfile.visitor.ImplementingClassConstantFilter:
    proguard.classfile.Clazz implementingClass -> a
    proguard.classfile.constant.visitor.ConstantVisitor constantVisitor -> b
    53:56:void <init>(proguard.classfile.Clazz,proguard.classfile.constant.visitor.ConstantVisitor) -> <init>
    63:69:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
proguard.classfile.visitor.InitializerMethodFilter -> proguard.classfile.visitor.InitializerMethodFilter:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    45:47:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    52:52:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    53:53:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    58:62:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    67:71:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.classfile.visitor.LibraryClassFilter -> proguard.classfile.visitor.LibraryClassFilter:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    43:45:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    53:53:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    58:59:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.LibraryMemberFilter -> proguard.classfile.visitor.LibraryMemberFilter:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    44:46:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    54:54:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    60:60:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    65:66:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    71:72:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.classfile.visitor.MemberAccessFilter -> proguard.classfile.visitor.MemberAccessFilter:
    int requiredSetAccessFlags -> a
    int requiredUnsetAccessFlags -> b
    int requiredOneSetAccessFlags -> c
    proguard.classfile.visitor.MemberVisitor memberVisitor -> d
    67:72:void <init>(int,int,proguard.classfile.visitor.MemberVisitor) -> <init>
    79:83:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    88:92:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    97:101:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    106:110:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    117:117:boolean accepted(int) -> a
proguard.classfile.visitor.MemberClassAccessFilter -> proguard.classfile.visitor.MemberClassAccessFilter:
    proguard.classfile.Clazz referencingClass -> a
    proguard.classfile.visitor.MemberVisitor memberVisitor -> b
    48:51:void <init>(proguard.classfile.Clazz,proguard.classfile.visitor.MemberVisitor) -> <init>
    58:62:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    67:71:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    76:80:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    85:89:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    96:98:boolean accepted(proguard.classfile.Clazz,int) -> a
proguard.classfile.visitor.MemberCollector -> proguard.classfile.visitor.MemberCollector:
    java.util.Set set -> a
    47:49:void <init>(java.util.Set) -> <init>
    57:58:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
proguard.classfile.visitor.MemberCounter -> proguard.classfile.visitor.MemberCounter:
    int count -> a
    30:30:void <init>() -> <init>
    40:40:int getCount() -> getCount
    49:50:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    56:57:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    63:64:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    70:71:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
proguard.classfile.visitor.MemberDescriptorFilter -> proguard.classfile.visitor.MemberDescriptorFilter:
    proguard.util.StringMatcher regularExpressionMatcher -> a
    proguard.classfile.visitor.MemberVisitor memberVisitor -> b
    50:51:void <init>(java.lang.String,proguard.classfile.visitor.MemberVisitor) -> <init>
    63:66:void <init>(proguard.util.StringMatcher,proguard.classfile.visitor.MemberVisitor) -> <init>
    73:77:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    82:86:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    91:95:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    100:104:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    111:111:boolean accepted(java.lang.String) -> a
proguard.classfile.visitor.MemberDescriptorReferencedClassVisitor -> proguard.classfile.visitor.MemberDescriptorReferencedClassVisitor:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    46:48:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    56:57:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    63:64:void visitLibraryMember(proguard.classfile.LibraryClass,proguard.classfile.LibraryMember) -> visitLibraryMember
proguard.classfile.visitor.MemberNameFilter -> proguard.classfile.visitor.MemberNameFilter:
    proguard.util.StringMatcher regularExpressionMatcher -> a
    proguard.classfile.visitor.MemberVisitor memberVisitor -> b
    50:52:void <init>(java.lang.String,proguard.classfile.visitor.MemberVisitor) -> <init>
    64:67:void <init>(proguard.util.StringMatcher,proguard.classfile.visitor.MemberVisitor) -> <init>
    74:78:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    83:87:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    92:96:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    101:105:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    112:112:boolean accepted(java.lang.String) -> a
proguard.classfile.visitor.MemberToClassVisitor -> proguard.classfile.visitor.MemberToClassVisitor:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    proguard.classfile.Clazz lastVisitedClass -> b
    41:43:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    50:56:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    61:67:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    72:78:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    83:89:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.classfile.visitor.MemberVisitor -> proguard.classfile.visitor.MemberVisitor:
    void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.classfile.visitor.MethodImplementationFilter -> proguard.classfile.visitor.MethodImplementationFilter:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    47:49:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    56:60:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    65:69:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.classfile.visitor.MethodImplementationTraveler -> proguard.classfile.visitor.MethodImplementationTraveler:
    boolean visitThisMethod -> a
    boolean visitSuperMethods -> b
    boolean visitInterfaceMethods -> c
    boolean visitOverridingMethods -> d
    proguard.classfile.visitor.MemberVisitor memberVisitor -> e
    62:68:void <init>(boolean,boolean,boolean,boolean,proguard.classfile.visitor.MemberVisitor) -> <init>
    75:93:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    98:116:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    123:123:boolean isSpecial(proguard.classfile.Clazz,proguard.classfile.Method) -> a
proguard.classfile.visitor.MultiClassPoolVisitor -> proguard.classfile.visitor.MultiClassPoolVisitor:
    proguard.classfile.visitor.ClassPoolVisitor[] classPoolVisitors -> a
    int classPoolVisitorCount -> b
    41:42:void <init>() -> <init>
    46:49:void <init>(proguard.classfile.visitor.ClassPoolVisitor[]) -> <init>
    54:57:void addClassPoolVisitor(proguard.classfile.visitor.ClassPoolVisitor) -> addClassPoolVisitor
    62:76:void ensureArraySize() -> a
    83:87:void visitClassPool(proguard.classfile.ClassPool) -> visitClassPool
proguard.classfile.visitor.MultiClassVisitor -> proguard.classfile.visitor.MultiClassVisitor:
    proguard.classfile.visitor.ClassVisitor[] classVisitors -> a
    int classVisitorCount -> b
    41:42:void <init>() -> <init>
    46:49:void <init>(proguard.classfile.visitor.ClassVisitor[]) -> <init>
    54:57:void addClassVisitor(proguard.classfile.visitor.ClassVisitor) -> addClassVisitor
    62:76:void ensureArraySize() -> a
    83:87:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    92:96:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.MultiMemberVisitor -> proguard.classfile.visitor.MultiMemberVisitor:
    proguard.classfile.visitor.MemberVisitor[] memberVisitors -> a
    int memberVisitorCount -> b
    41:42:void <init>() -> <init>
    46:49:void <init>(proguard.classfile.visitor.MemberVisitor[]) -> <init>
    54:57:void addMemberVisitor(proguard.classfile.visitor.MemberVisitor) -> addMemberVisitor
    62:76:void ensureArraySize() -> a
    81:85:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    90:94:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    99:103:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    108:112:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.classfile.visitor.NamedClassVisitor -> proguard.classfile.visitor.NamedClassVisitor:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    java.lang.String name -> b
    39:42:void <init>(proguard.classfile.visitor.ClassVisitor,java.lang.String) -> <init>
    47:48:void visitClassPool(proguard.classfile.ClassPool) -> visitClassPool
proguard.classfile.visitor.NamedFieldVisitor -> proguard.classfile.visitor.NamedFieldVisitor:
    java.lang.String name -> a
    java.lang.String descriptor -> b
    proguard.classfile.visitor.MemberVisitor memberVisitor -> c
    42:46:void <init>(java.lang.String,java.lang.String,proguard.classfile.visitor.MemberVisitor) -> <init>
    53:54:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    59:60:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.NamedMethodVisitor -> proguard.classfile.visitor.NamedMethodVisitor:
    java.lang.String name -> a
    java.lang.String descriptor -> b
    proguard.classfile.visitor.MemberVisitor memberVisitor -> c
    42:46:void <init>(java.lang.String,java.lang.String,proguard.classfile.visitor.MemberVisitor) -> <init>
    53:54:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    59:60:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.ParameterVisitor -> proguard.classfile.visitor.ParameterVisitor:
    void visitParameter(proguard.classfile.Clazz,proguard.classfile.Member,int,int,int,int,java.lang.String,proguard.classfile.Clazz) -> visitParameter
proguard.classfile.visitor.ProgramClassFilter -> proguard.classfile.visitor.ProgramClassFilter:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    43:45:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    52:53:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    59:59:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.ProgramMemberFilter -> proguard.classfile.visitor.ProgramMemberFilter:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    44:46:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    53:54:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    59:60:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    66:66:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    72:72:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.classfile.visitor.ReferencedClassVisitor -> proguard.classfile.visitor.ReferencedClassVisitor:
    proguard.classfile.visitor.ClassVisitor classVisitor -> classVisitor
    55:57:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    65:73:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    79:85:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    93:97:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    103:104:void visitLibraryMember(proguard.classfile.LibraryClass,proguard.classfile.LibraryMember) -> visitLibraryMember
    109:109:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    115:116:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    122:123:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    129:130:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    136:137:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    143:144:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    149:149:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    155:156:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    162:163:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    169:170:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    176:177:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    183:184:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    190:191:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    197:198:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    204:205:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    213:214:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    222:223:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    231:235:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    240:240:void visitAnyElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ElementValue) -> visitAnyElementValue
    246:247:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    253:254:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    260:261:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    267:268:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
proguard.classfile.visitor.ReferencedMemberVisitor -> proguard.classfile.visitor.ReferencedMemberVisitor:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    45:47:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    52:52:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    57:58:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    63:64:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    71:72:void visitAnyElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ElementValue) -> visitAnyElementValue
proguard.classfile.visitor.SimilarMemberVisitor -> proguard.classfile.visitor.SimilarMemberVisitor:
    proguard.classfile.Clazz targetClass -> a
    boolean visitThisMember -> b
    boolean visitSuperMembers -> c
    boolean visitInterfaceMembers -> d
    boolean visitOverridingMembers -> e
    proguard.classfile.visitor.MemberVisitor memberVisitor -> f
    67:74:void <init>(proguard.classfile.Clazz,boolean,boolean,boolean,boolean,proguard.classfile.visitor.MemberVisitor) -> <init>
    81:88:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    93:100:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    105:112:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    117:124:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.classfile.visitor.SimpleClassPrinter -> proguard.classfile.visitor.SimpleClassPrinter:
    boolean printAccessModifiers -> a
    java.io.PrintStream ps -> b
    51:52:void <init>() -> <init>
    60:61:void <init>(boolean) -> <init>
    69:72:void <init>(boolean,java.io.PrintStream) -> <init>
    79:84:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    89:94:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    101:113:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    118:131:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    136:148:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    153:166:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.classfile.visitor.SubclassFilter -> proguard.classfile.visitor.SubclassFilter:
    proguard.classfile.Clazz subclass -> a
    proguard.classfile.visitor.ClassVisitor classVisitor -> b
    46:49:void <init>(proguard.classfile.Clazz,proguard.classfile.visitor.ClassVisitor) -> <init>
    56:60:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    65:69:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    76:89:boolean present(proguard.classfile.Clazz[]) -> a
proguard.classfile.visitor.SubclassTraveler -> proguard.classfile.visitor.SubclassTraveler:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    43:45:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    52:53:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    58:59:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.VariableClassVisitor -> proguard.classfile.visitor.VariableClassVisitor:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    39:40:void <init>() -> <init>
    44:46:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    51:52:void setClassVisitor(proguard.classfile.visitor.ClassVisitor) -> setClassVisitor
    56:56:proguard.classfile.visitor.ClassVisitor getClassVisitor() -> getClassVisitor
    64:68:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    73:77:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.classfile.visitor.VariableMemberVisitor -> proguard.classfile.visitor.VariableMemberVisitor:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    39:40:void <init>() -> <init>
    44:46:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    51:52:void setMemberVisitor(proguard.classfile.visitor.MemberVisitor) -> setMemberVisitor
    56:56:proguard.classfile.visitor.MemberVisitor getMemberVisitor() -> getMemberVisitor
    64:68:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    73:77:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    82:86:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    91:95:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.evaluation.BasicBranchUnit -> proguard.evaluation.BasicBranchUnit:
    boolean wasCalled -> a
    proguard.evaluation.value.InstructionOffsetValue traceBranchTargets -> b
    33:33:void <init>() -> <init>
    46:47:void resetCalled() -> resetCalled
    55:56:void setCalled() -> setCalled
    63:63:boolean wasCalled() -> wasCalled
    73:74:void setTraceBranchTargets(proguard.evaluation.value.InstructionOffsetValue) -> setTraceBranchTargets
    78:78:proguard.evaluation.value.InstructionOffsetValue getTraceBranchTargets() -> getTraceBranchTargets
    90:93:void branch(proguard.classfile.Clazz,proguard.classfile.attribute.CodeAttribute,int,int) -> branch
    103:107:void branchConditionally(proguard.classfile.Clazz,proguard.classfile.attribute.CodeAttribute,int,int,int) -> branchConditionally
    113:116:void returnFromMethod() -> returnFromMethod
    122:125:void throwException() -> throwException
proguard.evaluation.BasicInvocationUnit -> proguard.evaluation.BasicInvocationUnit:
    proguard.evaluation.value.ValueFactory valueFactory -> valueFactory
    boolean isStatic -> a
    boolean isLoad -> b
    proguard.evaluation.Stack stack -> c
    proguard.classfile.Clazz returnTypeClass -> d
    58:60:void <init>(proguard.evaluation.value.ValueFactory) -> <init>
    67:130:void enterMethod(proguard.classfile.Clazz,proguard.classfile.Method,proguard.evaluation.Variables) -> enterMethod
    135:136:void exitMethod(proguard.classfile.Clazz,proguard.classfile.Method,proguard.evaluation.value.Value) -> exitMethod
    141:181:void invokeMember(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction,proguard.evaluation.Stack) -> invokeMember
    189:207:void visitFieldrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.FieldrefConstant) -> visitFieldrefConstant
    212:233:void visitAnyMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyMethodrefConstant
    237:258:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    269:269:void setFieldClassValue(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant,proguard.evaluation.value.ReferenceValue) -> setFieldClassValue
    280:283:proguard.evaluation.value.Value getFieldClassValue(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant,java.lang.String) -> getFieldClassValue
    297:297:void setFieldValue(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant,proguard.evaluation.value.Value) -> setFieldValue
    308:311:proguard.evaluation.value.Value getFieldValue(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant,java.lang.String) -> getFieldValue
    326:326:void setMethodParameterValue(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant,int,proguard.evaluation.value.Value) -> setMethodParameterValue
    338:338:proguard.evaluation.value.Value getMethodParameterValue(proguard.classfile.Clazz,proguard.classfile.Method,int,java.lang.String,proguard.classfile.Clazz) -> getMethodParameterValue
    350:350:void setMethodReturnValue(proguard.classfile.Clazz,proguard.classfile.Method,proguard.evaluation.value.Value) -> setMethodReturnValue
    361:364:proguard.evaluation.value.Value getMethodReturnValue(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant,java.lang.String) -> getMethodReturnValue
    378:386:proguard.evaluation.value.Value getMethodReturnValue(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant,java.lang.String) -> getMethodReturnValue
    396:397:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    402:408:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    413:414:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    419:425:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.evaluation.BranchUnit -> proguard.evaluation.BranchUnit:
    void branch(proguard.classfile.Clazz,proguard.classfile.attribute.CodeAttribute,int,int) -> branch
    void branchConditionally(proguard.classfile.Clazz,proguard.classfile.attribute.CodeAttribute,int,int,int) -> branchConditionally
    void returnFromMethod() -> returnFromMethod
    void throwException() -> throwException
proguard.evaluation.ClassConstantValueFactory -> proguard.evaluation.ClassConstantValueFactory:
    38:39:void <init>(proguard.evaluation.value.ValueFactory) -> <init>
    47:50:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
proguard.evaluation.ConstantValueFactory -> proguard.evaluation.ConstantValueFactory:
    proguard.evaluation.value.ValueFactory valueFactory -> valueFactory
    proguard.evaluation.value.Value value -> value
    46:48:void <init>(proguard.evaluation.value.ValueFactory) -> <init>
    58:60:proguard.evaluation.value.Value constantValue(proguard.classfile.Clazz,int) -> constantValue
    68:69:void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    73:74:void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    78:79:void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    83:84:void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    88:91:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    95:98:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    102:105:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    109:112:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
proguard.evaluation.InvocationUnit -> proguard.evaluation.InvocationUnit:
    void enterMethod(proguard.classfile.Clazz,proguard.classfile.Method,proguard.evaluation.Variables) -> enterMethod
    void exitMethod(proguard.classfile.Clazz,proguard.classfile.Method,proguard.evaluation.value.Value) -> exitMethod
    void invokeMember(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction,proguard.evaluation.Stack) -> invokeMember
proguard.evaluation.Processor -> proguard.evaluation.Processor:
    proguard.evaluation.Variables variables -> a
    proguard.evaluation.Stack stack -> b
    proguard.evaluation.value.ValueFactory valueFactory -> c
    proguard.evaluation.BranchUnit branchUnit -> d
    proguard.evaluation.InvocationUnit invocationUnit -> e
    boolean alwaysCast -> f
    proguard.evaluation.ConstantValueFactory constantValueFactory -> g
    proguard.evaluation.ClassConstantValueFactory classConstantValueFactory -> h
    64:74:void <init>(proguard.evaluation.Variables,proguard.evaluation.Stack,proguard.evaluation.value.ValueFactory,proguard.evaluation.BranchUnit,proguard.evaluation.InvocationUnit,boolean) -> <init>
    81:567:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    572:648:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    653:760:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    765:870:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    875:898:void visitTableSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.TableSwitchInstruction) -> visitTableSwitchInstruction
    903:926:void visitLookUpSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.LookUpSwitchInstruction) -> visitLookUpSwitchInstruction
proguard.evaluation.Stack -> proguard.evaluation.Stack:
    proguard.evaluation.value.TopValue TOP_VALUE -> a
    proguard.evaluation.value.Value[] values -> values
    int currentSize -> currentSize
    int actualMaxSize -> actualMaxSize
    48:50:void <init>(int) -> <init>
    59:63:void <init>(proguard.evaluation.Stack) -> <init>
    72:72:int getActualMaxSize() -> getActualMaxSize
    82:92:void reset(int) -> reset
    101:113:void copy(proguard.evaluation.Stack) -> copy
    123:158:boolean generalize(proguard.evaluation.Stack) -> generalize
    168:171:void clear() -> clear
    180:180:int size() -> size
    192:192:proguard.evaluation.value.Value getBottom(int) -> getBottom
    204:205:void setBottom(int,proguard.evaluation.value.Value) -> setBottom
    216:216:proguard.evaluation.value.Value getTop(int) -> getTop
    228:229:void setTop(int,proguard.evaluation.value.Value) -> setTop
    239:243:void removeTop(int) -> removeTop
    252:265:void push(proguard.evaluation.value.Value) -> push
    273:283:proguard.evaluation.value.Value pop() -> pop
    294:294:proguard.evaluation.value.IntegerValue ipop() -> ipop
    303:303:proguard.evaluation.value.LongValue lpop() -> lpop
    312:312:proguard.evaluation.value.FloatValue fpop() -> fpop
    321:321:proguard.evaluation.value.DoubleValue dpop() -> dpop
    330:330:proguard.evaluation.value.ReferenceValue apop() -> apop
    339:339:proguard.evaluation.value.InstructionOffsetValue opop() -> opop
    348:349:void pop1() -> pop1
    358:360:void pop2() -> pop2
    368:377:void dup() -> dup
    386:397:void dup_x1() -> dup_x1
    406:418:void dup_x2() -> dup_x2
    426:436:void dup2() -> dup2
    445:458:void dup2_x1() -> dup2_x1
    467:481:void dup2_x2() -> dup2_x2
    489:494:void swap() -> swap
    501:525:boolean equals(java.lang.Object) -> equals
    531:542:int hashCode() -> hashCode
    548:558:java.lang.String toString() -> toString
    35:35:void <clinit>() -> <clinit>
proguard.evaluation.TracedStack -> proguard.evaluation.TracedStack:
    proguard.evaluation.value.Value producerValue -> a
    proguard.evaluation.Stack producerStack -> b
    proguard.evaluation.Stack actualProducerStack -> c
    49:53:void <init>(int) -> <init>
    61:65:void <init>(proguard.evaluation.TracedStack) -> <init>
    74:75:void setProducerValue(proguard.evaluation.value.Value) -> setProducerValue
    86:86:proguard.evaluation.value.Value getBottomProducerValue(int) -> getBottomProducerValue
    99:99:proguard.evaluation.value.Value getBottomActualProducerValue(int) -> getBottomActualProducerValue
    111:111:proguard.evaluation.value.Value getTopProducerValue(int) -> getTopProducerValue
    124:124:proguard.evaluation.value.Value getTopActualProducerValue(int) -> getTopActualProducerValue
    132:136:void reset(int) -> reset
    140:144:void copy(proguard.evaluation.TracedStack) -> copy
    148:148:boolean generalize(proguard.evaluation.TracedStack) -> generalize
    156:160:void clear() -> clear
    164:168:void removeTop(int) -> removeTop
    172:181:void push(proguard.evaluation.value.Value) -> push
    185:195:proguard.evaluation.value.Value pop() -> pop
    200:203:void pop1() -> pop1
    207:211:void pop2() -> pop2
    215:222:void dup() -> dup
    226:235:void dup_x1() -> dup_x1
    239:250:void dup_x2() -> dup_x2
    254:264:void dup2() -> dup2
    268:280:void dup2_x1() -> dup2_x1
    284:298:void dup2_x2() -> dup2_x2
    302:310:void swap() -> swap
    317:325:boolean equals(java.lang.Object) -> equals
    333:333:int hashCode() -> hashCode
    341:356:java.lang.String toString() -> toString
    364:366:void producerPush() -> a
    371:373:void producerPop() -> b
proguard.evaluation.TracedVariables -> proguard.evaluation.TracedVariables:
    int NONE -> NONE
    proguard.evaluation.value.Value producerValue -> a
    proguard.evaluation.Variables producerVariables -> b
    50:53:void <init>(int) -> <init>
    61:64:void <init>(proguard.evaluation.TracedVariables) -> <init>
    72:73:void setProducerValue(proguard.evaluation.value.Value) -> setProducerValue
    83:83:proguard.evaluation.value.Value getProducerValue(int) -> getProducerValue
    95:96:void setProducerValue(int,proguard.evaluation.value.Value) -> setProducerValue
    103:106:void reset(int) -> reset
    110:113:void initialize(proguard.evaluation.TracedVariables) -> initialize
    118:139:boolean generalize(proguard.evaluation.TracedVariables,boolean) -> generalize
    146:156:void store(int,proguard.evaluation.value.Value) -> store
    163:171:boolean equals(java.lang.Object) -> equals
    178:178:int hashCode() -> hashCode
    185:197:java.lang.String toString() -> toString
proguard.evaluation.Variables -> proguard.evaluation.Variables:
    proguard.evaluation.value.TopValue TOP_VALUE -> a
    proguard.evaluation.value.Value[] values -> values
    int size -> size
    47:50:void <init>(int) -> <init>
    59:63:void <init>(proguard.evaluation.Variables) -> <init>
    72:84:void reset(int) -> reset
    94:101:void initialize(proguard.evaluation.Variables) -> initialize
    115:155:boolean generalize(proguard.evaluation.Variables,boolean) -> generalize
    164:164:int size() -> size
    173:179:proguard.evaluation.value.Value getValue(int) -> getValue
    188:202:void store(int,proguard.evaluation.value.Value) -> store
    210:216:proguard.evaluation.value.Value load(int) -> load
    227:227:proguard.evaluation.value.IntegerValue iload(int) -> iload
    236:236:proguard.evaluation.value.LongValue lload(int) -> lload
    245:245:proguard.evaluation.value.FloatValue fload(int) -> fload
    254:254:proguard.evaluation.value.DoubleValue dload(int) -> dload
    263:263:proguard.evaluation.value.ReferenceValue aload(int) -> aload
    272:272:proguard.evaluation.value.InstructionOffsetValue oload(int) -> oload
    280:312:boolean equals(java.lang.Object) -> equals
    318:329:int hashCode() -> hashCode
    335:345:java.lang.String toString() -> toString
    36:36:void <clinit>() -> <clinit>
proguard.evaluation.value.ArrayReferenceValue -> proguard.evaluation.value.a:
    proguard.evaluation.value.IntegerValue arrayLength -> a
    44:47:void <init>(java.lang.String,proguard.classfile.Clazz,proguard.evaluation.value.IntegerValue) -> <init>
    54:54:proguard.evaluation.value.IntegerValue arrayLength(proguard.evaluation.value.ValueFactory) -> arrayLength
    62:62:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.ReferenceValue) -> generalize
    68:68:int equal(proguard.evaluation.value.ReferenceValue) -> equal
    92:92:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.ArrayReferenceValue) -> generalize
    105:110:int equal(proguard.evaluation.value.ArrayReferenceValue) -> equal
    148:148:boolean equals(java.lang.Object) -> equals
    156:156:int hashCode() -> hashCode
    163:163:java.lang.String toString() -> toString
proguard.evaluation.value.Category1Value -> proguard.evaluation.value.Category1Value:
    28:28:void <init>() -> <init>
    34:34:proguard.evaluation.value.Category1Value category1Value() -> category1Value
    39:39:boolean isCategory2() -> isCategory2
proguard.evaluation.value.Category2Value -> proguard.evaluation.value.Category2Value:
    28:28:void <init>() -> <init>
    34:34:proguard.evaluation.value.Category2Value category2Value() -> category2Value
    39:39:boolean isCategory2() -> isCategory2
proguard.evaluation.value.ComparisonValue -> proguard.evaluation.value.b:
    proguard.evaluation.value.Value value1 -> a
    proguard.evaluation.value.Value value2 -> b
    40:43:void <init>(proguard.evaluation.value.Value,proguard.evaluation.value.Value) -> <init>
    50:50:boolean equals(java.lang.Object) -> equals
    59:59:int hashCode() -> hashCode
    67:67:java.lang.String toString() -> toString
proguard.evaluation.value.CompositeDoubleValue -> proguard.evaluation.value.c:
    proguard.evaluation.value.DoubleValue doubleValue1 -> a
    byte operation -> b
    proguard.evaluation.value.DoubleValue doubleValue2 -> c
    50:54:void <init>(proguard.evaluation.value.DoubleValue,byte,proguard.evaluation.value.DoubleValue) -> <init>
    61:61:boolean equals(java.lang.Object) -> equals
    71:71:int hashCode() -> hashCode
    79:79:java.lang.String toString() -> toString
proguard.evaluation.value.CompositeFloatValue -> proguard.evaluation.value.d:
    proguard.evaluation.value.FloatValue floatValue1 -> a
    byte operation -> b
    proguard.evaluation.value.FloatValue floatValue2 -> c
    50:54:void <init>(proguard.evaluation.value.FloatValue,byte,proguard.evaluation.value.FloatValue) -> <init>
    61:61:boolean equals(java.lang.Object) -> equals
    71:71:int hashCode() -> hashCode
    79:79:java.lang.String toString() -> toString
proguard.evaluation.value.CompositeIntegerValue -> proguard.evaluation.value.e:
    proguard.evaluation.value.IntegerValue integerValue1 -> a
    byte operation -> b
    proguard.evaluation.value.IntegerValue integerValue2 -> c
    56:60:void <init>(proguard.evaluation.value.IntegerValue,byte,proguard.evaluation.value.IntegerValue) -> <init>
    67:67:boolean equals(java.lang.Object) -> equals
    77:77:int hashCode() -> hashCode
    85:85:java.lang.String toString() -> toString
proguard.evaluation.value.CompositeLongValue -> proguard.evaluation.value.f:
    proguard.evaluation.value.LongValue longValue1 -> a
    byte operation -> b
    proguard.evaluation.value.Value longValue2 -> c
    56:60:void <init>(proguard.evaluation.value.LongValue,byte,proguard.evaluation.value.Value) -> <init>
    67:67:boolean equals(java.lang.Object) -> equals
    77:77:int hashCode() -> hashCode
    85:85:java.lang.String toString() -> toString
proguard.evaluation.value.ConvertedByteValue -> proguard.evaluation.value.g:
    proguard.evaluation.value.IntegerValue value -> a
    38:40:void <init>(proguard.evaluation.value.IntegerValue) -> <init>
    47:47:boolean equals(java.lang.Object) -> equals
    55:55:int hashCode() -> hashCode
    62:62:java.lang.String toString() -> toString
proguard.evaluation.value.ConvertedCharacterValue -> proguard.evaluation.value.h:
    proguard.evaluation.value.IntegerValue value -> a
    38:40:void <init>(proguard.evaluation.value.IntegerValue) -> <init>
    47:47:boolean equals(java.lang.Object) -> equals
    55:55:int hashCode() -> hashCode
    62:62:java.lang.String toString() -> toString
proguard.evaluation.value.ConvertedDoubleValue -> proguard.evaluation.value.i:
    proguard.evaluation.value.Value value -> a
    38:40:void <init>(proguard.evaluation.value.Value) -> <init>
    47:47:boolean equals(java.lang.Object) -> equals
    55:55:int hashCode() -> hashCode
    62:62:java.lang.String toString() -> toString
proguard.evaluation.value.ConvertedFloatValue -> proguard.evaluation.value.j:
    proguard.evaluation.value.Value value -> a
    38:40:void <init>(proguard.evaluation.value.Value) -> <init>
    47:47:boolean equals(java.lang.Object) -> equals
    55:55:int hashCode() -> hashCode
    62:62:java.lang.String toString() -> toString
proguard.evaluation.value.ConvertedIntegerValue -> proguard.evaluation.value.k:
    proguard.evaluation.value.Value value -> a
    38:40:void <init>(proguard.evaluation.value.Value) -> <init>
    47:47:boolean equals(java.lang.Object) -> equals
    55:55:int hashCode() -> hashCode
    62:62:java.lang.String toString() -> toString
proguard.evaluation.value.ConvertedLongValue -> proguard.evaluation.value.l:
    proguard.evaluation.value.Value value -> a
    38:40:void <init>(proguard.evaluation.value.Value) -> <init>
    47:47:boolean equals(java.lang.Object) -> equals
    55:55:int hashCode() -> hashCode
    62:62:java.lang.String toString() -> toString
proguard.evaluation.value.ConvertedShortValue -> proguard.evaluation.value.m:
    proguard.evaluation.value.IntegerValue value -> a
    38:40:void <init>(proguard.evaluation.value.IntegerValue) -> <init>
    47:47:boolean equals(java.lang.Object) -> equals
    55:55:int hashCode() -> hashCode
    62:62:java.lang.String toString() -> toString
proguard.evaluation.value.DetailedArrayReferenceValue -> proguard.evaluation.value.n:
    proguard.evaluation.value.Value[] values -> a
    50:76:void <init>(java.lang.String,proguard.classfile.Clazz,proguard.evaluation.value.IntegerValue,proguard.evaluation.value.ValueFactory,int) -> <init>
    83:84:proguard.evaluation.value.IntegerValue integerArrayLoad(proguard.evaluation.value.IntegerValue,proguard.evaluation.value.ValueFactory) -> integerArrayLoad
    92:93:proguard.evaluation.value.LongValue longArrayLoad(proguard.evaluation.value.IntegerValue,proguard.evaluation.value.ValueFactory) -> longArrayLoad
    101:102:proguard.evaluation.value.FloatValue floatArrayLoad(proguard.evaluation.value.IntegerValue,proguard.evaluation.value.ValueFactory) -> floatArrayLoad
    110:111:proguard.evaluation.value.DoubleValue doubleArrayLoad(proguard.evaluation.value.IntegerValue,proguard.evaluation.value.ValueFactory) -> doubleArrayLoad
    119:120:proguard.evaluation.value.ReferenceValue referenceArrayLoad(proguard.evaluation.value.IntegerValue,proguard.evaluation.value.ValueFactory) -> referenceArrayLoad
    132:143:proguard.evaluation.value.Value arrayLoad$6daec3f3(proguard.evaluation.value.IntegerValue) -> a
    149:168:void arrayStore(proguard.evaluation.value.IntegerValue,proguard.evaluation.value.Value) -> arrayStore
    175:175:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.ReferenceValue) -> generalize
    181:181:int equal(proguard.evaluation.value.ReferenceValue) -> equal
    249:262:boolean isParticular() -> isParticular
    270:270:boolean equals(java.lang.Object) -> equals
    278:278:int hashCode() -> hashCode
    285:299:java.lang.String toString() -> toString
proguard.evaluation.value.DetailedValueFactory -> proguard.evaluation.value.DetailedValueFactory:
    31:31:void <init>() -> <init>
    40:40:proguard.evaluation.value.ReferenceValue createArrayReferenceValue(java.lang.String,proguard.classfile.Clazz,proguard.evaluation.value.IntegerValue) -> createArrayReferenceValue
proguard.evaluation.value.DoubleValue -> proguard.evaluation.value.DoubleValue:
    30:30:void <init>() -> <init>
    37:37:double value() -> value
    proguard.evaluation.value.DoubleValue negate() -> negate
    proguard.evaluation.value.IntegerValue convertToInteger() -> convertToInteger
    proguard.evaluation.value.LongValue convertToLong() -> convertToLong
    proguard.evaluation.value.FloatValue convertToFloat() -> convertToFloat
    proguard.evaluation.value.DoubleValue generalize(proguard.evaluation.value.DoubleValue) -> generalize
    proguard.evaluation.value.DoubleValue add(proguard.evaluation.value.DoubleValue) -> add
    proguard.evaluation.value.DoubleValue subtract(proguard.evaluation.value.DoubleValue) -> subtract
    proguard.evaluation.value.DoubleValue subtractFrom(proguard.evaluation.value.DoubleValue) -> subtractFrom
    proguard.evaluation.value.DoubleValue multiply(proguard.evaluation.value.DoubleValue) -> multiply
    proguard.evaluation.value.DoubleValue divide(proguard.evaluation.value.DoubleValue) -> divide
    proguard.evaluation.value.DoubleValue divideOf(proguard.evaluation.value.DoubleValue) -> divideOf
    proguard.evaluation.value.DoubleValue remainder(proguard.evaluation.value.DoubleValue) -> remainder
    proguard.evaluation.value.DoubleValue remainderOf(proguard.evaluation.value.DoubleValue) -> remainderOf
    proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.DoubleValue) -> compare
    128:128:proguard.evaluation.value.IntegerValue compareReverse(proguard.evaluation.value.DoubleValue) -> compareReverse
    140:140:proguard.evaluation.value.DoubleValue generalize(proguard.evaluation.value.SpecificDoubleValue) -> generalize
    149:149:proguard.evaluation.value.DoubleValue add(proguard.evaluation.value.SpecificDoubleValue) -> add
    157:157:proguard.evaluation.value.DoubleValue subtract(proguard.evaluation.value.SpecificDoubleValue) -> subtract
    165:165:proguard.evaluation.value.DoubleValue subtractFrom(proguard.evaluation.value.SpecificDoubleValue) -> subtractFrom
    173:173:proguard.evaluation.value.DoubleValue multiply(proguard.evaluation.value.SpecificDoubleValue) -> multiply
    181:181:proguard.evaluation.value.DoubleValue divide(proguard.evaluation.value.SpecificDoubleValue) -> divide
    190:190:proguard.evaluation.value.DoubleValue divideOf(proguard.evaluation.value.SpecificDoubleValue) -> divideOf
    199:199:proguard.evaluation.value.DoubleValue remainder(proguard.evaluation.value.SpecificDoubleValue) -> remainder
    208:208:proguard.evaluation.value.DoubleValue remainderOf(proguard.evaluation.value.SpecificDoubleValue) -> remainderOf
    218:218:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.SpecificDoubleValue) -> compare
    231:231:proguard.evaluation.value.IntegerValue compareReverse(proguard.evaluation.value.SpecificDoubleValue) -> compareReverse
    243:243:proguard.evaluation.value.DoubleValue generalize(proguard.evaluation.value.ParticularDoubleValue) -> generalize
    252:252:proguard.evaluation.value.DoubleValue add(proguard.evaluation.value.ParticularDoubleValue) -> add
    260:260:proguard.evaluation.value.DoubleValue subtract(proguard.evaluation.value.ParticularDoubleValue) -> subtract
    268:268:proguard.evaluation.value.DoubleValue subtractFrom(proguard.evaluation.value.ParticularDoubleValue) -> subtractFrom
    276:276:proguard.evaluation.value.DoubleValue multiply(proguard.evaluation.value.ParticularDoubleValue) -> multiply
    284:284:proguard.evaluation.value.DoubleValue divide(proguard.evaluation.value.ParticularDoubleValue) -> divide
    293:293:proguard.evaluation.value.DoubleValue divideOf(proguard.evaluation.value.ParticularDoubleValue) -> divideOf
    302:302:proguard.evaluation.value.DoubleValue remainder(proguard.evaluation.value.ParticularDoubleValue) -> remainder
    311:311:proguard.evaluation.value.DoubleValue remainderOf(proguard.evaluation.value.ParticularDoubleValue) -> remainderOf
    321:321:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.ParticularDoubleValue) -> compare
    334:334:proguard.evaluation.value.IntegerValue compareReverse(proguard.evaluation.value.ParticularDoubleValue) -> compareReverse
    342:342:proguard.evaluation.value.DoubleValue doubleValue() -> doubleValue
    347:347:proguard.evaluation.value.Value generalize(proguard.evaluation.value.Value) -> generalize
    352:352:int computationalType() -> computationalType
    357:357:java.lang.String internalType() -> internalType
proguard.evaluation.value.FloatValue -> proguard.evaluation.value.FloatValue:
    30:30:void <init>() -> <init>
    37:37:float value() -> value
    proguard.evaluation.value.FloatValue negate() -> negate
    proguard.evaluation.value.IntegerValue convertToInteger() -> convertToInteger
    proguard.evaluation.value.LongValue convertToLong() -> convertToLong
    proguard.evaluation.value.DoubleValue convertToDouble() -> convertToDouble
    proguard.evaluation.value.FloatValue generalize(proguard.evaluation.value.FloatValue) -> generalize
    proguard.evaluation.value.FloatValue add(proguard.evaluation.value.FloatValue) -> add
    proguard.evaluation.value.FloatValue subtract(proguard.evaluation.value.FloatValue) -> subtract
    proguard.evaluation.value.FloatValue subtractFrom(proguard.evaluation.value.FloatValue) -> subtractFrom
    proguard.evaluation.value.FloatValue multiply(proguard.evaluation.value.FloatValue) -> multiply
    proguard.evaluation.value.FloatValue divide(proguard.evaluation.value.FloatValue) -> divide
    proguard.evaluation.value.FloatValue divideOf(proguard.evaluation.value.FloatValue) -> divideOf
    proguard.evaluation.value.FloatValue remainder(proguard.evaluation.value.FloatValue) -> remainder
    proguard.evaluation.value.FloatValue remainderOf(proguard.evaluation.value.FloatValue) -> remainderOf
    proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.FloatValue) -> compare
    128:128:proguard.evaluation.value.IntegerValue compareReverse(proguard.evaluation.value.FloatValue) -> compareReverse
    140:140:proguard.evaluation.value.FloatValue generalize(proguard.evaluation.value.SpecificFloatValue) -> generalize
    149:149:proguard.evaluation.value.FloatValue add(proguard.evaluation.value.SpecificFloatValue) -> add
    157:157:proguard.evaluation.value.FloatValue subtract(proguard.evaluation.value.SpecificFloatValue) -> subtract
    165:165:proguard.evaluation.value.FloatValue subtractFrom(proguard.evaluation.value.SpecificFloatValue) -> subtractFrom
    173:173:proguard.evaluation.value.FloatValue multiply(proguard.evaluation.value.SpecificFloatValue) -> multiply
    181:181:proguard.evaluation.value.FloatValue divide(proguard.evaluation.value.SpecificFloatValue) -> divide
    190:190:proguard.evaluation.value.FloatValue divideOf(proguard.evaluation.value.SpecificFloatValue) -> divideOf
    199:199:proguard.evaluation.value.FloatValue remainder(proguard.evaluation.value.SpecificFloatValue) -> remainder
    208:208:proguard.evaluation.value.FloatValue remainderOf(proguard.evaluation.value.SpecificFloatValue) -> remainderOf
    218:218:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.SpecificFloatValue) -> compare
    231:231:proguard.evaluation.value.IntegerValue compareReverse(proguard.evaluation.value.SpecificFloatValue) -> compareReverse
    243:243:proguard.evaluation.value.FloatValue generalize(proguard.evaluation.value.ParticularFloatValue) -> generalize
    252:252:proguard.evaluation.value.FloatValue add(proguard.evaluation.value.ParticularFloatValue) -> add
    260:260:proguard.evaluation.value.FloatValue subtract(proguard.evaluation.value.ParticularFloatValue) -> subtract
    268:268:proguard.evaluation.value.FloatValue subtractFrom(proguard.evaluation.value.ParticularFloatValue) -> subtractFrom
    276:276:proguard.evaluation.value.FloatValue multiply(proguard.evaluation.value.ParticularFloatValue) -> multiply
    284:284:proguard.evaluation.value.FloatValue divide(proguard.evaluation.value.ParticularFloatValue) -> divide
    293:293:proguard.evaluation.value.FloatValue divideOf(proguard.evaluation.value.ParticularFloatValue) -> divideOf
    302:302:proguard.evaluation.value.FloatValue remainder(proguard.evaluation.value.ParticularFloatValue) -> remainder
    311:311:proguard.evaluation.value.FloatValue remainderOf(proguard.evaluation.value.ParticularFloatValue) -> remainderOf
    321:321:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.ParticularFloatValue) -> compare
    334:334:proguard.evaluation.value.IntegerValue compareReverse(proguard.evaluation.value.ParticularFloatValue) -> compareReverse
    342:342:proguard.evaluation.value.FloatValue floatValue() -> floatValue
    347:347:proguard.evaluation.value.Value generalize(proguard.evaluation.value.Value) -> generalize
    352:352:int computationalType() -> computationalType
    357:357:java.lang.String internalType() -> internalType
proguard.evaluation.value.IdentifiedArrayReferenceValue -> proguard.evaluation.value.o:
    proguard.evaluation.value.ValueFactory valuefactory -> a
    int id -> b
    46:50:void <init>(java.lang.String,proguard.classfile.Clazz,proguard.evaluation.value.IntegerValue,proguard.evaluation.value.ValueFactory,int) -> <init>
    57:57:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.ReferenceValue) -> generalize
    63:63:int equal(proguard.evaluation.value.ReferenceValue) -> equal
    108:108:int equal(proguard.evaluation.value.IdentifiedArrayReferenceValue) -> equal
    132:132:boolean isSpecific() -> isSpecific
    140:140:boolean equals(java.lang.Object) -> equals
    149:149:int hashCode() -> hashCode
    157:157:java.lang.String toString() -> toString
proguard.evaluation.value.IdentifiedDoubleValue -> proguard.evaluation.value.p:
    proguard.evaluation.value.ValueFactory valuefactory -> a
    int id -> b
    38:41:void <init>(proguard.evaluation.value.ValueFactory,int) -> <init>
    48:48:boolean equals(java.lang.Object) -> equals
    57:57:int hashCode() -> hashCode
    65:65:java.lang.String toString() -> toString
proguard.evaluation.value.IdentifiedFloatValue -> proguard.evaluation.value.q:
    proguard.evaluation.value.ValueFactory valuefactory -> a
    int id -> b
    38:41:void <init>(proguard.evaluation.value.ValueFactory,int) -> <init>
    48:48:boolean equals(java.lang.Object) -> equals
    57:57:int hashCode() -> hashCode
    65:65:java.lang.String toString() -> toString
proguard.evaluation.value.IdentifiedIntegerValue -> proguard.evaluation.value.r:
    proguard.evaluation.value.ValueFactory valuefactory -> a
    int id -> b
    38:41:void <init>(proguard.evaluation.value.ValueFactory,int) -> <init>
    48:48:boolean equals(java.lang.Object) -> equals
    57:57:int hashCode() -> hashCode
    65:65:java.lang.String toString() -> toString
proguard.evaluation.value.IdentifiedLongValue -> proguard.evaluation.value.s:
    proguard.evaluation.value.ValueFactory valuefactory -> a
    int id -> b
    38:41:void <init>(proguard.evaluation.value.ValueFactory,int) -> <init>
    48:48:boolean equals(java.lang.Object) -> equals
    57:57:int hashCode() -> hashCode
    65:65:java.lang.String toString() -> toString
proguard.evaluation.value.IdentifiedReferenceValue -> proguard.evaluation.value.t:
    proguard.evaluation.value.ValueFactory valuefactory -> a
    int id -> b
    46:50:void <init>(java.lang.String,proguard.classfile.Clazz,boolean,proguard.evaluation.value.ValueFactory,int) -> <init>
    57:57:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.ReferenceValue) -> generalize
    63:63:int equal(proguard.evaluation.value.ReferenceValue) -> equal
    78:78:int equal(proguard.evaluation.value.IdentifiedReferenceValue) -> equal
    132:132:boolean isSpecific() -> isSpecific
    140:140:boolean equals(java.lang.Object) -> equals
    149:149:int hashCode() -> hashCode
    157:157:java.lang.String toString() -> toString
proguard.evaluation.value.IdentifiedValueFactory -> proguard.evaluation.value.IdentifiedValueFactory:
    int integerID -> integerID
    int longID -> longID
    int floatID -> floatID
    int doubleID -> doubleID
    int referenceID -> referenceID
    30:30:void <init>() -> <init>
    44:44:proguard.evaluation.value.IntegerValue createIntegerValue() -> createIntegerValue
    50:50:proguard.evaluation.value.LongValue createLongValue() -> createLongValue
    56:56:proguard.evaluation.value.FloatValue createFloatValue() -> createFloatValue
    62:62:proguard.evaluation.value.DoubleValue createDoubleValue() -> createDoubleValue
    70:70:proguard.evaluation.value.ReferenceValue createReferenceValue(java.lang.String,proguard.classfile.Clazz,boolean) -> createReferenceValue
    84:84:proguard.evaluation.value.ReferenceValue createArrayReferenceValue(java.lang.String,proguard.classfile.Clazz,proguard.evaluation.value.IntegerValue) -> createArrayReferenceValue
proguard.evaluation.value.InitialValueFactory -> proguard.evaluation.value.InitialValueFactory:
    proguard.evaluation.value.ValueFactory valueFactory -> a
    43:45:void <init>(proguard.evaluation.value.ValueFactory) -> <init>
    53:76:proguard.evaluation.value.Value createValue(java.lang.String) -> createValue
proguard.evaluation.value.InstructionOffsetValue -> proguard.evaluation.value.InstructionOffsetValue:
    proguard.evaluation.value.InstructionOffsetValue EMPTY_VALUE -> EMPTY_VALUE
    int[] values -> a
    40:41:void <init>() -> <init>
    45:47:void <init>(int) -> <init>
    51:53:void <init>(int[]) -> <init>
    58:58:int instructionOffsetCount() -> instructionOffsetCount
    64:64:int instructionOffset(int) -> instructionOffset
    74:85:boolean contains(int) -> contains
    95:110:int minimumValue() -> minimumValue
    120:135:int maximumValue() -> maximumValue
    147:214:proguard.evaluation.value.Value generalize(proguard.evaluation.value.InstructionOffsetValue) -> generalize
    222:222:proguard.evaluation.value.InstructionOffsetValue instructionOffsetValue() -> instructionOffsetValue
    227:227:boolean isSpecific() -> isSpecific
    232:232:boolean isParticular() -> isParticular
    237:237:proguard.evaluation.value.Value generalize(proguard.evaluation.value.Value) -> generalize
    242:242:int computationalType() -> computationalType
    247:247:java.lang.String internalType() -> internalType
    255:282:boolean equals(java.lang.Object) -> equals
    288:298:int hashCode() -> hashCode
    304:318:java.lang.String toString() -> toString
    33:33:void <clinit>() -> <clinit>
proguard.evaluation.value.IntegerValue -> proguard.evaluation.value.IntegerValue:
    30:30:void <init>() -> <init>
    37:37:int value() -> value
    proguard.evaluation.value.IntegerValue negate() -> negate
    proguard.evaluation.value.IntegerValue convertToByte() -> convertToByte
    proguard.evaluation.value.IntegerValue convertToCharacter() -> convertToCharacter
    proguard.evaluation.value.IntegerValue convertToShort() -> convertToShort
    proguard.evaluation.value.LongValue convertToLong() -> convertToLong
    proguard.evaluation.value.FloatValue convertToFloat() -> convertToFloat
    proguard.evaluation.value.DoubleValue convertToDouble() -> convertToDouble
    proguard.evaluation.value.IntegerValue generalize(proguard.evaluation.value.IntegerValue) -> generalize
    proguard.evaluation.value.IntegerValue add(proguard.evaluation.value.IntegerValue) -> add
    proguard.evaluation.value.IntegerValue subtract(proguard.evaluation.value.IntegerValue) -> subtract
    proguard.evaluation.value.IntegerValue subtractFrom(proguard.evaluation.value.IntegerValue) -> subtractFrom
    proguard.evaluation.value.IntegerValue multiply(proguard.evaluation.value.IntegerValue) -> multiply
    proguard.evaluation.value.IntegerValue divide(proguard.evaluation.value.IntegerValue) -> divide
    proguard.evaluation.value.IntegerValue divideOf(proguard.evaluation.value.IntegerValue) -> divideOf
    proguard.evaluation.value.IntegerValue remainder(proguard.evaluation.value.IntegerValue) -> remainder
    proguard.evaluation.value.IntegerValue remainderOf(proguard.evaluation.value.IntegerValue) -> remainderOf
    proguard.evaluation.value.IntegerValue shiftLeft(proguard.evaluation.value.IntegerValue) -> shiftLeft
    proguard.evaluation.value.IntegerValue shiftRight(proguard.evaluation.value.IntegerValue) -> shiftRight
    proguard.evaluation.value.IntegerValue unsignedShiftRight(proguard.evaluation.value.IntegerValue) -> unsignedShiftRight
    proguard.evaluation.value.IntegerValue shiftLeftOf(proguard.evaluation.value.IntegerValue) -> shiftLeftOf
    proguard.evaluation.value.IntegerValue shiftRightOf(proguard.evaluation.value.IntegerValue) -> shiftRightOf
    proguard.evaluation.value.IntegerValue unsignedShiftRightOf(proguard.evaluation.value.IntegerValue) -> unsignedShiftRightOf
    proguard.evaluation.value.LongValue shiftLeftOf(proguard.evaluation.value.LongValue) -> shiftLeftOf
    proguard.evaluation.value.LongValue shiftRightOf(proguard.evaluation.value.LongValue) -> shiftRightOf
    proguard.evaluation.value.LongValue unsignedShiftRightOf(proguard.evaluation.value.LongValue) -> unsignedShiftRightOf
    proguard.evaluation.value.IntegerValue and(proguard.evaluation.value.IntegerValue) -> and
    proguard.evaluation.value.IntegerValue or(proguard.evaluation.value.IntegerValue) -> or
    proguard.evaluation.value.IntegerValue xor(proguard.evaluation.value.IntegerValue) -> xor
    int equal(proguard.evaluation.value.IntegerValue) -> equal
    int lessThan(proguard.evaluation.value.IntegerValue) -> lessThan
    int lessThanOrEqual(proguard.evaluation.value.IntegerValue) -> lessThanOrEqual
    227:227:int notEqual(proguard.evaluation.value.IntegerValue) -> notEqual
    236:236:int greaterThan(proguard.evaluation.value.IntegerValue) -> greaterThan
    245:245:int greaterThanOrEqual(proguard.evaluation.value.IntegerValue) -> greaterThanOrEqual
    257:257:proguard.evaluation.value.IntegerValue generalize(proguard.evaluation.value.UnknownIntegerValue) -> generalize
    266:266:proguard.evaluation.value.IntegerValue add(proguard.evaluation.value.UnknownIntegerValue) -> add
    274:274:proguard.evaluation.value.IntegerValue subtract(proguard.evaluation.value.UnknownIntegerValue) -> subtract
    282:282:proguard.evaluation.value.IntegerValue subtractFrom(proguard.evaluation.value.UnknownIntegerValue) -> subtractFrom
    290:290:proguard.evaluation.value.IntegerValue multiply(proguard.evaluation.value.UnknownIntegerValue) -> multiply
    299:299:proguard.evaluation.value.IntegerValue divide(proguard.evaluation.value.UnknownIntegerValue) -> divide
    308:308:proguard.evaluation.value.IntegerValue divideOf(proguard.evaluation.value.UnknownIntegerValue) -> divideOf
    317:317:proguard.evaluation.value.IntegerValue remainder(proguard.evaluation.value.UnknownIntegerValue) -> remainder
    326:326:proguard.evaluation.value.IntegerValue remainderOf(proguard.evaluation.value.UnknownIntegerValue) -> remainderOf
    334:334:proguard.evaluation.value.IntegerValue shiftLeft(proguard.evaluation.value.UnknownIntegerValue) -> shiftLeft
    342:342:proguard.evaluation.value.IntegerValue shiftRight(proguard.evaluation.value.UnknownIntegerValue) -> shiftRight
    351:351:proguard.evaluation.value.IntegerValue unsignedShiftRight(proguard.evaluation.value.UnknownIntegerValue) -> unsignedShiftRight
    359:359:proguard.evaluation.value.IntegerValue shiftLeftOf(proguard.evaluation.value.UnknownIntegerValue) -> shiftLeftOf
    367:367:proguard.evaluation.value.IntegerValue shiftRightOf(proguard.evaluation.value.UnknownIntegerValue) -> shiftRightOf
    376:376:proguard.evaluation.value.IntegerValue unsignedShiftRightOf(proguard.evaluation.value.UnknownIntegerValue) -> unsignedShiftRightOf
    384:384:proguard.evaluation.value.LongValue shiftLeftOf(proguard.evaluation.value.UnknownLongValue) -> shiftLeftOf
    392:392:proguard.evaluation.value.LongValue shiftRightOf(proguard.evaluation.value.UnknownLongValue) -> shiftRightOf
    401:401:proguard.evaluation.value.LongValue unsignedShiftRightOf(proguard.evaluation.value.UnknownLongValue) -> unsignedShiftRightOf
    410:410:proguard.evaluation.value.IntegerValue and(proguard.evaluation.value.UnknownIntegerValue) -> and
    419:419:proguard.evaluation.value.IntegerValue or(proguard.evaluation.value.UnknownIntegerValue) -> or
    428:428:proguard.evaluation.value.IntegerValue xor(proguard.evaluation.value.UnknownIntegerValue) -> xor
    437:437:int equal(proguard.evaluation.value.UnknownIntegerValue) -> equal
    447:447:int lessThan(proguard.evaluation.value.UnknownIntegerValue) -> lessThan
    457:457:int lessThanOrEqual(proguard.evaluation.value.UnknownIntegerValue) -> lessThanOrEqual
    469:469:int notEqual(proguard.evaluation.value.UnknownIntegerValue) -> notEqual
    479:479:int greaterThan(proguard.evaluation.value.UnknownIntegerValue) -> greaterThan
    489:489:int greaterThanOrEqual(proguard.evaluation.value.UnknownIntegerValue) -> greaterThanOrEqual
    501:501:proguard.evaluation.value.IntegerValue generalize(proguard.evaluation.value.SpecificIntegerValue) -> generalize
    510:510:proguard.evaluation.value.IntegerValue add(proguard.evaluation.value.SpecificIntegerValue) -> add
    518:518:proguard.evaluation.value.IntegerValue subtract(proguard.evaluation.value.SpecificIntegerValue) -> subtract
    526:526:proguard.evaluation.value.IntegerValue subtractFrom(proguard.evaluation.value.SpecificIntegerValue) -> subtractFrom
    534:534:proguard.evaluation.value.IntegerValue multiply(proguard.evaluation.value.SpecificIntegerValue) -> multiply
    543:543:proguard.evaluation.value.IntegerValue divide(proguard.evaluation.value.SpecificIntegerValue) -> divide
    552:552:proguard.evaluation.value.IntegerValue divideOf(proguard.evaluation.value.SpecificIntegerValue) -> divideOf
    561:561:proguard.evaluation.value.IntegerValue remainder(proguard.evaluation.value.SpecificIntegerValue) -> remainder
    570:570:proguard.evaluation.value.IntegerValue remainderOf(proguard.evaluation.value.SpecificIntegerValue) -> remainderOf
    578:578:proguard.evaluation.value.IntegerValue shiftLeft(proguard.evaluation.value.SpecificIntegerValue) -> shiftLeft
    586:586:proguard.evaluation.value.IntegerValue shiftRight(proguard.evaluation.value.SpecificIntegerValue) -> shiftRight
    595:595:proguard.evaluation.value.IntegerValue unsignedShiftRight(proguard.evaluation.value.SpecificIntegerValue) -> unsignedShiftRight
    603:603:proguard.evaluation.value.IntegerValue shiftLeftOf(proguard.evaluation.value.SpecificIntegerValue) -> shiftLeftOf
    611:611:proguard.evaluation.value.IntegerValue shiftRightOf(proguard.evaluation.value.SpecificIntegerValue) -> shiftRightOf
    620:620:proguard.evaluation.value.IntegerValue unsignedShiftRightOf(proguard.evaluation.value.SpecificIntegerValue) -> unsignedShiftRightOf
    628:628:proguard.evaluation.value.LongValue shiftLeftOf(proguard.evaluation.value.SpecificLongValue) -> shiftLeftOf
    636:636:proguard.evaluation.value.LongValue shiftRightOf(proguard.evaluation.value.SpecificLongValue) -> shiftRightOf
    645:645:proguard.evaluation.value.LongValue unsignedShiftRightOf(proguard.evaluation.value.SpecificLongValue) -> unsignedShiftRightOf
    654:654:proguard.evaluation.value.IntegerValue and(proguard.evaluation.value.SpecificIntegerValue) -> and
    663:663:proguard.evaluation.value.IntegerValue or(proguard.evaluation.value.SpecificIntegerValue) -> or
    672:672:proguard.evaluation.value.IntegerValue xor(proguard.evaluation.value.SpecificIntegerValue) -> xor
    681:681:int equal(proguard.evaluation.value.SpecificIntegerValue) -> equal
    691:691:int lessThan(proguard.evaluation.value.SpecificIntegerValue) -> lessThan
    701:701:int lessThanOrEqual(proguard.evaluation.value.SpecificIntegerValue) -> lessThanOrEqual
    713:713:int notEqual(proguard.evaluation.value.SpecificIntegerValue) -> notEqual
    723:723:int greaterThan(proguard.evaluation.value.SpecificIntegerValue) -> greaterThan
    733:733:int greaterThanOrEqual(proguard.evaluation.value.SpecificIntegerValue) -> greaterThanOrEqual
    745:745:proguard.evaluation.value.IntegerValue generalize(proguard.evaluation.value.ParticularIntegerValue) -> generalize
    754:754:proguard.evaluation.value.IntegerValue add(proguard.evaluation.value.ParticularIntegerValue) -> add
    762:762:proguard.evaluation.value.IntegerValue subtract(proguard.evaluation.value.ParticularIntegerValue) -> subtract
    770:770:proguard.evaluation.value.IntegerValue subtractFrom(proguard.evaluation.value.ParticularIntegerValue) -> subtractFrom
    778:778:proguard.evaluation.value.IntegerValue multiply(proguard.evaluation.value.ParticularIntegerValue) -> multiply
    787:787:proguard.evaluation.value.IntegerValue divide(proguard.evaluation.value.ParticularIntegerValue) -> divide
    796:796:proguard.evaluation.value.IntegerValue divideOf(proguard.evaluation.value.ParticularIntegerValue) -> divideOf
    805:805:proguard.evaluation.value.IntegerValue remainder(proguard.evaluation.value.ParticularIntegerValue) -> remainder
    814:814:proguard.evaluation.value.IntegerValue remainderOf(proguard.evaluation.value.ParticularIntegerValue) -> remainderOf
    822:822:proguard.evaluation.value.IntegerValue shiftLeft(proguard.evaluation.value.ParticularIntegerValue) -> shiftLeft
    830:830:proguard.evaluation.value.IntegerValue shiftRight(proguard.evaluation.value.ParticularIntegerValue) -> shiftRight
    839:839:proguard.evaluation.value.IntegerValue unsignedShiftRight(proguard.evaluation.value.ParticularIntegerValue) -> unsignedShiftRight
    847:847:proguard.evaluation.value.IntegerValue shiftLeftOf(proguard.evaluation.value.ParticularIntegerValue) -> shiftLeftOf
    855:855:proguard.evaluation.value.IntegerValue shiftRightOf(proguard.evaluation.value.ParticularIntegerValue) -> shiftRightOf
    864:864:proguard.evaluation.value.IntegerValue unsignedShiftRightOf(proguard.evaluation.value.ParticularIntegerValue) -> unsignedShiftRightOf
    872:872:proguard.evaluation.value.LongValue shiftLeftOf(proguard.evaluation.value.ParticularLongValue) -> shiftLeftOf
    880:880:proguard.evaluation.value.LongValue shiftRightOf(proguard.evaluation.value.ParticularLongValue) -> shiftRightOf
    889:889:proguard.evaluation.value.LongValue unsignedShiftRightOf(proguard.evaluation.value.ParticularLongValue) -> unsignedShiftRightOf
    898:898:proguard.evaluation.value.IntegerValue and(proguard.evaluation.value.ParticularIntegerValue) -> and
    907:907:proguard.evaluation.value.IntegerValue or(proguard.evaluation.value.ParticularIntegerValue) -> or
    916:916:proguard.evaluation.value.IntegerValue xor(proguard.evaluation.value.ParticularIntegerValue) -> xor
    925:925:int equal(proguard.evaluation.value.ParticularIntegerValue) -> equal
    935:935:int lessThan(proguard.evaluation.value.ParticularIntegerValue) -> lessThan
    945:945:int lessThanOrEqual(proguard.evaluation.value.ParticularIntegerValue) -> lessThanOrEqual
    957:957:int notEqual(proguard.evaluation.value.ParticularIntegerValue) -> notEqual
    967:967:int greaterThan(proguard.evaluation.value.ParticularIntegerValue) -> greaterThan
    977:977:int greaterThanOrEqual(proguard.evaluation.value.ParticularIntegerValue) -> greaterThanOrEqual
    985:985:proguard.evaluation.value.IntegerValue integerValue() -> integerValue
    990:990:proguard.evaluation.value.Value generalize(proguard.evaluation.value.Value) -> generalize
    995:995:int computationalType() -> computationalType
    1000:1000:java.lang.String internalType() -> internalType
proguard.evaluation.value.LongValue -> proguard.evaluation.value.LongValue:
    30:30:void <init>() -> <init>
    37:37:long value() -> value
    proguard.evaluation.value.LongValue negate() -> negate
    proguard.evaluation.value.IntegerValue convertToInteger() -> convertToInteger
    proguard.evaluation.value.FloatValue convertToFloat() -> convertToFloat
    proguard.evaluation.value.DoubleValue convertToDouble() -> convertToDouble
    73:73:proguard.evaluation.value.LongValue generalize(proguard.evaluation.value.LongValue) -> generalize
    81:81:proguard.evaluation.value.LongValue add(proguard.evaluation.value.LongValue) -> add
    89:89:proguard.evaluation.value.LongValue subtract(proguard.evaluation.value.LongValue) -> subtract
    97:97:proguard.evaluation.value.LongValue subtractFrom(proguard.evaluation.value.LongValue) -> subtractFrom
    106:106:proguard.evaluation.value.LongValue multiply(proguard.evaluation.value.LongValue) -> multiply
    115:115:proguard.evaluation.value.LongValue divide(proguard.evaluation.value.LongValue) -> divide
    124:124:proguard.evaluation.value.LongValue divideOf(proguard.evaluation.value.LongValue) -> divideOf
    134:134:proguard.evaluation.value.LongValue remainder(proguard.evaluation.value.LongValue) -> remainder
    144:144:proguard.evaluation.value.LongValue remainderOf(proguard.evaluation.value.LongValue) -> remainderOf
    152:152:proguard.evaluation.value.LongValue shiftLeft(proguard.evaluation.value.IntegerValue) -> shiftLeft
    160:160:proguard.evaluation.value.LongValue shiftRight(proguard.evaluation.value.IntegerValue) -> shiftRight
    169:169:proguard.evaluation.value.LongValue unsignedShiftRight(proguard.evaluation.value.IntegerValue) -> unsignedShiftRight
    178:178:proguard.evaluation.value.LongValue and(proguard.evaluation.value.LongValue) -> and
    187:187:proguard.evaluation.value.LongValue or(proguard.evaluation.value.LongValue) -> or
    196:196:proguard.evaluation.value.LongValue xor(proguard.evaluation.value.LongValue) -> xor
    205:205:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.LongValue) -> compare
    217:217:proguard.evaluation.value.IntegerValue compareReverse(proguard.evaluation.value.LongValue) -> compareReverse
    229:229:proguard.evaluation.value.LongValue generalize(proguard.evaluation.value.SpecificLongValue) -> generalize
    238:238:proguard.evaluation.value.LongValue add(proguard.evaluation.value.SpecificLongValue) -> add
    246:246:proguard.evaluation.value.LongValue subtract(proguard.evaluation.value.SpecificLongValue) -> subtract
    254:254:proguard.evaluation.value.LongValue subtractFrom(proguard.evaluation.value.SpecificLongValue) -> subtractFrom
    262:262:proguard.evaluation.value.LongValue multiply(proguard.evaluation.value.SpecificLongValue) -> multiply
    271:271:proguard.evaluation.value.LongValue divide(proguard.evaluation.value.SpecificLongValue) -> divide
    280:280:proguard.evaluation.value.LongValue divideOf(proguard.evaluation.value.SpecificLongValue) -> divideOf
    289:289:proguard.evaluation.value.LongValue remainder(proguard.evaluation.value.SpecificLongValue) -> remainder
    298:298:proguard.evaluation.value.LongValue remainderOf(proguard.evaluation.value.SpecificLongValue) -> remainderOf
    306:306:proguard.evaluation.value.LongValue shiftLeft(proguard.evaluation.value.SpecificLongValue) -> shiftLeft
    314:314:proguard.evaluation.value.LongValue shiftRight(proguard.evaluation.value.SpecificLongValue) -> shiftRight
    323:323:proguard.evaluation.value.LongValue unsignedShiftRight(proguard.evaluation.value.SpecificLongValue) -> unsignedShiftRight
    332:332:proguard.evaluation.value.LongValue and(proguard.evaluation.value.SpecificLongValue) -> and
    341:341:proguard.evaluation.value.LongValue or(proguard.evaluation.value.SpecificLongValue) -> or
    350:350:proguard.evaluation.value.LongValue xor(proguard.evaluation.value.SpecificLongValue) -> xor
    360:360:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.SpecificLongValue) -> compare
    373:373:proguard.evaluation.value.IntegerValue compareReverse(proguard.evaluation.value.SpecificLongValue) -> compareReverse
    385:385:proguard.evaluation.value.LongValue generalize(proguard.evaluation.value.ParticularLongValue) -> generalize
    394:394:proguard.evaluation.value.LongValue add(proguard.evaluation.value.ParticularLongValue) -> add
    402:402:proguard.evaluation.value.LongValue subtract(proguard.evaluation.value.ParticularLongValue) -> subtract
    410:410:proguard.evaluation.value.LongValue subtractFrom(proguard.evaluation.value.ParticularLongValue) -> subtractFrom
    418:418:proguard.evaluation.value.LongValue multiply(proguard.evaluation.value.ParticularLongValue) -> multiply
    427:427:proguard.evaluation.value.LongValue divide(proguard.evaluation.value.ParticularLongValue) -> divide
    436:436:proguard.evaluation.value.LongValue divideOf(proguard.evaluation.value.ParticularLongValue) -> divideOf
    445:445:proguard.evaluation.value.LongValue remainder(proguard.evaluation.value.ParticularLongValue) -> remainder
    454:454:proguard.evaluation.value.LongValue remainderOf(proguard.evaluation.value.ParticularLongValue) -> remainderOf
    462:462:proguard.evaluation.value.LongValue shiftLeft(proguard.evaluation.value.ParticularIntegerValue) -> shiftLeft
    470:470:proguard.evaluation.value.LongValue shiftRight(proguard.evaluation.value.ParticularIntegerValue) -> shiftRight
    479:479:proguard.evaluation.value.LongValue unsignedShiftRight(proguard.evaluation.value.ParticularIntegerValue) -> unsignedShiftRight
    488:488:proguard.evaluation.value.LongValue and(proguard.evaluation.value.ParticularLongValue) -> and
    497:497:proguard.evaluation.value.LongValue or(proguard.evaluation.value.ParticularLongValue) -> or
    506:506:proguard.evaluation.value.LongValue xor(proguard.evaluation.value.ParticularLongValue) -> xor
    516:516:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.ParticularLongValue) -> compare
    529:529:proguard.evaluation.value.IntegerValue compareReverse(proguard.evaluation.value.ParticularLongValue) -> compareReverse
    537:537:proguard.evaluation.value.LongValue longValue() -> longValue
    542:542:proguard.evaluation.value.Value generalize(proguard.evaluation.value.Value) -> generalize
    547:547:int computationalType() -> computationalType
    552:552:java.lang.String internalType() -> internalType
proguard.evaluation.value.NegatedDoubleValue -> proguard.evaluation.value.u:
    proguard.evaluation.value.DoubleValue doubleValue -> a
    37:39:void <init>(proguard.evaluation.value.DoubleValue) -> <init>
    46:46:proguard.evaluation.value.DoubleValue negate() -> negate
    54:54:boolean equals(java.lang.Object) -> equals
    62:62:int hashCode() -> hashCode
    69:69:java.lang.String toString() -> toString
proguard.evaluation.value.NegatedFloatValue -> proguard.evaluation.value.v:
    proguard.evaluation.value.FloatValue floatValue -> a
    37:39:void <init>(proguard.evaluation.value.FloatValue) -> <init>
    46:46:proguard.evaluation.value.FloatValue negate() -> negate
    54:54:boolean equals(java.lang.Object) -> equals
    62:62:int hashCode() -> hashCode
    69:69:java.lang.String toString() -> toString
proguard.evaluation.value.NegatedIntegerValue -> proguard.evaluation.value.w:
    proguard.evaluation.value.IntegerValue integerValue -> a
    37:39:void <init>(proguard.evaluation.value.IntegerValue) -> <init>
    46:46:proguard.evaluation.value.IntegerValue negate() -> negate
    54:54:boolean equals(java.lang.Object) -> equals
    62:62:int hashCode() -> hashCode
    69:69:java.lang.String toString() -> toString
proguard.evaluation.value.NegatedLongValue -> proguard.evaluation.value.x:
    proguard.evaluation.value.LongValue longValue -> a
    37:39:void <init>(proguard.evaluation.value.LongValue) -> <init>
    46:46:proguard.evaluation.value.LongValue negate() -> negate
    54:54:boolean equals(java.lang.Object) -> equals
    62:62:int hashCode() -> hashCode
    69:69:java.lang.String toString() -> toString
proguard.evaluation.value.ParticularDoubleValue -> proguard.evaluation.value.y:
    double value -> a
    37:39:void <init>(double) -> <init>
    46:46:double value() -> value
    54:54:proguard.evaluation.value.DoubleValue negate() -> negate
    59:59:proguard.evaluation.value.IntegerValue convertToInteger() -> convertToInteger
    64:64:proguard.evaluation.value.LongValue convertToLong() -> convertToLong
    69:69:proguard.evaluation.value.FloatValue convertToFloat() -> convertToFloat
    77:77:proguard.evaluation.value.DoubleValue generalize(proguard.evaluation.value.DoubleValue) -> generalize
    84:84:proguard.evaluation.value.DoubleValue add(proguard.evaluation.value.DoubleValue) -> add
    91:91:proguard.evaluation.value.DoubleValue subtract(proguard.evaluation.value.DoubleValue) -> subtract
    98:98:proguard.evaluation.value.DoubleValue subtractFrom(proguard.evaluation.value.DoubleValue) -> subtractFrom
    103:103:proguard.evaluation.value.DoubleValue multiply(proguard.evaluation.value.DoubleValue) -> multiply
    108:108:proguard.evaluation.value.DoubleValue divide(proguard.evaluation.value.DoubleValue) -> divide
    113:113:proguard.evaluation.value.DoubleValue divideOf(proguard.evaluation.value.DoubleValue) -> divideOf
    118:118:proguard.evaluation.value.DoubleValue remainder(proguard.evaluation.value.DoubleValue) -> remainder
    123:123:proguard.evaluation.value.DoubleValue remainderOf(proguard.evaluation.value.DoubleValue) -> remainderOf
    128:128:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.DoubleValue) -> compare
    138:138:proguard.evaluation.value.DoubleValue generalize(proguard.evaluation.value.ParticularDoubleValue) -> generalize
    145:145:proguard.evaluation.value.DoubleValue add(proguard.evaluation.value.ParticularDoubleValue) -> add
    150:150:proguard.evaluation.value.DoubleValue subtract(proguard.evaluation.value.ParticularDoubleValue) -> subtract
    155:155:proguard.evaluation.value.DoubleValue subtractFrom(proguard.evaluation.value.ParticularDoubleValue) -> subtractFrom
    160:160:proguard.evaluation.value.DoubleValue multiply(proguard.evaluation.value.ParticularDoubleValue) -> multiply
    165:165:proguard.evaluation.value.DoubleValue divide(proguard.evaluation.value.ParticularDoubleValue) -> divide
    170:170:proguard.evaluation.value.DoubleValue divideOf(proguard.evaluation.value.ParticularDoubleValue) -> divideOf
    175:175:proguard.evaluation.value.DoubleValue remainder(proguard.evaluation.value.ParticularDoubleValue) -> remainder
    180:180:proguard.evaluation.value.DoubleValue remainderOf(proguard.evaluation.value.ParticularDoubleValue) -> remainderOf
    185:185:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.ParticularDoubleValue) -> compare
    195:195:boolean isParticular() -> isParticular
    204:204:boolean equals(java.lang.Object) -> equals
    212:212:int hashCode() -> hashCode
    219:219:java.lang.String toString() -> toString
proguard.evaluation.value.ParticularFloatValue -> proguard.evaluation.value.z:
    float value -> a
    37:39:void <init>(float) -> <init>
    46:46:float value() -> value
    54:54:proguard.evaluation.value.FloatValue negate() -> negate
    59:59:proguard.evaluation.value.IntegerValue convertToInteger() -> convertToInteger
    64:64:proguard.evaluation.value.LongValue convertToLong() -> convertToLong
    69:69:proguard.evaluation.value.DoubleValue convertToDouble() -> convertToDouble
    77:77:proguard.evaluation.value.FloatValue generalize(proguard.evaluation.value.FloatValue) -> generalize
    84:84:proguard.evaluation.value.FloatValue add(proguard.evaluation.value.FloatValue) -> add
    91:91:proguard.evaluation.value.FloatValue subtract(proguard.evaluation.value.FloatValue) -> subtract
    98:98:proguard.evaluation.value.FloatValue subtractFrom(proguard.evaluation.value.FloatValue) -> subtractFrom
    103:103:proguard.evaluation.value.FloatValue multiply(proguard.evaluation.value.FloatValue) -> multiply
    108:108:proguard.evaluation.value.FloatValue divide(proguard.evaluation.value.FloatValue) -> divide
    113:113:proguard.evaluation.value.FloatValue divideOf(proguard.evaluation.value.FloatValue) -> divideOf
    118:118:proguard.evaluation.value.FloatValue remainder(proguard.evaluation.value.FloatValue) -> remainder
    123:123:proguard.evaluation.value.FloatValue remainderOf(proguard.evaluation.value.FloatValue) -> remainderOf
    128:128:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.FloatValue) -> compare
    138:138:proguard.evaluation.value.FloatValue generalize(proguard.evaluation.value.ParticularFloatValue) -> generalize
    145:145:proguard.evaluation.value.FloatValue add(proguard.evaluation.value.ParticularFloatValue) -> add
    150:150:proguard.evaluation.value.FloatValue subtract(proguard.evaluation.value.ParticularFloatValue) -> subtract
    155:155:proguard.evaluation.value.FloatValue subtractFrom(proguard.evaluation.value.ParticularFloatValue) -> subtractFrom
    160:160:proguard.evaluation.value.FloatValue multiply(proguard.evaluation.value.ParticularFloatValue) -> multiply
    165:165:proguard.evaluation.value.FloatValue divide(proguard.evaluation.value.ParticularFloatValue) -> divide
    170:170:proguard.evaluation.value.FloatValue divideOf(proguard.evaluation.value.ParticularFloatValue) -> divideOf
    175:175:proguard.evaluation.value.FloatValue remainder(proguard.evaluation.value.ParticularFloatValue) -> remainder
    180:180:proguard.evaluation.value.FloatValue remainderOf(proguard.evaluation.value.ParticularFloatValue) -> remainderOf
    185:185:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.ParticularFloatValue) -> compare
    195:195:boolean isParticular() -> isParticular
    204:204:boolean equals(java.lang.Object) -> equals
    212:212:int hashCode() -> hashCode
    219:219:java.lang.String toString() -> toString
proguard.evaluation.value.ParticularIntegerValue -> proguard.evaluation.value.A:
    int value -> a
    37:39:void <init>(int) -> <init>
    46:46:int value() -> value
    54:54:proguard.evaluation.value.IntegerValue negate() -> negate
    59:61:proguard.evaluation.value.IntegerValue convertToByte() -> convertToByte
    68:70:proguard.evaluation.value.IntegerValue convertToCharacter() -> convertToCharacter
    77:79:proguard.evaluation.value.IntegerValue convertToShort() -> convertToShort
    86:86:proguard.evaluation.value.LongValue convertToLong() -> convertToLong
    91:91:proguard.evaluation.value.FloatValue convertToFloat() -> convertToFloat
    96:96:proguard.evaluation.value.DoubleValue convertToDouble() -> convertToDouble
    104:104:proguard.evaluation.value.IntegerValue generalize(proguard.evaluation.value.IntegerValue) -> generalize
    109:109:proguard.evaluation.value.IntegerValue add(proguard.evaluation.value.IntegerValue) -> add
    114:114:proguard.evaluation.value.IntegerValue subtract(proguard.evaluation.value.IntegerValue) -> subtract
    119:119:proguard.evaluation.value.IntegerValue subtractFrom(proguard.evaluation.value.IntegerValue) -> subtractFrom
    124:124:proguard.evaluation.value.IntegerValue multiply(proguard.evaluation.value.IntegerValue) -> multiply
    130:130:proguard.evaluation.value.IntegerValue divide(proguard.evaluation.value.IntegerValue) -> divide
    136:136:proguard.evaluation.value.IntegerValue divideOf(proguard.evaluation.value.IntegerValue) -> divideOf
    142:142:proguard.evaluation.value.IntegerValue remainder(proguard.evaluation.value.IntegerValue) -> remainder
    148:148:proguard.evaluation.value.IntegerValue remainderOf(proguard.evaluation.value.IntegerValue) -> remainderOf
    153:153:proguard.evaluation.value.IntegerValue shiftLeft(proguard.evaluation.value.IntegerValue) -> shiftLeft
    158:158:proguard.evaluation.value.IntegerValue shiftLeftOf(proguard.evaluation.value.IntegerValue) -> shiftLeftOf
    163:163:proguard.evaluation.value.IntegerValue shiftRight(proguard.evaluation.value.IntegerValue) -> shiftRight
    168:168:proguard.evaluation.value.IntegerValue shiftRightOf(proguard.evaluation.value.IntegerValue) -> shiftRightOf
    173:173:proguard.evaluation.value.IntegerValue unsignedShiftRight(proguard.evaluation.value.IntegerValue) -> unsignedShiftRight
    178:178:proguard.evaluation.value.IntegerValue unsignedShiftRightOf(proguard.evaluation.value.IntegerValue) -> unsignedShiftRightOf
    183:183:proguard.evaluation.value.LongValue shiftLeftOf(proguard.evaluation.value.LongValue) -> shiftLeftOf
    188:188:proguard.evaluation.value.LongValue shiftRightOf(proguard.evaluation.value.LongValue) -> shiftRightOf
    193:193:proguard.evaluation.value.LongValue unsignedShiftRightOf(proguard.evaluation.value.LongValue) -> unsignedShiftRightOf
    198:198:proguard.evaluation.value.IntegerValue and(proguard.evaluation.value.IntegerValue) -> and
    203:203:proguard.evaluation.value.IntegerValue or(proguard.evaluation.value.IntegerValue) -> or
    208:208:proguard.evaluation.value.IntegerValue xor(proguard.evaluation.value.IntegerValue) -> xor
    213:213:int equal(proguard.evaluation.value.IntegerValue) -> equal
    218:218:int lessThan(proguard.evaluation.value.IntegerValue) -> lessThan
    223:223:int lessThanOrEqual(proguard.evaluation.value.IntegerValue) -> lessThanOrEqual
    232:232:proguard.evaluation.value.IntegerValue generalize(proguard.evaluation.value.ParticularIntegerValue) -> generalize
    237:237:proguard.evaluation.value.IntegerValue add(proguard.evaluation.value.ParticularIntegerValue) -> add
    242:242:proguard.evaluation.value.IntegerValue subtract(proguard.evaluation.value.ParticularIntegerValue) -> subtract
    247:247:proguard.evaluation.value.IntegerValue subtractFrom(proguard.evaluation.value.ParticularIntegerValue) -> subtractFrom
    252:252:proguard.evaluation.value.IntegerValue multiply(proguard.evaluation.value.ParticularIntegerValue) -> multiply
    258:258:proguard.evaluation.value.IntegerValue divide(proguard.evaluation.value.ParticularIntegerValue) -> divide
    264:264:proguard.evaluation.value.IntegerValue divideOf(proguard.evaluation.value.ParticularIntegerValue) -> divideOf
    270:270:proguard.evaluation.value.IntegerValue remainder(proguard.evaluation.value.ParticularIntegerValue) -> remainder
    276:276:proguard.evaluation.value.IntegerValue remainderOf(proguard.evaluation.value.ParticularIntegerValue) -> remainderOf
    281:281:proguard.evaluation.value.IntegerValue shiftLeft(proguard.evaluation.value.ParticularIntegerValue) -> shiftLeft
    286:286:proguard.evaluation.value.IntegerValue shiftRight(proguard.evaluation.value.ParticularIntegerValue) -> shiftRight
    291:291:proguard.evaluation.value.IntegerValue unsignedShiftRight(proguard.evaluation.value.ParticularIntegerValue) -> unsignedShiftRight
    296:296:proguard.evaluation.value.IntegerValue shiftLeftOf(proguard.evaluation.value.ParticularIntegerValue) -> shiftLeftOf
    301:301:proguard.evaluation.value.IntegerValue shiftRightOf(proguard.evaluation.value.ParticularIntegerValue) -> shiftRightOf
    306:306:proguard.evaluation.value.IntegerValue unsignedShiftRightOf(proguard.evaluation.value.ParticularIntegerValue) -> unsignedShiftRightOf
    311:311:proguard.evaluation.value.LongValue shiftLeftOf(proguard.evaluation.value.ParticularLongValue) -> shiftLeftOf
    316:316:proguard.evaluation.value.LongValue shiftRightOf(proguard.evaluation.value.ParticularLongValue) -> shiftRightOf
    321:321:proguard.evaluation.value.LongValue unsignedShiftRightOf(proguard.evaluation.value.ParticularLongValue) -> unsignedShiftRightOf
    326:326:proguard.evaluation.value.IntegerValue and(proguard.evaluation.value.ParticularIntegerValue) -> and
    331:331:proguard.evaluation.value.IntegerValue or(proguard.evaluation.value.ParticularIntegerValue) -> or
    336:336:proguard.evaluation.value.IntegerValue xor(proguard.evaluation.value.ParticularIntegerValue) -> xor
    341:341:int equal(proguard.evaluation.value.ParticularIntegerValue) -> equal
    346:346:int lessThan(proguard.evaluation.value.ParticularIntegerValue) -> lessThan
    351:351:int lessThanOrEqual(proguard.evaluation.value.ParticularIntegerValue) -> lessThanOrEqual
    359:359:boolean isParticular() -> isParticular
    367:367:boolean equals(java.lang.Object) -> equals
    374:374:int hashCode() -> hashCode
    381:381:java.lang.String toString() -> toString
proguard.evaluation.value.ParticularLongValue -> proguard.evaluation.value.B:
    long value -> a
    37:39:void <init>(long) -> <init>
    46:46:long value() -> value
    54:54:proguard.evaluation.value.LongValue negate() -> negate
    59:59:proguard.evaluation.value.IntegerValue convertToInteger() -> convertToInteger
    64:64:proguard.evaluation.value.FloatValue convertToFloat() -> convertToFloat
    69:69:proguard.evaluation.value.DoubleValue convertToDouble() -> convertToDouble
    77:77:proguard.evaluation.value.LongValue generalize(proguard.evaluation.value.LongValue) -> generalize
    82:82:proguard.evaluation.value.LongValue add(proguard.evaluation.value.LongValue) -> add
    87:87:proguard.evaluation.value.LongValue subtract(proguard.evaluation.value.LongValue) -> subtract
    92:92:proguard.evaluation.value.LongValue subtractFrom(proguard.evaluation.value.LongValue) -> subtractFrom
    97:97:proguard.evaluation.value.LongValue multiply(proguard.evaluation.value.LongValue) -> multiply
    103:103:proguard.evaluation.value.LongValue divide(proguard.evaluation.value.LongValue) -> divide
    109:109:proguard.evaluation.value.LongValue divideOf(proguard.evaluation.value.LongValue) -> divideOf
    115:115:proguard.evaluation.value.LongValue remainder(proguard.evaluation.value.LongValue) -> remainder
    121:121:proguard.evaluation.value.LongValue remainderOf(proguard.evaluation.value.LongValue) -> remainderOf
    126:126:proguard.evaluation.value.LongValue shiftLeft(proguard.evaluation.value.IntegerValue) -> shiftLeft
    131:131:proguard.evaluation.value.LongValue shiftRight(proguard.evaluation.value.IntegerValue) -> shiftRight
    136:136:proguard.evaluation.value.LongValue unsignedShiftRight(proguard.evaluation.value.IntegerValue) -> unsignedShiftRight
    141:141:proguard.evaluation.value.LongValue and(proguard.evaluation.value.LongValue) -> and
    146:146:proguard.evaluation.value.LongValue or(proguard.evaluation.value.LongValue) -> or
    151:151:proguard.evaluation.value.LongValue xor(proguard.evaluation.value.LongValue) -> xor
    156:156:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.LongValue) -> compare
    165:165:proguard.evaluation.value.LongValue generalize(proguard.evaluation.value.ParticularLongValue) -> generalize
    170:170:proguard.evaluation.value.LongValue add(proguard.evaluation.value.ParticularLongValue) -> add
    175:175:proguard.evaluation.value.LongValue subtract(proguard.evaluation.value.ParticularLongValue) -> subtract
    180:180:proguard.evaluation.value.LongValue subtractFrom(proguard.evaluation.value.ParticularLongValue) -> subtractFrom
    185:185:proguard.evaluation.value.LongValue multiply(proguard.evaluation.value.ParticularLongValue) -> multiply
    191:191:proguard.evaluation.value.LongValue divide(proguard.evaluation.value.ParticularLongValue) -> divide
    197:197:proguard.evaluation.value.LongValue divideOf(proguard.evaluation.value.ParticularLongValue) -> divideOf
    203:203:proguard.evaluation.value.LongValue remainder(proguard.evaluation.value.ParticularLongValue) -> remainder
    209:209:proguard.evaluation.value.LongValue remainderOf(proguard.evaluation.value.ParticularLongValue) -> remainderOf
    214:214:proguard.evaluation.value.LongValue shiftLeft(proguard.evaluation.value.ParticularIntegerValue) -> shiftLeft
    219:219:proguard.evaluation.value.LongValue shiftRight(proguard.evaluation.value.ParticularIntegerValue) -> shiftRight
    224:224:proguard.evaluation.value.LongValue unsignedShiftRight(proguard.evaluation.value.ParticularIntegerValue) -> unsignedShiftRight
    229:229:proguard.evaluation.value.LongValue and(proguard.evaluation.value.ParticularLongValue) -> and
    234:234:proguard.evaluation.value.LongValue or(proguard.evaluation.value.ParticularLongValue) -> or
    239:239:proguard.evaluation.value.LongValue xor(proguard.evaluation.value.ParticularLongValue) -> xor
    247:247:boolean isParticular() -> isParticular
    255:255:boolean equals(java.lang.Object) -> equals
    262:262:int hashCode() -> hashCode
    269:269:java.lang.String toString() -> toString
proguard.evaluation.value.ParticularValueFactory -> proguard.evaluation.value.ParticularValueFactory:
    proguard.evaluation.value.IntegerValue INTEGER_VALUE_M1 -> a
    proguard.evaluation.value.IntegerValue INTEGER_VALUE_0 -> b
    proguard.evaluation.value.IntegerValue INTEGER_VALUE_1 -> c
    proguard.evaluation.value.IntegerValue INTEGER_VALUE_2 -> l
    proguard.evaluation.value.IntegerValue INTEGER_VALUE_3 -> m
    proguard.evaluation.value.IntegerValue INTEGER_VALUE_4 -> n
    proguard.evaluation.value.IntegerValue INTEGER_VALUE_5 -> o
    proguard.evaluation.value.LongValue LONG_VALUE_0 -> d
    proguard.evaluation.value.LongValue LONG_VALUE_1 -> p
    proguard.evaluation.value.FloatValue FLOAT_VALUE_0 -> q
    proguard.evaluation.value.FloatValue FLOAT_VALUE_1 -> r
    proguard.evaluation.value.FloatValue FLOAT_VALUE_2 -> s
    proguard.evaluation.value.DoubleValue DOUBLE_VALUE_0 -> t
    proguard.evaluation.value.DoubleValue DOUBLE_VALUE_1 -> u
    int POS_ZERO_FLOAT_BITS -> v
    long POS_ZERO_DOUBLE_BITS -> w
    30:30:void <init>() -> <init>
    58:67:proguard.evaluation.value.IntegerValue createIntegerValue(int) -> createIntegerValue
    74:74:proguard.evaluation.value.LongValue createLongValue(long) -> createLongValue
    83:83:proguard.evaluation.value.FloatValue createFloatValue(float) -> createFloatValue
    94:94:proguard.evaluation.value.DoubleValue createDoubleValue(double) -> createDoubleValue
    105:105:proguard.evaluation.value.ReferenceValue createArrayReferenceValue(java.lang.String,proguard.classfile.Clazz,proguard.evaluation.value.IntegerValue) -> createArrayReferenceValue
    34:51:void <clinit>() -> <clinit>
proguard.evaluation.value.ReferenceValue -> proguard.evaluation.value.ReferenceValue:
    30:30:void <init>() -> <init>
    java.lang.String getType() -> getType
    proguard.classfile.Clazz getReferencedClass() -> getReferencedClass
    int isNull() -> isNull
    int instanceOf(java.lang.String,proguard.classfile.Clazz) -> instanceOf
    proguard.evaluation.value.ReferenceValue generalizeMayBeNull(boolean) -> generalizeMayBeNull
    70:70:proguard.evaluation.value.IntegerValue arrayLength(proguard.evaluation.value.ValueFactory) -> arrayLength
    80:80:proguard.evaluation.value.IntegerValue integerArrayLoad(proguard.evaluation.value.IntegerValue,proguard.evaluation.value.ValueFactory) -> integerArrayLoad
    90:90:proguard.evaluation.value.LongValue longArrayLoad(proguard.evaluation.value.IntegerValue,proguard.evaluation.value.ValueFactory) -> longArrayLoad
    100:100:proguard.evaluation.value.FloatValue floatArrayLoad(proguard.evaluation.value.IntegerValue,proguard.evaluation.value.ValueFactory) -> floatArrayLoad
    110:110:proguard.evaluation.value.DoubleValue doubleArrayLoad(proguard.evaluation.value.IntegerValue,proguard.evaluation.value.ValueFactory) -> doubleArrayLoad
    proguard.evaluation.value.ReferenceValue referenceArrayLoad(proguard.evaluation.value.IntegerValue,proguard.evaluation.value.ValueFactory) -> referenceArrayLoad
    127:127:void arrayStore(proguard.evaluation.value.IntegerValue,proguard.evaluation.value.Value) -> arrayStore
    proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.ReferenceValue) -> generalize
    int equal(proguard.evaluation.value.ReferenceValue) -> equal
    155:155:int isNotNull() -> isNotNull
    167:167:int notEqual(proguard.evaluation.value.ReferenceValue) -> notEqual
    179:179:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.TypedReferenceValue) -> generalize
    190:190:int equal(proguard.evaluation.value.TypedReferenceValue) -> equal
    203:203:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.IdentifiedReferenceValue) -> generalize
    214:214:int equal(proguard.evaluation.value.IdentifiedReferenceValue) -> equal
    226:226:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.ArrayReferenceValue) -> generalize
    237:237:int equal(proguard.evaluation.value.ArrayReferenceValue) -> equal
    250:250:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.IdentifiedArrayReferenceValue) -> generalize
    261:261:int equal(proguard.evaluation.value.IdentifiedArrayReferenceValue) -> equal
    274:274:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.DetailedArrayReferenceValue) -> generalize
    285:285:int equal(proguard.evaluation.value.DetailedArrayReferenceValue) -> equal
    293:293:proguard.evaluation.value.ReferenceValue referenceValue() -> referenceValue
    298:298:proguard.evaluation.value.Value generalize(proguard.evaluation.value.Value) -> generalize
    303:303:int computationalType() -> computationalType
proguard.evaluation.value.SpecificDoubleValue -> proguard.evaluation.value.C:
    28:28:void <init>() -> <init>
    34:34:proguard.evaluation.value.DoubleValue negate() -> negate
    39:39:proguard.evaluation.value.IntegerValue convertToInteger() -> convertToInteger
    44:44:proguard.evaluation.value.LongValue convertToLong() -> convertToLong
    49:49:proguard.evaluation.value.FloatValue convertToFloat() -> convertToFloat
    57:57:proguard.evaluation.value.DoubleValue generalize(proguard.evaluation.value.DoubleValue) -> generalize
    62:62:proguard.evaluation.value.DoubleValue add(proguard.evaluation.value.DoubleValue) -> add
    67:67:proguard.evaluation.value.DoubleValue subtract(proguard.evaluation.value.DoubleValue) -> subtract
    72:72:proguard.evaluation.value.DoubleValue subtractFrom(proguard.evaluation.value.DoubleValue) -> subtractFrom
    77:77:proguard.evaluation.value.DoubleValue multiply(proguard.evaluation.value.DoubleValue) -> multiply
    82:82:proguard.evaluation.value.DoubleValue divide(proguard.evaluation.value.DoubleValue) -> divide
    87:87:proguard.evaluation.value.DoubleValue divideOf(proguard.evaluation.value.DoubleValue) -> divideOf
    92:92:proguard.evaluation.value.DoubleValue remainder(proguard.evaluation.value.DoubleValue) -> remainder
    97:97:proguard.evaluation.value.DoubleValue remainderOf(proguard.evaluation.value.DoubleValue) -> remainderOf
    102:102:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.DoubleValue) -> compare
    111:111:proguard.evaluation.value.DoubleValue generalize(proguard.evaluation.value.SpecificDoubleValue) -> generalize
    116:116:proguard.evaluation.value.DoubleValue add(proguard.evaluation.value.SpecificDoubleValue) -> add
    121:121:proguard.evaluation.value.DoubleValue subtract(proguard.evaluation.value.SpecificDoubleValue) -> subtract
    126:126:proguard.evaluation.value.DoubleValue subtractFrom(proguard.evaluation.value.SpecificDoubleValue) -> subtractFrom
    131:131:proguard.evaluation.value.DoubleValue multiply(proguard.evaluation.value.SpecificDoubleValue) -> multiply
    136:136:proguard.evaluation.value.DoubleValue divide(proguard.evaluation.value.SpecificDoubleValue) -> divide
    141:141:proguard.evaluation.value.DoubleValue divideOf(proguard.evaluation.value.SpecificDoubleValue) -> divideOf
    146:146:proguard.evaluation.value.DoubleValue remainder(proguard.evaluation.value.SpecificDoubleValue) -> remainder
    151:151:proguard.evaluation.value.DoubleValue remainderOf(proguard.evaluation.value.SpecificDoubleValue) -> remainderOf
    156:156:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.SpecificDoubleValue) -> compare
    169:169:boolean isSpecific() -> isSpecific
    177:177:boolean equals(java.lang.Object) -> equals
    184:184:int hashCode() -> hashCode
proguard.evaluation.value.SpecificFloatValue -> proguard.evaluation.value.D:
    28:28:void <init>() -> <init>
    34:34:proguard.evaluation.value.FloatValue negate() -> negate
    39:39:proguard.evaluation.value.IntegerValue convertToInteger() -> convertToInteger
    44:44:proguard.evaluation.value.LongValue convertToLong() -> convertToLong
    49:49:proguard.evaluation.value.DoubleValue convertToDouble() -> convertToDouble
    57:57:proguard.evaluation.value.FloatValue generalize(proguard.evaluation.value.FloatValue) -> generalize
    62:62:proguard.evaluation.value.FloatValue add(proguard.evaluation.value.FloatValue) -> add
    67:67:proguard.evaluation.value.FloatValue subtract(proguard.evaluation.value.FloatValue) -> subtract
    72:72:proguard.evaluation.value.FloatValue subtractFrom(proguard.evaluation.value.FloatValue) -> subtractFrom
    77:77:proguard.evaluation.value.FloatValue multiply(proguard.evaluation.value.FloatValue) -> multiply
    82:82:proguard.evaluation.value.FloatValue divide(proguard.evaluation.value.FloatValue) -> divide
    87:87:proguard.evaluation.value.FloatValue divideOf(proguard.evaluation.value.FloatValue) -> divideOf
    92:92:proguard.evaluation.value.FloatValue remainder(proguard.evaluation.value.FloatValue) -> remainder
    97:97:proguard.evaluation.value.FloatValue remainderOf(proguard.evaluation.value.FloatValue) -> remainderOf
    102:102:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.FloatValue) -> compare
    111:111:proguard.evaluation.value.FloatValue generalize(proguard.evaluation.value.SpecificFloatValue) -> generalize
    116:116:proguard.evaluation.value.FloatValue add(proguard.evaluation.value.SpecificFloatValue) -> add
    121:121:proguard.evaluation.value.FloatValue subtract(proguard.evaluation.value.SpecificFloatValue) -> subtract
    126:126:proguard.evaluation.value.FloatValue subtractFrom(proguard.evaluation.value.SpecificFloatValue) -> subtractFrom
    131:131:proguard.evaluation.value.FloatValue multiply(proguard.evaluation.value.SpecificFloatValue) -> multiply
    136:136:proguard.evaluation.value.FloatValue divide(proguard.evaluation.value.SpecificFloatValue) -> divide
    141:141:proguard.evaluation.value.FloatValue divideOf(proguard.evaluation.value.SpecificFloatValue) -> divideOf
    146:146:proguard.evaluation.value.FloatValue remainder(proguard.evaluation.value.SpecificFloatValue) -> remainder
    151:151:proguard.evaluation.value.FloatValue remainderOf(proguard.evaluation.value.SpecificFloatValue) -> remainderOf
    156:156:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.SpecificFloatValue) -> compare
    169:169:boolean isSpecific() -> isSpecific
    177:177:boolean equals(java.lang.Object) -> equals
    184:184:int hashCode() -> hashCode
proguard.evaluation.value.SpecificIntegerValue -> proguard.evaluation.value.E:
    28:28:void <init>() -> <init>
    34:34:proguard.evaluation.value.IntegerValue negate() -> negate
    39:39:proguard.evaluation.value.IntegerValue convertToByte() -> convertToByte
    44:44:proguard.evaluation.value.IntegerValue convertToCharacter() -> convertToCharacter
    49:49:proguard.evaluation.value.IntegerValue convertToShort() -> convertToShort
    54:54:proguard.evaluation.value.LongValue convertToLong() -> convertToLong
    59:59:proguard.evaluation.value.FloatValue convertToFloat() -> convertToFloat
    64:64:proguard.evaluation.value.DoubleValue convertToDouble() -> convertToDouble
    72:72:proguard.evaluation.value.IntegerValue generalize(proguard.evaluation.value.IntegerValue) -> generalize
    77:77:proguard.evaluation.value.IntegerValue add(proguard.evaluation.value.IntegerValue) -> add
    82:82:proguard.evaluation.value.IntegerValue subtract(proguard.evaluation.value.IntegerValue) -> subtract
    87:87:proguard.evaluation.value.IntegerValue subtractFrom(proguard.evaluation.value.IntegerValue) -> subtractFrom
    92:92:proguard.evaluation.value.IntegerValue multiply(proguard.evaluation.value.IntegerValue) -> multiply
    98:98:proguard.evaluation.value.IntegerValue divide(proguard.evaluation.value.IntegerValue) -> divide
    104:104:proguard.evaluation.value.IntegerValue divideOf(proguard.evaluation.value.IntegerValue) -> divideOf
    110:110:proguard.evaluation.value.IntegerValue remainder(proguard.evaluation.value.IntegerValue) -> remainder
    116:116:proguard.evaluation.value.IntegerValue remainderOf(proguard.evaluation.value.IntegerValue) -> remainderOf
    121:121:proguard.evaluation.value.IntegerValue shiftLeft(proguard.evaluation.value.IntegerValue) -> shiftLeft
    126:126:proguard.evaluation.value.IntegerValue shiftLeftOf(proguard.evaluation.value.IntegerValue) -> shiftLeftOf
    131:131:proguard.evaluation.value.IntegerValue shiftRight(proguard.evaluation.value.IntegerValue) -> shiftRight
    136:136:proguard.evaluation.value.IntegerValue shiftRightOf(proguard.evaluation.value.IntegerValue) -> shiftRightOf
    141:141:proguard.evaluation.value.IntegerValue unsignedShiftRight(proguard.evaluation.value.IntegerValue) -> unsignedShiftRight
    146:146:proguard.evaluation.value.IntegerValue unsignedShiftRightOf(proguard.evaluation.value.IntegerValue) -> unsignedShiftRightOf
    151:151:proguard.evaluation.value.LongValue shiftLeftOf(proguard.evaluation.value.LongValue) -> shiftLeftOf
    156:156:proguard.evaluation.value.LongValue shiftRightOf(proguard.evaluation.value.LongValue) -> shiftRightOf
    161:161:proguard.evaluation.value.LongValue unsignedShiftRightOf(proguard.evaluation.value.LongValue) -> unsignedShiftRightOf
    166:166:proguard.evaluation.value.IntegerValue and(proguard.evaluation.value.IntegerValue) -> and
    171:171:proguard.evaluation.value.IntegerValue or(proguard.evaluation.value.IntegerValue) -> or
    176:176:proguard.evaluation.value.IntegerValue xor(proguard.evaluation.value.IntegerValue) -> xor
    181:181:int equal(proguard.evaluation.value.IntegerValue) -> equal
    186:186:int lessThan(proguard.evaluation.value.IntegerValue) -> lessThan
    191:191:int lessThanOrEqual(proguard.evaluation.value.IntegerValue) -> lessThanOrEqual
    200:200:proguard.evaluation.value.IntegerValue generalize(proguard.evaluation.value.SpecificIntegerValue) -> generalize
    205:205:proguard.evaluation.value.IntegerValue add(proguard.evaluation.value.SpecificIntegerValue) -> add
    210:210:proguard.evaluation.value.IntegerValue subtract(proguard.evaluation.value.SpecificIntegerValue) -> subtract
    217:217:proguard.evaluation.value.IntegerValue subtractFrom(proguard.evaluation.value.SpecificIntegerValue) -> subtractFrom
    224:224:proguard.evaluation.value.IntegerValue multiply(proguard.evaluation.value.SpecificIntegerValue) -> multiply
    230:230:proguard.evaluation.value.IntegerValue divide(proguard.evaluation.value.SpecificIntegerValue) -> divide
    236:236:proguard.evaluation.value.IntegerValue divideOf(proguard.evaluation.value.SpecificIntegerValue) -> divideOf
    242:242:proguard.evaluation.value.IntegerValue remainder(proguard.evaluation.value.SpecificIntegerValue) -> remainder
    248:248:proguard.evaluation.value.IntegerValue remainderOf(proguard.evaluation.value.SpecificIntegerValue) -> remainderOf
    253:253:proguard.evaluation.value.IntegerValue shiftLeft(proguard.evaluation.value.SpecificIntegerValue) -> shiftLeft
    258:258:proguard.evaluation.value.IntegerValue shiftRight(proguard.evaluation.value.SpecificIntegerValue) -> shiftRight
    263:263:proguard.evaluation.value.IntegerValue unsignedShiftRight(proguard.evaluation.value.SpecificIntegerValue) -> unsignedShiftRight
    268:268:proguard.evaluation.value.IntegerValue shiftLeftOf(proguard.evaluation.value.SpecificIntegerValue) -> shiftLeftOf
    273:273:proguard.evaluation.value.IntegerValue shiftRightOf(proguard.evaluation.value.SpecificIntegerValue) -> shiftRightOf
    278:278:proguard.evaluation.value.IntegerValue unsignedShiftRightOf(proguard.evaluation.value.SpecificIntegerValue) -> unsignedShiftRightOf
    283:283:proguard.evaluation.value.LongValue shiftLeftOf(proguard.evaluation.value.SpecificLongValue) -> shiftLeftOf
    288:288:proguard.evaluation.value.LongValue shiftRightOf(proguard.evaluation.value.SpecificLongValue) -> shiftRightOf
    293:293:proguard.evaluation.value.LongValue unsignedShiftRightOf(proguard.evaluation.value.SpecificLongValue) -> unsignedShiftRightOf
    298:298:proguard.evaluation.value.IntegerValue and(proguard.evaluation.value.SpecificIntegerValue) -> and
    305:305:proguard.evaluation.value.IntegerValue or(proguard.evaluation.value.SpecificIntegerValue) -> or
    312:312:proguard.evaluation.value.IntegerValue xor(proguard.evaluation.value.SpecificIntegerValue) -> xor
    319:319:int equal(proguard.evaluation.value.SpecificIntegerValue) -> equal
    324:324:int lessThan(proguard.evaluation.value.SpecificIntegerValue) -> lessThan
    329:329:int lessThanOrEqual(proguard.evaluation.value.SpecificIntegerValue) -> lessThanOrEqual
    337:337:boolean isSpecific() -> isSpecific
    345:345:boolean equals(java.lang.Object) -> equals
    352:352:int hashCode() -> hashCode
proguard.evaluation.value.SpecificLongValue -> proguard.evaluation.value.F:
    28:28:void <init>() -> <init>
    34:34:proguard.evaluation.value.LongValue negate() -> negate
    39:39:proguard.evaluation.value.IntegerValue convertToInteger() -> convertToInteger
    44:44:proguard.evaluation.value.FloatValue convertToFloat() -> convertToFloat
    49:49:proguard.evaluation.value.DoubleValue convertToDouble() -> convertToDouble
    57:57:proguard.evaluation.value.LongValue generalize(proguard.evaluation.value.LongValue) -> generalize
    62:62:proguard.evaluation.value.LongValue add(proguard.evaluation.value.LongValue) -> add
    67:67:proguard.evaluation.value.LongValue subtract(proguard.evaluation.value.LongValue) -> subtract
    72:72:proguard.evaluation.value.LongValue subtractFrom(proguard.evaluation.value.LongValue) -> subtractFrom
    77:77:proguard.evaluation.value.LongValue multiply(proguard.evaluation.value.LongValue) -> multiply
    83:83:proguard.evaluation.value.LongValue divide(proguard.evaluation.value.LongValue) -> divide
    89:89:proguard.evaluation.value.LongValue divideOf(proguard.evaluation.value.LongValue) -> divideOf
    95:95:proguard.evaluation.value.LongValue remainder(proguard.evaluation.value.LongValue) -> remainder
    101:101:proguard.evaluation.value.LongValue remainderOf(proguard.evaluation.value.LongValue) -> remainderOf
    106:106:proguard.evaluation.value.LongValue shiftLeft(proguard.evaluation.value.IntegerValue) -> shiftLeft
    111:111:proguard.evaluation.value.LongValue shiftRight(proguard.evaluation.value.IntegerValue) -> shiftRight
    116:116:proguard.evaluation.value.LongValue unsignedShiftRight(proguard.evaluation.value.IntegerValue) -> unsignedShiftRight
    121:121:proguard.evaluation.value.LongValue and(proguard.evaluation.value.LongValue) -> and
    126:126:proguard.evaluation.value.LongValue or(proguard.evaluation.value.LongValue) -> or
    131:131:proguard.evaluation.value.LongValue xor(proguard.evaluation.value.LongValue) -> xor
    136:136:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.LongValue) -> compare
    145:145:proguard.evaluation.value.LongValue generalize(proguard.evaluation.value.SpecificLongValue) -> generalize
    150:150:proguard.evaluation.value.LongValue add(proguard.evaluation.value.SpecificLongValue) -> add
    155:155:proguard.evaluation.value.LongValue subtract(proguard.evaluation.value.SpecificLongValue) -> subtract
    162:162:proguard.evaluation.value.LongValue subtractFrom(proguard.evaluation.value.SpecificLongValue) -> subtractFrom
    169:169:proguard.evaluation.value.LongValue multiply(proguard.evaluation.value.SpecificLongValue) -> multiply
    175:175:proguard.evaluation.value.LongValue divide(proguard.evaluation.value.SpecificLongValue) -> divide
    181:181:proguard.evaluation.value.LongValue divideOf(proguard.evaluation.value.SpecificLongValue) -> divideOf
    187:187:proguard.evaluation.value.LongValue remainder(proguard.evaluation.value.SpecificLongValue) -> remainder
    193:193:proguard.evaluation.value.LongValue remainderOf(proguard.evaluation.value.SpecificLongValue) -> remainderOf
    198:198:proguard.evaluation.value.LongValue shiftLeft(proguard.evaluation.value.SpecificLongValue) -> shiftLeft
    203:203:proguard.evaluation.value.LongValue shiftRight(proguard.evaluation.value.SpecificLongValue) -> shiftRight
    208:208:proguard.evaluation.value.LongValue unsignedShiftRight(proguard.evaluation.value.SpecificLongValue) -> unsignedShiftRight
    213:213:proguard.evaluation.value.LongValue and(proguard.evaluation.value.SpecificLongValue) -> and
    220:220:proguard.evaluation.value.LongValue or(proguard.evaluation.value.SpecificLongValue) -> or
    227:227:proguard.evaluation.value.LongValue xor(proguard.evaluation.value.SpecificLongValue) -> xor
    234:234:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.SpecificLongValue) -> compare
    242:242:boolean isSpecific() -> isSpecific
    250:250:boolean equals(java.lang.Object) -> equals
    257:257:int hashCode() -> hashCode
proguard.evaluation.value.TopValue -> proguard.evaluation.value.TopValue:
    30:30:void <init>() -> <init>
    36:36:boolean isSpecific() -> isSpecific
    41:41:boolean isParticular() -> isParticular
    46:46:proguard.evaluation.value.Value generalize(proguard.evaluation.value.Value) -> generalize
    51:51:int computationalType() -> computationalType
    56:56:java.lang.String internalType() -> internalType
    64:64:boolean equals(java.lang.Object) -> equals
    71:71:int hashCode() -> hashCode
    77:77:java.lang.String toString() -> toString
proguard.evaluation.value.TypedReferenceValue -> proguard.evaluation.value.TypedReferenceValue:
    java.lang.String type -> type
    proguard.classfile.Clazz referencedClass -> referencedClass
    boolean mayBeNull -> mayBeNull
    53:57:void <init>(java.lang.String,proguard.classfile.Clazz,boolean) -> <init>
    64:64:java.lang.String getType() -> getType
    70:70:proguard.classfile.Clazz getReferencedClass() -> getReferencedClass
    78:78:int isNull() -> isNull
    86:170:int instanceOf(java.lang.String,proguard.classfile.Clazz) -> instanceOf
    180:180:proguard.evaluation.value.ReferenceValue generalizeMayBeNull(boolean) -> generalizeMayBeNull
    188:188:proguard.evaluation.value.ReferenceValue referenceArrayLoad(proguard.evaluation.value.IntegerValue,proguard.evaluation.value.ValueFactory) -> referenceArrayLoad
    201:201:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.ReferenceValue) -> generalize
    207:207:int equal(proguard.evaluation.value.ReferenceValue) -> equal
    217:328:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.TypedReferenceValue) -> generalize
    353:451:proguard.classfile.Clazz findCommonClass(proguard.classfile.Clazz,proguard.classfile.Clazz,boolean) -> a
    462:462:proguard.evaluation.value.ReferenceValue typedReferenceValue(proguard.evaluation.value.TypedReferenceValue,boolean) -> a
    476:489:int superClassCount(proguard.classfile.Clazz,java.util.Set) -> a
    495:495:int equal(proguard.evaluation.value.TypedReferenceValue) -> equal
    504:504:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.IdentifiedReferenceValue) -> generalize
    510:510:int equal(proguard.evaluation.value.IdentifiedReferenceValue) -> equal
    519:519:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.ArrayReferenceValue) -> generalize
    525:525:int equal(proguard.evaluation.value.ArrayReferenceValue) -> equal
    534:534:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.IdentifiedArrayReferenceValue) -> generalize
    540:540:int equal(proguard.evaluation.value.IdentifiedArrayReferenceValue) -> equal
    549:549:proguard.evaluation.value.ReferenceValue generalize(proguard.evaluation.value.DetailedArrayReferenceValue) -> generalize
    555:555:int equal(proguard.evaluation.value.DetailedArrayReferenceValue) -> equal
    563:563:boolean isParticular() -> isParticular
    569:569:java.lang.String internalType() -> internalType
    582:594:boolean equals(java.lang.Object) -> equals
    602:602:int hashCode() -> hashCode
    609:609:java.lang.String toString() -> toString
proguard.evaluation.value.UnknownDoubleValue -> proguard.evaluation.value.UnknownDoubleValue:
    28:28:void <init>() -> <init>
    34:34:proguard.evaluation.value.DoubleValue negate() -> negate
    39:39:proguard.evaluation.value.IntegerValue convertToInteger() -> convertToInteger
    44:44:proguard.evaluation.value.LongValue convertToLong() -> convertToLong
    49:49:proguard.evaluation.value.FloatValue convertToFloat() -> convertToFloat
    57:57:proguard.evaluation.value.DoubleValue generalize(proguard.evaluation.value.DoubleValue) -> generalize
    62:62:proguard.evaluation.value.DoubleValue add(proguard.evaluation.value.DoubleValue) -> add
    67:67:proguard.evaluation.value.DoubleValue subtract(proguard.evaluation.value.DoubleValue) -> subtract
    72:72:proguard.evaluation.value.DoubleValue subtractFrom(proguard.evaluation.value.DoubleValue) -> subtractFrom
    77:77:proguard.evaluation.value.DoubleValue multiply(proguard.evaluation.value.DoubleValue) -> multiply
    82:82:proguard.evaluation.value.DoubleValue divide(proguard.evaluation.value.DoubleValue) -> divide
    87:87:proguard.evaluation.value.DoubleValue divideOf(proguard.evaluation.value.DoubleValue) -> divideOf
    92:92:proguard.evaluation.value.DoubleValue remainder(proguard.evaluation.value.DoubleValue) -> remainder
    97:97:proguard.evaluation.value.DoubleValue remainderOf(proguard.evaluation.value.DoubleValue) -> remainderOf
    102:102:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.DoubleValue) -> compare
    110:110:boolean equals(java.lang.Object) -> equals
    117:117:int hashCode() -> hashCode
    123:123:java.lang.String toString() -> toString
proguard.evaluation.value.UnknownFloatValue -> proguard.evaluation.value.UnknownFloatValue:
    28:28:void <init>() -> <init>
    34:34:proguard.evaluation.value.FloatValue negate() -> negate
    39:39:proguard.evaluation.value.IntegerValue convertToInteger() -> convertToInteger
    44:44:proguard.evaluation.value.LongValue convertToLong() -> convertToLong
    49:49:proguard.evaluation.value.DoubleValue convertToDouble() -> convertToDouble
    57:57:proguard.evaluation.value.FloatValue generalize(proguard.evaluation.value.FloatValue) -> generalize
    62:62:proguard.evaluation.value.FloatValue add(proguard.evaluation.value.FloatValue) -> add
    67:67:proguard.evaluation.value.FloatValue subtract(proguard.evaluation.value.FloatValue) -> subtract
    72:72:proguard.evaluation.value.FloatValue subtractFrom(proguard.evaluation.value.FloatValue) -> subtractFrom
    77:77:proguard.evaluation.value.FloatValue multiply(proguard.evaluation.value.FloatValue) -> multiply
    82:82:proguard.evaluation.value.FloatValue divide(proguard.evaluation.value.FloatValue) -> divide
    87:87:proguard.evaluation.value.FloatValue divideOf(proguard.evaluation.value.FloatValue) -> divideOf
    92:92:proguard.evaluation.value.FloatValue remainder(proguard.evaluation.value.FloatValue) -> remainder
    97:97:proguard.evaluation.value.FloatValue remainderOf(proguard.evaluation.value.FloatValue) -> remainderOf
    102:102:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.FloatValue) -> compare
    110:110:boolean equals(java.lang.Object) -> equals
    117:117:int hashCode() -> hashCode
    123:123:java.lang.String toString() -> toString
proguard.evaluation.value.UnknownIntegerValue -> proguard.evaluation.value.UnknownIntegerValue:
    28:28:void <init>() -> <init>
    34:34:proguard.evaluation.value.IntegerValue negate() -> negate
    39:39:proguard.evaluation.value.IntegerValue convertToByte() -> convertToByte
    44:44:proguard.evaluation.value.IntegerValue convertToCharacter() -> convertToCharacter
    49:49:proguard.evaluation.value.IntegerValue convertToShort() -> convertToShort
    54:54:proguard.evaluation.value.LongValue convertToLong() -> convertToLong
    59:59:proguard.evaluation.value.FloatValue convertToFloat() -> convertToFloat
    64:64:proguard.evaluation.value.DoubleValue convertToDouble() -> convertToDouble
    72:72:proguard.evaluation.value.IntegerValue generalize(proguard.evaluation.value.IntegerValue) -> generalize
    78:78:proguard.evaluation.value.IntegerValue add(proguard.evaluation.value.IntegerValue) -> add
    83:83:proguard.evaluation.value.IntegerValue subtract(proguard.evaluation.value.IntegerValue) -> subtract
    88:88:proguard.evaluation.value.IntegerValue subtractFrom(proguard.evaluation.value.IntegerValue) -> subtractFrom
    94:94:proguard.evaluation.value.IntegerValue multiply(proguard.evaluation.value.IntegerValue) -> multiply
    100:100:proguard.evaluation.value.IntegerValue divide(proguard.evaluation.value.IntegerValue) -> divide
    106:106:proguard.evaluation.value.IntegerValue divideOf(proguard.evaluation.value.IntegerValue) -> divideOf
    112:112:proguard.evaluation.value.IntegerValue remainder(proguard.evaluation.value.IntegerValue) -> remainder
    118:118:proguard.evaluation.value.IntegerValue remainderOf(proguard.evaluation.value.IntegerValue) -> remainderOf
    123:123:proguard.evaluation.value.IntegerValue shiftLeft(proguard.evaluation.value.IntegerValue) -> shiftLeft
    128:128:proguard.evaluation.value.IntegerValue shiftLeftOf(proguard.evaluation.value.IntegerValue) -> shiftLeftOf
    133:133:proguard.evaluation.value.IntegerValue shiftRight(proguard.evaluation.value.IntegerValue) -> shiftRight
    138:138:proguard.evaluation.value.IntegerValue shiftRightOf(proguard.evaluation.value.IntegerValue) -> shiftRightOf
    143:143:proguard.evaluation.value.IntegerValue unsignedShiftRight(proguard.evaluation.value.IntegerValue) -> unsignedShiftRight
    148:148:proguard.evaluation.value.IntegerValue unsignedShiftRightOf(proguard.evaluation.value.IntegerValue) -> unsignedShiftRightOf
    153:153:proguard.evaluation.value.LongValue shiftLeftOf(proguard.evaluation.value.LongValue) -> shiftLeftOf
    158:158:proguard.evaluation.value.LongValue shiftRightOf(proguard.evaluation.value.LongValue) -> shiftRightOf
    163:163:proguard.evaluation.value.LongValue unsignedShiftRightOf(proguard.evaluation.value.LongValue) -> unsignedShiftRightOf
    168:168:proguard.evaluation.value.IntegerValue and(proguard.evaluation.value.IntegerValue) -> and
    173:173:proguard.evaluation.value.IntegerValue or(proguard.evaluation.value.IntegerValue) -> or
    178:178:proguard.evaluation.value.IntegerValue xor(proguard.evaluation.value.IntegerValue) -> xor
    183:183:int equal(proguard.evaluation.value.IntegerValue) -> equal
    188:188:int lessThan(proguard.evaluation.value.IntegerValue) -> lessThan
    193:193:int lessThanOrEqual(proguard.evaluation.value.IntegerValue) -> lessThanOrEqual
    201:201:boolean equals(java.lang.Object) -> equals
    208:208:int hashCode() -> hashCode
    214:214:java.lang.String toString() -> toString
proguard.evaluation.value.UnknownLongValue -> proguard.evaluation.value.UnknownLongValue:
    28:28:void <init>() -> <init>
    34:34:proguard.evaluation.value.LongValue negate() -> negate
    39:39:proguard.evaluation.value.IntegerValue convertToInteger() -> convertToInteger
    44:44:proguard.evaluation.value.FloatValue convertToFloat() -> convertToFloat
    49:49:proguard.evaluation.value.DoubleValue convertToDouble() -> convertToDouble
    57:57:proguard.evaluation.value.LongValue generalize(proguard.evaluation.value.LongValue) -> generalize
    62:62:proguard.evaluation.value.LongValue add(proguard.evaluation.value.LongValue) -> add
    67:67:proguard.evaluation.value.LongValue subtract(proguard.evaluation.value.LongValue) -> subtract
    72:72:proguard.evaluation.value.LongValue subtractFrom(proguard.evaluation.value.LongValue) -> subtractFrom
    78:78:proguard.evaluation.value.LongValue multiply(proguard.evaluation.value.LongValue) -> multiply
    84:84:proguard.evaluation.value.LongValue divide(proguard.evaluation.value.LongValue) -> divide
    90:90:proguard.evaluation.value.LongValue divideOf(proguard.evaluation.value.LongValue) -> divideOf
    96:96:proguard.evaluation.value.LongValue remainder(proguard.evaluation.value.LongValue) -> remainder
    102:102:proguard.evaluation.value.LongValue remainderOf(proguard.evaluation.value.LongValue) -> remainderOf
    107:107:proguard.evaluation.value.LongValue shiftLeft(proguard.evaluation.value.IntegerValue) -> shiftLeft
    112:112:proguard.evaluation.value.LongValue shiftRight(proguard.evaluation.value.IntegerValue) -> shiftRight
    117:117:proguard.evaluation.value.LongValue unsignedShiftRight(proguard.evaluation.value.IntegerValue) -> unsignedShiftRight
    122:122:proguard.evaluation.value.LongValue and(proguard.evaluation.value.LongValue) -> and
    127:127:proguard.evaluation.value.LongValue or(proguard.evaluation.value.LongValue) -> or
    132:132:proguard.evaluation.value.LongValue xor(proguard.evaluation.value.LongValue) -> xor
    137:137:proguard.evaluation.value.IntegerValue compare(proguard.evaluation.value.LongValue) -> compare
    145:145:boolean equals(java.lang.Object) -> equals
    152:152:int hashCode() -> hashCode
    158:158:java.lang.String toString() -> toString
proguard.evaluation.value.Value -> proguard.evaluation.value.Value:
    int NEVER -> NEVER
    int MAYBE -> MAYBE
    int ALWAYS -> ALWAYS
    int TYPE_INTEGER -> TYPE_INTEGER
    int TYPE_LONG -> TYPE_LONG
    int TYPE_FLOAT -> TYPE_FLOAT
    int TYPE_DOUBLE -> TYPE_DOUBLE
    int TYPE_REFERENCE -> TYPE_REFERENCE
    int TYPE_INSTRUCTION_OFFSET -> TYPE_INSTRUCTION_OFFSET
    int TYPE_TOP -> TYPE_TOP
    28:28:void <init>() -> <init>
    48:48:proguard.evaluation.value.Category1Value category1Value() -> category1Value
    56:56:proguard.evaluation.value.Category2Value category2Value() -> category2Value
    65:65:proguard.evaluation.value.IntegerValue integerValue() -> integerValue
    73:73:proguard.evaluation.value.LongValue longValue() -> longValue
    81:81:proguard.evaluation.value.FloatValue floatValue() -> floatValue
    89:89:proguard.evaluation.value.DoubleValue doubleValue() -> doubleValue
    97:97:proguard.evaluation.value.ReferenceValue referenceValue() -> referenceValue
    105:105:proguard.evaluation.value.InstructionOffsetValue instructionOffsetValue() -> instructionOffsetValue
    115:115:boolean isSpecific() -> isSpecific
    125:125:boolean isParticular() -> isParticular
    proguard.evaluation.value.Value generalize(proguard.evaluation.value.Value) -> generalize
    boolean isCategory2() -> isCategory2
    int computationalType() -> computationalType
    java.lang.String internalType() -> internalType
proguard.evaluation.value.ValueFactory -> proguard.evaluation.value.ValueFactory:
    proguard.evaluation.value.IntegerValue INTEGER_VALUE -> e
    proguard.evaluation.value.LongValue LONG_VALUE -> f
    proguard.evaluation.value.FloatValue FLOAT_VALUE -> g
    proguard.evaluation.value.DoubleValue DOUBLE_VALUE -> h
    proguard.evaluation.value.ReferenceValue REFERENCE_VALUE_NULL -> i
    proguard.evaluation.value.ReferenceValue REFERENCE_VALUE_JAVA_LANG_OBJECT_MAYBE_NULL -> j
    proguard.evaluation.value.ReferenceValue REFERENCE_VALUE_JAVA_LANG_OBJECT_NOT_NULL -> k
    31:31:void <init>() -> <init>
    51:62:proguard.evaluation.value.Value createValue(java.lang.String,proguard.classfile.Clazz,boolean) -> createValue
    75:75:proguard.evaluation.value.IntegerValue createIntegerValue() -> createIntegerValue
    83:83:proguard.evaluation.value.IntegerValue createIntegerValue(int) -> createIntegerValue
    92:92:proguard.evaluation.value.LongValue createLongValue() -> createLongValue
    100:100:proguard.evaluation.value.LongValue createLongValue(long) -> createLongValue
    109:109:proguard.evaluation.value.FloatValue createFloatValue() -> createFloatValue
    117:117:proguard.evaluation.value.FloatValue createFloatValue(float) -> createFloatValue
    126:126:proguard.evaluation.value.DoubleValue createDoubleValue() -> createDoubleValue
    134:134:proguard.evaluation.value.DoubleValue createDoubleValue(double) -> createDoubleValue
    143:143:proguard.evaluation.value.ReferenceValue createReferenceValueNull() -> createReferenceValueNull
    156:156:proguard.evaluation.value.ReferenceValue createReferenceValue(java.lang.String,proguard.classfile.Clazz,boolean) -> createReferenceValue
    172:172:proguard.evaluation.value.ReferenceValue createArrayReferenceValue(java.lang.String,proguard.classfile.Clazz,proguard.evaluation.value.IntegerValue) -> createArrayReferenceValue
    34:41:void <clinit>() -> <clinit>
proguard.gradle.ProGuardTask -> proguard.gradle.ProGuardTask:
    java.util.List inJarFiles -> a
    java.util.List inJarFilters -> b
    java.util.List outJarFiles -> c
    java.util.List outJarFilters -> d
    java.util.List inJarCounts -> e
    java.util.List libraryJarFiles -> f
    java.util.List libraryJarFilters -> g
    java.util.List configurationFiles -> h
    proguard.Configuration configuration -> i
    proguard.ClassSpecification classSpecification -> j
    41:55:void <init>() -> <init>
    68:68:org.gradle.api.file.FileCollection getInJarFileCollection() -> getInJarFileCollection
    74:74:org.gradle.api.file.FileCollection getOutJarFileCollection() -> getOutJarFileCollection
    80:80:org.gradle.api.file.FileCollection getLibraryJarFileCollection() -> getLibraryJarFileCollection
    86:86:org.gradle.api.file.FileCollection getConfigurationFileCollection() -> getConfigurationFileCollection
    98:98:java.util.List getInJarFiles() -> getInJarFiles
    107:107:java.util.List getInJarFilters() -> getInJarFilters
    116:116:java.util.List getOutJarFiles() -> getOutJarFiles
    125:125:java.util.List getOutJarFilters() -> getOutJarFilters
    138:138:java.util.List getInJarCounts() -> getInJarCounts
    147:147:java.util.List getLibraryJarFiles() -> getLibraryJarFiles
    156:156:java.util.List getLibraryJarFilters() -> getLibraryJarFilters
    165:165:java.util.List getConfigurationFiles() -> getConfigurationFiles
    175:176:void configuration(java.lang.Object) -> configuration
    181:182:void injars(java.lang.Object) -> injars
    188:190:void injars(java.util.Map,java.lang.Object) -> injars
    195:196:void outjars(java.lang.Object) -> outjars
    202:205:void outjars(java.util.Map,java.lang.Object) -> outjars
    210:211:void libraryjars(java.lang.Object) -> libraryjars
    217:219:void libraryjars(java.util.Map,java.lang.Object) -> libraryjars
    224:225:java.lang.Object getskipnonpubliclibraryclasses() -> getskipnonpubliclibraryclasses
    230:231:void skipnonpubliclibraryclasses() -> skipnonpubliclibraryclasses
    236:237:java.lang.Object getdontskipnonpubliclibraryclassmembers() -> getdontskipnonpubliclibraryclassmembers
    242:243:void dontskipnonpubliclibraryclassmembers() -> dontskipnonpubliclibraryclassmembers
    248:249:java.lang.Object getkeepdirectories() -> getkeepdirectories
    254:255:void keepdirectories() -> keepdirectories
    259:261:void keepdirectories(java.lang.String) -> keepdirectories
    265:267:void target(java.lang.String) -> target
    272:273:java.lang.Object getforceprocessing() -> getforceprocessing
    278:279:void forceprocessing() -> forceprocessing
    284:285:void keep(java.lang.String) -> keep
    291:298:void keep(java.util.Map,java.lang.String) -> keep
    303:304:void keep(java.util.Map) -> keep
    310:317:void keep(java.util.Map,groovy.lang.Closure) -> keep
    322:323:void keepclassmembers(java.lang.String) -> keepclassmembers
    329:336:void keepclassmembers(java.util.Map,java.lang.String) -> keepclassmembers
    341:342:void keepclassmembers(java.util.Map) -> keepclassmembers
    348:355:void keepclassmembers(java.util.Map,groovy.lang.Closure) -> keepclassmembers
    360:361:void keepclasseswithmembers(java.lang.String) -> keepclasseswithmembers
    367:374:void keepclasseswithmembers(java.util.Map,java.lang.String) -> keepclasseswithmembers
    379:380:void keepclasseswithmembers(java.util.Map) -> keepclasseswithmembers
    386:393:void keepclasseswithmembers(java.util.Map,groovy.lang.Closure) -> keepclasseswithmembers
    398:399:void keepnames(java.lang.String) -> keepnames
    405:412:void keepnames(java.util.Map,java.lang.String) -> keepnames
    417:418:void keepnames(java.util.Map) -> keepnames
    424:431:void keepnames(java.util.Map,groovy.lang.Closure) -> keepnames
    436:437:void keepclassmembernames(java.lang.String) -> keepclassmembernames
    443:450:void keepclassmembernames(java.util.Map,java.lang.String) -> keepclassmembernames
    455:456:void keepclassmembernames(java.util.Map) -> keepclassmembernames
    462:469:void keepclassmembernames(java.util.Map,groovy.lang.Closure) -> keepclassmembernames
    474:475:void keepclasseswithmembernames(java.lang.String) -> keepclasseswithmembernames
    481:488:void keepclasseswithmembernames(java.util.Map,java.lang.String) -> keepclasseswithmembernames
    493:494:void keepclasseswithmembernames(java.util.Map) -> keepclasseswithmembernames
    500:507:void keepclasseswithmembernames(java.util.Map,groovy.lang.Closure) -> keepclasseswithmembernames
    512:513:java.lang.Object getprintseeds() -> getprintseeds
    518:519:void printseeds() -> printseeds
    524:525:void printseeds(java.lang.Object) -> printseeds
    530:531:java.lang.Object getdontshrink() -> getdontshrink
    536:537:void dontshrink() -> dontshrink
    542:543:java.lang.Object getprintusage() -> getprintusage
    548:549:void printusage() -> printusage
    554:555:void printusage(java.lang.Object) -> printusage
    560:563:void whyareyoukeeping(java.lang.String) -> whyareyoukeeping
    568:569:void whyareyoukeeping(java.util.Map) -> whyareyoukeeping
    575:579:void whyareyoukeeping(java.util.Map,groovy.lang.Closure) -> whyareyoukeeping
    584:585:java.lang.Object getdontoptimize() -> getdontoptimize
    590:591:void dontoptimize() -> dontoptimize
    595:597:void optimizations(java.lang.String) -> optimizations
    602:603:void optimizationpasses(int) -> optimizationpasses
    608:611:void assumenosideeffects(java.lang.String) -> assumenosideeffects
    617:621:void assumenosideeffects(java.util.Map,groovy.lang.Closure) -> assumenosideeffects
    626:627:java.lang.Object getallowaccessmodification() -> getallowaccessmodification
    632:633:void allowaccessmodification() -> allowaccessmodification
    638:639:java.lang.Object getmergeinterfacesaggressively() -> getmergeinterfacesaggressively
    644:645:void mergeinterfacesaggressively() -> mergeinterfacesaggressively
    650:651:java.lang.Object getdontobfuscate() -> getdontobfuscate
    656:657:void dontobfuscate() -> dontobfuscate
    662:663:java.lang.Object getprintmapping() -> getprintmapping
    668:669:void printmapping() -> printmapping
    674:675:void printmapping(java.lang.Object) -> printmapping
    680:681:void applymapping(java.lang.Object) -> applymapping
    686:688:void obfuscationdictionary(java.lang.Object) -> obfuscationdictionary
    693:695:void classobfuscationdictionary(java.lang.Object) -> classobfuscationdictionary
    700:702:void packageobfuscationdictionary(java.lang.Object) -> packageobfuscationdictionary
    707:708:java.lang.Object getoverloadaggressively() -> getoverloadaggressively
    713:714:void overloadaggressively() -> overloadaggressively
    719:720:java.lang.Object getuseuniqueclassmembernames() -> getuseuniqueclassmembernames
    725:726:void useuniqueclassmembernames() -> useuniqueclassmembernames
    731:732:java.lang.Object getdontusemixedcaseclassnames() -> getdontusemixedcaseclassnames
    737:738:void dontusemixedcaseclassnames() -> dontusemixedcaseclassnames
    743:744:java.lang.Object getkeeppackagenames() -> getkeeppackagenames
    749:750:void keeppackagenames() -> keeppackagenames
    754:756:void keeppackagenames(java.lang.String) -> keeppackagenames
    761:762:java.lang.Object getflattenpackagehierarchy() -> getflattenpackagehierarchy
    767:768:void flattenpackagehierarchy() -> flattenpackagehierarchy
    772:774:void flattenpackagehierarchy(java.lang.String) -> flattenpackagehierarchy
    779:780:java.lang.Object getrepackageclasses() -> getrepackageclasses
    785:786:void repackageclasses() -> repackageclasses
    790:792:void repackageclasses(java.lang.String) -> repackageclasses
    797:798:java.lang.Object getkeepattributes() -> getkeepattributes
    803:804:void keepattributes() -> keepattributes
    808:810:void keepattributes(java.lang.String) -> keepattributes
    815:816:java.lang.Object getkeepparameternames() -> getkeepparameternames
    821:822:void keepparameternames() -> keepparameternames
    827:828:java.lang.Object getrenamesourcefileattribute() -> getrenamesourcefileattribute
    833:834:void renamesourcefileattribute() -> renamesourcefileattribute
    838:839:void renamesourcefileattribute(java.lang.String) -> renamesourcefileattribute
    844:845:java.lang.Object getadaptclassstrings() -> getadaptclassstrings
    850:851:void adaptclassstrings() -> adaptclassstrings
    855:857:void adaptclassstrings(java.lang.String) -> adaptclassstrings
    862:863:java.lang.Object getadaptresourcefilenames() -> getadaptresourcefilenames
    868:869:void adaptresourcefilenames() -> adaptresourcefilenames
    873:875:void adaptresourcefilenames(java.lang.String) -> adaptresourcefilenames
    880:881:java.lang.Object getadaptresourcefilecontents() -> getadaptresourcefilecontents
    886:887:void adaptresourcefilecontents() -> adaptresourcefilecontents
    891:893:void adaptresourcefilecontents(java.lang.String) -> adaptresourcefilecontents
    898:899:java.lang.Object getdontpreverify() -> getdontpreverify
    904:905:void dontpreverify() -> dontpreverify
    910:911:java.lang.Object getmicroedition() -> getmicroedition
    916:917:void microedition() -> microedition
    922:923:java.lang.Object getverbose() -> getverbose
    928:929:void verbose() -> verbose
    934:935:java.lang.Object getdontnote() -> getdontnote
    940:941:void dontnote() -> dontnote
    945:946:void dontnote(java.lang.String) -> dontnote
    952:953:java.lang.Object getdontwarn() -> getdontwarn
    958:959:void dontwarn() -> dontwarn
    963:964:void dontwarn(java.lang.String) -> dontwarn
    970:971:java.lang.Object getignorewarnings() -> getignorewarnings
    976:977:void ignorewarnings() -> ignorewarnings
    982:983:java.lang.Object getprintconfiguration() -> getprintconfiguration
    988:989:void printconfiguration() -> printconfiguration
    994:996:void printconfiguration(java.lang.Object) -> printconfiguration
    1001:1002:java.lang.Object getdump() -> getdump
    1007:1008:void dump() -> dump
    1013:1014:void dump(java.lang.Object) -> dump
    1022:1030:void field(java.util.Map) -> field
    1036:1044:void constructor(java.util.Map) -> constructor
    1050:1058:void method(java.util.Map) -> method
    1069:1076:void proguard() -> proguard
    1087:1154:proguard.Configuration getConfiguration() -> a
    1169:1201:proguard.ClassPath extendClassPath(proguard.ClassPath,java.lang.Object,java.util.Map,boolean) -> a
    1216:1219:proguard.KeepClassSpecification createKeepClassSpecification(boolean,boolean,boolean,java.util.Map,java.lang.String) -> a
    1239:1242:proguard.KeepClassSpecification createKeepClassSpecification(boolean,boolean,boolean,java.util.Map,groovy.lang.Closure) -> a
    1261:1261:proguard.KeepClassSpecification createKeepClassSpecification(boolean,boolean,boolean,java.util.Map,proguard.ClassSpecification) -> a
    1281:1295:proguard.ClassSpecification createClassSpecification(java.lang.String) -> a
    1309:1340:proguard.ClassSpecification createClassSpecification(java.util.Map,groovy.lang.Closure) -> a
    1353:1403:int requiredClassAccessFlags(boolean,java.lang.String,java.lang.String) -> a
    1416:1464:proguard.MemberSpecification createMemberSpecification(boolean,boolean,java.util.Map) -> a
    1480:1522:int requiredMemberAccessFlags(boolean,java.lang.String) -> a
    1531:1538:boolean retrieveBoolean(java.util.Map,java.lang.String,boolean) -> a
    1549:1556:java.util.List extendClassSpecifications(java.util.List,proguard.ClassSpecification) -> a
    1588:1588:java.util.List extendFilter(java.util.List,java.lang.String) -> a
    1601:1622:java.util.List extendFilter(java.util.List,java.lang.String,boolean) -> a
proguard.io.CascadingDataEntryWriter -> proguard.io.CascadingDataEntryWriter:
    proguard.io.DataEntryWriter dataEntryWriter1 -> a
    proguard.io.DataEntryWriter dataEntryWriter2 -> b
    47:50:void <init>(proguard.io.DataEntryWriter,proguard.io.DataEntryWriter) -> <init>
    60:60:boolean createDirectory(proguard.io.DataEntry) -> createDirectory
    67:67:java.io.OutputStream getOutputStream(proguard.io.DataEntry) -> getOutputStream
    75:80:java.io.OutputStream getOutputStream(proguard.io.DataEntry,proguard.io.Finisher) -> getOutputStream
    88:93:void close() -> close
proguard.io.ClassFilter -> proguard.io.ClassFilter:
    41:42:void <init>(proguard.io.DataEntryReader) -> <init>
    52:56:void <init>(proguard.io.DataEntryReader,proguard.io.DataEntryReader) -> <init>
proguard.io.ClassReader -> proguard.io.ClassReader:
    boolean isLibrary -> a
    boolean skipNonPublicLibraryClasses -> b
    boolean skipNonPublicLibraryClassMembers -> c
    proguard.classfile.util.WarningPrinter warningPrinter -> d
    proguard.classfile.visitor.ClassVisitor classVisitor -> e
    60:66:void <init>(boolean,boolean,boolean,proguard.classfile.util.WarningPrinter,proguard.classfile.visitor.ClassVisitor) -> <init>
    76:114:void read(proguard.io.DataEntry) -> read
proguard.io.ClassRewriter -> proguard.io.ClassRewriter:
    proguard.classfile.ClassPool classPool -> a
    proguard.io.DataEntryWriter dataEntryWriter -> b
    43:46:void <init>(proguard.classfile.ClassPool,proguard.io.DataEntryWriter) -> <init>
    53:79:void read(proguard.io.DataEntry) -> read
proguard.io.DataEntry -> proguard.io.DataEntry:
    java.lang.String getName() -> getName
    boolean isDirectory() -> isDirectory
    java.io.InputStream getInputStream() -> getInputStream
    void closeInputStream() -> closeInputStream
    proguard.io.DataEntry getParent() -> getParent
proguard.io.DataEntryClassWriter -> proguard.io.DataEntryClassWriter:
    proguard.io.DataEntryWriter dataEntryWriter -> a
    proguard.io.DataEntry templateDataEntry -> b
    50:53:void <init>(proguard.io.DataEntryWriter,proguard.io.DataEntry) -> <init>
    61:84:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
proguard.io.DataEntryCopier -> proguard.io.DataEntryCopier:
    proguard.io.DataEntryWriter dataEntryWriter -> a
    byte[] buffer -> b
    39:46:void <init>(proguard.io.DataEntryWriter) -> <init>
    55:88:void read(proguard.io.DataEntry) -> read
    101:110:void copyData(java.io.InputStream,java.io.OutputStream) -> copyData
    120:359:void main(java.lang.String[]) -> main
proguard.io.DataEntryDirectoryFilter -> proguard.io.DataEntryDirectoryFilter:
    29:29:void <init>() -> <init>
    36:36:boolean accepts(proguard.io.DataEntry) -> accepts
proguard.io.DataEntryFilter -> proguard.io.DataEntryFilter:
    boolean accepts(proguard.io.DataEntry) -> accepts
proguard.io.DataEntryNameFilter -> proguard.io.DataEntryNameFilter:
    proguard.util.StringMatcher stringMatcher -> a
    43:45:void <init>(proguard.util.StringMatcher) -> <init>
    52:52:boolean accepts(proguard.io.DataEntry) -> accepts
proguard.io.DataEntryObfuscator -> proguard.io.DataEntryObfuscator:
    proguard.classfile.ClassPool classPool -> a
    java.util.Map packagePrefixMap -> b
    proguard.io.DataEntryReader dataEntryReader -> c
    54:58:void <init>(proguard.classfile.ClassPool,java.util.Map,proguard.io.DataEntryReader) -> <init>
    66:67:void read(proguard.io.DataEntry) -> read
    75:148:proguard.io.DataEntry renamedDataEntry(proguard.io.DataEntry) -> a
proguard.io.DataEntryParentFilter -> proguard.io.DataEntryParentFilter:
    proguard.io.DataEntryFilter dataEntryFilter -> a
    40:42:void <init>(proguard.io.DataEntryFilter) -> <init>
    49:49:boolean accepts(proguard.io.DataEntry) -> accepts
proguard.io.DataEntryPump -> proguard.io.DataEntryPump:
    void pumpDataEntries(proguard.io.DataEntryReader) -> pumpDataEntries
proguard.io.DataEntryReader -> proguard.io.DataEntryReader:
    void read(proguard.io.DataEntry) -> read
proguard.io.DataEntryRenamer -> proguard.io.DataEntryRenamer:
    java.util.Map nameMap -> a
    proguard.io.DataEntryReader renamedDataEntryReader -> b
    proguard.io.DataEntryReader missingDataEntryReader -> c
    51:52:void <init>(java.util.Map,proguard.io.DataEntryReader) -> <init>
    67:71:void <init>(java.util.Map,proguard.io.DataEntryReader,proguard.io.DataEntryReader) -> <init>
    78:103:void read(proguard.io.DataEntry) -> read
proguard.io.DataEntryRewriter -> proguard.io.DataEntryRewriter:
    proguard.classfile.ClassPool classPool -> a
    45:48:void <init>(proguard.classfile.ClassPool,proguard.io.DataEntryWriter) -> <init>
    57:64:void copyData(java.io.InputStream,java.io.OutputStream) -> copyData
    75:107:void copyData(java.io.Reader,java.io.Writer) -> copyData
    119:147:void writeUpdatedWord(java.io.Writer,java.lang.String) -> a
proguard.io.DataEntryWriter -> proguard.io.DataEntryWriter:
    boolean createDirectory(proguard.io.DataEntry) -> createDirectory
    java.io.OutputStream getOutputStream(proguard.io.DataEntry) -> getOutputStream
    java.io.OutputStream getOutputStream(proguard.io.DataEntry,proguard.io.Finisher) -> getOutputStream
    void close() -> close
proguard.io.DirectoryFilter -> proguard.io.DirectoryFilter:
    37:38:void <init>(proguard.io.DataEntryReader) -> <init>
    48:51:void <init>(proguard.io.DataEntryReader,proguard.io.DataEntryReader) -> <init>
proguard.io.DirectoryPump -> proguard.io.DirectoryPump:
    java.io.File directory -> a
    38:40:void <init>(java.io.File) -> <init>
    48:54:void pumpDataEntries(proguard.io.DataEntryReader) -> pumpDataEntries
    65:77:void readFiles(java.io.File,proguard.io.DataEntryReader) -> a
proguard.io.DirectoryWriter -> proguard.io.DirectoryWriter:
    java.io.File baseFile -> a
    boolean isFile -> b
    java.io.File currentFile -> c
    java.io.OutputStream currentOutputStream -> d
    proguard.io.Finisher currentFinisher -> e
    50:53:void <init>(java.io.File,boolean) -> <init>
    61:74:boolean createDirectory(proguard.io.DataEntry) -> createDirectory
    80:80:java.io.OutputStream getOutputStream(proguard.io.DataEntry) -> getOutputStream
    87:118:java.io.OutputStream getOutputStream(proguard.io.DataEntry,proguard.io.Finisher) -> getOutputStream
    125:126:void close() -> close
    137:137:java.io.File getFile(proguard.io.DataEntry) -> a
    151:164:void closeEntry() -> a
proguard.io.FileDataEntry -> proguard.io.FileDataEntry:
    java.io.File directory -> a
    java.io.File file -> b
    java.io.InputStream inputStream -> c
    41:44:void <init>(java.io.File,java.io.File) -> <init>
    52:52:java.lang.String getName() -> getName
    62:62:boolean isDirectory() -> isDirectory
    68:73:java.io.InputStream getInputStream() -> getInputStream
    79:81:void closeInputStream() -> closeInputStream
    86:86:proguard.io.DataEntry getParent() -> getParent
    94:94:java.lang.String toString() -> toString
proguard.io.FilteredDataEntryReader -> proguard.io.FilteredDataEntryReader:
    proguard.io.DataEntryFilter dataEntryFilter -> a
    proguard.io.DataEntryReader acceptedDataEntryReader -> b
    proguard.io.DataEntryReader rejectedDataEntryReader -> c
    51:52:void <init>(proguard.io.DataEntryFilter,proguard.io.DataEntryReader) -> <init>
    69:73:void <init>(proguard.io.DataEntryFilter,proguard.io.DataEntryReader,proguard.io.DataEntryReader) -> <init>
    81:89:void read(proguard.io.DataEntry) -> read
proguard.io.FilteredDataEntryWriter -> proguard.io.FilteredDataEntryWriter:
    proguard.io.DataEntryFilter dataEntryFilter -> a
    proguard.io.DataEntryWriter acceptedDataEntryWriter -> b
    proguard.io.DataEntryWriter rejectedDataEntryWriter -> c
    50:51:void <init>(proguard.io.DataEntryFilter,proguard.io.DataEntryWriter) -> <init>
    68:72:void <init>(proguard.io.DataEntryFilter,proguard.io.DataEntryWriter,proguard.io.DataEntryWriter) -> <init>
    80:85:boolean createDirectory(proguard.io.DataEntry) -> createDirectory
    92:92:java.io.OutputStream getOutputStream(proguard.io.DataEntry) -> getOutputStream
    100:105:java.io.OutputStream getOutputStream(proguard.io.DataEntry,proguard.io.Finisher) -> getOutputStream
    113:124:void close() -> close
proguard.io.Finisher -> proguard.io.Finisher:
    void finish() -> finish
proguard.io.JarReader -> proguard.io.JarReader:
    proguard.io.DataEntryReader dataEntryReader -> a
    41:43:void <init>(proguard.io.DataEntryReader) -> <init>
    50:74:void read(proguard.io.DataEntry) -> read
proguard.io.JarWriter -> proguard.io.JarWriter:
    proguard.io.DataEntryWriter dataEntryWriter -> a
    java.util.jar.Manifest manifest -> b
    java.lang.String comment -> c
    java.io.OutputStream currentParentOutputStream -> d
    java.util.zip.ZipOutputStream currentJarOutputStream -> e
    proguard.io.Finisher currentFinisher -> f
    proguard.io.DataEntry currentDataEntry -> g
    java.util.Set jarEntryNames -> h
    56:57:void <init>(proguard.io.DataEntryWriter) -> <init>
    48:70:void <init>(proguard.io.DataEntryWriter,java.util.jar.Manifest,java.lang.String) -> <init>
    78:104:boolean createDirectory(proguard.io.DataEntry) -> createDirectory
    110:110:java.io.OutputStream getOutputStream(proguard.io.DataEntry) -> getOutputStream
    118:149:java.io.OutputStream getOutputStream(proguard.io.DataEntry,proguard.io.Finisher) -> getOutputStream
    156:167:void finish() -> finish
    173:174:void close() -> close
    186:212:boolean prepareEntry(proguard.io.DataEntry) -> a
    221:233:void closeEntry() -> a
proguard.io.ManifestRewriter -> proguard.io.ManifestRewriter:
    42:43:void <init>(proguard.classfile.ClassPool,proguard.io.DataEntryWriter) -> <init>
    52:54:void copyData(java.io.Reader,java.io.Writer) -> copyData
proguard.io.ManifestRewriter$SplitLineReader -> proguard.io.a:
    int bufferedCharacter -> a
    65:71:void <init>(java.io.Reader) -> <init>
    81:113:int read() -> read
    120:132:int read(char[],int,int) -> read
    139:151:long skip(long) -> skip
proguard.io.ManifestRewriter$SplitLineWriter -> proguard.io.b:
    int counter -> a
    161:167:void <init>(java.io.Writer) -> <init>
    175:194:void write(int) -> write
    199:203:void write(char[],int,int) -> write
    208:209:void write(java.lang.String,int,int) -> write
proguard.io.NameFilter -> proguard.io.NameFilter:
    42:43:void <init>(java.lang.String,proguard.io.DataEntryReader) -> <init>
    54:57:void <init>(java.lang.String,proguard.io.DataEntryReader,proguard.io.DataEntryReader) -> <init>
    67:68:void <init>(java.util.List,proguard.io.DataEntryReader) -> <init>
    79:82:void <init>(java.util.List,proguard.io.DataEntryReader,proguard.io.DataEntryReader) -> <init>
proguard.io.ParentDataEntryWriter -> proguard.io.ParentDataEntryWriter:
    proguard.io.DataEntryWriter dataEntryWriter -> a
    42:44:void <init>(proguard.io.DataEntryWriter) -> <init>
    52:52:boolean createDirectory(proguard.io.DataEntry) -> createDirectory
    58:58:java.io.OutputStream getOutputStream(proguard.io.DataEntry) -> getOutputStream
    65:65:java.io.OutputStream getOutputStream(proguard.io.DataEntry,proguard.io.Finisher) -> getOutputStream
    72:74:void close() -> close
proguard.io.RenamedDataEntry -> proguard.io.RenamedDataEntry:
    proguard.io.DataEntry dataEntry -> a
    java.lang.String name -> b
    39:42:void <init>(proguard.io.DataEntry,java.lang.String) -> <init>
    49:49:java.lang.String getName() -> getName
    55:55:boolean isDirectory() -> isDirectory
    61:61:java.io.InputStream getInputStream() -> getInputStream
    67:68:void closeInputStream() -> closeInputStream
    73:73:proguard.io.DataEntry getParent() -> getParent
    81:81:java.lang.String toString() -> toString
proguard.io.ZipDataEntry -> proguard.io.ZipDataEntry:
    proguard.io.DataEntry parent -> a
    java.util.zip.ZipEntry zipEntry -> b
    java.util.zip.ZipInputStream zipInputStream -> c
    java.io.InputStream bufferedInputStream -> d
    44:48:void <init>(proguard.io.DataEntry,java.util.zip.ZipEntry,java.util.zip.ZipInputStream) -> <init>
    56:61:java.lang.String getName() -> getName
    70:70:boolean isDirectory() -> isDirectory
    76:81:java.io.InputStream getInputStream() -> getInputStream
    87:90:void closeInputStream() -> closeInputStream
    95:95:proguard.io.DataEntry getParent() -> getParent
    103:103:java.lang.String toString() -> toString
proguard.obfuscate.AttributeShrinker -> proguard.obfuscate.AttributeShrinker:
    39:39:void <init>() -> <init>
    50:58:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    64:64:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    72:78:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    83:83:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    89:92:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    104:118:int shrinkArray(proguard.classfile.VisitorAccepter[],int) -> a
proguard.obfuscate.AttributeUsageMarker -> proguard.obfuscate.AttributeUsageMarker:
    java.lang.Object USED -> a
    35:35:void <init>() -> <init>
    47:48:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    59:60:void markAsUsed(proguard.classfile.VisitorAccepter) -> b
    69:69:boolean isUsed(proguard.classfile.VisitorAccepter) -> a
    40:40:void <clinit>() -> <clinit>
proguard.obfuscate.ClassObfuscator -> proguard.obfuscate.ClassObfuscator:
    proguard.obfuscate.DictionaryNameFactory classNameFactory -> a
    proguard.obfuscate.DictionaryNameFactory packageNameFactory -> b
    boolean useMixedCaseClassNames -> c
    proguard.util.StringMatcher keepPackageNamesMatcher -> d
    java.lang.String flattenPackageHierarchy -> e
    java.lang.String repackageClasses -> f
    boolean allowAccessModification -> g
    java.util.Set classNamesToAvoid -> h
    java.util.Map packagePrefixMap -> i
    java.util.Map packagePrefixPackageNameFactoryMap -> j
    java.util.Map packagePrefixClassNameFactoryMap -> k
    java.util.Map packagePrefixNumericClassNameFactoryMap -> l
    java.lang.String newClassName -> m
    boolean numericClassName -> n
    58:134:void <init>(proguard.classfile.ClassPool,proguard.obfuscate.DictionaryNameFactory,proguard.obfuscate.DictionaryNameFactory,boolean,java.util.List,java.lang.String,java.lang.String,boolean) -> <init>
    142:164:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    171:172:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    177:177:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    183:184:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    190:197:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    205:221:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    230:246:boolean isNumericClassName(java.lang.String,java.lang.String) -> a
    255:256:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    336:367:java.lang.String newPackagePrefix(java.lang.String) -> a
    377:395:java.lang.String generateUniquePackagePrefix(java.lang.String) -> b
    411:417:java.lang.String generateUniquePackagePrefix(java.lang.String,proguard.obfuscate.NameFactory) -> a
    427:445:java.lang.String generateUniqueClassName(java.lang.String) -> c
    455:467:java.lang.String generateUniqueNumericClassName(java.lang.String) -> d
    484:500:java.lang.String generateUniqueClassName(java.lang.String,proguard.obfuscate.NameFactory) -> b
    510:510:java.lang.String mixedCaseClassName(java.lang.String) -> e
    523:524:void setNewClassName(proguard.classfile.Clazz,java.lang.String) -> a
    535:537:java.lang.String newClassName(proguard.classfile.Clazz) -> a
    43:43:java.lang.String access$100(proguard.obfuscate.ClassObfuscator,java.lang.String) -> a
    43:43:java.util.Set access$200(proguard.obfuscate.ClassObfuscator) -> a
    43:43:java.lang.String access$300(proguard.obfuscate.ClassObfuscator) -> b
    43:43:boolean access$400(proguard.obfuscate.ClassObfuscator) -> c
    43:43:java.lang.String access$500(proguard.obfuscate.ClassObfuscator) -> d
    43:43:java.util.Map access$600(proguard.obfuscate.ClassObfuscator) -> e
proguard.obfuscate.ClassObfuscator$MyKeepCollector -> proguard.obfuscate.a:
    proguard.obfuscate.ClassObfuscator this$0 -> a
    263:263:void <init>(proguard.obfuscate.ClassObfuscator) -> <init>
    268:289:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    294:294:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    305:324:void mapPackageName(java.lang.String,java.lang.String,boolean) -> a
    263:263:void <init>(proguard.obfuscate.ClassObfuscator,byte) -> <init>
proguard.obfuscate.ClassRenamer -> proguard.obfuscate.ClassRenamer:
    40:40:void <init>() -> <init>
    51:56:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    61:66:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    75:83:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    88:93:void visitLibraryMember(proguard.classfile.LibraryClass,proguard.classfile.LibraryMember) -> visitLibraryMember
    101:108:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
proguard.obfuscate.DictionaryNameFactory -> proguard.obfuscate.DictionaryNameFactory:
    java.util.List names -> a
    proguard.obfuscate.NameFactory nameFactory -> b
    int index -> c
    41:117:void <init>(java.io.File,proguard.obfuscate.NameFactory) -> <init>
    41:135:void <init>(proguard.obfuscate.DictionaryNameFactory,proguard.obfuscate.NameFactory) -> <init>
    142:145:void reset() -> reset
    153:168:java.lang.String nextName() -> nextName
    176:188:void main(java.lang.String[]) -> main
proguard.obfuscate.MapCleaner -> proguard.obfuscate.MapCleaner:
    java.util.Map map -> a
    46:48:void <init>(java.util.Map) -> <init>
    55:56:void visitAnyClass(proguard.classfile.Clazz) -> visitAnyClass
proguard.obfuscate.MappingKeeper -> proguard.obfuscate.MappingKeeper:
    proguard.classfile.ClassPool classPool -> a
    proguard.classfile.util.WarningPrinter warningPrinter -> b
    proguard.classfile.Clazz clazz -> c
    51:54:void <init>(proguard.classfile.ClassPool,proguard.classfile.util.WarningPrinter) -> <init>
    63:95:boolean processClassMapping(java.lang.String,java.lang.String) -> processClassMapping
    105:135:void processFieldMapping(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> processFieldMapping
    149:179:void processMethodMapping(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String) -> processMethodMapping
proguard.obfuscate.MappingPrinter -> proguard.obfuscate.MappingPrinter:
    java.io.PrintStream ps -> a
    boolean printed -> b
    59:60:void <init>() -> <init>
    68:70:void <init>(java.io.PrintStream) -> <init>
    77:89:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    96:109:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    114:135:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    140:140:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    145:146:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    151:242:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    258:308:void printInlinedMethodMapping(java.lang.String,java.lang.String,java.lang.String,proguard.classfile.attribute.LineNumberInfo,java.util.Stack,java.lang.String) -> a
    323:364:void printEnclosingMethodMapping(java.lang.String,java.lang.String,java.lang.String,java.lang.String,proguard.classfile.attribute.LineNumberInfo,java.lang.String) -> a
proguard.obfuscate.MappingProcessor -> proguard.obfuscate.MappingProcessor:
    boolean processClassMapping(java.lang.String,java.lang.String) -> processClassMapping
    void processFieldMapping(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> processFieldMapping
    void processMethodMapping(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String) -> processMethodMapping
proguard.obfuscate.MappingReader -> proguard.obfuscate.MappingReader:
    java.io.File mappingFile -> a
    38:40:void <init>(java.io.File) -> <init>
    49:102:void pump(proguard.obfuscate.MappingProcessor) -> pump
    116:135:java.lang.String processClassMapping(java.lang.String,proguard.obfuscate.MappingProcessor) -> a
    157:237:void processClassMemberMapping(java.lang.String,java.lang.String,proguard.obfuscate.MappingProcessor) -> a
proguard.obfuscate.MemberNameCleaner -> proguard.obfuscate.MemberNameCleaner:
    34:34:void <init>() -> <init>
    40:41:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    46:47:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    52:53:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    58:59:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.obfuscate.MemberNameCollector -> proguard.obfuscate.MemberNameCollector:
    boolean allowAggressiveOverloading -> a
    java.util.Map descriptorMap -> b
    54:57:void <init>(boolean,java.util.Map) -> <init>
    66:104:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
proguard.obfuscate.MemberNameConflictFixer -> proguard.obfuscate.MemberNameConflictFixer:
    boolean allowAggressiveOverloading -> a
    java.util.Map descriptorMap -> b
    proguard.classfile.util.WarningPrinter warningPrinter -> c
    proguard.obfuscate.MemberObfuscator memberObfuscator -> d
    61:66:void <init>(boolean,java.util.Map,proguard.classfile.util.WarningPrinter,proguard.obfuscate.MemberObfuscator) -> <init>
    75:76:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    83:90:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    93:93:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    94:94:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    108:157:void visitMember(proguard.classfile.Clazz,proguard.classfile.Member,boolean) -> a
proguard.obfuscate.MemberNameFilter -> proguard.obfuscate.MemberNameFilter:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    47:49:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    56:60:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    65:69:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    74:78:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    83:87:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    97:97:boolean hasName(proguard.classfile.Clazz) -> a
    106:106:boolean hasName(proguard.classfile.Clazz,proguard.classfile.Method) -> a
    118:118:boolean hasName(proguard.classfile.Member) -> a
proguard.obfuscate.MemberObfuscator -> proguard.obfuscate.MemberObfuscator:
    boolean allowAggressiveOverloading -> a
    proguard.obfuscate.NameFactory nameFactory -> b
    java.util.Map descriptorMap -> c
    61:65:void <init>(boolean,proguard.obfuscate.NameFactory,java.util.Map) -> <init>
    74:115:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
    130:139:java.util.Map retrieveNameMap(java.util.Map,java.lang.String) -> a
    150:161:void setFixedNewMemberName(proguard.classfile.Member,java.lang.String) -> a
    171:172:void setNewMemberName(proguard.classfile.Member,java.lang.String) -> b
    182:184:boolean hasFixedNewMemberName(proguard.classfile.Member) -> a
    197:197:java.lang.String newMemberName(proguard.classfile.Member) -> b
proguard.obfuscate.MemberObfuscator$MyFixedName -> proguard.obfuscate.b:
    java.lang.String newName -> a
    211:213:void <init>(java.lang.String) -> <init>
    220:220:java.lang.Object getVisitorInfo() -> getVisitorInfo
    226:227:void setVisitorInfo(java.lang.Object) -> setVisitorInfo
proguard.obfuscate.MemberSpecialNameFilter -> proguard.obfuscate.MemberSpecialNameFilter:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    48:50:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    57:61:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    66:70:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    75:79:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    84:88:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    99:99:boolean hasSpecialName(proguard.classfile.Member) -> a
proguard.obfuscate.MultiMappingProcessor -> proguard.obfuscate.MultiMappingProcessor:
    proguard.obfuscate.MappingProcessor[] mappingProcessors -> a
    41:43:void <init>(proguard.obfuscate.MappingProcessor[]) -> <init>
    51:59:boolean processClassMapping(java.lang.String,java.lang.String) -> processClassMapping
    69:77:void processFieldMapping(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> processFieldMapping
    91:104:void processMethodMapping(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String) -> processMethodMapping
proguard.obfuscate.NameFactory -> proguard.obfuscate.NameFactory:
    void reset() -> reset
    java.lang.String nextName() -> nextName
proguard.obfuscate.NameFactoryResetter -> proguard.obfuscate.NameFactoryResetter:
    proguard.obfuscate.NameFactory nameFactory -> a
    42:44:void <init>(proguard.obfuscate.NameFactory) -> <init>
    51:52:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    57:58:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.obfuscate.NameMarker -> proguard.obfuscate.c:
    42:42:void <init>() -> <init>
    54:58:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    63:64:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    71:72:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    77:78:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    83:84:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    89:90:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    95:95:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    101:102:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    110:118:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    126:127:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    137:139:void keepClassName(proguard.classfile.Clazz) -> a
    147:149:void keepFieldName(proguard.classfile.Clazz,proguard.classfile.Field) -> a
    157:163:void keepMethodName(proguard.classfile.Clazz,proguard.classfile.Method) -> a
proguard.obfuscate.NumericNameFactory -> proguard.obfuscate.NumericNameFactory:
    int index -> a
    29:29:void <init>() -> <init>
    38:39:void reset() -> reset
    44:44:java.lang.String nextName() -> nextName
proguard.obfuscate.Obfuscator -> proguard.obfuscate.Obfuscator:
    proguard.Configuration configuration -> a
    50:52:void <init>(proguard.Configuration) -> <init>
    62:474:void execute(proguard.classfile.ClassPool,proguard.classfile.ClassPool) -> execute
proguard.obfuscate.ParameterNameMarker -> proguard.obfuscate.ParameterNameMarker:
    proguard.classfile.attribute.visitor.AttributeVisitor attributeUsageMarker -> a
    48:50:void <init>(proguard.classfile.attribute.visitor.AttributeVisitor) -> <init>
    55:55:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    60:87:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    92:119:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    126:126:boolean hasParameters(proguard.classfile.Clazz,proguard.classfile.Method) -> a
proguard.obfuscate.SimpleNameFactory -> proguard.obfuscate.SimpleNameFactory:
    java.util.List cachedMixedCaseNames -> a
    java.util.List cachedLowerCaseNames -> b
    boolean generateMixedCaseNames -> c
    int index -> d
    48:49:void <init>() -> <init>
    40:60:void <init>(boolean) -> <init>
    67:68:void reset() -> reset
    73:73:java.lang.String nextName() -> nextName
    83:97:java.lang.String name(int) -> a
    108:121:java.lang.String newName(int) -> b
    131:131:char charAt(int) -> c
    138:146:void main(java.lang.String[]) -> main
    151:155:void printNameSamples(proguard.obfuscate.SimpleNameFactory,int) -> a
    36:37:void <clinit>() -> <clinit>
proguard.obfuscate.SourceFileRenamer -> proguard.obfuscate.SourceFileRenamer:
    java.lang.String newSourceFileAttribute -> a
    51:53:void <init>(java.lang.String) -> <init>
    61:62:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    67:67:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    73:75:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    81:83:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
proguard.obfuscate.SpecialNameFactory -> proguard.obfuscate.SpecialNameFactory:
    proguard.obfuscate.NameFactory nameFactory -> a
    43:45:void <init>(proguard.obfuscate.NameFactory) -> <init>
    52:53:void reset() -> reset
    58:58:java.lang.String nextName() -> nextName
    69:69:boolean isSpecialName(java.lang.String) -> a
    76:82:void main(java.lang.String[]) -> main
proguard.optimize.BootstrapMethodArgumentShrinker -> proguard.optimize.BootstrapMethodArgumentShrinker:
    long usedParameters -> a
    42:42:void <init>() -> <init>
    56:76:void visitBootstrapMethodInfo(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodInfo) -> visitBootstrapMethodInfo
    84:85:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    91:92:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    97:97:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    102:103:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
proguard.optimize.ChangedCodePrinter -> proguard.optimize.ChangedCodePrinter:
    proguard.classfile.attribute.visitor.AttributeVisitor attributeVisitor -> a
    43:45:void <init>(proguard.classfile.attribute.visitor.AttributeVisitor) -> <init>
    52:53:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    58:59:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    64:65:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    70:71:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    76:77:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    82:83:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    88:89:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    94:95:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    100:101:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    106:107:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    112:113:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    118:119:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    124:125:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    130:131:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    136:137:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    142:143:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    148:149:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    154:155:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    160:161:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    166:167:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    172:173:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    178:179:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    184:185:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    190:191:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    196:197:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    202:203:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    208:209:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    214:215:void visitRuntimeVisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleAnnotationsAttribute) -> visitRuntimeVisibleAnnotationsAttribute
    220:221:void visitRuntimeInvisibleAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleAnnotationsAttribute) -> visitRuntimeInvisibleAnnotationsAttribute
    226:227:void visitRuntimeVisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleParameterAnnotationsAttribute) -> visitRuntimeVisibleParameterAnnotationsAttribute
    232:233:void visitRuntimeInvisibleParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleParameterAnnotationsAttribute) -> visitRuntimeInvisibleParameterAnnotationsAttribute
    238:239:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    244:245:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    250:251:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    256:257:void visitRuntimeVisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeVisibleTypeAnnotationsAttribute) -> visitRuntimeVisibleTypeAnnotationsAttribute
    262:263:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    268:269:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    274:275:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    280:281:void visitRuntimeInvisibleTypeAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.annotation.RuntimeInvisibleTypeAnnotationsAttribute) -> visitRuntimeInvisibleTypeAnnotationsAttribute
    286:287:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    292:306:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    313:326:boolean codeHasChanged(proguard.classfile.attribute.CodeAttribute,byte[]) -> a
    335:349:void printChangedCode(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,byte[]) -> a
proguard.optimize.ConstantMemberFilter -> proguard.optimize.ConstantMemberFilter:
    proguard.classfile.visitor.MemberVisitor constantMemberVisitor -> a
    50:52:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    59:65:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    70:76:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
proguard.optimize.ConstantParameterFilter -> proguard.optimize.ConstantParameterFilter:
    proguard.classfile.visitor.MemberVisitor constantParameterVisitor -> a
    50:52:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    61:77:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
proguard.optimize.DuplicateInitializerFixer -> proguard.optimize.DuplicateInitializerFixer:
    char[] TYPES -> a
    proguard.classfile.visitor.MemberVisitor extraFixedInitializerVisitor -> b
    60:61:void <init>() -> <init>
    70:72:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    80:149:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    154:154:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    160:168:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    173:185:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    191:214:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    42:42:void <clinit>() -> <clinit>
proguard.optimize.DuplicateInitializerInvocationFixer -> proguard.optimize.DuplicateInitializerInvocationFixer:
    proguard.classfile.instruction.visitor.InstructionVisitor extraAddedInstructionVisitor -> a
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> b
    java.lang.String descriptor -> c
    int descriptorLengthDelta -> d
    60:61:void <init>() -> <init>
    49:72:void <init>(proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    77:77:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    84:93:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    98:98:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    103:129:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    137:143:void visitAnyMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyMethodrefConstant
    148:148:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    153:164:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
proguard.optimize.KeepMarker -> proguard.optimize.KeepMarker:
    java.lang.Object KEPT -> a
    37:37:void <init>() -> <init>
    49:50:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    55:56:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    63:64:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    69:70:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    75:76:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    81:82:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    89:90:void markAsKept(proguard.classfile.VisitorAccepter) -> a
    97:100:boolean isKept(proguard.classfile.VisitorAccepter) -> isKept
    42:42:void <clinit>() -> <clinit>
proguard.optimize.KeptClassFilter -> proguard.optimize.KeptClassFilter:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    46:48:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    55:59:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    64:68:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.optimize.KeptMemberFilter -> proguard.optimize.KeptMemberFilter:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    46:48:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    55:59:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    64:68:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    73:77:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    82:86:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.optimize.MemberDescriptorSpecializer -> proguard.optimize.MemberDescriptorSpecializer:
    proguard.classfile.visitor.MemberVisitor extraParameterMemberVisitor -> a
    53:54:void <init>() -> <init>
    64:66:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    73:94:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    101:137:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
proguard.optimize.MethodDescriptorShrinker -> proguard.optimize.MethodDescriptorShrinker:
    proguard.classfile.visitor.MemberVisitor extraMemberVisitor -> a
    60:61:void <init>() -> <init>
    70:72:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    85:133:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    138:138:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    149:169:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    174:214:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    226:260:java.lang.String shrinkDescriptor(proguard.classfile.Method,java.lang.String) -> a
    271:348:proguard.classfile.Clazz[] shrinkReferencedClasses(proguard.classfile.Method,java.lang.String,proguard.classfile.Clazz[]) -> a
proguard.optimize.MethodStaticizer -> proguard.optimize.MethodStaticizer:
    proguard.classfile.visitor.MemberVisitor extraStaticMemberVisitor -> a
    53:54:void <init>() -> <init>
    63:65:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    73:86:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
proguard.optimize.OptimizationInfoMemberFilter -> proguard.optimize.OptimizationInfoMemberFilter:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    48:50:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    59:63:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    69:73:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    79:83:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    89:93:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.optimize.Optimizer -> proguard.optimize.Optimizer:
    java.lang.String[] OPTIMIZATION_NAMES -> OPTIMIZATION_NAMES
    proguard.Configuration configuration -> a
    119:121:void <init>(proguard.Configuration) -> <init>
    131:1036:boolean execute(proguard.classfile.ClassPool,proguard.classfile.ClassPool) -> execute
    1073:1073:java.lang.String disabled(boolean) -> a
    79:79:void <clinit>() -> <clinit>
proguard.optimize.ParameterShrinker -> proguard.optimize.ParameterShrinker:
    proguard.classfile.visitor.MemberVisitor extraVariableMemberVisitor -> a
    proguard.classfile.editor.VariableRemapper variableRemapper -> b
    61:62:void <init>() -> <init>
    53:73:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    78:78:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    84:149:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
proguard.optimize.TailRecursionSimplifier -> proguard.optimize.TailRecursionSimplifier:
    proguard.classfile.instruction.visitor.InstructionVisitor extraTailRecursionVisitor -> a
    proguard.classfile.editor.CodeAttributeComposer codeAttributeComposer -> b
    proguard.optimize.TailRecursionSimplifier$MyRecursionChecker recursionChecker -> c
    proguard.classfile.Method targetMethod -> d
    boolean inlinedAny -> e
    69:70:void <init>() -> <init>
    56:81:void <init>(proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    86:86:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    91:132:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    140:141:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    147:219:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    226:230:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    279:354:void storeParameters(proguard.classfile.Clazz,proguard.classfile.Method) -> a
    39:39:proguard.classfile.Method access$100(proguard.optimize.TailRecursionSimplifier) -> a
proguard.optimize.TailRecursionSimplifier$MyRecursionChecker -> proguard.optimize.a:
    boolean recursive -> a
    proguard.optimize.TailRecursionSimplifier this$0 -> b
    237:237:void <init>(proguard.optimize.TailRecursionSimplifier) -> <init>
    251:251:boolean isRecursive() -> a
    258:259:void visitAnyMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyMethodrefConstant
    266:267:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    237:237:void <init>(proguard.optimize.TailRecursionSimplifier,byte) -> <init>
proguard.optimize.WriteOnlyFieldFilter -> proguard.optimize.WriteOnlyFieldFilter:
    proguard.classfile.visitor.MemberVisitor writeOnlyFieldVisitor -> a
    49:51:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    59:64:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
proguard.optimize.evaluation.EvaluationShrinker -> proguard.optimize.evaluation.EvaluationShrinker:
    proguard.classfile.instruction.visitor.InstructionVisitor extraDeletedInstructionVisitor -> a
    proguard.classfile.instruction.visitor.InstructionVisitor extraAddedInstructionVisitor -> b
    proguard.optimize.evaluation.PartialEvaluator partialEvaluator -> c
    proguard.optimize.evaluation.PartialEvaluator simplePartialEvaluator -> d
    proguard.optimize.info.SideEffectInstructionChecker sideEffectInstructionChecker -> e
    proguard.optimize.evaluation.EvaluationShrinker$MyUnusedParameterSimplifier unusedParameterSimplifier -> f
    proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker producerMarker -> g
    proguard.optimize.evaluation.EvaluationShrinker$MyVariableInitializationMarker variableInitializationMarker -> h
    proguard.optimize.evaluation.EvaluationShrinker$MyStackConsistencyFixer stackConsistencyFixer -> i
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> j
    boolean[][] stacksNecessaryAfter -> k
    boolean[][] stacksSimplifiedBefore -> l
    boolean[] instructionsNecessary -> m
    int maxMarkedOffset -> n
    115:116:void <init>() -> <init>
    95:136:void <init>(proguard.optimize.evaluation.PartialEvaluator,proguard.classfile.instruction.visitor.InstructionVisitor,proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    141:141:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    155:172:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    184:484:void visitCodeAttribute0(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute0
    1443:1458:void markVariableProducers(int,int) -> a
    1474:1489:void markVariableInitializersBefore(int,int) -> b
    1503:1523:void markVariableInitializersAfter(int,int) -> c
    1537:1548:void markStackProducers(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction) -> a
    1565:1573:void conditionallyMarkStackEntryProducers(int,int,int) -> a
    1586:1591:void markStackEntryProducers(int,int) -> d
    1604:1617:void markStackEntryProducers(proguard.evaluation.value.InstructionOffsetValue,int) -> a
    1627:1635:void markInitialization(int) -> a
    1652:1678:void markStraddlingBranches(int,proguard.evaluation.value.InstructionOffsetValue,boolean) -> a
    1686:1694:void markStraddlingBranch$3b4dfe4b(int,int,int) -> b
    1707:1717:void insertPushInstructions(int,boolean,boolean,int) -> a
    1727:1737:byte pushOpcode(int) -> b
    1751:1803:void insertPopInstructions(int,boolean,boolean,int) -> b
    1814:1834:void insertInstruction(int,boolean,boolean,proguard.classfile.instruction.Instruction) -> a
    1846:1877:void insertInstructions$5a6e1dd9(int,boolean,boolean,proguard.classfile.instruction.Instruction[]) -> a
    1888:1895:void replaceByStaticInvocation$3c3f8b3d(int,proguard.classfile.instruction.ConstantInstruction) -> a
    1907:1914:void replaceByInfiniteLoop$3ac35b3b(int) -> c
    1925:1925:boolean isDupOrSwap(proguard.classfile.instruction.Instruction) -> a
    1948:1960:boolean isAnyUnnecessaryInstructionBranchingOver(int,int) -> e
    1971:1990:boolean isAllSmallerThanOrEqual(proguard.evaluation.value.InstructionOffsetValue,int) -> b
    2001:2018:boolean isAnyLargerThan(proguard.evaluation.value.InstructionOffsetValue,int) -> c
    2027:2066:void initializeNecessary(proguard.classfile.attribute.CodeAttribute) -> a
    2077:2100:boolean isVariableInitialization(int,int) -> f
    2114:2125:void markStackEntryAfter(int,int) -> g
    2137:2145:boolean isStackEntriesPresentBefore(int,int,int) -> c
    2159:2165:boolean isStackEntryPresentBefore(int,int) -> h
    2177:2185:boolean isStackEntriesNecessaryAfter(int,int,int) -> d
    2199:2209:boolean isAnyStackEntryNecessaryAfter(proguard.evaluation.value.InstructionOffsetValue,int) -> d
    2223:2223:boolean isStackEntryNecessaryAfter(int,int) -> i
    2231:2232:void markStackSimplificationBefore(int,int) -> j
    2238:2238:boolean isStackSimplifiedBefore(int,int) -> k
    2244:2255:void markInstruction(int) -> d
    2261:2271:boolean isAnyInstructionNecessary(int,int) -> l
    2281:2289:int lastNecessaryInstructionOffset(int) -> e
    2295:2295:boolean isInstructionNecessary(int) -> f
    45:45:void access$400(proguard.optimize.evaluation.EvaluationShrinker,proguard.classfile.Clazz,int,proguard.classfile.instruction.ConstantInstruction) -> a
    45:45:proguard.optimize.evaluation.PartialEvaluator access$500(proguard.optimize.evaluation.EvaluationShrinker) -> a
    45:45:void access$600(proguard.optimize.evaluation.EvaluationShrinker,int,int) -> a
    45:45:void access$700(proguard.optimize.evaluation.EvaluationShrinker,proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction) -> a
    45:45:void access$800(proguard.optimize.evaluation.EvaluationShrinker,int,int,int) -> a
    45:45:void access$900(proguard.optimize.evaluation.EvaluationShrinker,int,int) -> b
    45:45:void access$1000(proguard.optimize.evaluation.EvaluationShrinker,int) -> a
    45:45:void access$1100(proguard.optimize.evaluation.EvaluationShrinker,int,int) -> c
    45:45:void access$1200(proguard.optimize.evaluation.EvaluationShrinker,int,int) -> d
    45:45:boolean access$1300(proguard.optimize.evaluation.EvaluationShrinker,int) -> b
    45:45:boolean access$1400(proguard.optimize.evaluation.EvaluationShrinker,int,int) -> e
    45:45:boolean access$1500(proguard.optimize.evaluation.EvaluationShrinker,int,int) -> f
    45:45:void access$1600(proguard.optimize.evaluation.EvaluationShrinker,int,int) -> g
    45:45:void access$1700(proguard.optimize.evaluation.EvaluationShrinker,int,boolean,boolean,int) -> a
    45:45:void access$1800(proguard.optimize.evaluation.EvaluationShrinker,int,boolean,boolean,int) -> b
    45:45:boolean access$1900(proguard.optimize.evaluation.EvaluationShrinker,int,int) -> h
    45:45:boolean access$2000(proguard.optimize.evaluation.EvaluationShrinker,proguard.classfile.instruction.Instruction) -> a
    45:45:proguard.classfile.editor.CodeAttributeEditor access$2100(proguard.optimize.evaluation.EvaluationShrinker) -> b
    45:45:proguard.classfile.instruction.visitor.InstructionVisitor access$2200(proguard.optimize.evaluation.EvaluationShrinker) -> c
    45:45:boolean access$2300(proguard.optimize.evaluation.EvaluationShrinker,int,int,int) -> b
    45:45:boolean access$2400(proguard.optimize.evaluation.EvaluationShrinker,int,int,int) -> c
proguard.optimize.evaluation.EvaluationShrinker$1 -> proguard.optimize.evaluation.a:
    proguard.evaluation.TracedVariables variables -> a
    proguard.evaluation.TracedStack stack -> b
    int startOffset -> c
    2302:2306:void proguard.optimize.evaluation.PartialEvaluator$MyInstructionBlock.<init>(proguard.evaluation.TracedVariables,proguard.evaluation.TracedStack,int):1302:1306 -> <init>
    3292:3292:void proguard.optimize.evaluation.PartialEvaluator$MyInstructionBlock.<init>(proguard.evaluation.TracedVariables,proguard.evaluation.TracedStack,int,byte):1292:1292 -> <init>
    4292:4292:proguard.evaluation.TracedVariables proguard.optimize.evaluation.PartialEvaluator$MyInstructionBlock.access$100(proguard.optimize.evaluation.PartialEvaluator$MyInstructionBlock):1292:1292 -> a
    5292:5292:proguard.evaluation.TracedStack proguard.optimize.evaluation.PartialEvaluator$MyInstructionBlock.access$200(proguard.optimize.evaluation.PartialEvaluator$MyInstructionBlock):1292:1292 -> b
    6292:6292:int proguard.optimize.evaluation.PartialEvaluator$MyInstructionBlock.access$300(proguard.optimize.evaluation.PartialEvaluator$MyInstructionBlock):1292:1292 -> c
proguard.optimize.evaluation.EvaluationShrinker$MyProducerMarker -> proguard.optimize.evaluation.b:
    proguard.optimize.evaluation.EvaluationShrinker this$0 -> a
    577:577:void <init>(proguard.optimize.evaluation.EvaluationShrinker) -> <init>
    585:586:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    591:637:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    643:651:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    657:663:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    671:680:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    577:577:void <init>(proguard.optimize.evaluation.EvaluationShrinker,byte) -> <init>
proguard.optimize.evaluation.EvaluationShrinker$MyStackConsistencyFixer -> proguard.optimize.evaluation.c:
    proguard.optimize.evaluation.EvaluationShrinker this$0 -> a
    716:716:void <init>(proguard.optimize.evaluation.EvaluationShrinker) -> <init>
    725:925:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    930:1034:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    1055:1064:int fixDupSwap(int,byte,int,int) -> a
    1071:1078:int fixedDup(int,int,int) -> a
    1090:1099:int fixedDup_x1(int,int,int) -> b
    1129:1140:int fixedDup_x2(int,int,int) -> c
    1221:1229:int fixedDup2(int,int,int) -> d
    1279:1288:int fixedDup2_x1(int,int,int) -> e
    1321:1332:int fixedDup2_x2(int,int,int) -> f
    1413:1421:int fixedSwap(int,int,int) -> g
    716:716:void <init>(proguard.optimize.evaluation.EvaluationShrinker,byte) -> <init>
proguard.optimize.evaluation.EvaluationShrinker$MyUnusedParameterSimplifier -> proguard.optimize.evaluation.d:
    int invocationOffset -> a
    proguard.classfile.instruction.ConstantInstruction invocationInstruction -> b
    proguard.optimize.evaluation.EvaluationShrinker this$0 -> c
    491:491:void <init>(proguard.optimize.evaluation.EvaluationShrinker) -> <init>
    503:503:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    508:519:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    526:527:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    532:532:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
    538:568:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    491:491:void <init>(proguard.optimize.evaluation.EvaluationShrinker,byte) -> <init>
proguard.optimize.evaluation.EvaluationShrinker$MyVariableInitializationMarker -> proguard.optimize.evaluation.e:
    proguard.optimize.evaluation.EvaluationShrinker this$0 -> a
    688:688:void <init>(proguard.optimize.evaluation.EvaluationShrinker) -> <init>
    694:694:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    700:706:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    688:688:void <init>(proguard.optimize.evaluation.EvaluationShrinker,byte) -> <init>
proguard.optimize.evaluation.EvaluationSimplifier -> proguard.optimize.evaluation.EvaluationSimplifier:
    int POS_ZERO_FLOAT_BITS -> a
    long POS_ZERO_DOUBLE_BITS -> b
    proguard.classfile.instruction.visitor.InstructionVisitor extraInstructionVisitor -> c
    proguard.optimize.evaluation.PartialEvaluator partialEvaluator -> d
    proguard.optimize.info.SideEffectInstructionChecker sideEffectInstructionChecker -> e
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> f
    69:70:void <init>() -> <init>
    60:86:void <init>(proguard.optimize.evaluation.PartialEvaluator,proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    91:91:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    105:122:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    134:155:void visitCodeAttribute0(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute0
    162:274:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    279:335:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    340:364:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    369:385:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    391:409:void visitTableSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.TableSwitchInstruction) -> visitTableSwitchInstruction
    415:433:void visitLookUpSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.LookUpSwitchInstruction) -> visitLookUpSwitchInstruction
    446:468:void replaceAnyPushInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction) -> a
    479:483:void replaceIntegerPushInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction) -> b
    495:537:void replaceIntegerPushInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction,int) -> a
    548:552:void replaceLongPushInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction) -> c
    564:609:void replaceLongPushInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction,int) -> b
    620:624:void replaceFloatPushInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction) -> d
    636:680:void replaceFloatPushInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction,int) -> c
    691:695:void replaceDoublePushInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction) -> e
    707:753:void replaceDoublePushInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction,int) -> d
    764:774:void replaceReferencePushInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction) -> f
    787:791:void replaceConstantPushInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction,byte,int) -> a
    804:808:void replaceVariablePushInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction,byte,int) -> b
    821:835:void replaceJsrInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.BranchInstruction) -> a
    847:856:void deleteReferencePopInstruction$56647979(int) -> a
    867:889:void replaceBranchInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction) -> g
    903:928:void replaceSimpleEnumSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.TableSwitchInstruction) -> a
    942:976:void replaceSimpleEnumSwitchInstruction$2155b12e(proguard.classfile.Clazz,int,int,proguard.classfile.instruction.TableSwitchInstruction,proguard.evaluation.value.ReferenceValue) -> a
    990:1015:void replaceSimpleEnumSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.LookUpSwitchInstruction) -> a
    1029:1065:void replaceSimpleEnumSwitchInstruction$7f3bb694(proguard.classfile.Clazz,int,int,proguard.classfile.instruction.LookUpSwitchInstruction,proguard.evaluation.value.ReferenceValue) -> a
    1076:1113:void cleanUpSwitchInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.SwitchInstruction) -> a
    1124:1173:void trimSwitchInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.TableSwitchInstruction) -> a
    1184:1236:void trimSwitchInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.LookUpSwitchInstruction) -> a
    1247:1265:void replaceByInfiniteLoop(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction) -> h
    1277:1294:void replaceInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction,proguard.classfile.instruction.Instruction) -> a
    1303:1356:void insertPopInstructions(int,int) -> a
    1371:1391:void replaceSimpleEnumSwitchInstruction(proguard.classfile.Clazz,int,int,proguard.classfile.instruction.SwitchInstruction) -> a
    48:49:void <clinit>() -> <clinit>
proguard.optimize.evaluation.LivenessAnalyzer -> proguard.optimize.evaluation.LivenessAnalyzer:
    proguard.optimize.evaluation.PartialEvaluator partialEvaluator -> a
    long[] isAliveBefore -> b
    long[] isAliveAfter -> c
    long[] isCategory2 -> d
    boolean checkAgain -> e
    long alive -> f
    67:68:void <init>() -> <init>
    53:78:void <init>(proguard.optimize.evaluation.PartialEvaluator) -> <init>
    87:87:boolean isTraced(int) -> isTraced
    97:97:boolean isAliveBefore(int,int) -> isAliveBefore
    108:119:void setAliveBefore(int,int,boolean) -> setAliveBefore
    128:128:boolean isAliveAfter(int,int) -> isAliveAfter
    139:150:void setAliveAfter(int,int,boolean) -> setAliveAfter
    159:159:boolean isCategory2(int,int) -> isCategory2
    170:181:void setCategory2(int,int,boolean) -> setCategory2
    186:186:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    202:340:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    345:345:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    350:370:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    377:381:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    389:411:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    421:439:void initializeArrays(proguard.classfile.attribute.CodeAttribute) -> a
    448:456:long combinedLiveness(proguard.evaluation.value.InstructionOffsetValue) -> a
    499:499:int maxOffset(proguard.evaluation.value.Value) -> a
    508:524:int maxOffset(proguard.evaluation.value.Value,int) -> a
proguard.optimize.evaluation.LoadingInvocationUnit -> proguard.optimize.evaluation.LoadingInvocationUnit:
    boolean loadFieldValues -> a
    boolean loadMethodParameterValues -> b
    boolean loadMethodReturnValues -> c
    48:49:void <init>(proguard.evaluation.value.ValueFactory) -> <init>
    61:66:void <init>(proguard.evaluation.value.ValueFactory,boolean,boolean,boolean) -> <init>
    75:90:proguard.evaluation.value.Value getFieldClassValue(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant,java.lang.String) -> getFieldClassValue
    98:113:proguard.evaluation.value.Value getFieldValue(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant,java.lang.String) -> getFieldValue
    123:133:proguard.evaluation.value.Value getMethodParameterValue(proguard.classfile.Clazz,proguard.classfile.Method,int,java.lang.String,proguard.classfile.Clazz) -> getMethodParameterValue
    145:160:proguard.evaluation.value.Value getMethodReturnValue(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant,java.lang.String) -> getMethodReturnValue
proguard.optimize.evaluation.PartialEvaluator -> proguard.optimize.evaluation.PartialEvaluator:
    int NONE -> NONE
    int AT_METHOD_ENTRY -> AT_METHOD_ENTRY
    int AT_CATCH_ENTRY -> AT_CATCH_ENTRY
    proguard.evaluation.value.ValueFactory valueFactory -> a
    proguard.evaluation.InvocationUnit invocationUnit -> b
    boolean evaluateAllCode -> c
    proguard.evaluation.value.InstructionOffsetValue[] branchOriginValues -> d
    proguard.evaluation.value.InstructionOffsetValue[] branchTargetValues -> e
    proguard.evaluation.TracedVariables[] variablesBefore -> f
    proguard.evaluation.TracedStack[] stacksBefore -> g
    proguard.evaluation.TracedVariables[] variablesAfter -> h
    proguard.evaluation.TracedStack[] stacksAfter -> i
    boolean[] generalizedContexts -> j
    int[] evaluationCounts -> k
    boolean evaluateExceptions -> l
    int codeLength -> m
    proguard.evaluation.BasicBranchUnit branchUnit -> n
    proguard.optimize.peephole.BranchTargetFinder branchTargetFinder -> o
    java.util.Stack callingInstructionBlockStack -> p
    java.util.Stack instructionBlockStack -> q
    88:91:void <init>() -> <init>
    109:117:void <init>(proguard.evaluation.value.ValueFactory,proguard.evaluation.InvocationUnit,boolean) -> <init>
    126:132:void <init>(proguard.optimize.evaluation.PartialEvaluator) -> <init>
    65:169:void <init>(proguard.evaluation.value.ValueFactory,proguard.evaluation.InvocationUnit,boolean,proguard.evaluation.BasicBranchUnit,proguard.optimize.peephole.BranchTargetFinder,java.util.Stack) -> <init>
    174:174:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    188:245:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    260:322:void visitCodeAttribute0(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute0
    330:338:boolean isTraced(int,int) -> isTraced
    348:348:boolean isTraced(int) -> isTraced
    357:357:boolean isInstruction(int) -> isInstruction
    367:367:boolean isBranchOrExceptionTarget(int) -> isBranchOrExceptionTarget
    378:378:boolean isSubroutineStart(int) -> isSubroutineStart
    388:388:boolean isSubroutineInvocation(int) -> isSubroutineInvocation
    398:398:boolean isSubroutine(int) -> isSubroutine
    408:408:boolean isSubroutineReturning(int) -> isSubroutineReturning
    418:418:int subroutineEnd(int) -> subroutineEnd
    429:429:int initializationOffset(int) -> initializationOffset
    438:438:boolean isInitializer() -> isInitializer
    449:449:int superInitializationOffset() -> superInitializationOffset
    462:462:int creationOffset(int) -> creationOffset
    472:472:proguard.evaluation.TracedVariables getVariablesBefore(int) -> getVariablesBefore
    482:482:proguard.evaluation.TracedVariables getVariablesAfter(int) -> getVariablesAfter
    492:492:proguard.evaluation.TracedStack getStackBefore(int) -> getStackBefore
    502:502:proguard.evaluation.TracedStack getStackAfter(int) -> getStackAfter
    512:512:proguard.evaluation.value.InstructionOffsetValue branchOrigins(int) -> branchOrigins
    522:522:proguard.evaluation.value.InstructionOffsetValue branchTargets(int) -> branchTargets
    536:539:void pushCallingInstructionBlock(proguard.evaluation.TracedVariables,proguard.evaluation.TracedStack,int) -> a
    549:552:void pushInstructionBlock(proguard.evaluation.TracedVariables,proguard.evaluation.TracedStack,int) -> b
    567:579:void evaluateInstructionBlockAndExceptionHandlers(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.evaluation.TracedVariables,proguard.evaluation.TracedStack,int,int) -> a
    594:616:void evaluateInstructionBlock(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.evaluation.TracedVariables,proguard.evaluation.TracedStack,int) -> a
    632:899:void evaluateSingleInstructionBlock(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.evaluation.TracedVariables,proguard.evaluation.TracedStack,int) -> b
    914:940:void evaluateSubroutine$6459dbda(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.evaluation.TracedVariables,proguard.evaluation.TracedStack,int) -> c
    953:991:void generalize(proguard.optimize.evaluation.PartialEvaluator,int,int) -> a
    1006:1026:void evaluateExceptionHandlers(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int) -> a
    1033:1105:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    1115:1186:void initializeArrays(proguard.classfile.attribute.CodeAttribute) -> a
    1198:1222:void initializeParameters(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.evaluation.TracedVariables) -> a
    1233:1289:void generalizeVariables(int,int,boolean,proguard.evaluation.TracedVariables) -> a
proguard.optimize.evaluation.SimpleEnumArrayPropagator -> proguard.optimize.evaluation.SimpleEnumArrayPropagator:
    proguard.evaluation.value.ValueFactory valueFactory -> a
    proguard.evaluation.value.Value array -> b
    36:41:void <init>() -> <init>
    51:52:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    60:76:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    80:81:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    88:93:void setMethodReturnValue(proguard.classfile.Method,proguard.evaluation.value.Value) -> a
proguard.optimize.evaluation.SimpleEnumClassChecker -> proguard.optimize.evaluation.SimpleEnumClassChecker:
    proguard.optimize.info.SimpleEnumMarker simpleEnumMarker -> a
    proguard.classfile.visitor.MemberVisitor virtualMethodChecker -> b
    33:44:void <init>() -> <init>
    53:53:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    58:73:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
proguard.optimize.evaluation.SimpleEnumClassSimplifier -> proguard.optimize.evaluation.SimpleEnumClassSimplifier:
    proguard.classfile.constant.Constant[] CONSTANTS -> a
    proguard.classfile.instruction.Instruction[] INSTRUCTIONS -> b
    proguard.classfile.instruction.Instruction[] REPLACEMENT_INSTRUCTIONS -> c
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> d
    proguard.optimize.peephole.InstructionSequenceReplacer instructionSequenceReplacer -> e
    proguard.classfile.visitor.MemberVisitor initializerSimplifier -> f
    42:118:void <init>() -> <init>
    131:145:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    150:150:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    156:163:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    75:100:void <clinit>() -> <clinit>
proguard.optimize.evaluation.SimpleEnumDescriptorSimplifier -> proguard.optimize.evaluation.SimpleEnumDescriptorSimplifier:
    42:42:void <init>() -> <init>
    70:78:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    83:83:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    89:109:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    115:132:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    138:158:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    166:204:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    217:257:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    262:262:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    268:269:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    275:276:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    282:283:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    289:303:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    311:323:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    331:349:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    360:360:java.lang.String simplifyDescriptor(java.lang.String,proguard.classfile.Clazz) -> a
    372:569:java.lang.String simplifyDescriptor(java.lang.String,proguard.classfile.Clazz[]) -> a
    580:761:proguard.classfile.Clazz[] simplifyReferencedClasses(java.lang.String,proguard.classfile.Clazz[]) -> b
    770:770:boolean isSimpleEnum(proguard.classfile.Clazz) -> a
proguard.optimize.evaluation.SimpleEnumUseChecker -> proguard.optimize.evaluation.SimpleEnumUseChecker:
    proguard.optimize.evaluation.PartialEvaluator partialEvaluator -> a
    proguard.classfile.visitor.MemberVisitor methodCodeChecker -> b
    proguard.classfile.constant.visitor.ConstantVisitor invokedMethodChecker -> c
    proguard.classfile.constant.visitor.ConstantVisitor parameterChecker -> d
    proguard.classfile.visitor.ClassVisitor complexEnumMarker -> e
    proguard.classfile.visitor.ReferencedClassVisitor referencedComplexEnumMarker -> f
    int invocationOffset -> g
    75:76:void <init>() -> <init>
    59:87:void <init>(proguard.optimize.evaluation.PartialEvaluator) -> <init>
    94:104:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    109:109:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    115:138:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    145:204:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    209:209:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    214:315:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    320:350:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    355:355:void visitAnySwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SwitchInstruction) -> visitAnySwitchInstruction
    360:360:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    365:376:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    385:408:void visitParameter(proguard.classfile.Clazz,proguard.classfile.Member,int,int,int,int,java.lang.String,proguard.classfile.Clazz) -> visitParameter
    418:418:boolean isSupportedMethod(java.lang.String,java.lang.String) -> a
    432:432:boolean isUnsupportedMethod$16da05f3(java.lang.String) -> a
    443:494:void checkMixedStackEntriesBefore(int) -> a
    503:556:void checkMixedVariablesBefore(int) -> b
    567:574:boolean isPoppingIdenticalTypes(int,int,int) -> a
    586:586:boolean isPoppingExpectedType(int,proguard.classfile.Clazz,int) -> a
    599:599:boolean isPoppingExpectedType(int,int,proguard.classfile.Clazz,int) -> a
    613:618:boolean isPoppingExpectedType(int,int,java.lang.String) -> a
    628:645:boolean isReturningSimpleEnumType(proguard.classfile.Clazz,proguard.classfile.Method) -> a
    665:668:boolean isPoppingSimpleEnumType(int,int) -> a
    678:678:boolean isSimpleEnumType(proguard.evaluation.value.ReferenceValue) -> a
    687:687:boolean isSimpleEnum(proguard.classfile.Clazz) -> a
    697:699:void markConstantComplexEnumType(proguard.classfile.Clazz,int) -> a
    707:708:void markPoppedComplexEnumType(int) -> c
    716:720:void markPoppedComplexEnumType(int,int) -> b
    728:732:void markPushedComplexEnumType(int) -> d
    740:744:void markStoredComplexEnumType(int,int) -> c
    752:757:void markComplexEnumType(proguard.evaluation.value.ReferenceValue) -> b
proguard.optimize.evaluation.SimpleEnumUseSimplifier -> proguard.optimize.evaluation.SimpleEnumUseSimplifier:
    proguard.classfile.instruction.visitor.InstructionVisitor extraInstructionVisitor -> a
    proguard.optimize.evaluation.PartialEvaluator partialEvaluator -> b
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> c
    proguard.classfile.constant.visitor.ConstantVisitor nullParameterFixer -> d
    proguard.classfile.Clazz invocationClazz -> e
    proguard.classfile.Method invocationMethod -> f
    proguard.classfile.attribute.CodeAttribute invocationCodeAttribute -> g
    int invocationOffset -> h
    boolean isSimpleEnum -> i
    76:77:void <init>() -> <init>
    60:93:void <init>(proguard.optimize.evaluation.PartialEvaluator,proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    98:98:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    109:137:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    144:190:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    195:245:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    250:345:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    350:406:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    411:411:void visitAnySwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SwitchInstruction) -> visitAnySwitchInstruction
    416:416:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    422:423:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    429:430:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    439:451:void visitParameter(proguard.classfile.Clazz,proguard.classfile.Member,int,int,int,int,java.lang.String,proguard.classfile.Clazz) -> visitParameter
    462:466:boolean isReferencingSimpleEnum(proguard.classfile.Clazz,int) -> a
    475:493:boolean isReturningSimpleEnum(proguard.classfile.Clazz,proguard.classfile.Method) -> a
    503:508:boolean isPushingSimpleEnum(int) -> a
    519:519:boolean isPoppingSimpleEnum(int) -> b
    529:532:boolean isPoppingSimpleEnum(int,int) -> a
    556:559:boolean isPoppingSimpleEnumArray(int,int) -> b
    569:569:boolean isSimpleEnum(proguard.classfile.Clazz) -> a
    583:597:void replaceSupportedMethod(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction,java.lang.String,java.lang.String) -> a
    610:619:void replaceInstructions(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction,proguard.classfile.instruction.Instruction[]) -> a
    632:649:void replaceInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction,proguard.classfile.instruction.Instruction) -> a
    669:678:void deleteInstruction(proguard.classfile.Clazz,int,proguard.classfile.instruction.Instruction) -> a
    687:740:void insertPopInstructions(int,int) -> c
    752:753:void replaceNullStackEntryProducers(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int) -> a
    766:784:void replaceNullStackEntryProducers$306c982b(proguard.classfile.Clazz,proguard.classfile.attribute.CodeAttribute,int,int) -> a
    797:817:void replaceNullVariableProducers(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int) -> a
proguard.optimize.evaluation.StoringInvocationUnit -> proguard.optimize.evaluation.StoringInvocationUnit:
    boolean storeFieldValues -> a
    boolean storeMethodParameterValues -> b
    boolean storeMethodReturnValues -> c
    49:50:void <init>(proguard.evaluation.value.ValueFactory) -> <init>
    62:67:void <init>(proguard.evaluation.value.ValueFactory,boolean,boolean,boolean) -> <init>
    76:84:void setFieldClassValue(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant,proguard.evaluation.value.ReferenceValue) -> setFieldClassValue
    91:99:void setFieldValue(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant,proguard.evaluation.value.Value) -> setFieldValue
    107:117:void setMethodParameterValue(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant,int,proguard.evaluation.value.Value) -> setMethodParameterValue
    124:128:void setMethodReturnValue(proguard.classfile.Clazz,proguard.classfile.Method,proguard.evaluation.value.Value) -> setMethodReturnValue
    135:140:void generalizeFieldClassValue(proguard.classfile.Field,proguard.evaluation.value.ReferenceValue) -> a
    145:146:proguard.evaluation.value.ReferenceValue getFieldClassValue(proguard.classfile.Field) -> getFieldClassValue
    154:159:void generalizeFieldValue(proguard.classfile.Field,proguard.evaluation.value.Value) -> a
    164:165:proguard.evaluation.value.Value getFieldValue(proguard.classfile.Field) -> getFieldValue
    173:178:void generalizeMethodParameterValue(proguard.classfile.Method,int,proguard.evaluation.value.Value) -> a
    183:184:proguard.evaluation.value.Value getMethodParameterValue(proguard.classfile.Method,int) -> getMethodParameterValue
    192:197:void generalizeMethodReturnValue(proguard.classfile.Method,proguard.evaluation.value.Value) -> a
    202:203:proguard.evaluation.value.Value getMethodReturnValue(proguard.classfile.Method) -> getMethodReturnValue
proguard.optimize.evaluation.TracedBranchUnit -> proguard.optimize.evaluation.f:
    33:33:void <init>() -> <init>
    44:58:void branchConditionally(proguard.classfile.Clazz,proguard.classfile.attribute.CodeAttribute,int,int,int) -> branchConditionally
proguard.optimize.evaluation.VariableOptimizer -> proguard.optimize.evaluation.VariableOptimizer:
    boolean reuseThis -> a
    proguard.classfile.visitor.MemberVisitor extraVariableMemberVisitor -> b
    proguard.optimize.evaluation.LivenessAnalyzer livenessAnalyzer -> c
    proguard.classfile.editor.VariableRemapper variableRemapper -> d
    proguard.classfile.editor.VariableCleaner variableCleaner -> e
    int[] variableMap -> f
    69:70:void <init>(boolean) -> <init>
    54:87:void <init>(boolean,proguard.classfile.visitor.MemberVisitor) -> <init>
    92:92:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    102:180:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    186:187:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    193:194:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    202:217:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    225:240:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    250:257:void initializeArrays(proguard.classfile.attribute.CodeAttribute) -> a
    268:283:boolean areNonOverlapping(int,int,int) -> a
    296:312:void updateLiveness(int,int,int) -> b
    321:330:int firstLiveness(int,int,int) -> c
    340:355:int lastLiveness(int,int,int) -> d
proguard.optimize.info.AccessMethodMarker -> proguard.optimize.info.AccessMethodMarker:
    proguard.classfile.Method invokingMethod -> a
    38:38:void <init>() -> <init>
    50:50:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    55:58:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    63:63:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    69:71:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    77:78:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    84:85:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    91:96:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    102:103:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    110:116:void visitAnyClass(proguard.classfile.Clazz) -> visitAnyClass
    123:137:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
    144:149:void setAccessesPrivateCode(proguard.classfile.Method) -> a
    157:158:boolean accessesPrivateCode(proguard.classfile.Method) -> accessesPrivateCode
    164:169:void setAccessesPackageCode(proguard.classfile.Method) -> b
    178:179:boolean accessesPackageCode(proguard.classfile.Method) -> accessesPackageCode
    185:190:void setAccessesProtectedCode(proguard.classfile.Method) -> c
    198:199:boolean accessesProtectedCode(proguard.classfile.Method) -> accessesProtectedCode
proguard.optimize.info.BackwardBranchMarker -> proguard.optimize.info.BackwardBranchMarker:
    35:35:void <init>() -> <init>
    41:41:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    46:47:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    52:58:void visitAnySwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SwitchInstruction) -> visitAnySwitchInstruction
    68:72:void markBackwardBranch(proguard.classfile.Method,int) -> a
    77:82:void setBranchesBackward(proguard.classfile.Method) -> a
    87:88:boolean branchesBackward(proguard.classfile.Method) -> branchesBackward
proguard.optimize.info.CatchExceptionMarker -> proguard.optimize.info.CatchExceptionMarker:
    33:33:void <init>() -> <init>
    39:39:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    44:48:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    55:60:void markCatchException(proguard.classfile.Method) -> a
    65:66:boolean catchesExceptions(proguard.classfile.Method) -> catchesExceptions
proguard.optimize.info.CaughtClassFilter -> proguard.optimize.info.CaughtClassFilter:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    40:42:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    49:53:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    58:62:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.optimize.info.CaughtClassMarker -> proguard.optimize.info.CaughtClassMarker:
    33:33:void <init>() -> <init>
    38:38:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    42:43:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    50:55:void setCaught(proguard.classfile.Clazz) -> a
    60:61:boolean isCaught(proguard.classfile.Clazz) -> isCaught
proguard.optimize.info.ClassOptimizationInfo -> proguard.optimize.info.ClassOptimizationInfo:
    boolean isInstantiated -> a
    boolean isInstanceofed -> b
    boolean isDotClassed -> c
    boolean isCaught -> d
    boolean isSimpleEnum -> e
    boolean containsStaticInitializer -> f
    boolean containsPackageVisibleMembers -> g
    boolean invokesPackageVisibleMembers -> h
    proguard.classfile.Clazz targetClass -> i
    31:40:void <init>() -> <init>
    46:47:void setInstantiated() -> setInstantiated
    52:52:boolean isInstantiated() -> isInstantiated
    58:59:void setInstanceofed() -> setInstanceofed
    64:64:boolean isInstanceofed() -> isInstanceofed
    70:71:void setDotClassed() -> setDotClassed
    76:76:boolean isDotClassed() -> isDotClassed
    82:83:void setCaught() -> setCaught
    88:88:boolean isCaught() -> isCaught
    94:95:void setSimpleEnum(boolean) -> setSimpleEnum
    100:100:boolean isSimpleEnum() -> isSimpleEnum
    106:107:void setContainsStaticInitializer() -> setContainsStaticInitializer
    112:112:boolean containsStaticInitializer() -> containsStaticInitializer
    118:119:void setContainsPackageVisibleMembers() -> setContainsPackageVisibleMembers
    124:124:boolean containsPackageVisibleMembers() -> containsPackageVisibleMembers
    130:131:void setInvokesPackageVisibleMembers() -> setInvokesPackageVisibleMembers
    136:136:boolean invokesPackageVisibleMembers() -> invokesPackageVisibleMembers
    142:143:void setTargetClass(proguard.classfile.Clazz) -> setTargetClass
    148:148:proguard.classfile.Clazz getTargetClass() -> getTargetClass
    154:161:void merge(proguard.optimize.info.ClassOptimizationInfo) -> merge
    166:167:void setClassOptimizationInfo(proguard.classfile.Clazz) -> setClassOptimizationInfo
    172:173:proguard.optimize.info.ClassOptimizationInfo getClassOptimizationInfo(proguard.classfile.Clazz) -> getClassOptimizationInfo
proguard.optimize.info.ClassOptimizationInfoSetter -> proguard.optimize.info.ClassOptimizationInfoSetter:
    34:34:void <init>() -> <init>
    42:46:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
proguard.optimize.info.DotClassFilter -> proguard.optimize.info.DotClassFilter:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    40:42:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    49:53:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    58:62:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.optimize.info.DotClassMarker -> proguard.optimize.info.DotClassMarker:
    38:38:void <init>() -> <init>
    46:46:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    51:56:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    61:61:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    65:66:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    71:71:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    75:76:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    83:88:void setDotClassed(proguard.classfile.Clazz) -> a
    93:94:boolean isDotClassed(proguard.classfile.Clazz) -> isDotClassed
proguard.optimize.info.DynamicInvocationMarker -> proguard.optimize.info.DynamicInvocationMarker:
    38:38:void <init>() -> <init>
    47:47:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    52:56:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    63:68:void setInvokesDynamically(proguard.classfile.Method) -> a
    76:77:boolean invokesDynamically(proguard.classfile.Method) -> invokesDynamically
proguard.optimize.info.ExceptionInstructionChecker -> proguard.optimize.info.ExceptionInstructionChecker:
    34:34:void <init>() -> <init>
    51:51:boolean mayThrowExceptions(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> mayThrowExceptions
    68:91:boolean mayThrowExceptions(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int) -> mayThrowExceptions
    103:105:boolean mayThrowExceptions(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int) -> mayThrowExceptions
    122:122:boolean mayThrowExceptions(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> mayThrowExceptions
    134:134:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    145:174:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    180:206:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
proguard.optimize.info.FieldOptimizationInfo -> proguard.optimize.info.FieldOptimizationInfo:
    proguard.evaluation.value.ParticularValueFactory VALUE_FACTORY -> a
    proguard.evaluation.ConstantValueFactory CONSTANT_VALUE_FACTORY -> b
    proguard.evaluation.value.InitialValueFactory INITIAL_VALUE_FACTORY -> c
    boolean isWritten -> d
    boolean isRead -> e
    boolean canBeMadePrivate -> f
    proguard.evaluation.value.ReferenceValue referencedClass -> g
    proguard.evaluation.value.Value value -> h
    46:59:void <init>(proguard.classfile.Clazz,proguard.classfile.Field) -> <init>
    46:69:void <init>(proguard.optimize.info.FieldOptimizationInfo) -> <init>
    74:75:void setWritten() -> setWritten
    80:80:boolean isWritten() -> isWritten
    86:87:void setRead() -> setRead
    92:92:boolean isRead() -> isRead
    98:99:void setCanNotBeMadePrivate() -> setCanNotBeMadePrivate
    104:104:boolean canBeMadePrivate() -> canBeMadePrivate
    110:113:void generalizeReferencedClass(proguard.evaluation.value.ReferenceValue) -> generalizeReferencedClass
    118:118:proguard.evaluation.value.ReferenceValue getReferencedClass() -> getReferencedClass
    124:143:void resetValue(proguard.classfile.Clazz,proguard.classfile.Field) -> resetValue
    148:151:void generalizeValue(proguard.evaluation.value.Value) -> generalizeValue
    156:156:proguard.evaluation.value.Value getValue() -> getValue
    162:162:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    168:169:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    176:177:void setFieldOptimizationInfo(proguard.classfile.Clazz,proguard.classfile.Field) -> setFieldOptimizationInfo
    182:184:proguard.optimize.info.FieldOptimizationInfo getFieldOptimizationInfo(proguard.classfile.Field) -> getFieldOptimizationInfo
    40:42:void <clinit>() -> <clinit>
proguard.optimize.info.InstanceofClassFilter -> proguard.optimize.info.InstanceofClassFilter:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    40:42:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    49:53:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    58:62:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.optimize.info.InstanceofClassMarker -> proguard.optimize.info.InstanceofClassMarker:
    38:38:void <init>() -> <init>
    46:46:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    51:55:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    62:63:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    68:68:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    72:73:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    80:85:void setInstanceofed(proguard.classfile.Clazz) -> a
    90:91:boolean isInstanceofed(proguard.classfile.Clazz) -> isInstanceofed
proguard.optimize.info.InstantiationClassFilter -> proguard.optimize.info.InstantiationClassFilter:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    39:41:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    48:52:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    57:61:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.optimize.info.InstantiationClassMarker -> proguard.optimize.info.InstantiationClassMarker:
    38:38:void <init>() -> <init>
    46:46:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    51:55:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    62:63:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    68:68:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    72:73:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    80:85:void setInstantiated(proguard.classfile.Clazz) -> a
    90:91:boolean isInstantiated(proguard.classfile.Clazz) -> isInstantiated
proguard.optimize.info.MemberOptimizationInfoSetter -> proguard.optimize.info.MemberOptimizationInfoSetter:
    35:35:void <init>() -> <init>
    43:48:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    53:58:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
proguard.optimize.info.MethodInvocationMarker -> proguard.optimize.info.MethodInvocationMarker:
    38:38:void <init>() -> <init>
    46:46:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    51:52:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    57:57:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    63:64:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    70:71:void visitAnyMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyMethodrefConstant
    76:76:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
    81:82:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    89:94:void incrementInvocationCount(proguard.classfile.Method) -> a
    103:104:int getInvocationCount(proguard.classfile.Method) -> getInvocationCount
proguard.optimize.info.MethodOptimizationInfo -> proguard.optimize.info.MethodOptimizationInfo:
    boolean hasNoSideEffects -> a
    boolean hasSideEffects -> b
    boolean canBeMadePrivate -> c
    boolean catchesExceptions -> d
    boolean branchesBackward -> e
    boolean invokesSuperMethods -> f
    boolean invokesDynamically -> g
    boolean accessesPrivateCode -> h
    boolean accessesPackageCode -> i
    boolean accessesProtectedCode -> j
    int invocationCount -> k
    int parameterSize -> l
    long usedParameters -> m
    proguard.evaluation.value.Value[] parameters -> n
    proguard.evaluation.value.Value returnValue -> o
    35:71:void <init>(proguard.classfile.Clazz,proguard.classfile.Method) -> <init>
    76:77:void setNoSideEffects() -> setNoSideEffects
    82:82:boolean hasNoSideEffects() -> hasNoSideEffects
    88:89:void setSideEffects() -> setSideEffects
    94:94:boolean hasSideEffects() -> hasSideEffects
    100:101:void setCanNotBeMadePrivate() -> setCanNotBeMadePrivate
    106:106:boolean canBeMadePrivate() -> canBeMadePrivate
    112:113:void setCatchesExceptions() -> setCatchesExceptions
    118:118:boolean catchesExceptions() -> catchesExceptions
    124:125:void setBranchesBackward() -> setBranchesBackward
    130:130:boolean branchesBackward() -> branchesBackward
    136:137:void setInvokesSuperMethods() -> setInvokesSuperMethods
    142:142:boolean invokesSuperMethods() -> invokesSuperMethods
    148:149:void setInvokesDynamically() -> setInvokesDynamically
    154:154:boolean invokesDynamically() -> invokesDynamically
    160:161:void setAccessesPrivateCode() -> setAccessesPrivateCode
    166:166:boolean accessesPrivateCode() -> accessesPrivateCode
    172:173:void setAccessesPackageCode() -> setAccessesPackageCode
    178:178:boolean accessesPackageCode() -> accessesPackageCode
    184:185:void setAccessesProtectedCode() -> setAccessesProtectedCode
    190:190:boolean accessesProtectedCode() -> accessesProtectedCode
    196:197:void incrementInvocationCount() -> incrementInvocationCount
    202:202:int getInvocationCount() -> getInvocationCount
    208:209:void setParameterSize(int) -> setParameterSize
    214:214:int getParameterSize() -> getParameterSize
    220:221:void setParameterUsed(int) -> setParameterUsed
    226:227:void setUsedParameters(long) -> setUsedParameters
    232:232:boolean isParameterUsed(int) -> isParameterUsed
    238:238:long getUsedParameters() -> getUsedParameters
    244:247:void generalizeParameter(int,proguard.evaluation.value.Value) -> generalizeParameter
    252:252:proguard.evaluation.value.Value getParameter(int) -> getParameter
    260:263:void generalizeReturnValue(proguard.evaluation.value.Value) -> generalizeReturnValue
    268:268:proguard.evaluation.value.Value getReturnValue() -> getReturnValue
    275:276:void setReturnValue(proguard.evaluation.value.Value) -> setReturnValue
    281:306:void merge(proguard.optimize.info.MethodOptimizationInfo) -> merge
    311:312:void setMethodOptimizationInfo(proguard.classfile.Clazz,proguard.classfile.Method) -> setMethodOptimizationInfo
    317:319:proguard.optimize.info.MethodOptimizationInfo getMethodOptimizationInfo(proguard.classfile.Method) -> getMethodOptimizationInfo
proguard.optimize.info.NoSideEffectMethodMarker -> proguard.optimize.info.NoSideEffectMethodMarker:
    java.lang.Object KEPT_BUT_NO_SIDE_EFFECTS -> KEPT_BUT_NO_SIDE_EFFECTS
    35:35:void <init>() -> <init>
    49:49:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
    54:55:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    60:61:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    68:77:void markNoSideEffects(proguard.classfile.Method) -> a
    82:88:boolean hasNoSideEffects(proguard.classfile.Method) -> hasNoSideEffects
    41:41:void <clinit>() -> <clinit>
proguard.optimize.info.NonPrivateMemberMarker -> proguard.optimize.info.NonPrivateMemberMarker:
    proguard.classfile.visitor.MethodImplementationFilter filteredMethodMarker -> a
    35:41:void <init>() -> <init>
    49:63:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    69:70:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    75:75:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    82:83:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    88:100:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    107:108:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    113:114:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    119:120:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    125:126:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    133:138:void markCanNotBeMadePrivate(proguard.classfile.Field) -> a
    146:147:boolean canBeMadePrivate(proguard.classfile.Field) -> canBeMadePrivate
    154:159:void markCanNotBeMadePrivate(proguard.classfile.Method) -> a
    167:168:boolean canBeMadePrivate(proguard.classfile.Method) -> canBeMadePrivate
proguard.optimize.info.PackageVisibleMemberContainingClassMarker -> proguard.optimize.info.PackageVisibleMemberContainingClassMarker:
    32:32:void <init>() -> <init>
    42:52:void visitAnyClass(proguard.classfile.Clazz) -> visitAnyClass
    59:65:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
    72:77:void setPackageVisibleMembers(proguard.classfile.Clazz) -> a
    82:83:boolean containsPackageVisibleMembers(proguard.classfile.Clazz) -> containsPackageVisibleMembers
proguard.optimize.info.PackageVisibleMemberInvokingClassMarker -> proguard.optimize.info.PackageVisibleMemberInvokingClassMarker:
    proguard.classfile.Clazz referencingClass -> a
    35:35:void <init>() -> <init>
    46:46:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    52:59:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    65:72:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    78:84:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    91:96:void visitAnyClass(proguard.classfile.Clazz) -> visitAnyClass
    103:109:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
    116:121:void setInvokesPackageVisibleMembers(proguard.classfile.Clazz) -> a
    126:127:boolean invokesPackageVisibleMembers(proguard.classfile.Clazz) -> invokesPackageVisibleMembers
proguard.optimize.info.ParameterUsageMarker -> proguard.optimize.info.ParameterUsageMarker:
    boolean markThisParameter -> a
    boolean markAllParameters -> b
    proguard.optimize.evaluation.PartialEvaluator partialEvaluator -> c
    59:60:void <init>() -> <init>
    51:75:void <init>(boolean,boolean) -> <init>
    82:153:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    159:165:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    170:170:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    176:180:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    185:185:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    190:212:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    222:227:void setParameterSize(proguard.classfile.Method,int) -> a
    235:236:int getParameterSize(proguard.classfile.Method) -> getParameterSize
    245:250:void markParameterUsed(proguard.classfile.Method,int) -> markParameterUsed
    258:263:void markUsedParameters(proguard.classfile.Method,long) -> markUsedParameters
    271:272:boolean isParameterUsed(proguard.classfile.Method,int) -> isParameterUsed
    282:283:long getUsedParameters(proguard.classfile.Method) -> getUsedParameters
proguard.optimize.info.ReadWriteFieldMarker -> proguard.optimize.info.ReadWriteFieldMarker:
    boolean reading -> a
    boolean writing -> b
    37:45:void <init>() -> <init>
    50:50:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    55:84:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    89:89:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    95:96:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    102:103:void visitFieldrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.FieldrefConstant) -> visitFieldrefConstant
    108:108:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
    114:124:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    131:136:void markAsRead(proguard.classfile.Field) -> a
    141:142:boolean isRead(proguard.classfile.Field) -> isRead
    149:154:void markAsWritten(proguard.classfile.Field) -> b
    159:160:boolean isWritten(proguard.classfile.Field) -> isWritten
proguard.optimize.info.SideEffectInstructionChecker -> proguard.optimize.info.SideEffectInstructionChecker:
    boolean OPTIMIZE_CONSERVATIVELY -> a
    boolean includeReturnInstructions -> b
    boolean includeLocalFieldAccess -> c
    boolean writingField -> d
    proguard.classfile.Clazz referencingClass -> e
    boolean hasSideEffects -> f
    72:75:void <init>(boolean,boolean) -> <init>
    88:92:boolean hasSideEffects(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> hasSideEffects
    98:98:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    103:155:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    160:170:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    175:252:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    257:267:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    275:276:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    282:289:void visitFieldrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.FieldrefConstant) -> visitFieldrefConstant
    295:302:void visitAnyMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyMethodrefConstant
    309:314:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    321:325:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    330:331:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    336:338:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    350:350:boolean mayHaveSideEffects(proguard.classfile.Clazz,proguard.classfile.Clazz) -> a
    361:373:java.util.Set initializedSuperClasses(proguard.classfile.Clazz) -> a
    51:51:void <clinit>() -> <clinit>
proguard.optimize.info.SideEffectMethodFilter -> proguard.optimize.info.SideEffectMethodFilter:
    proguard.classfile.visitor.MemberVisitor memberVisitor -> a
    46:48:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    53:53:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    54:54:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    59:63:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    68:72:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.optimize.info.SideEffectMethodMarker -> proguard.optimize.info.SideEffectMethodMarker:
    proguard.optimize.info.SideEffectInstructionChecker sideEffectInstructionChecker -> a
    proguard.optimize.info.SideEffectInstructionChecker initializerSideEffectInstructionChecker -> b
    int newSideEffectCount -> c
    boolean hasSideEffects -> d
    37:46:void <init>() -> <init>
    61:67:void visitClassPool(proguard.classfile.ClassPool) -> visitClassPool
    75:76:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    83:107:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    112:112:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    118:119:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    131:161:boolean hasSideEffects(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> a
    167:172:void markSideEffects(proguard.classfile.Method) -> a
    177:178:boolean hasSideEffects(proguard.classfile.Method) -> hasSideEffects
proguard.optimize.info.SimpleEnumFilter -> proguard.optimize.info.SimpleEnumFilter:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    40:42:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    49:53:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    58:62:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.optimize.info.SimpleEnumMarker -> proguard.optimize.info.SimpleEnumMarker:
    boolean simple -> a
    43:45:void <init>(boolean) -> <init>
    50:50:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    54:55:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    62:67:void setSimpleEnum(proguard.classfile.Clazz) -> a
    72:73:boolean isSimpleEnum(proguard.classfile.Clazz) -> isSimpleEnum
proguard.optimize.info.StaticInitializerContainingClassFilter -> proguard.optimize.info.StaticInitializerContainingClassFilter:
    proguard.classfile.visitor.ClassVisitor classVisitor -> a
    39:41:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    48:52:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    57:61:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.optimize.info.StaticInitializerContainingClassMarker -> proguard.optimize.info.StaticInitializerContainingClassMarker:
    32:32:void <init>() -> <init>
    40:45:void visitAnyClass(proguard.classfile.Clazz) -> visitAnyClass
    52:57:void setStaticInitializer(proguard.classfile.Clazz) -> a
    62:63:boolean containsStaticInitializer(proguard.classfile.Clazz) -> containsStaticInitializer
proguard.optimize.info.SuperInvocationMarker -> proguard.optimize.info.SuperInvocationMarker:
    boolean invokesSuperMethods -> a
    37:37:void <init>() -> <init>
    47:47:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    52:63:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    70:73:void visitAnyMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyMethodrefConstant
    80:85:void setInvokesSuperMethods(proguard.classfile.Method) -> a
    90:91:boolean invokesSuperMethods(proguard.classfile.Method) -> invokesSuperMethods
proguard.optimize.info.VariableUsageMarker -> proguard.optimize.info.VariableUsageMarker:
    boolean[] variableUsed -> a
    38:43:void <init>() -> <init>
    51:51:boolean isVariableUsed(int) -> isVariableUsed
    57:57:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    62:77:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    82:82:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    88:95:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
proguard.optimize.peephole.BranchTargetFinder -> proguard.optimize.peephole.BranchTargetFinder:
    int NONE -> NONE
    int UNKNOWN -> UNKNOWN
    int NO_SUBROUTINE -> NO_SUBROUTINE
    short[] instructionMarks -> a
    int[] subroutineStarts -> b
    int[] subroutineEnds -> c
    int[] creationOffsets -> d
    int[] initializationOffsets -> e
    int superInitializationOffset -> f
    boolean containsSubroutines -> g
    boolean repeat -> h
    int currentSubroutineStart -> i
    int[] recentCreationOffsets -> j
    int recentCreationOffsetIndex -> k
    boolean isInitializer -> l
    40:87:void <init>() -> <init>
    98:98:boolean isInstruction(int) -> isInstruction
    108:108:boolean isTarget(int) -> isTarget
    122:122:boolean isBranchOrigin(int) -> isBranchOrigin
    132:132:boolean isBranchTarget(int) -> isBranchTarget
    143:143:boolean isAfterBranch(int) -> isAfterBranch
    153:153:boolean isExceptionStart(int) -> isExceptionStart
    163:163:boolean isExceptionEnd(int) -> isExceptionEnd
    173:173:boolean isExceptionHandler(int) -> isExceptionHandler
    183:183:boolean isSubroutineInvocation(int) -> isSubroutineInvocation
    193:193:boolean isSubroutineStart(int) -> isSubroutineStart
    203:203:boolean isSubroutine(int) -> isSubroutine
    213:213:boolean isSubroutineReturning(int) -> isSubroutineReturning
    223:223:int subroutineStart(int) -> subroutineStart
    233:233:int subroutineEnd(int) -> subroutineEnd
    243:243:boolean isNew(int) -> isNew
    254:254:int initializationOffset(int) -> initializationOffset
    264:264:boolean isInitializer() -> isInitializer
    275:275:int superInitializationOffset() -> superInitializationOffset
    286:286:boolean isInitializer(int) -> isInitializer
    299:299:int creationOffset(int) -> creationOffset
    309:309:boolean containsSubroutines() -> containsSubroutines
    315:315:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    325:450:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    458:477:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    483:524:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    530:549:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    554:591:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    597:610:void visitAnySwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SwitchInstruction) -> visitAnySwitchInstruction
    615:615:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    621:622:void visitMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodrefConstant) -> visitMethodrefConstant
    629:647:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    658:662:void markBranches(int,int[]) -> a
    670:676:void markBranch(int,int) -> a
    683:684:void markBranchOrigin(int) -> a
    692:695:void markBranchTarget(int,int) -> b
    705:727:void markBranchSubroutineStart(int,int,int) -> a
    735:739:void markAfterBranchOrigin(int) -> b
    748:760:void checkSubroutine(int) -> c
proguard.optimize.peephole.ClassFinalizer -> proguard.optimize.peephole.ClassFinalizer:
    proguard.classfile.visitor.ClassVisitor extraClassVisitor -> a
    46:47:void <init>() -> <init>
    56:58:void <init>(proguard.classfile.visitor.ClassVisitor) -> <init>
    69:83:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
proguard.optimize.peephole.ClassMerger -> proguard.optimize.peephole.ClassMerger:
    proguard.classfile.ProgramClass targetClass -> a
    boolean allowAccessModification -> b
    boolean mergeInterfacesAggressively -> c
    proguard.classfile.visitor.ClassVisitor extraClassVisitor -> d
    proguard.classfile.visitor.MemberVisitor fieldOptimizationInfoCopier -> e
    83:84:void <init>(proguard.classfile.ProgramClass,boolean,boolean) -> <init>
    65:109:void <init>(proguard.classfile.ProgramClass,boolean,boolean,proguard.classfile.visitor.ClassVisitor) -> <init>
    124:141:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    145:366:void visitProgramClass0(proguard.classfile.ProgramClass) -> visitProgramClass0
    372:372:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    392:392:boolean isOnlySubClass(proguard.classfile.Clazz,proguard.classfile.ProgramClass) -> a
    403:416:java.util.Set indirectlyImplementedInterfaces(proguard.classfile.Clazz) -> a
    425:433:java.util.Set subInterfaces(proguard.classfile.Clazz,proguard.classfile.Clazz) -> a
    442:450:java.util.Set initializedSuperClasses(proguard.classfile.Clazz) -> b
    460:468:java.util.Set instanceofedSuperClasses(proguard.classfile.Clazz) -> c
    478:491:java.util.Set caughtSuperClasses(proguard.classfile.Clazz) -> d
    501:508:boolean haveAnyIdenticalFields(proguard.classfile.Clazz,proguard.classfile.Clazz) -> b
    521:534:boolean introducesUnwantedFields(proguard.classfile.ProgramClass,proguard.classfile.ProgramClass) -> a
    544:554:boolean shadowsAnyFields(proguard.classfile.Clazz,proguard.classfile.Clazz) -> c
    564:573:boolean haveAnyIdenticalMethods(proguard.classfile.Clazz,proguard.classfile.Clazz) -> d
    586:609:boolean introducesUnwantedAbstractMethods(proguard.classfile.Clazz,proguard.classfile.ProgramClass) -> b
    619:630:boolean overridesAnyMethods(proguard.classfile.Clazz,proguard.classfile.Clazz) -> e
    640:662:boolean shadowsAnyMethods(proguard.classfile.Clazz,proguard.classfile.Clazz) -> f
    668:673:void setTargetClass(proguard.classfile.Clazz,proguard.classfile.Clazz) -> setTargetClass
    678:696:proguard.classfile.Clazz getTargetClass(proguard.classfile.Clazz) -> getTargetClass
proguard.optimize.peephole.ClassMerger$1 -> proguard.optimize.peephole.a:
    int lineNumberShift -> a
    int enclosingLineNumber -> b
    java.lang.String enclosingSource -> c
    1244:1248:void proguard.optimize.peephole.LineNumberLinearizer$MyLineNumberBlock.<init>(int,int,java.lang.String):244:248 -> <init>
proguard.optimize.peephole.ClassMerger$FieldOptimizationInfoCopier -> proguard.optimize.peephole.b:
    703:703:void <init>() -> <init>
    710:716:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    722:722:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    703:703:void <init>(byte) -> <init>
proguard.optimize.peephole.GotoCommonCodeReplacer -> proguard.optimize.peephole.GotoCommonCodeReplacer:
    proguard.classfile.instruction.visitor.InstructionVisitor extraInstructionVisitor -> a
    proguard.optimize.peephole.BranchTargetFinder branchTargetFinder -> b
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> c
    52:64:void <init>(proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    69:69:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    79:89:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    94:94:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    101:148:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    160:221:int commonByteCodeCount(proguard.classfile.attribute.CodeAttribute,int,int) -> a
    231:231:boolean isPop(byte) -> a
    244:261:boolean exceptionBoundary$4a7c733e(int,int) -> a
proguard.optimize.peephole.GotoGotoReplacer -> proguard.optimize.peephole.GotoGotoReplacer:
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> a
    proguard.classfile.instruction.visitor.InstructionVisitor extraInstructionVisitor -> b
    51:52:void <init>(proguard.classfile.editor.CodeAttributeEditor) -> <init>
    64:67:void <init>(proguard.classfile.editor.CodeAttributeEditor,proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    72:72:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    78:114:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
proguard.optimize.peephole.GotoReturnReplacer -> proguard.optimize.peephole.GotoReturnReplacer:
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> a
    proguard.classfile.instruction.visitor.InstructionVisitor extraInstructionVisitor -> b
    51:52:void <init>(proguard.classfile.editor.CodeAttributeEditor) -> <init>
    64:67:void <init>(proguard.classfile.editor.CodeAttributeEditor,proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    72:72:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    78:114:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
proguard.optimize.peephole.HorizontalClassMerger -> proguard.optimize.peephole.HorizontalClassMerger:
    boolean allowAccessModification -> a
    boolean mergeInterfacesAggressively -> b
    proguard.classfile.visitor.ClassVisitor extraClassVisitor -> c
    54:55:void <init>(boolean,boolean) -> <init>
    71:75:void <init>(boolean,boolean,proguard.classfile.visitor.ClassVisitor) -> <init>
    82:88:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
proguard.optimize.peephole.InstructionSequenceConstants -> proguard.optimize.peephole.InstructionSequenceConstants:
    proguard.classfile.constant.Constant[] CONSTANTS -> CONSTANTS
    proguard.classfile.instruction.Instruction[][][] VARIABLE -> VARIABLE
    proguard.classfile.instruction.Instruction[][][] ARITHMETIC -> ARITHMETIC
    proguard.classfile.instruction.Instruction[][][] FIELD -> FIELD
    proguard.classfile.instruction.Instruction[][][] CAST -> CAST
    proguard.classfile.instruction.Instruction[][][] BRANCH -> BRANCH
    proguard.classfile.instruction.Instruction[][][] STRING -> STRING
    36:36:void <init>() -> <init>
    5038:5089:void main(java.lang.String[]) -> main
    226:3587:void <clinit>() -> <clinit>
proguard.optimize.peephole.InstructionSequenceReplacer -> proguard.optimize.peephole.InstructionSequenceReplacer:
    int X -> X
    int Y -> Y
    int Z -> Z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int STRING_A_LENGTH -> STRING_A_LENGTH
    int BOOLEAN_A_STRING -> BOOLEAN_A_STRING
    int CHAR_A_STRING -> CHAR_A_STRING
    int INT_A_STRING -> INT_A_STRING
    int LONG_A_STRING -> LONG_A_STRING
    int FLOAT_A_STRING -> FLOAT_A_STRING
    int DOUBLE_A_STRING -> DOUBLE_A_STRING
    int STRING_A_STRING -> STRING_A_STRING
    int BOOLEAN_B_STRING -> BOOLEAN_B_STRING
    int CHAR_B_STRING -> CHAR_B_STRING
    int INT_B_STRING -> INT_B_STRING
    int LONG_B_STRING -> LONG_B_STRING
    int FLOAT_B_STRING -> FLOAT_B_STRING
    int DOUBLE_B_STRING -> DOUBLE_B_STRING
    int STRING_B_STRING -> STRING_B_STRING
    proguard.classfile.util.InstructionSequenceMatcher instructionSequenceMatcher -> a
    proguard.classfile.constant.Constant[] patternConstants -> b
    proguard.classfile.instruction.Instruction[] replacementInstructions -> c
    proguard.optimize.peephole.BranchTargetFinder branchTargetFinder -> d
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> e
    proguard.classfile.instruction.visitor.InstructionVisitor extraInstructionVisitor -> f
    proguard.optimize.peephole.InstructionSequenceReplacer$MyReplacementInstructionFactory replacementInstructionFactory -> g
    113:119:void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[],proguard.classfile.instruction.Instruction[],proguard.optimize.peephole.BranchTargetFinder,proguard.classfile.editor.CodeAttributeEditor) -> <init>
    92:147:void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[],proguard.classfile.instruction.Instruction[],proguard.optimize.peephole.BranchTargetFinder,proguard.classfile.editor.CodeAttributeEditor,proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    156:210:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    221:229:boolean matchedInstructionsUnmodified() -> a
    40:40:proguard.classfile.util.InstructionSequenceMatcher access$100(proguard.optimize.peephole.InstructionSequenceReplacer) -> a
    40:40:proguard.classfile.instruction.Instruction[] access$200(proguard.optimize.peephole.InstructionSequenceReplacer) -> b
    40:40:proguard.classfile.constant.Constant[] access$300(proguard.optimize.peephole.InstructionSequenceReplacer) -> c
proguard.optimize.peephole.InstructionSequenceReplacer$MyReplacementInstructionFactory -> proguard.optimize.peephole.c:
    proguard.classfile.instruction.Instruction replacementInstruction -> a
    proguard.optimize.peephole.InstructionSequenceReplacer this$0 -> b
    237:237:void <init>(proguard.optimize.peephole.InstructionSequenceReplacer) -> <init>
    250:257:proguard.classfile.instruction.Instruction create(proguard.classfile.Clazz,int) -> a
    265:268:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    273:277:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    282:287:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    292:296:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    301:309:void visitTableSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.TableSwitchInstruction) -> visitTableSwitchInstruction
    314:319:void visitLookUpSwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.LookUpSwitchInstruction) -> visitLookUpSwitchInstruction
    328:335:int matchedArgument(proguard.classfile.Clazz,int) -> b
    346:372:int matchedConstantIndex(proguard.classfile.ProgramClass,int) -> a
    380:417:java.lang.String argumentAsString(proguard.classfile.ProgramClass,int,int) -> a
    237:237:void <init>(proguard.optimize.peephole.InstructionSequenceReplacer,byte) -> <init>
proguard.optimize.peephole.InstructionSequencesReplacer -> proguard.optimize.peephole.InstructionSequencesReplacer:
    61:66:void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[][][],proguard.optimize.peephole.BranchTargetFinder,proguard.classfile.editor.CodeAttributeEditor) -> <init>
    91:96:void <init>(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[][][],proguard.optimize.peephole.BranchTargetFinder,proguard.classfile.editor.CodeAttributeEditor,proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    121:136:proguard.classfile.instruction.visitor.InstructionVisitor[] createInstructionSequenceReplacers(proguard.classfile.constant.Constant[],proguard.classfile.instruction.Instruction[][][],proguard.optimize.peephole.BranchTargetFinder,proguard.classfile.editor.CodeAttributeEditor,proguard.classfile.instruction.visitor.InstructionVisitor) -> a
proguard.optimize.peephole.LineNumberLinearizer -> proguard.optimize.peephole.LineNumberLinearizer:
    int SHIFT_ROUNDING -> SHIFT_ROUNDING
    java.util.Stack enclosingLineNumbers -> a
    proguard.classfile.attribute.LineNumberInfo previousLineNumberInfo -> b
    int highestUsedLineNumber -> c
    int currentLineNumberShift -> d
    40:235:void <init>() -> <init>
    64:80:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    87:88:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    93:93:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    98:99:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    109:114:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    121:228:void visitLineNumberInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberInfo) -> visitLineNumberInfo
proguard.optimize.peephole.MemberPrivatizer -> proguard.optimize.peephole.MemberPrivatizer:
    proguard.classfile.visitor.MemberVisitor extraMemberVisitor -> a
    50:51:void <init>() -> <init>
    60:62:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    70:83:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    89:102:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
proguard.optimize.peephole.MethodFinalizer -> proguard.optimize.peephole.MethodFinalizer:
    proguard.classfile.visitor.MemberVisitor extraMemberVisitor -> a
    proguard.classfile.util.MemberFinder memberFinder -> b
    48:49:void <init>() -> <init>
    40:60:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    67:92:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
proguard.optimize.peephole.MethodInliner -> proguard.optimize.peephole.MethodInliner:
    int MAXIMUM_INLINED_CODE_LENGTH -> a
    int MAXIMUM_RESULTING_CODE_LENGTH_JSE -> b
    int MAXIMUM_RESULTING_CODE_LENGTH_JME -> c
    boolean microEdition -> d
    boolean allowAccessModification -> e
    boolean inlineSingleInvocations -> f
    proguard.classfile.instruction.visitor.InstructionVisitor extraInlinedInvocationVisitor -> g
    proguard.classfile.editor.CodeAttributeComposer codeAttributeComposer -> h
    proguard.optimize.info.AccessMethodMarker accessMethodMarker -> i
    proguard.optimize.info.CatchExceptionMarker catchExceptionMarker -> j
    proguard.classfile.attribute.visitor.StackSizeComputer stackSizeComputer -> k
    proguard.classfile.ProgramClass targetClass -> l
    proguard.classfile.ProgramMethod targetMethod -> m
    proguard.classfile.editor.ConstantAdder constantAdder -> n
    proguard.classfile.editor.ExceptionInfoAdder exceptionInfoAdder -> o
    int estimatedResultingCodeLength -> p
    boolean inlining -> q
    java.util.Stack inliningMethods -> r
    boolean emptyInvokingStack -> s
    int uninitializedObjectCount -> t
    int variableOffset -> u
    boolean inlined -> v
    boolean inlinedAny -> w
    boolean copiedLineNumbers -> x
    java.lang.String source -> y
    int minimumLineNumberIndex -> z
    108:112:void <init>(boolean,boolean,boolean) -> <init>
    71:137:void <init>(boolean,boolean,boolean,proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    142:142:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    152:180:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    185:252:void visitCodeAttribute0(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute0
    258:271:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    280:356:void storeParameters(proguard.classfile.Clazz,proguard.classfile.Method) -> a
    366:421:void copyCode(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> a
    428:429:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    435:469:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    475:482:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    488:540:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    547:548:void visitAnyMethodrefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyMethodrefConstant
    553:553:void visitAnyMember(proguard.classfile.Clazz,proguard.classfile.Member) -> visitAnyMember
    558:653:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    660:673:void visitLineNumberInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberInfo) -> visitLineNumberInfo
    681:689:java.util.Set initializedSuperClasses(proguard.classfile.Clazz) -> a
    55:57:void <clinit>() -> <clinit>
proguard.optimize.peephole.NopRemover -> proguard.optimize.peephole.NopRemover:
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> a
    proguard.classfile.instruction.visitor.InstructionVisitor extraInstructionVisitor -> b
    50:51:void <init>(proguard.classfile.editor.CodeAttributeEditor) -> <init>
    63:66:void <init>(proguard.classfile.editor.CodeAttributeEditor,proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    71:71:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    77:88:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
proguard.optimize.peephole.PeepholeOptimizer -> proguard.optimize.peephole.PeepholeOptimizer:
    proguard.optimize.peephole.BranchTargetFinder branchTargetFinder -> a
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> b
    proguard.classfile.instruction.visitor.InstructionVisitor instructionVisitor -> c
    57:58:void <init>(proguard.classfile.editor.CodeAttributeEditor,proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    74:78:void <init>(proguard.optimize.peephole.BranchTargetFinder,proguard.classfile.editor.CodeAttributeEditor,proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    83:83:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    88:102:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
proguard.optimize.peephole.ReachableCodeMarker -> proguard.optimize.peephole.ReachableCodeMarker:
    boolean[] isReachable -> a
    boolean next -> b
    boolean evaluateExceptions -> c
    38:44:void <init>() -> <init>
    56:56:boolean isReachable(int) -> isReachable
    67:75:boolean isReachable(int,int) -> isReachable
    81:81:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    87:110:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    117:128:void visitSimpleInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SimpleInstruction) -> visitSimpleInstruction
    133:133:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    138:142:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    148:159:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    165:178:void visitAnySwitchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.SwitchInstruction) -> visitAnySwitchInstruction
    186:193:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    204:208:void markBranchTargets(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int[]) -> a
    216:221:void markBranchTarget(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int) -> a
    229:261:void markCode(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int) -> b
proguard.optimize.peephole.RetargetedInnerClassAttributeRemover -> proguard.optimize.peephole.RetargetedInnerClassAttributeRemover:
    boolean retargeted -> a
    40:40:void <init>() -> <init>
    54:79:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    84:84:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    90:125:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    131:135:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    143:145:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    153:154:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    164:169:void checkTarget(proguard.classfile.Clazz) -> a
proguard.optimize.peephole.TargetClassChanger -> proguard.optimize.peephole.TargetClassChanger:
    43:43:void <init>() -> <init>
    65:135:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    141:143:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    151:156:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    162:166:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    172:174:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    180:181:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    186:186:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    192:206:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    212:213:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    218:243:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    249:251:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    256:256:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    262:263:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    269:270:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    276:277:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    283:284:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    290:291:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    297:298:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    304:305:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    313:315:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    323:324:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    332:336:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    343:357:void visitAnyElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ElementValue) -> visitAnyElementValue
    363:364:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    370:374:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    380:384:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    390:394:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    400:404:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    417:425:boolean containsInterfaceClass(proguard.classfile.Clazz,int,proguard.classfile.Clazz) -> a
    434:444:void updateReferencedClasses(proguard.classfile.Clazz[]) -> a
    452:458:proguard.classfile.Clazz updateReferencedClass(proguard.classfile.Clazz) -> a
    472:477:proguard.classfile.Member updateReferencedMember(proguard.classfile.Member,java.lang.String,java.lang.String,proguard.classfile.Clazz) -> a
    491:500:int addNewClassConstant(proguard.classfile.ProgramClass,java.lang.String,proguard.classfile.Clazz) -> a
proguard.optimize.peephole.UnreachableCodeRemover -> proguard.optimize.peephole.UnreachableCodeRemover:
    proguard.classfile.instruction.visitor.InstructionVisitor extraInstructionVisitor -> a
    proguard.optimize.peephole.ReachableCodeMarker reachableCodeMarker -> b
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> c
    59:60:void <init>() -> <init>
    50:71:void <init>(proguard.classfile.instruction.visitor.InstructionVisitor) -> <init>
    76:76:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    90:101:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    111:118:void visitCodeAttribute0(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute0
    131:142:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
proguard.optimize.peephole.UnreachableExceptionRemover -> proguard.optimize.peephole.UnreachableExceptionRemover:
    proguard.classfile.attribute.visitor.ExceptionInfoVisitor extraExceptionInfoVisitor -> a
    49:50:void <init>() -> <init>
    59:61:void <init>(proguard.classfile.attribute.visitor.ExceptionInfoVisitor) -> <init>
    66:66:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    72:78:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    85:99:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    113:132:boolean mayThrowExceptions$306c9827(proguard.classfile.attribute.CodeAttribute,int,int) -> a
    144:154:int removeEmptyExceptions(proguard.classfile.attribute.ExceptionInfo[],int) -> a
proguard.optimize.peephole.VariableShrinker -> proguard.optimize.peephole.VariableShrinker:
    proguard.classfile.visitor.MemberVisitor extraVariableMemberVisitor -> a
    proguard.optimize.info.VariableUsageMarker variableUsageMarker -> b
    proguard.classfile.editor.VariableEditor variableEditor -> c
    59:60:void <init>() -> <init>
    50:71:void <init>(proguard.classfile.visitor.MemberVisitor) -> <init>
    76:76:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    81:128:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
proguard.optimize.peephole.VerticalClassMerger -> proguard.optimize.peephole.VerticalClassMerger:
    boolean allowAccessModification -> a
    boolean mergeInterfacesAggressively -> b
    proguard.classfile.visitor.ClassVisitor extraClassVisitor -> c
    54:55:void <init>(boolean,boolean) -> <init>
    71:75:void <init>(boolean,boolean,proguard.classfile.visitor.ClassVisitor) -> <init>
    83:87:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
proguard.preverify.CodePreverifier -> proguard.preverify.CodePreverifier:
    boolean microEdition -> a
    proguard.optimize.evaluation.PartialEvaluator partialEvaluator -> b
    proguard.optimize.evaluation.LivenessAnalyzer livenessAnalyzer -> c
    proguard.classfile.editor.CodeAttributeEditor codeAttributeEditor -> d
    56:67:void <init>(boolean) -> <init>
    72:72:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    82:93:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    102:250:void visitCodeAttribute0(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute0
    266:334:proguard.classfile.attribute.preverification.VerificationType[] correspondingVerificationTypes(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod,proguard.classfile.attribute.CodeAttribute,int,proguard.evaluation.TracedVariables) -> a
    349:395:proguard.classfile.attribute.preverification.VerificationType[] correspondingVerificationTypes(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod,proguard.classfile.attribute.CodeAttribute,int,proguard.evaluation.TracedStack) -> a
    412:478:proguard.classfile.attribute.preverification.VerificationType correspondingVerificationType$137f2e5e(proguard.classfile.ProgramClass,proguard.classfile.attribute.CodeAttribute,int,boolean,proguard.evaluation.value.Value,proguard.evaluation.value.Value) -> a
    489:489:int createClassConstant(proguard.classfile.ProgramClass,proguard.evaluation.value.ReferenceValue) -> a
    500:584:void compressStackMapFrames(proguard.classfile.attribute.preverification.VerificationType[],java.util.List) -> a
    595:610:boolean equalVerificationTypes(proguard.classfile.attribute.preverification.VerificationType[],proguard.classfile.attribute.preverification.VerificationType[],int) -> a
    620:620:boolean isDupOrSwap(int) -> a
proguard.preverify.CodeSubroutineInliner -> proguard.preverify.CodeSubroutineInliner:
    proguard.optimize.peephole.BranchTargetFinder branchTargetFinder -> a
    proguard.classfile.editor.CodeAttributeComposer codeAttributeComposer -> b
    proguard.classfile.attribute.visitor.ExceptionInfoVisitor subroutineExceptionInliner -> c
    int clipStart -> d
    int clipEnd -> e
    39:56:void <init>() -> <init>
    61:61:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    76:92:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    97:160:void visitCodeAttribute0(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute0
    172:223:void inlineSubroutine(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,int) -> a
    230:246:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    251:296:void visitVariableInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.VariableInstruction) -> visitVariableInstruction
    301:341:void visitBranchInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.BranchInstruction) -> visitBranchInstruction
    348:401:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
proguard.preverify.Preverifier -> proguard.preverify.Preverifier:
    proguard.Configuration configuration -> a
    43:45:void <init>(proguard.Configuration) -> <init>
    54:67:void execute(proguard.classfile.ClassPool) -> execute
proguard.preverify.SubroutineInliner -> proguard.preverify.SubroutineInliner:
    proguard.Configuration configuration -> a
    43:45:void <init>(proguard.Configuration) -> <init>
    54:72:void execute(proguard.classfile.ClassPool) -> execute
proguard.shrink.AnnotationUsageMarker -> proguard.shrink.AnnotationUsageMarker:
    proguard.shrink.UsageMarker usageMarker -> a
    boolean attributeUsed -> b
    boolean annotationUsed -> c
    boolean allClassesUsed -> d
    boolean methodUsed -> e
    65:67:void <init>(proguard.shrink.UsageMarker) -> <init>
    72:72:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    78:89:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    95:106:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    112:118:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    125:139:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    146:154:void visitConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ConstantElementValue) -> visitConstantElementValue
    159:175:void visitEnumConstantElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.EnumConstantElementValue) -> visitEnumConstantElementValue
    180:193:void visitClassElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ClassElementValue) -> visitClassElementValue
    198:216:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    221:231:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    238:239:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    245:260:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    267:268:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    273:273:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    280:281:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    286:286:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    297:300:boolean isReferencedClassUsed(proguard.classfile.attribute.annotation.Annotation) -> a
    310:313:boolean isReferencedMethodUsed(proguard.classfile.attribute.annotation.ElementValue) -> a
    322:326:void markConstant(proguard.classfile.Clazz,int) -> a
proguard.shrink.ClassShrinker -> proguard.shrink.ClassShrinker:
    proguard.shrink.UsageMarker usageMarker -> a
    int[] constantIndexMap -> b
    int[] bootstrapMethodIndexMap -> c
    proguard.classfile.editor.ConstantPoolRemapper constantPoolRemapper -> d
    proguard.classfile.editor.BootstrapMethodRemapper bootstrapMethodRemapper -> e
    53:67:void <init>(proguard.shrink.UsageMarker) -> <init>
    76:126:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    134:136:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    144:150:void visitProgramMember(proguard.classfile.ProgramClass,proguard.classfile.ProgramMember) -> visitProgramMember
    155:155:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    161:173:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    179:182:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    193:200:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    206:212:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    218:221:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    227:230:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    236:242:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    248:258:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    266:272:void visitAnnotation(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation) -> visitAnnotation
    333:333:void visitAnyElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ElementValue) -> visitAnyElementValue
    339:340:void visitAnnotationElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.AnnotationElementValue) -> visitAnnotationElementValue
    346:352:void visitArrayElementValue(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.Annotation,proguard.classfile.attribute.annotation.ArrayElementValue) -> visitArrayElementValue
    365:405:int shrinkConstantPool(proguard.classfile.constant.Constant[],int) -> a
    416:427:boolean[] shrinkFlags(proguard.classfile.constant.Constant[],int[],int) -> a
    464:485:proguard.classfile.Clazz[] shrinkToNewArray(proguard.classfile.Clazz[]) -> a
    497:528:int shrinkBootstrapMethodArray(proguard.classfile.attribute.BootstrapMethodInfo[],int) -> a
    539:558:int shrinkArray(proguard.classfile.VisitorAccepter[],int) -> a
    43:43:proguard.shrink.UsageMarker access$100(proguard.shrink.ClassShrinker) -> a
proguard.shrink.ClassShrinker$MySignatureCleaner -> proguard.shrink.a:
    proguard.shrink.ClassShrinker this$0 -> a
    279:279:void <init>(proguard.shrink.ClassShrinker) -> <init>
    283:283:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    288:327:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    279:279:void <init>(proguard.shrink.ClassShrinker,byte) -> <init>
proguard.shrink.InnerUsageMarker -> proguard.shrink.InnerUsageMarker:
    proguard.shrink.UsageMarker usageMarker -> a
    boolean attributeUsed -> b
    boolean classUsed -> c
    59:61:void <init>(proguard.shrink.UsageMarker) -> <init>
    66:66:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    72:83:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    90:116:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    123:141:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    146:147:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    154:155:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    160:161:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    172:173:void markConstant(proguard.classfile.Clazz,int) -> a
proguard.shrink.InterfaceUsageMarker -> proguard.shrink.InterfaceUsageMarker:
    proguard.shrink.UsageMarker usageMarker -> a
    boolean used -> b
    boolean anyUsed -> c
    56:58:void <init>(proguard.shrink.UsageMarker) -> <init>
    65:105:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    111:113:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    120:142:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    147:151:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
proguard.shrink.LocalVariableTypeUsageMarker -> proguard.shrink.LocalVariableTypeUsageMarker:
    proguard.shrink.UsageMarker usageMarker -> a
    boolean tableUsed -> b
    boolean variableInfoUsed -> c
    61:63:void <init>(proguard.shrink.UsageMarker) -> <init>
    68:68:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    74:84:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    90:100:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    108:121:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    129:142:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    147:147:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    153:157:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    164:165:void visitAnyConstant(proguard.classfile.Clazz,proguard.classfile.constant.Constant) -> visitAnyConstant
    175:176:void markConstant(proguard.classfile.Clazz,int) -> a
proguard.shrink.ShortestUsageMark -> proguard.shrink.b:
    boolean certain -> a
    java.lang.String reason -> b
    int depth -> c
    proguard.classfile.Clazz clazz -> d
    proguard.classfile.Member member -> e
    50:54:void <init>(java.lang.String) -> <init>
    68:69:void <init>(proguard.shrink.ShortestUsageMark,java.lang.String,int,proguard.classfile.Clazz) -> <init>
    85:91:void <init>(proguard.shrink.ShortestUsageMark,java.lang.String,int,proguard.classfile.Clazz,proguard.classfile.Member) -> <init>
    101:107:void <init>(proguard.shrink.ShortestUsageMark,boolean) -> <init>
    115:115:boolean isCertain() -> a
    124:124:java.lang.String getReason() -> b
    134:134:boolean isShorter(proguard.shrink.ShortestUsageMark) -> a
    143:143:boolean isCausedBy(proguard.classfile.Clazz) -> a
    153:158:void acceptClassVisitor(proguard.classfile.visitor.ClassVisitor) -> a
    166:171:void acceptMemberVisitor(proguard.classfile.visitor.MemberVisitor) -> a
    178:178:java.lang.String toString() -> toString
proguard.shrink.ShortestUsageMarker -> proguard.shrink.ShortestUsageMarker:
    proguard.shrink.ShortestUsageMark INITIAL_MARK -> a
    proguard.shrink.ShortestUsageMark currentUsageMark -> b
    36:199:void <init>() -> <init>
    53:63:void markProgramClassBody(proguard.classfile.ProgramClass) -> markProgramClassBody
    68:79:void markProgramFieldBody(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> markProgramFieldBody
    84:95:void markProgramMethodBody(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> markProgramMethodBody
    100:111:void markMethodHierarchy(proguard.classfile.Clazz,proguard.classfile.Method) -> markMethodHierarchy
    118:129:void markAsUsed(proguard.classfile.VisitorAccepter) -> markAsUsed
    134:136:boolean shouldBeMarkedAsUsed(proguard.classfile.VisitorAccepter) -> shouldBeMarkedAsUsed
    147:149:boolean isUsed(proguard.classfile.VisitorAccepter) -> isUsed
    157:158:void markAsPossiblyUsed(proguard.classfile.VisitorAccepter) -> markAsPossiblyUsed
    163:165:boolean shouldBeMarkedAsPossiblyUsed(proguard.classfile.VisitorAccepter) -> shouldBeMarkedAsPossiblyUsed
    174:176:boolean isPossiblyUsed(proguard.classfile.VisitorAccepter) -> isPossiblyUsed
    184:186:proguard.shrink.ShortestUsageMark getShortestUsageMark(proguard.classfile.VisitorAccepter) -> getShortestUsageMark
    36:36:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    36:36:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    36:36:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    36:36:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    36:36:void visitParameterInfo(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.ParameterInfo) -> visitParameterInfo
    36:36:void visitObjectType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.ObjectType) -> visitObjectType
    36:36:void visitAnyVerificationType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.VerificationType) -> visitAnyVerificationType
    36:36:void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame) -> visitFullFrame
    36:36:void visitMoreZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.MoreZeroFrame) -> visitMoreZeroFrame
    36:36:void visitSameOneFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameOneFrame) -> visitSameOneFrame
    36:36:void visitAnyStackMapFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.StackMapFrame) -> visitAnyStackMapFrame
    36:36:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    36:36:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    36:36:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    36:36:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    36:36:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    36:36:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    36:36:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    36:36:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    36:36:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    36:36:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    36:36:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    36:36:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    36:36:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    36:36:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    36:36:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    36:36:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    36:36:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    36:36:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    36:36:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    36:36:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    36:36:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    36:36:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    36:36:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    36:36:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    36:36:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    36:36:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    36:36:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    36:36:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    36:36:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    36:36:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    36:36:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    36:36:void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    36:36:void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    36:36:void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    36:36:void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    36:36:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    36:36:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    36:36:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    36:36:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    36:36:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    36:36:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    38:38:void <clinit>() -> <clinit>
proguard.shrink.ShortestUsageMarker$MyRecursiveCauseChecker -> proguard.shrink.c:
    boolean isRecursing -> a
    proguard.shrink.ShortestUsageMarker this$0 -> b
    199:199:void <init>(proguard.shrink.ShortestUsageMarker) -> <init>
    221:222:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    227:228:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    235:236:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    241:242:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    247:248:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    253:254:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    261:275:void checkCause(proguard.classfile.VisitorAccepter) -> a
    199:199:void <init>(proguard.shrink.ShortestUsageMarker,byte) -> <init>
proguard.shrink.ShortestUsagePrinter -> proguard.shrink.ShortestUsagePrinter:
    proguard.shrink.ShortestUsageMarker shortestUsageMarker -> a
    boolean verbose -> b
    java.io.PrintStream ps -> c
    58:59:void <init>(proguard.shrink.ShortestUsageMarker) -> <init>
    71:72:void <init>(proguard.shrink.ShortestUsageMarker,boolean) -> <init>
    84:88:void <init>(proguard.shrink.ShortestUsageMarker,boolean,java.io.PrintStream) -> <init>
    96:100:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    106:110:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    118:128:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    134:146:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    152:162:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    168:178:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    183:183:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    188:189:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    194:197:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    204:219:void printReason(proguard.classfile.VisitorAccepter) -> a
proguard.shrink.Shrinker -> proguard.shrink.Shrinker:
    proguard.Configuration configuration -> a
    44:46:void <init>(proguard.Configuration) -> <init>
    56:181:proguard.classfile.ClassPool execute(proguard.classfile.ClassPool,proguard.classfile.ClassPool) -> execute
proguard.shrink.UsageMarker -> proguard.shrink.d:
    java.lang.Object POSSIBLY_USED -> a
    java.lang.Object USED -> b
    proguard.shrink.UsageMarker$MyInterfaceUsageMarker interfaceUsageMarker -> c
    proguard.shrink.UsageMarker$MyDefaultMethodUsageMarker defaultMethodUsageMarker -> d
    proguard.shrink.UsageMarker$MyPossiblyUsedMemberUsageMarker possiblyUsedMemberUsageMarker -> e
    proguard.classfile.visitor.MemberVisitor nonEmptyMethodUsageMarker -> f
    proguard.classfile.constant.visitor.ConstantVisitor parameterlessConstructorMarker -> g
    44:578:void <init>() -> <init>
    83:90:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    96:119:void markProgramClassBody(proguard.classfile.ProgramClass) -> markProgramClassBody
    124:155:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    282:301:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    306:331:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    334:334:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    339:346:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
    352:360:void markProgramFieldBody(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> markProgramFieldBody
    366:374:void markProgramMethodBody(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> markProgramMethodBody
    385:420:void markMethodHierarchy(proguard.classfile.Clazz,proguard.classfile.Method) -> markMethodHierarchy
    427:431:void visitIntegerConstant(proguard.classfile.Clazz,proguard.classfile.constant.IntegerConstant) -> visitIntegerConstant
    436:440:void visitLongConstant(proguard.classfile.Clazz,proguard.classfile.constant.LongConstant) -> visitLongConstant
    445:449:void visitFloatConstant(proguard.classfile.Clazz,proguard.classfile.constant.FloatConstant) -> visitFloatConstant
    454:458:void visitDoubleConstant(proguard.classfile.Clazz,proguard.classfile.constant.DoubleConstant) -> visitDoubleConstant
    463:473:void visitStringConstant(proguard.classfile.Clazz,proguard.classfile.constant.StringConstant) -> visitStringConstant
    478:482:void visitUtf8Constant(proguard.classfile.Clazz,proguard.classfile.constant.Utf8Constant) -> visitUtf8Constant
    487:499:void visitInvokeDynamicConstant(proguard.classfile.Clazz,proguard.classfile.constant.InvokeDynamicConstant) -> visitInvokeDynamicConstant
    504:510:void visitMethodHandleConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodHandleConstant) -> visitMethodHandleConstant
    515:531:void visitAnyRefConstant(proguard.classfile.Clazz,proguard.classfile.constant.RefConstant) -> visitAnyRefConstant
    536:545:void visitClassConstant(proguard.classfile.Clazz,proguard.classfile.constant.ClassConstant) -> visitClassConstant
    550:559:void visitMethodTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.MethodTypeConstant) -> visitMethodTypeConstant
    564:571:void visitNameAndTypeConstant(proguard.classfile.Clazz,proguard.classfile.constant.NameAndTypeConstant) -> visitNameAndTypeConstant
    633:636:void visitUnknownAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.UnknownAttribute) -> visitUnknownAttribute
    643:643:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    648:652:void visitSourceFileAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceFileAttribute) -> visitSourceFileAttribute
    657:661:void visitSourceDirAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SourceDirAttribute) -> visitSourceDirAttribute
    673:674:void visitInnerClassesAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesAttribute) -> visitInnerClassesAttribute
    679:688:void visitEnclosingMethodAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.EnclosingMethodAttribute) -> visitEnclosingMethodAttribute
    693:696:void visitDeprecatedAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.DeprecatedAttribute) -> visitDeprecatedAttribute
    701:704:void visitSyntheticAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SyntheticAttribute) -> visitSyntheticAttribute
    709:718:void visitSignatureAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.SignatureAttribute) -> visitSignatureAttribute
    723:727:void visitConstantValueAttribute(proguard.classfile.Clazz,proguard.classfile.Field,proguard.classfile.attribute.ConstantValueAttribute) -> visitConstantValueAttribute
    732:738:void visitMethodParametersAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.MethodParametersAttribute) -> visitMethodParametersAttribute
    743:749:void visitExceptionsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.ExceptionsAttribute) -> visitExceptionsAttribute
    754:763:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    768:774:void visitStackMapAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapAttribute) -> visitStackMapAttribute
    779:785:void visitStackMapTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.preverification.StackMapTableAttribute) -> visitStackMapTableAttribute
    790:793:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    806:806:void visitLocalVariableTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTableAttribute) -> visitLocalVariableTableAttribute
    819:819:void visitLocalVariableTypeTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeTableAttribute) -> visitLocalVariableTypeTableAttribute
    832:832:void visitAnyAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.annotation.AnnotationsAttribute) -> visitAnyAnnotationsAttribute
    845:845:void visitAnyParameterAnnotationsAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.ParameterAnnotationsAttribute) -> visitAnyParameterAnnotationsAttribute
    858:858:void visitAnnotationDefaultAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.annotation.AnnotationDefaultAttribute) -> visitAnnotationDefaultAttribute
    865:871:void visitExceptionInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.ExceptionInfo) -> visitExceptionInfo
    880:889:void visitInnerClassesInfo(proguard.classfile.Clazz,proguard.classfile.attribute.InnerClassesInfo) -> visitInnerClassesInfo
    894:894:void visitAnyStackMapFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.StackMapFrame) -> visitAnyStackMapFrame
    900:901:void visitSameOneFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.SameOneFrame) -> visitSameOneFrame
    907:908:void visitMoreZeroFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.MoreZeroFrame) -> visitMoreZeroFrame
    914:916:void visitFullFrame(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.FullFrame) -> visitFullFrame
    921:921:void visitAnyVerificationType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.VerificationType) -> visitAnyVerificationType
    926:927:void visitObjectType(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.attribute.preverification.ObjectType) -> visitObjectType
    934:935:void visitParameterInfo(proguard.classfile.Clazz,proguard.classfile.Method,int,proguard.classfile.attribute.ParameterInfo) -> visitParameterInfo
    942:944:void visitLocalVariableInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableInfo) -> visitLocalVariableInfo
    951:953:void visitLocalVariableTypeInfo(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LocalVariableTypeInfo) -> visitLocalVariableTypeInfo
    1030:1030:void visitAnyInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.Instruction) -> visitAnyInstruction
    1035:1042:void visitConstantInstruction(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,int,proguard.classfile.instruction.ConstantInstruction) -> visitConstantInstruction
    1052:1053:void markAsUsed(proguard.classfile.VisitorAccepter) -> markAsUsed
    1062:1062:boolean shouldBeMarkedAsUsed(proguard.classfile.VisitorAccepter) -> shouldBeMarkedAsUsed
    1071:1071:boolean isUsed(proguard.classfile.VisitorAccepter) -> isUsed
    1080:1081:void markAsPossiblyUsed(proguard.classfile.VisitorAccepter) -> markAsPossiblyUsed
    1090:1090:boolean shouldBeMarkedAsPossiblyUsed(proguard.classfile.VisitorAccepter) -> shouldBeMarkedAsPossiblyUsed
    1101:1101:boolean isPossiblyUsed(proguard.classfile.VisitorAccepter) -> isPossiblyUsed
    1110:1111:void markAsUnused(proguard.classfile.VisitorAccepter) -> markAsUnused
    1120:1121:void markConstant(proguard.classfile.Clazz,int) -> a
    44:44:void access$400(proguard.shrink.UsageMarker,proguard.classfile.Clazz,int) -> a
    63:65:void <clinit>() -> <clinit>
proguard.shrink.UsageMarker$MyBootStrapMethodUsageMarker -> proguard.shrink.e:
    int bootstrapMethodIndex -> a
    proguard.shrink.UsageMarker this$0 -> b
    587:589:void <init>(proguard.shrink.UsageMarker,int) -> <init>
    594:594:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    599:609:void visitBootstrapMethodsAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodsAttribute) -> visitBootstrapMethodsAttribute
    616:622:void visitBootstrapMethodInfo(proguard.classfile.Clazz,proguard.classfile.attribute.BootstrapMethodInfo) -> visitBootstrapMethodInfo
    578:578:void <init>(proguard.shrink.UsageMarker,int,byte) -> <init>
proguard.shrink.UsageMarker$MyDefaultMethodUsageMarker -> proguard.shrink.f:
    proguard.shrink.UsageMarker this$0 -> a
    187:187:void <init>(proguard.shrink.UsageMarker) -> <init>
    195:205:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    187:187:void <init>(proguard.shrink.UsageMarker,byte) -> <init>
proguard.shrink.UsageMarker$MyInterfaceUsageMarker -> proguard.shrink.g:
    proguard.shrink.UsageMarker this$0 -> a
    162:162:void <init>(proguard.shrink.UsageMarker) -> <init>
    167:173:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    178:179:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
    162:162:void <init>(proguard.shrink.UsageMarker,byte) -> <init>
proguard.shrink.UsageMarker$MyNonEmptyMethodUsageMarker -> proguard.shrink.h:
    proguard.shrink.UsageMarker this$0 -> a
    259:259:void <init>(proguard.shrink.UsageMarker) -> <init>
    265:265:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    270:274:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    259:259:void <init>(proguard.shrink.UsageMarker,byte) -> <init>
proguard.shrink.UsageMarker$MyPossiblyUsedMemberUsageMarker -> proguard.shrink.i:
    proguard.shrink.UsageMarker this$0 -> a
    213:213:void <init>(proguard.shrink.UsageMarker) -> <init>
    222:236:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    242:252:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    213:213:void <init>(proguard.shrink.UsageMarker,byte) -> <init>
proguard.shrink.UsagePrinter -> proguard.shrink.UsagePrinter:
    proguard.shrink.UsageMarker usageMarker -> a
    boolean printUnusedItems -> b
    java.io.PrintStream ps -> c
    java.lang.String className -> d
    65:66:void <init>(proguard.shrink.UsageMarker,boolean) -> <init>
    81:85:void <init>(proguard.shrink.UsageMarker,boolean,java.io.PrintStream) -> <init>
    92:115:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    122:132:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    137:149:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    154:154:void visitAnyAttribute(proguard.classfile.Clazz,proguard.classfile.attribute.Attribute) -> visitAnyAttribute
    159:160:void visitCodeAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute) -> visitCodeAttribute
    165:167:void visitLineNumberTableAttribute(proguard.classfile.Clazz,proguard.classfile.Method,proguard.classfile.attribute.CodeAttribute,proguard.classfile.attribute.LineNumberTableAttribute) -> visitLineNumberTableAttribute
    178:183:void printClassNameHeader() -> a
proguard.shrink.UsedClassFilter -> proguard.shrink.UsedClassFilter:
    proguard.shrink.UsageMarker usageMarker -> a
    proguard.classfile.visitor.ClassVisitor classVisitor -> b
    50:53:void <init>(proguard.shrink.UsageMarker,proguard.classfile.visitor.ClassVisitor) -> <init>
    60:64:void visitProgramClass(proguard.classfile.ProgramClass) -> visitProgramClass
    69:73:void visitLibraryClass(proguard.classfile.LibraryClass) -> visitLibraryClass
proguard.shrink.UsedMemberFilter -> proguard.shrink.UsedMemberFilter:
    proguard.shrink.UsageMarker usageMarker -> a
    proguard.classfile.visitor.MemberVisitor memberVisitor -> b
    50:53:void <init>(proguard.shrink.UsageMarker,proguard.classfile.visitor.MemberVisitor) -> <init>
    61:65:void visitProgramField(proguard.classfile.ProgramClass,proguard.classfile.ProgramField) -> visitProgramField
    70:74:void visitProgramMethod(proguard.classfile.ProgramClass,proguard.classfile.ProgramMethod) -> visitProgramMethod
    79:83:void visitLibraryField(proguard.classfile.LibraryClass,proguard.classfile.LibraryField) -> visitLibraryField
    88:92:void visitLibraryMethod(proguard.classfile.LibraryClass,proguard.classfile.LibraryMethod) -> visitLibraryMethod
proguard.util.AndMatcher -> proguard.util.AndMatcher:
    proguard.util.StringMatcher matcher1 -> a
    proguard.util.StringMatcher matcher2 -> b
    36:39:void <init>(proguard.util.StringMatcher,proguard.util.StringMatcher) -> <init>
    46:46:boolean matches(java.lang.String) -> matches
proguard.util.ArrayUtil -> proguard.util.ArrayUtil:
    29:29:void <init>() -> <init>
    40:48:boolean equal(byte[],byte[],int) -> equal
    61:69:boolean equal(short[],short[],int) -> equal
    82:90:boolean equal(int[],int[],int) -> equal
    103:111:boolean equal(java.lang.Object[],java.lang.Object[],int) -> equal
    124:124:boolean equalOrNull(java.lang.Object[],java.lang.Object[]) -> equalOrNull
    139:139:boolean equalOrNull(java.lang.Object[],java.lang.Object[],int) -> equalOrNull
    153:160:int hashCode(byte[],int) -> hashCode
    172:179:int hashCode(short[],int) -> hashCode
    191:198:int hashCode(int[],int) -> hashCode
    210:217:int hashCode(java.lang.Object[],int) -> hashCode
    229:229:int hashCodeOrNull(java.lang.Object[]) -> hashCodeOrNull
    242:242:int hashCodeOrNull(java.lang.Object[],int) -> hashCodeOrNull
    260:274:int compare(byte[],int,byte[],int) -> compare
    294:308:int compare(short[],int,short[],int) -> compare
    328:342:int compare(int[],int,int[],int) -> compare
    362:373:int compare(java.lang.Comparable[],int,java.lang.Comparable[],int) -> compare
    388:400:boolean[] extendArray(boolean[],int) -> extendArray
    417:433:boolean[] ensureArraySize(boolean[],int,boolean) -> ensureArraySize
    447:451:byte[] add(byte[],int,byte) -> add
    466:475:byte[] insert(byte[],int,int,byte) -> insert
    487:492:void remove(byte[],int,int) -> remove
    504:516:byte[] extendArray(byte[],int) -> extendArray
    533:549:byte[] ensureArraySize(byte[],int,byte) -> ensureArraySize
    563:567:short[] add(short[],int,short) -> add
    582:591:short[] insert(short[],int,int,short) -> insert
    603:608:void remove(short[],int,int) -> remove
    620:632:short[] extendArray(short[],int) -> extendArray
    649:665:short[] ensureArraySize(short[],int,short) -> ensureArraySize
    679:683:int[] add(int[],int,int) -> add
    698:707:int[] insert(int[],int,int,int) -> insert
    719:724:void remove(int[],int,int) -> remove
    736:748:int[] extendArray(int[],int) -> extendArray
    765:781:int[] ensureArraySize(int[],int,int) -> ensureArraySize
    795:799:long[] add(long[],int,long) -> add
    814:823:long[] insert(long[],int,int,long) -> insert
    835:840:void remove(long[],int,int) -> remove
    852:864:long[] extendArray(long[],int) -> extendArray
    881:897:long[] ensureArraySize(long[],int,long) -> ensureArraySize
    911:915:java.lang.Object[] add(java.lang.Object[],int,java.lang.Object) -> add
    930:939:java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object) -> insert
    951:956:void remove(java.lang.Object[],int,int) -> remove
    968:980:java.lang.Object[] extendArray(java.lang.Object[],int) -> extendArray
    997:1013:java.lang.Object[] ensureArraySize(java.lang.Object[],int,java.lang.Object) -> ensureArraySize
proguard.util.ClassNameParser -> proguard.util.ClassNameParser:
    char[] INTERNAL_PRIMITIVE_TYPES -> a
    42:42:void <init>() -> <init>
    63:153:proguard.util.StringMatcher parse(java.lang.String) -> parse
    167:167:proguard.util.VariableStringMatcher createAnyTypeMatcher(proguard.util.StringMatcher) -> a
    200:214:void main(java.lang.String[]) -> main
    44:44:void <clinit>() -> <clinit>
proguard.util.ConstantMatcher -> proguard.util.ConstantMatcher:
    boolean matches -> a
    37:39:void <init>(boolean) -> <init>
    46:46:boolean matches(java.lang.String) -> matches
proguard.util.EmptyStringMatcher -> proguard.util.EmptyStringMatcher:
    28:28:void <init>() -> <init>
    34:34:boolean matches(java.lang.String) -> matches
proguard.util.ExtensionMatcher -> proguard.util.ExtensionMatcher:
    java.lang.String extension -> a
    39:41:void <init>(java.lang.String) -> <init>
    48:48:boolean matches(java.lang.String) -> matches
    58:61:boolean endsWithIgnoreCase(java.lang.String,java.lang.String) -> a
proguard.util.FileNameParser -> proguard.util.FileNameParser:
    36:36:void <init>() -> <init>
    43:93:proguard.util.StringMatcher parse(java.lang.String) -> parse
    106:120:void main(java.lang.String[]) -> main
proguard.util.FixedStringMatcher -> proguard.util.FixedStringMatcher:
    java.lang.String fixedString -> a
    proguard.util.StringMatcher nextMatcher -> b
    37:38:void <init>(java.lang.String) -> <init>
    42:45:void <init>(java.lang.String,proguard.util.StringMatcher) -> <init>
    52:52:boolean matches(java.lang.String) -> matches
proguard.util.ListMatcher -> proguard.util.ListMatcher:
    proguard.util.StringMatcher[] matchers -> a
    boolean[] negate -> b
    39:40:void <init>(proguard.util.StringMatcher[]) -> <init>
    44:47:void <init>(proguard.util.StringMatcher[],boolean[]) -> <init>
    55:65:boolean matches(java.lang.String) -> matches
proguard.util.ListParser -> proguard.util.ListParser:
    proguard.util.StringParser stringParser -> a
    45:47:void <init>(proguard.util.StringParser) -> <init>
    55:55:proguard.util.StringMatcher parse(java.lang.String) -> parse
    67:86:proguard.util.StringMatcher parse(java.util.List) -> parse
    99:99:proguard.util.StringMatcher parseEntry(java.lang.String) -> a
    110:110:boolean isNegated(java.lang.String) -> b
    122:136:void main(java.lang.String[]) -> main
proguard.util.ListUtil -> proguard.util.ListUtil:
    32:32:void <init>() -> <init>
    39:63:java.lang.String commaSeparatedString(java.util.List,boolean) -> commaSeparatedString
    72:114:java.util.List commaSeparatedList(java.lang.String) -> commaSeparatedList
    123:128:int skipWhitespace(java.lang.String,int) -> a
    137:137:java.lang.String quotedString(java.lang.String) -> a
    153:179:void main(java.lang.String[]) -> main
proguard.util.NameParser -> proguard.util.NameParser:
    35:35:void <init>() -> <init>
    42:78:proguard.util.StringMatcher parse(java.lang.String) -> parse
    91:105:void main(java.lang.String[]) -> main
proguard.util.NotMatcher -> proguard.util.NotMatcher:
    proguard.util.StringMatcher matcher -> a
    35:37:void <init>(proguard.util.StringMatcher) -> <init>
    44:44:boolean matches(java.lang.String) -> matches
proguard.util.ObjectUtil -> proguard.util.ObjectUtil:
    27:27:void <init>() -> <init>
    37:37:boolean equal(java.lang.Object,java.lang.Object) -> equal
    50:50:int hashCode(java.lang.Object) -> hashCode
    63:63:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
proguard.util.OrMatcher -> proguard.util.OrMatcher:
    proguard.util.StringMatcher matcher1 -> a
    proguard.util.StringMatcher matcher2 -> b
    36:39:void <init>(proguard.util.StringMatcher,proguard.util.StringMatcher) -> <init>
    46:46:boolean matches(java.lang.String) -> matches
proguard.util.SettableMatcher -> proguard.util.SettableMatcher:
    proguard.util.StringMatcher matcher -> a
    29:29:void <init>() -> <init>
    36:37:void setMatcher(proguard.util.StringMatcher) -> setMatcher
    44:44:boolean matches(java.lang.String) -> matches
proguard.util.StringMatcher -> proguard.util.StringMatcher:
    boolean matches(java.lang.String) -> matches
proguard.util.StringParser -> proguard.util.StringParser:
    proguard.util.StringMatcher parse(java.lang.String) -> parse
proguard.util.VariableStringMatcher -> proguard.util.VariableStringMatcher:
    char[] allowedCharacters -> a
    char[] disallowedCharacters -> b
    int minimumLength -> c
    int maximumLength -> d
    proguard.util.StringMatcher nextMatcher -> e
    43:49:void <init>(char[],char[],int,int,proguard.util.StringMatcher) -> <init>
    55:86:boolean matches(java.lang.String) -> matches
    98:124:boolean isAllowedCharacter(char) -> a
